

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Aug 22 22:42:28 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    52                           	dabs	1,0x7E,2
    53     0000                     
    54                           ; Version 2.40
    55                           ; Generated 17/11/2021 GMT
    56                           ; 
    57                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F887 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89     0000                     	;# 
    90     0001                     	;# 
    91     0002                     	;# 
    92     0003                     	;# 
    93     0004                     	;# 
    94     0005                     	;# 
    95     0006                     	;# 
    96     0007                     	;# 
    97     0008                     	;# 
    98     0009                     	;# 
    99     000A                     	;# 
   100     000B                     	;# 
   101     000C                     	;# 
   102     000D                     	;# 
   103     000E                     	;# 
   104     000E                     	;# 
   105     000F                     	;# 
   106     0010                     	;# 
   107     0011                     	;# 
   108     0012                     	;# 
   109     0013                     	;# 
   110     0014                     	;# 
   111     0015                     	;# 
   112     0015                     	;# 
   113     0016                     	;# 
   114     0017                     	;# 
   115     0018                     	;# 
   116     0019                     	;# 
   117     001A                     	;# 
   118     001B                     	;# 
   119     001B                     	;# 
   120     001C                     	;# 
   121     001D                     	;# 
   122     001E                     	;# 
   123     001F                     	;# 
   124     0081                     	;# 
   125     0085                     	;# 
   126     0086                     	;# 
   127     0087                     	;# 
   128     0088                     	;# 
   129     0089                     	;# 
   130     008C                     	;# 
   131     008D                     	;# 
   132     008E                     	;# 
   133     008F                     	;# 
   134     0090                     	;# 
   135     0091                     	;# 
   136     0092                     	;# 
   137     0093                     	;# 
   138     0093                     	;# 
   139     0093                     	;# 
   140     0094                     	;# 
   141     0095                     	;# 
   142     0096                     	;# 
   143     0097                     	;# 
   144     0098                     	;# 
   145     0099                     	;# 
   146     009A                     	;# 
   147     009B                     	;# 
   148     009C                     	;# 
   149     009D                     	;# 
   150     009E                     	;# 
   151     009F                     	;# 
   152     0105                     	;# 
   153     0107                     	;# 
   154     0108                     	;# 
   155     0109                     	;# 
   156     010C                     	;# 
   157     010C                     	;# 
   158     010D                     	;# 
   159     010E                     	;# 
   160     010F                     	;# 
   161     0185                     	;# 
   162     0187                     	;# 
   163     0188                     	;# 
   164     0189                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167     0000                     	;# 
   168     0001                     	;# 
   169     0002                     	;# 
   170     0003                     	;# 
   171     0004                     	;# 
   172     0005                     	;# 
   173     0006                     	;# 
   174     0007                     	;# 
   175     0008                     	;# 
   176     0009                     	;# 
   177     000A                     	;# 
   178     000B                     	;# 
   179     000C                     	;# 
   180     000D                     	;# 
   181     000E                     	;# 
   182     000E                     	;# 
   183     000F                     	;# 
   184     0010                     	;# 
   185     0011                     	;# 
   186     0012                     	;# 
   187     0013                     	;# 
   188     0014                     	;# 
   189     0015                     	;# 
   190     0015                     	;# 
   191     0016                     	;# 
   192     0017                     	;# 
   193     0018                     	;# 
   194     0019                     	;# 
   195     001A                     	;# 
   196     001B                     	;# 
   197     001B                     	;# 
   198     001C                     	;# 
   199     001D                     	;# 
   200     001E                     	;# 
   201     001F                     	;# 
   202     0081                     	;# 
   203     0085                     	;# 
   204     0086                     	;# 
   205     0087                     	;# 
   206     0088                     	;# 
   207     0089                     	;# 
   208     008C                     	;# 
   209     008D                     	;# 
   210     008E                     	;# 
   211     008F                     	;# 
   212     0090                     	;# 
   213     0091                     	;# 
   214     0092                     	;# 
   215     0093                     	;# 
   216     0093                     	;# 
   217     0093                     	;# 
   218     0094                     	;# 
   219     0095                     	;# 
   220     0096                     	;# 
   221     0097                     	;# 
   222     0098                     	;# 
   223     0099                     	;# 
   224     009A                     	;# 
   225     009B                     	;# 
   226     009C                     	;# 
   227     009D                     	;# 
   228     009E                     	;# 
   229     009F                     	;# 
   230     0105                     	;# 
   231     0107                     	;# 
   232     0108                     	;# 
   233     0109                     	;# 
   234     010C                     	;# 
   235     010C                     	;# 
   236     010D                     	;# 
   237     010E                     	;# 
   238     010F                     	;# 
   239     0185                     	;# 
   240     0187                     	;# 
   241     0188                     	;# 
   242     0189                     	;# 
   243     018C                     	;# 
   244     018D                     	;# 
   245     0000                     	;# 
   246     0001                     	;# 
   247     0002                     	;# 
   248     0003                     	;# 
   249     0004                     	;# 
   250     0005                     	;# 
   251     0006                     	;# 
   252     0007                     	;# 
   253     0008                     	;# 
   254     0009                     	;# 
   255     000A                     	;# 
   256     000B                     	;# 
   257     000C                     	;# 
   258     000D                     	;# 
   259     000E                     	;# 
   260     000E                     	;# 
   261     000F                     	;# 
   262     0010                     	;# 
   263     0011                     	;# 
   264     0012                     	;# 
   265     0013                     	;# 
   266     0014                     	;# 
   267     0015                     	;# 
   268     0015                     	;# 
   269     0016                     	;# 
   270     0017                     	;# 
   271     0018                     	;# 
   272     0019                     	;# 
   273     001A                     	;# 
   274     001B                     	;# 
   275     001B                     	;# 
   276     001C                     	;# 
   277     001D                     	;# 
   278     001E                     	;# 
   279     001F                     	;# 
   280     0081                     	;# 
   281     0085                     	;# 
   282     0086                     	;# 
   283     0087                     	;# 
   284     0088                     	;# 
   285     0089                     	;# 
   286     008C                     	;# 
   287     008D                     	;# 
   288     008E                     	;# 
   289     008F                     	;# 
   290     0090                     	;# 
   291     0091                     	;# 
   292     0092                     	;# 
   293     0093                     	;# 
   294     0093                     	;# 
   295     0093                     	;# 
   296     0094                     	;# 
   297     0095                     	;# 
   298     0096                     	;# 
   299     0097                     	;# 
   300     0098                     	;# 
   301     0099                     	;# 
   302     009A                     	;# 
   303     009B                     	;# 
   304     009C                     	;# 
   305     009D                     	;# 
   306     009E                     	;# 
   307     009F                     	;# 
   308     0105                     	;# 
   309     0107                     	;# 
   310     0108                     	;# 
   311     0109                     	;# 
   312     010C                     	;# 
   313     010C                     	;# 
   314     010D                     	;# 
   315     010E                     	;# 
   316     010F                     	;# 
   317     0185                     	;# 
   318     0187                     	;# 
   319     0188                     	;# 
   320     0189                     	;# 
   321     018C                     	;# 
   322     018D                     	;# 
   323     0000                     	;# 
   324     0001                     	;# 
   325     0002                     	;# 
   326     0003                     	;# 
   327     0004                     	;# 
   328     0005                     	;# 
   329     0006                     	;# 
   330     0007                     	;# 
   331     0008                     	;# 
   332     0009                     	;# 
   333     000A                     	;# 
   334     000B                     	;# 
   335     000C                     	;# 
   336     000D                     	;# 
   337     000E                     	;# 
   338     000E                     	;# 
   339     000F                     	;# 
   340     0010                     	;# 
   341     0011                     	;# 
   342     0012                     	;# 
   343     0013                     	;# 
   344     0014                     	;# 
   345     0015                     	;# 
   346     0015                     	;# 
   347     0016                     	;# 
   348     0017                     	;# 
   349     0018                     	;# 
   350     0019                     	;# 
   351     001A                     	;# 
   352     001B                     	;# 
   353     001B                     	;# 
   354     001C                     	;# 
   355     001D                     	;# 
   356     001E                     	;# 
   357     001F                     	;# 
   358     0081                     	;# 
   359     0085                     	;# 
   360     0086                     	;# 
   361     0087                     	;# 
   362     0088                     	;# 
   363     0089                     	;# 
   364     008C                     	;# 
   365     008D                     	;# 
   366     008E                     	;# 
   367     008F                     	;# 
   368     0090                     	;# 
   369     0091                     	;# 
   370     0092                     	;# 
   371     0093                     	;# 
   372     0093                     	;# 
   373     0093                     	;# 
   374     0094                     	;# 
   375     0095                     	;# 
   376     0096                     	;# 
   377     0097                     	;# 
   378     0098                     	;# 
   379     0099                     	;# 
   380     009A                     	;# 
   381     009B                     	;# 
   382     009C                     	;# 
   383     009D                     	;# 
   384     009E                     	;# 
   385     009F                     	;# 
   386     0105                     	;# 
   387     0107                     	;# 
   388     0108                     	;# 
   389     0109                     	;# 
   390     010C                     	;# 
   391     010C                     	;# 
   392     010D                     	;# 
   393     010E                     	;# 
   394     010F                     	;# 
   395     0185                     	;# 
   396     0187                     	;# 
   397     0188                     	;# 
   398     0189                     	;# 
   399     018C                     	;# 
   400     018D                     	;# 
   401     0000                     	;# 
   402     0001                     	;# 
   403     0002                     	;# 
   404     0003                     	;# 
   405     0004                     	;# 
   406     0005                     	;# 
   407     0006                     	;# 
   408     0007                     	;# 
   409     0008                     	;# 
   410     0009                     	;# 
   411     000A                     	;# 
   412     000B                     	;# 
   413     000C                     	;# 
   414     000D                     	;# 
   415     000E                     	;# 
   416     000E                     	;# 
   417     000F                     	;# 
   418     0010                     	;# 
   419     0011                     	;# 
   420     0012                     	;# 
   421     0013                     	;# 
   422     0014                     	;# 
   423     0015                     	;# 
   424     0015                     	;# 
   425     0016                     	;# 
   426     0017                     	;# 
   427     0018                     	;# 
   428     0019                     	;# 
   429     001A                     	;# 
   430     001B                     	;# 
   431     001B                     	;# 
   432     001C                     	;# 
   433     001D                     	;# 
   434     001E                     	;# 
   435     001F                     	;# 
   436     0081                     	;# 
   437     0085                     	;# 
   438     0086                     	;# 
   439     0087                     	;# 
   440     0088                     	;# 
   441     0089                     	;# 
   442     008C                     	;# 
   443     008D                     	;# 
   444     008E                     	;# 
   445     008F                     	;# 
   446     0090                     	;# 
   447     0091                     	;# 
   448     0092                     	;# 
   449     0093                     	;# 
   450     0093                     	;# 
   451     0093                     	;# 
   452     0094                     	;# 
   453     0095                     	;# 
   454     0096                     	;# 
   455     0097                     	;# 
   456     0098                     	;# 
   457     0099                     	;# 
   458     009A                     	;# 
   459     009B                     	;# 
   460     009C                     	;# 
   461     009D                     	;# 
   462     009E                     	;# 
   463     009F                     	;# 
   464     0105                     	;# 
   465     0107                     	;# 
   466     0108                     	;# 
   467     0109                     	;# 
   468     010C                     	;# 
   469     010C                     	;# 
   470     010D                     	;# 
   471     010E                     	;# 
   472     010F                     	;# 
   473     0185                     	;# 
   474     0187                     	;# 
   475     0188                     	;# 
   476     0189                     	;# 
   477     018C                     	;# 
   478     018D                     	;# 
   479                           
   480                           	psect	strings
   481     0003                     __pstrings:
   482     0003                     stringtab:
   483     0003                     __stringtab:
   484                           
   485                           ;	String table - string pointers are 1 byte each
   486     0003  1BFF               	btfsc	btemp+1,7
   487     0004  280D               	ljmp	stringcode
   488     0005  1383               	bcf	3,7
   489     0006  187F               	btfsc	btemp+1,0
   490     0007  1783               	bsf	3,7
   491     0008  0800               	movf	0,w
   492     0009  0A84               	incf	4,f
   493     000A  1903               	skipnz
   494     000B  0AFF               	incf	btemp+1,f
   495     000C  0008               	return
   496     000D                     stringcode:
   497     000D                     stringdir:
   498     000D  3000               	movlw	high stringdir
   499     000E  008A               	movwf	10
   500     000F  0804               	movf	4,w
   501     0010  0A84               	incf	4,f
   502     0011  0782               	addwf	2,f
   503     0012                     __stringbase:
   504     0012  3400               	retlw	0
   505     0013                     __end_of__stringtab:
   506     0013                     __powers_:
   507     0013  3400               	retlw	0
   508     0014  3400               	retlw	0
   509     0015  3480               	retlw	128
   510     0016  343F               	retlw	63
   511     0017  3400               	retlw	0
   512     0018  3400               	retlw	0
   513     0019  3420               	retlw	32
   514     001A  3441               	retlw	65
   515     001B  3400               	retlw	0
   516     001C  3400               	retlw	0
   517     001D  34C8               	retlw	200
   518     001E  3442               	retlw	66
   519     001F  3400               	retlw	0
   520     0020  3400               	retlw	0
   521     0021  347A               	retlw	122
   522     0022  3444               	retlw	68
   523     0023  3400               	retlw	0
   524     0024  3440               	retlw	64
   525     0025  341C               	retlw	28
   526     0026  3446               	retlw	70
   527     0027  3400               	retlw	0
   528     0028  3450               	retlw	80
   529     0029  34C3               	retlw	195
   530     002A  3447               	retlw	71
   531     002B  3400               	retlw	0
   532     002C  3424               	retlw	36
   533     002D  3474               	retlw	116
   534     002E  3449               	retlw	73
   535     002F  3480               	retlw	128
   536     0030  3496               	retlw	150
   537     0031  3418               	retlw	24
   538     0032  344B               	retlw	75
   539     0033  3420               	retlw	32
   540     0034  34BC               	retlw	188
   541     0035  34BE               	retlw	190
   542     0036  344C               	retlw	76
   543     0037  3428               	retlw	40
   544     0038  346B               	retlw	107
   545     0039  346E               	retlw	110
   546     003A  344E               	retlw	78
   547     003B  34F9               	retlw	249
   548     003C  3402               	retlw	2
   549     003D  3415               	retlw	21
   550     003E  3450               	retlw	80
   551     003F  34EC               	retlw	236
   552     0040  3478               	retlw	120
   553     0041  34AD               	retlw	173
   554     0042  3460               	retlw	96
   555     0043  34CA               	retlw	202
   556     0044  34F2               	retlw	242
   557     0045  3449               	retlw	73
   558     0046  3471               	retlw	113
   559     0047                     __end_of__powers_:
   560     0047                     __npowers_:
   561     0047  3400               	retlw	0
   562     0048  3400               	retlw	0
   563     0049  3480               	retlw	128
   564     004A  343F               	retlw	63
   565     004B  34CD               	retlw	205
   566     004C  34CC               	retlw	204
   567     004D  34CC               	retlw	204
   568     004E  343D               	retlw	61
   569     004F  340A               	retlw	10
   570     0050  34D7               	retlw	215
   571     0051  3423               	retlw	35
   572     0052  343C               	retlw	60
   573     0053  346F               	retlw	111
   574     0054  3412               	retlw	18
   575     0055  3483               	retlw	131
   576     0056  343A               	retlw	58
   577     0057  3417               	retlw	23
   578     0058  34B7               	retlw	183
   579     0059  34D1               	retlw	209
   580     005A  3438               	retlw	56
   581     005B  34AC               	retlw	172
   582     005C  34C5               	retlw	197
   583     005D  3427               	retlw	39
   584     005E  3437               	retlw	55
   585     005F  34BD               	retlw	189
   586     0060  3437               	retlw	55
   587     0061  3486               	retlw	134
   588     0062  3435               	retlw	53
   589     0063  3495               	retlw	149
   590     0064  34BF               	retlw	191
   591     0065  34D6               	retlw	214
   592     0066  3433               	retlw	51
   593     0067  3477               	retlw	119
   594     0068  34CC               	retlw	204
   595     0069  342B               	retlw	43
   596     006A  3432               	retlw	50
   597     006B  345F               	retlw	95
   598     006C  3470               	retlw	112
   599     006D  3489               	retlw	137
   600     006E  3430               	retlw	48
   601     006F  34FF               	retlw	255
   602     0070  34E6               	retlw	230
   603     0071  34DB               	retlw	219
   604     0072  342E               	retlw	46
   605     0073  3408               	retlw	8
   606     0074  34E5               	retlw	229
   607     0075  343C               	retlw	60
   608     0076  341E               	retlw	30
   609     0077  3460               	retlw	96
   610     0078  3442               	retlw	66
   611     0079  34A2               	retlw	162
   612     007A  340D               	retlw	13
   613     007B                     __end_of__npowers_:
   614     007B                     _dpowers:
   615     007B  3401               	retlw	1
   616     007C  3400               	retlw	0
   617     007D  3400               	retlw	0
   618     007E  3400               	retlw	0
   619     007F  340A               	retlw	10
   620     0080  3400               	retlw	0
   621     0081  3400               	retlw	0
   622     0082  3400               	retlw	0
   623     0083  3464               	retlw	100
   624     0084  3400               	retlw	0
   625     0085  3400               	retlw	0
   626     0086  3400               	retlw	0
   627     0087  34E8               	retlw	232
   628     0088  3403               	retlw	3
   629     0089  3400               	retlw	0
   630     008A  3400               	retlw	0
   631     008B  3410               	retlw	16
   632     008C  3427               	retlw	39
   633     008D  3400               	retlw	0
   634     008E  3400               	retlw	0
   635     008F  34A0               	retlw	160
   636     0090  3486               	retlw	134
   637     0091  3401               	retlw	1
   638     0092  3400               	retlw	0
   639     0093  3440               	retlw	64
   640     0094  3442               	retlw	66
   641     0095  340F               	retlw	15
   642     0096  3400               	retlw	0
   643     0097  3480               	retlw	128
   644     0098  3496               	retlw	150
   645     0099  3498               	retlw	152
   646     009A  3400               	retlw	0
   647     009B  3400               	retlw	0
   648     009C  34E1               	retlw	225
   649     009D  34F5               	retlw	245
   650     009E  3405               	retlw	5
   651     009F  3400               	retlw	0
   652     00A0  34CA               	retlw	202
   653     00A1  349A               	retlw	154
   654     00A2  343B               	retlw	59
   655     00A3                     __end_of_dpowers:
   656     000C                     _PIR1bits	set	12
   657     0008                     _PORTD	set	8
   658     0006                     _PORTB	set	6
   659     0009                     _PORTE	set	9
   660     0005                     _PORTA	set	5
   661     0013                     _SSPBUF	set	19
   662     0014                     _SSPCON	set	20
   663     0091                     _SSPCON2bits	set	145
   664     0093                     _SSPADD	set	147
   665     0091                     _SSPCON2	set	145
   666     0087                     _TRISCbits	set	135
   667     0088                     _TRISD	set	136
   668     0086                     _TRISB	set	134
   669     0089                     _TRISE	set	137
   670     0085                     _TRISA	set	133
   671     0094                     _SSPSTATbits	set	148
   672     0094                     _SSPSTAT	set	148
   673     043B                     _TRISC3	set	1083
   674     043D                     _TRISC5	set	1085
   675     0189                     _ANSELH	set	393
   676     0188                     _ANSEL	set	392
   677     00A3                     STR_1:
   678     00A3  3425               	retlw	37	;'%'
   679     00A4  3430               	retlw	48	;'0'
   680     00A5  342E               	retlw	46	;'.'
   681     00A6  3432               	retlw	50	;'2'
   682     00A7  3466               	retlw	102	;'f'
   683     00A8  3400               	retlw	0
   684     00A9                     STR_2:
   685     00A9  3454               	retlw	84	;'T'
   686     00AA  3465               	retlw	101	;'e'
   687     00AB  346D               	retlw	109	;'m'
   688     00AC  3470               	retlw	112	;'p'
   689     00AD  3400               	retlw	0
   690     00AE                     STR_8:
   691     00AE  3444               	retlw	68	;'D'
   692     00AF  3469               	retlw	105	;'i'
   693     00B0  3473               	retlw	115	;'s'
   694     00B1  3474               	retlw	116	;'t'
   695     00B2  3400               	retlw	0
   696     00B3                     STR_7:
   697     00B3  344F               	retlw	79	;'O'
   698     00B4  344E               	retlw	78	;'N'
   699     00B5  3420               	retlw	32	;' '
   700     00B6  3400               	retlw	0
   701     00B7                     STR_5:
   702     00B7  344F               	retlw	79	;'O'
   703     00B8  3446               	retlw	70	;'F'
   704     00B9  3446               	retlw	70	;'F'
   705     00BA  3400               	retlw	0
   706     00BB                     STR_4:
   707     00BB  344C               	retlw	76	;'L'
   708     00BC  3455               	retlw	85	;'U'
   709     00BD  345A               	retlw	90	;'Z'
   710     00BE  3400               	retlw	0
   711     00BF                     STR_3:
   712     00BF  3443               	retlw	67	;'C'
   713     00C0  3400               	retlw	0
   714     00B3                     
   715                           	psect	cinit
   716     07E6                     start_initialization:	
   717                           ; #config settings
   718                           
   719     07E6                     __initialization:
   720                           
   721                           ; Clear objects allocated to BANK0
   722     07E6  1283               	bcf	3,5	;RP0=0, select bank0
   723     07E7  1303               	bcf	3,6	;RP1=0, select bank0
   724     07E8  01EE               	clrf	__pbssBANK0& (0+127)
   725     07E9  01EF               	clrf	(__pbssBANK0+1)& (0+127)
   726                           
   727                           ; Clear objects allocated to BANK1
   728     07EA  1383               	bcf	3,7	;select IRP bank0
   729     07EB  30C9               	movlw	low __pbssBANK1
   730     07EC  0084               	movwf	4
   731     07ED  30DE               	movlw	low (__pbssBANK1+21)
   732     07EE  120A  118A  20C2  120A  118A  	fcall	clear_ram0
   733                           
   734                           ; Clear objects allocated to BANK3
   735     07F3  1783               	bsf	3,7	;select IRP bank2
   736     07F4  3090               	movlw	low __pbssBANK3
   737     07F5  0084               	movwf	4
   738     07F6  30B8               	movlw	low (__pbssBANK3+40)
   739     07F7  120A  118A  20C2  120A  118A  	fcall	clear_ram0
   740     07FC                     end_of_initialization:	
   741                           ;End of C runtime variable initialization code
   742                           
   743     07FC                     __end_of__initialization:
   744     07FC  0183               	clrf	3
   745     07FD  160A  118A  29AA   	ljmp	_main	;jump to C main() function
   746                           
   747                           	psect	bssBANK0
   748     006E                     __pbssBANK0:
   749     006E                     _decenas:
   750     006E                     	ds	1
   751     006F                     _centenas:
   752     006F                     	ds	1
   753                           
   754                           	psect	bssBANK1
   755     00C9                     __pbssBANK1:
   756     00C9                     _voltaje2:
   757     00C9                     	ds	4
   758     00CD                     _temp:
   759     00CD                     	ds	4
   760     00D1                     _b:
   761     00D1                     	ds	2
   762     00D3                     _a:
   763     00D3                     	ds	2
   764     00D5                     _motor:
   765     00D5                     	ds	2
   766     00D7                     _led:
   767     00D7                     	ds	2
   768     00D9                     _selection:
   769     00D9                     	ds	1
   770     00DA                     _unidad:
   771     00DA                     	ds	1
   772     00DB                     _dist:
   773     00DB                     	ds	1
   774     00DC                     _pot2:
   775     00DC                     	ds	1
   776     00DD                     _pot1:
   777     00DD                     	ds	1
   778                           
   779                           	psect	bssBANK3
   780     0190                     __pbssBANK3:
   781     0190                     _valor2:
   782     0190                     	ds	20
   783     01A4                     _valor:
   784     01A4                     	ds	20
   785                           
   786                           	psect	clrtext
   787     00C2                     clear_ram0:	
   788                           ;	Called with FSR containing the base address, and
   789                           ;	W with the last address+1
   790                           
   791     00C2  0064               	clrwdt	;clear the watchdog before getting into this loop
   792     00C3                     clrloop0:
   793     00C3  0180               	clrf	0	;clear RAM location pointed to by FSR
   794     00C4  0A84               	incf	4,f	;increment pointer
   795     00C5  0604               	xorwf	4,w	;XOR with final address
   796     00C6  1903               	btfsc	3,2	;have we reached the end yet?
   797     00C7  3400               	retlw	0	;all done for this memory range, return
   798     00C8  0604               	xorwf	4,w	;XOR again to restore value
   799     00C9  28C3               	goto	clrloop0	;do the next byte
   800                           
   801                           	psect	cstackBANK1
   802     00A0                     __pcstackBANK1:
   803     00A0                     ?_sprintf:
   804     00A0                     sprintf@f:	
   805                           ; 2 bytes @ 0x0
   806                           
   807                           
   808                           ; 1 bytes @ 0x0
   809     00A0                     	ds	5
   810     00A5                     ??_sprintf:
   811                           
   812                           ; 1 bytes @ 0x5
   813     00A5                     	ds	5
   814     00AA                     _sprintf$1126:
   815                           
   816                           ; 4 bytes @ 0xA
   817     00AA                     	ds	4
   818     00AE                     sprintf@ap:
   819                           
   820                           ; 1 bytes @ 0xE
   821     00AE                     	ds	1
   822     00AF                     sprintf@val:
   823                           
   824                           ; 4 bytes @ 0xF
   825     00AF                     	ds	4
   826     00B3                     sprintf@tmpval:
   827                           
   828                           ; 4 bytes @ 0x13
   829     00B3                     	ds	4
   830     00B7                     sprintf@eexp:
   831                           
   832                           ; 2 bytes @ 0x17
   833     00B7                     	ds	2
   834     00B9                     sprintf@flag:
   835                           
   836                           ; 2 bytes @ 0x19
   837     00B9                     	ds	2
   838     00BB                     sprintf@width:
   839                           
   840                           ; 2 bytes @ 0x1B
   841     00BB                     	ds	2
   842     00BD                     sprintf@fval:
   843                           
   844                           ; 4 bytes @ 0x1D
   845     00BD                     	ds	4
   846     00C1                     sprintf@prec:
   847                           
   848                           ; 2 bytes @ 0x21
   849     00C1                     	ds	2
   850     00C3                     sprintf@sp:
   851                           
   852                           ; 1 bytes @ 0x23
   853     00C3                     	ds	1
   854     00C4                     sprintf@c:
   855                           
   856                           ; 1 bytes @ 0x24
   857     00C4                     	ds	1
   858     00C5                     ??_main:
   859                           
   860                           ; 1 bytes @ 0x25
   861     00C5                     	ds	4
   862                           
   863                           	psect	cstackCOMMON
   864     0070                     __pcstackCOMMON:
   865     0070                     ?_isdigit:
   866     0070                     ?___fleq:	
   867                           ; 1 bit 
   868                           
   869     0070                     ?___flge:	
   870                           ; 1 bit 
   871                           
   872     0070                     ?_setup:	
   873                           ; 1 bit 
   874                           
   875     0070                     ??_setup:	
   876                           ; 1 bytes @ 0x0
   877                           
   878     0070                     ?_I2C_Init_Master:	
   879                           ; 1 bytes @ 0x0
   880                           
   881     0070                     ??_I2C_Init_Master:	
   882                           ; 1 bytes @ 0x0
   883                           
   884     0070                     ?_Lcd_Init:	
   885                           ; 1 bytes @ 0x0
   886                           
   887     0070                     ?_I2C_Start:	
   888                           ; 1 bytes @ 0x0
   889                           
   890     0070                     ??_I2C_Start:	
   891                           ; 1 bytes @ 0x0
   892                           
   893     0070                     ??_I2C_Write:	
   894                           ; 1 bytes @ 0x0
   895                           
   896     0070                     ?_I2C_Read:	
   897                           ; 1 bytes @ 0x0
   898                           
   899     0070                     ??_I2C_Read:	
   900                           ; 1 bytes @ 0x0
   901                           
   902     0070                     ?_I2C_Stop:	
   903                           ; 1 bytes @ 0x0
   904                           
   905     0070                     ??_I2C_Stop:	
   906                           ; 1 bytes @ 0x0
   907                           
   908     0070                     ?_Lcd_Write_Char:	
   909                           ; 1 bytes @ 0x0
   910                           
   911     0070                     ??_isdigit:	
   912                           ; 1 bytes @ 0x0
   913                           
   914     0070                     ?_main:	
   915                           ; 1 bytes @ 0x0
   916                           
   917     0070                     ?_Lcd_I2C_Write:	
   918                           ; 1 bytes @ 0x0
   919                           
   920     0070                     ?_I2C_Write:	
   921                           ; 1 bytes @ 0x0
   922                           
   923     0070                     ?__Umul8_16:	
   924                           ; 2 bytes @ 0x0
   925                           
   926     0070                     ?___wmul:	
   927                           ; 2 bytes @ 0x0
   928                           
   929     0070                     ?___awmod:	
   930                           ; 2 bytes @ 0x0
   931                           
   932     0070                     ?___lwmod:	
   933                           ; 2 bytes @ 0x0
   934                           
   935     0070                     ?__tdiv_to_l_:	
   936                           ; 2 bytes @ 0x0
   937                           
   938     0070                     ?__div_to_l_:	
   939                           ; 4 bytes @ 0x0
   940                           
   941     0070                     ?___lldiv:	
   942                           ; 4 bytes @ 0x0
   943                           
   944     0070                     ?___flneg:	
   945                           ; 4 bytes @ 0x0
   946                           
   947     0070                     ?___llmod:	
   948                           ; 4 bytes @ 0x0
   949                           
   950     0070                     ?___xxtofl:	
   951                           ; 4 bytes @ 0x0
   952                           
   953     0070                     I2C_Init_Master@sp_i2c:	
   954                           ; 4 bytes @ 0x0
   955                           
   956     0070                     I2C_Write@data:	
   957                           ; 1 bytes @ 0x0
   958                           
   959     0070                     __Umul8_16@multiplicand:	
   960                           ; 1 bytes @ 0x0
   961                           
   962     0070                     _isdigit$902:	
   963                           ; 1 bytes @ 0x0
   964                           
   965     0070                     ___wmul@multiplier:	
   966                           ; 1 bytes @ 0x0
   967                           
   968     0070                     ___awmod@divisor:	
   969                           ; 2 bytes @ 0x0
   970                           
   971     0070                     ___lwmod@divisor:	
   972                           ; 2 bytes @ 0x0
   973                           
   974     0070                     ___lldiv@divisor:	
   975                           ; 2 bytes @ 0x0
   976                           
   977     0070                     __div_to_l_@f1:	
   978                           ; 4 bytes @ 0x0
   979                           
   980     0070                     ___fleq@ff1:	
   981                           ; 4 bytes @ 0x0
   982                           
   983     0070                     ___flge@ff1:	
   984                           ; 4 bytes @ 0x0
   985                           
   986     0070                     ___flneg@f1:	
   987                           ; 4 bytes @ 0x0
   988                           
   989     0070                     __tdiv_to_l_@f1:	
   990                           ; 4 bytes @ 0x0
   991                           
   992     0070                     ___llmod@divisor:	
   993                           ; 4 bytes @ 0x0
   994                           
   995     0070                     ___xxtofl@val:	
   996                           ; 4 bytes @ 0x0
   997                           
   998                           
   999                           ; 4 bytes @ 0x0
  1000     0070                     	ds	1
  1001     0071                     ??_Lcd_I2C_Write:
  1002     0071                     Lcd_I2C_Write@dato:	
  1003                           ; 1 bytes @ 0x1
  1004                           
  1005     0071                     isdigit@c:	
  1006                           ; 1 bytes @ 0x1
  1007                           
  1008                           
  1009                           ; 1 bytes @ 0x1
  1010     0071                     	ds	1
  1011     0072                     ??__Umul8_16:
  1012     0072                     ?_Lcd_Port:	
  1013                           ; 1 bytes @ 0x2
  1014                           
  1015     0072                     Lcd_Port@nibble:	
  1016                           ; 1 bytes @ 0x2
  1017                           
  1018     0072                     ___wmul@multiplicand:	
  1019                           ; 1 bytes @ 0x2
  1020                           
  1021     0072                     ___awmod@dividend:	
  1022                           ; 2 bytes @ 0x2
  1023                           
  1024     0072                     ___lwmod@dividend:	
  1025                           ; 2 bytes @ 0x2
  1026                           
  1027                           
  1028                           ; 2 bytes @ 0x2
  1029     0072                     	ds	1
  1030     0073                     ??_Lcd_Port:
  1031                           
  1032                           ; 1 bytes @ 0x3
  1033     0073                     	ds	1
  1034     0074                     ??___wmul:
  1035     0074                     ??___awmod:	
  1036                           ; 1 bytes @ 0x4
  1037                           
  1038     0074                     ??___flneg:	
  1039                           ; 1 bytes @ 0x4
  1040                           
  1041     0074                     ??___lwmod:	
  1042                           ; 1 bytes @ 0x4
  1043                           
  1044     0074                     ??___xxtofl:	
  1045                           ; 1 bytes @ 0x4
  1046                           
  1047     0074                     Lcd_Port@add:	
  1048                           ; 1 bytes @ 0x4
  1049                           
  1050     0074                     ___wmul@product:	
  1051                           ; 1 bytes @ 0x4
  1052                           
  1053     0074                     __Umul8_16@product:	
  1054                           ; 2 bytes @ 0x4
  1055                           
  1056     0074                     ___lldiv@dividend:	
  1057                           ; 2 bytes @ 0x4
  1058                           
  1059     0074                     __div_to_l_@f2:	
  1060                           ; 4 bytes @ 0x4
  1061                           
  1062     0074                     ___fleq@ff2:	
  1063                           ; 4 bytes @ 0x4
  1064                           
  1065     0074                     ___flge@ff2:	
  1066                           ; 4 bytes @ 0x4
  1067                           
  1068     0074                     __tdiv_to_l_@f2:	
  1069                           ; 4 bytes @ 0x4
  1070                           
  1071     0074                     ___llmod@dividend:	
  1072                           ; 4 bytes @ 0x4
  1073                           
  1074                           
  1075                           ; 4 bytes @ 0x4
  1076     0074                     	ds	1
  1077     0075                     Lcd_Port@datos:
  1078     0075                     ___awmod@counter:	
  1079                           ; 1 bytes @ 0x5
  1080                           
  1081     0075                     ___lwmod@counter:	
  1082                           ; 1 bytes @ 0x5
  1083                           
  1084                           
  1085                           ; 1 bytes @ 0x5
  1086     0075                     	ds	1
  1087     0076                     ?_Lcd_Send_Byte:
  1088     0076                     ?___lwdiv:	
  1089                           ; 1 bytes @ 0x6
  1090                           
  1091     0076                     Lcd_Send_Byte@n:	
  1092                           ; 2 bytes @ 0x6
  1093                           
  1094     0076                     ___awmod@sign:	
  1095                           ; 1 bytes @ 0x6
  1096                           
  1097     0076                     ___lwdiv@divisor:	
  1098                           ; 1 bytes @ 0x6
  1099                           
  1100     0076                     __Umul8_16@word_mpld:	
  1101                           ; 2 bytes @ 0x6
  1102                           
  1103                           
  1104                           ; 2 bytes @ 0x6
  1105     0076                     	ds	1
  1106     0077                     ??_Lcd_Send_Byte:
  1107     0077                     ?___awdiv:	
  1108                           ; 1 bytes @ 0x7
  1109                           
  1110     0077                     ___awdiv@divisor:	
  1111                           ; 2 bytes @ 0x7
  1112                           
  1113                           
  1114                           ; 2 bytes @ 0x7
  1115     0077                     	ds	1
  1116     0078                     ??__tdiv_to_l_:
  1117     0078                     ??__div_to_l_:	
  1118                           ; 1 bytes @ 0x8
  1119                           
  1120     0078                     ??___lldiv:	
  1121                           ; 1 bytes @ 0x8
  1122                           
  1123     0078                     ??___fleq:	
  1124                           ; 1 bytes @ 0x8
  1125                           
  1126     0078                     ??___flge:	
  1127                           ; 1 bytes @ 0x8
  1128                           
  1129     0078                     ??___llmod:	
  1130                           ; 1 bytes @ 0x8
  1131                           
  1132     0078                     Lcd_Send_Byte@add:	
  1133                           ; 1 bytes @ 0x8
  1134                           
  1135     0078                     __Umul8_16@multiplier:	
  1136                           ; 1 bytes @ 0x8
  1137                           
  1138     0078                     ___xxtofl@sign:	
  1139                           ; 1 bytes @ 0x8
  1140                           
  1141     0078                     ___lwdiv@dividend:	
  1142                           ; 1 bytes @ 0x8
  1143                           
  1144                           
  1145                           ; 2 bytes @ 0x8
  1146     0078                     	ds	1
  1147     0079                     ??_Lcd_Init:
  1148     0079                     ?_Lcd_Set_Cursor:	
  1149                           ; 1 bytes @ 0x9
  1150                           
  1151     0079                     ?_Lcd_Write_String:	
  1152                           ; 1 bytes @ 0x9
  1153                           
  1154     0079                     ??_Lcd_Write_Char:	
  1155                           ; 1 bytes @ 0x9
  1156                           
  1157     0079                     Lcd_Set_Cursor@col:	
  1158                           ; 1 bytes @ 0x9
  1159                           
  1160     0079                     Lcd_Write_Char@c:	
  1161                           ; 1 bytes @ 0x9
  1162                           
  1163     0079                     ___llmod@counter:	
  1164                           ; 1 bytes @ 0x9
  1165                           
  1166     0079                     ___xxtofl@exp:	
  1167                           ; 1 bytes @ 0x9
  1168                           
  1169     0079                     Lcd_Write_String@str:	
  1170                           ; 1 bytes @ 0x9
  1171                           
  1172     0079                     ___awdiv@dividend:	
  1173                           ; 2 bytes @ 0x9
  1174                           
  1175     0079                     ___lldiv@quotient:	
  1176                           ; 2 bytes @ 0x9
  1177                           
  1178                           
  1179                           ; 4 bytes @ 0x9
  1180     0079                     	ds	1
  1181     007A                     ??_Lcd_Set_Cursor:
  1182     007A                     ??___lwdiv:	
  1183                           ; 1 bytes @ 0xA
  1184                           
  1185     007A                     ___xxtofl@arg:	
  1186                           ; 1 bytes @ 0xA
  1187                           
  1188                           
  1189                           ; 4 bytes @ 0xA
  1190     007A                     	ds	1
  1191     007B                     ??_Lcd_Write_String:
  1192     007B                     ??___awdiv:	
  1193                           ; 1 bytes @ 0xB
  1194                           
  1195     007B                     Lcd_Init@i:	
  1196                           ; 1 bytes @ 0xB
  1197                           
  1198     007B                     ___lwdiv@quotient:	
  1199                           ; 1 bytes @ 0xB
  1200                           
  1201                           
  1202                           ; 2 bytes @ 0xB
  1203     007B                     	ds	1
  1204     007C                     Lcd_Set_Cursor@row:
  1205                           
  1206                           ; 1 bytes @ 0xC
  1207     007C                     	ds	1
  1208     007D                     ___lldiv@counter:
  1209     007D                     ___lwdiv@counter:	
  1210                           ; 1 bytes @ 0xD
  1211                           
  1212                           
  1213                           ; 1 bytes @ 0xD
  1214     007D                     	ds	1
  1215     007E                     ??___flsub:
  1216                           
  1217                           	psect	cstackBANK0
  1218     0020                     __pcstackBANK0:	
  1219                           ; 1 bytes @ 0xE
  1220                           
  1221     0020                     ___awdiv@counter:
  1222     0020                     __div_to_l_@quot:	
  1223                           ; 1 bytes @ 0x0
  1224                           
  1225     0020                     __tdiv_to_l_@quot:	
  1226                           ; 4 bytes @ 0x0
  1227                           
  1228                           
  1229                           ; 4 bytes @ 0x0
  1230     0020                     	ds	1
  1231     0021                     ___awdiv@sign:
  1232                           
  1233                           ; 1 bytes @ 0x1
  1234     0021                     	ds	1
  1235     0022                     ___awdiv@quotient:
  1236                           
  1237                           ; 2 bytes @ 0x2
  1238     0022                     	ds	2
  1239     0024                     ?___flmul:
  1240     0024                     __div_to_l_@cntr:	
  1241                           ; 4 bytes @ 0x4
  1242                           
  1243     0024                     __tdiv_to_l_@cntr:	
  1244                           ; 1 bytes @ 0x4
  1245                           
  1246     0024                     ___flmul@b:	
  1247                           ; 1 bytes @ 0x4
  1248                           
  1249                           
  1250                           ; 4 bytes @ 0x4
  1251     0024                     	ds	1
  1252     0025                     __div_to_l_@exp1:
  1253     0025                     __tdiv_to_l_@exp1:	
  1254                           ; 1 bytes @ 0x5
  1255                           
  1256                           
  1257                           ; 1 bytes @ 0x5
  1258     0025                     	ds	3
  1259     0028                     ___flmul@a:
  1260                           
  1261                           ; 4 bytes @ 0x8
  1262     0028                     	ds	4
  1263     002C                     ??___flmul:
  1264                           
  1265                           ; 1 bytes @ 0xC
  1266     002C                     	ds	5
  1267     0031                     ___flmul@sign:
  1268                           
  1269                           ; 1 bytes @ 0x11
  1270     0031                     	ds	1
  1271     0032                     ___flmul@grs:
  1272                           
  1273                           ; 4 bytes @ 0x12
  1274     0032                     	ds	4
  1275     0036                     ___flmul@aexp:
  1276                           
  1277                           ; 1 bytes @ 0x16
  1278     0036                     	ds	1
  1279     0037                     ___flmul@bexp:
  1280                           
  1281                           ; 1 bytes @ 0x17
  1282     0037                     	ds	1
  1283     0038                     ___flmul@prod:
  1284                           
  1285                           ; 4 bytes @ 0x18
  1286     0038                     	ds	4
  1287     003C                     ___flmul@temp:
  1288                           
  1289                           ; 2 bytes @ 0x1C
  1290     003C                     	ds	2
  1291     003E                     ?_fround:
  1292     003E                     ?_scale:	
  1293                           ; 4 bytes @ 0x1E
  1294                           
  1295     003E                     ?___fldiv:	
  1296                           ; 4 bytes @ 0x1E
  1297                           
  1298     003E                     ___fldiv@a:	
  1299                           ; 4 bytes @ 0x1E
  1300                           
  1301                           
  1302                           ; 4 bytes @ 0x1E
  1303     003E                     	ds	4
  1304     0042                     ??_fround:
  1305     0042                     ??_scale:	
  1306                           ; 1 bytes @ 0x22
  1307                           
  1308     0042                     ___fldiv@b:	
  1309                           ; 1 bytes @ 0x22
  1310                           
  1311                           
  1312                           ; 4 bytes @ 0x22
  1313     0042                     	ds	4
  1314     0046                     ??___fldiv:
  1315                           
  1316                           ; 1 bytes @ 0x26
  1317     0046                     	ds	3
  1318     0049                     _fround$1124:
  1319                           
  1320                           ; 4 bytes @ 0x29
  1321     0049                     	ds	2
  1322     004B                     ___fldiv@rem:
  1323                           
  1324                           ; 4 bytes @ 0x2B
  1325     004B                     	ds	1
  1326     004C                     _scale$1125:
  1327                           
  1328                           ; 4 bytes @ 0x2C
  1329     004C                     	ds	1
  1330     004D                     _fround$1123:
  1331                           
  1332                           ; 4 bytes @ 0x2D
  1333     004D                     	ds	2
  1334     004F                     ___fldiv@sign:
  1335                           
  1336                           ; 1 bytes @ 0x2F
  1337     004F                     	ds	1
  1338     0050                     scale@scl:
  1339     0050                     ___fldiv@new_exp:	
  1340                           ; 1 bytes @ 0x30
  1341                           
  1342                           
  1343                           ; 2 bytes @ 0x30
  1344     0050                     	ds	1
  1345     0051                     ?___fltol:
  1346     0051                     fround@prec:	
  1347                           ; 4 bytes @ 0x31
  1348                           
  1349     0051                     ___fltol@f1:	
  1350                           ; 1 bytes @ 0x31
  1351                           
  1352                           
  1353                           ; 4 bytes @ 0x31
  1354     0051                     	ds	1
  1355     0052                     ?___fladd:
  1356     0052                     ___fladd@b:	
  1357                           ; 4 bytes @ 0x32
  1358                           
  1359     0052                     ___fldiv@grs:	
  1360                           ; 4 bytes @ 0x32
  1361                           
  1362                           
  1363                           ; 4 bytes @ 0x32
  1364     0052                     	ds	3
  1365     0055                     ??___fltol:
  1366                           
  1367                           ; 1 bytes @ 0x35
  1368     0055                     	ds	1
  1369     0056                     ___fldiv@bexp:
  1370     0056                     ___fladd@a:	
  1371                           ; 1 bytes @ 0x36
  1372                           
  1373                           
  1374                           ; 4 bytes @ 0x36
  1375     0056                     	ds	1
  1376     0057                     ___fldiv@aexp:
  1377                           
  1378                           ; 1 bytes @ 0x37
  1379     0057                     	ds	2
  1380     0059                     ___fltol@sign1:
  1381                           
  1382                           ; 1 bytes @ 0x39
  1383     0059                     	ds	1
  1384     005A                     ??___fladd:
  1385     005A                     ___fltol@exp1:	
  1386                           ; 1 bytes @ 0x3A
  1387                           
  1388                           
  1389                           ; 1 bytes @ 0x3A
  1390     005A                     	ds	8
  1391     0062                     ___fladd@signs:
  1392                           
  1393                           ; 1 bytes @ 0x42
  1394     0062                     	ds	1
  1395     0063                     ___fladd@aexp:
  1396                           
  1397                           ; 1 bytes @ 0x43
  1398     0063                     	ds	1
  1399     0064                     ___fladd@bexp:
  1400                           
  1401                           ; 1 bytes @ 0x44
  1402     0064                     	ds	1
  1403     0065                     ___fladd@grs:
  1404                           
  1405                           ; 1 bytes @ 0x45
  1406     0065                     	ds	1
  1407     0066                     ?___flsub:
  1408     0066                     ___flsub@a:	
  1409                           ; 4 bytes @ 0x46
  1410                           
  1411                           
  1412                           ; 4 bytes @ 0x46
  1413     0066                     	ds	4
  1414     006A                     ___flsub@b:
  1415                           
  1416                           ; 4 bytes @ 0x4A
  1417     006A                     	ds	4
  1418                           
  1419                           	psect	maintext
  1420     11AA                     __pmaintext:	
  1421 ;;
  1422 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1423 ;;
  1424 ;; *************** function _main *****************
  1425 ;; Defined at:
  1426 ;;		line 65 in file "Proyecto1_Master.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;		None
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;		None
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  1    wreg      void 
  1433 ;; Registers used:
  1434 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1435 ;; Tracked objects:
  1436 ;;		On entry : B00/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1440 ;;      Params:         0       0       0       0       0
  1441 ;;      Locals:         0       0       0       0       0
  1442 ;;      Temps:          0       0       4       0       0
  1443 ;;      Totals:         0       0       4       0       0
  1444 ;;Total ram usage:        4 bytes
  1445 ;; Hardware stack levels required when called: 5
  1446 ;; This function calls:
  1447 ;;		_I2C_Init_Master
  1448 ;;		_I2C_Read
  1449 ;;		_I2C_Start
  1450 ;;		_I2C_Stop
  1451 ;;		_I2C_Write
  1452 ;;		_Lcd_Init
  1453 ;;		_Lcd_Set_Cursor
  1454 ;;		_Lcd_Write_Char
  1455 ;;		_Lcd_Write_String
  1456 ;;		___fldiv
  1457 ;;		___flmul
  1458 ;;		___xxtofl
  1459 ;;		_setup
  1460 ;;		_sprintf
  1461 ;; This function is called by:
  1462 ;;		Startup code after reset
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466     11AA                     _main:	
  1467                           ;psect for function _main
  1468                           
  1469     11AA                     l4157:	
  1470                           ;incstack = 0
  1471                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1472                           
  1473                           
  1474                           ;Proyecto1_Master.c: 66:     setup();
  1475     11AA  160A  158A  20B8  160A  118A  	fcall	_setup
  1476     11AF                     l4159:
  1477                           
  1478                           ;Proyecto1_Master.c: 68:     I2C_Init_Master(0x80);
  1479     11AF  3080               	movlw	128
  1480     11B0  160A  158A  20EC  160A  118A  	fcall	_I2C_Init_Master
  1481     11B5                     l4161:
  1482                           
  1483                           ;Proyecto1_Master.c: 69:     Lcd_Init();
  1484     11B5  160A  158A  2445  160A  118A  	fcall	_Lcd_Init
  1485     11BA                     l113:	
  1486                           ;Proyecto1_Master.c: 71:     while(1){
  1487                           
  1488                           
  1489                           ;Proyecto1_Master.c: 74:        I2C_Start();
  1490     11BA  160A  158A  205D  160A  118A  	fcall	_I2C_Start
  1491     11BF                     l4163:
  1492                           
  1493                           ;Proyecto1_Master.c: 75:        I2C_Write(0x71);
  1494     11BF  3071               	movlw	113
  1495     11C0  160A  158A  2091  160A  118A  	fcall	_I2C_Write
  1496     11C5                     l4165:
  1497                           
  1498                           ;Proyecto1_Master.c: 76:        dist = I2C_Read();
  1499     11C5  160A  158A  207B  160A  118A  	fcall	_I2C_Read
  1500     11CA  1683               	bsf	3,5	;RP0=1, select bank1
  1501     11CB  1303               	bcf	3,6	;RP1=0, select bank1
  1502     11CC  00DB               	movwf	_dist^(0+128)
  1503     11CD                     l4167:
  1504                           
  1505                           ;Proyecto1_Master.c: 77:        I2C_Stop();
  1506     11CD  160A  158A  2067  160A  118A  	fcall	_I2C_Stop
  1507     11D2                     l4169:
  1508                           
  1509                           ;Proyecto1_Master.c: 78:        _delay((unsigned long)((100)*(8000000/4000.0)));
  1510     11D2  3002               	movlw	2
  1511     11D3  1683               	bsf	3,5	;RP0=1, select bank1
  1512     11D4  1303               	bcf	3,6	;RP1=0, select bank1
  1513     11D5  00C7               	movwf	(??_main^(0+128)+2)
  1514     11D6  3004               	movlw	4
  1515     11D7  00C6               	movwf	(??_main^(0+128)+1)
  1516     11D8  30B9               	movlw	185
  1517     11D9  00C5               	movwf	??_main^(0+128)
  1518     11DA                     u6627:
  1519     11DA  0BC5               	decfsz	??_main^(0+128),f
  1520     11DB  29DA               	goto	u6627
  1521     11DC  0BC6               	decfsz	(??_main^(0+128)+1),f
  1522     11DD  29DA               	goto	u6627
  1523     11DE  0BC7               	decfsz	(??_main^(0+128)+2),f
  1524     11DF  29DA               	goto	u6627
  1525     11E0  29E1               	nop2
  1526     11E1                     l4171:
  1527                           
  1528                           ;Proyecto1_Master.c: 80:        if (dist < 20){
  1529     11E1  3014               	movlw	20
  1530     11E2  1683               	bsf	3,5	;RP0=1, select bank1
  1531     11E3  1303               	bcf	3,6	;RP1=0, select bank1
  1532     11E4  025B               	subwf	_dist^(0+128),w
  1533     11E5  1803               	skipnc
  1534     11E6  29E8               	goto	u6541
  1535     11E7  29E9               	goto	u6540
  1536     11E8                     u6541:
  1537     11E8  29EE               	goto	l4175
  1538     11E9                     u6540:
  1539     11E9                     l4173:
  1540                           
  1541                           ;Proyecto1_Master.c: 81:            motor = 1;
  1542     11E9  3001               	movlw	1
  1543     11EA  00D5               	movwf	_motor^(0+128)
  1544     11EB  3000               	movlw	0
  1545     11EC  00D6               	movwf	(_motor^(0+128)+1)
  1546                           
  1547                           ;Proyecto1_Master.c: 82:        }
  1548     11ED  29F0               	goto	l4177
  1549     11EE                     l4175:
  1550                           
  1551                           ;Proyecto1_Master.c: 84:            motor = 0;
  1552     11EE  01D5               	clrf	_motor^(0+128)
  1553     11EF  01D6               	clrf	(_motor+1)^(0+128)
  1554     11F0                     l4177:
  1555                           
  1556                           ;Proyecto1_Master.c: 87:        I2C_Start();
  1557     11F0  160A  158A  205D  160A  118A  	fcall	_I2C_Start
  1558     11F5                     l4179:
  1559                           
  1560                           ;Proyecto1_Master.c: 88:        I2C_Write(0x51);
  1561     11F5  3051               	movlw	81
  1562     11F6  160A  158A  2091  160A  118A  	fcall	_I2C_Write
  1563     11FB                     l4181:
  1564                           
  1565                           ;Proyecto1_Master.c: 89:        pot1 = I2C_Read();
  1566     11FB  160A  158A  207B  160A  118A  	fcall	_I2C_Read
  1567     1200  1683               	bsf	3,5	;RP0=1, select bank1
  1568     1201  1303               	bcf	3,6	;RP1=0, select bank1
  1569     1202  00DD               	movwf	_pot1^(0+128)
  1570     1203                     l4183:
  1571                           
  1572                           ;Proyecto1_Master.c: 90:        I2C_Stop();
  1573     1203  160A  158A  2067  160A  118A  	fcall	_I2C_Stop
  1574     1208                     l4185:
  1575                           
  1576                           ;Proyecto1_Master.c: 91:        _delay((unsigned long)((100)*(8000000/4000.0)));
  1577     1208  3002               	movlw	2
  1578     1209  1683               	bsf	3,5	;RP0=1, select bank1
  1579     120A  1303               	bcf	3,6	;RP1=0, select bank1
  1580     120B  00C7               	movwf	(??_main^(0+128)+2)
  1581     120C  3004               	movlw	4
  1582     120D  00C6               	movwf	(??_main^(0+128)+1)
  1583     120E  30B9               	movlw	185
  1584     120F  00C5               	movwf	??_main^(0+128)
  1585     1210                     u6637:
  1586     1210  0BC5               	decfsz	??_main^(0+128),f
  1587     1211  2A10               	goto	u6637
  1588     1212  0BC6               	decfsz	(??_main^(0+128)+1),f
  1589     1213  2A10               	goto	u6637
  1590     1214  0BC7               	decfsz	(??_main^(0+128)+2),f
  1591     1215  2A10               	goto	u6637
  1592     1216  2A17               	nop2
  1593     1217                     l4187:
  1594                           
  1595                           ;Proyecto1_Master.c: 93:       temp = ((pot1*(float)150)/(float)77);
  1596     1217  3042               	movlw	66
  1597     1218  1283               	bcf	3,5	;RP0=0, select bank0
  1598     1219  1303               	bcf	3,6	;RP1=0, select bank0
  1599     121A  00C1               	movwf	___fldiv@a+3
  1600     121B  309A               	movlw	154
  1601     121C  00C0               	movwf	___fldiv@a+2
  1602     121D  3000               	movlw	0
  1603     121E  00BF               	movwf	___fldiv@a+1
  1604     121F  3000               	movlw	0
  1605     1220  00BE               	movwf	___fldiv@a
  1606     1221  3043               	movlw	67
  1607     1222  00A7               	movwf	___flmul@b+3
  1608     1223  3016               	movlw	22
  1609     1224  00A6               	movwf	___flmul@b+2
  1610     1225  3000               	movlw	0
  1611     1226  00A5               	movwf	___flmul@b+1
  1612     1227  3000               	movlw	0
  1613     1228  00A4               	movwf	___flmul@b
  1614     1229  1683               	bsf	3,5	;RP0=1, select bank1
  1615     122A  1303               	bcf	3,6	;RP1=0, select bank1
  1616     122B  085D               	movf	_pot1^(0+128),w
  1617     122C  00C5               	movwf	??_main^(0+128)
  1618     122D  01C6               	clrf	(??_main^(0+128)+1)
  1619     122E  01C7               	clrf	(??_main^(0+128)+2)
  1620     122F  01C8               	clrf	(??_main^(0+128)+3)
  1621     1230  0848               	movf	(??_main+3)^(0+128),w
  1622     1231  00F3               	movwf	___xxtofl@val+3
  1623     1232  0847               	movf	(??_main+2)^(0+128),w
  1624     1233  00F2               	movwf	___xxtofl@val+2
  1625     1234  0846               	movf	(??_main+1)^(0+128),w
  1626     1235  00F1               	movwf	___xxtofl@val+1
  1627     1236  0845               	movf	??_main^(0+128),w
  1628     1237  00F0               	movwf	___xxtofl@val
  1629     1238  3001               	movlw	1
  1630     1239  160A  118A  203A  160A  118A  	fcall	___xxtofl
  1631     123E  0873               	movf	?___xxtofl+3,w
  1632     123F  1283               	bcf	3,5	;RP0=0, select bank0
  1633     1240  1303               	bcf	3,6	;RP1=0, select bank0
  1634     1241  00AB               	movwf	___flmul@a+3
  1635     1242  0872               	movf	?___xxtofl+2,w
  1636     1243  00AA               	movwf	___flmul@a+2
  1637     1244  0871               	movf	?___xxtofl+1,w
  1638     1245  00A9               	movwf	___flmul@a+1
  1639     1246  0870               	movf	?___xxtofl,w
  1640     1247  00A8               	movwf	___flmul@a
  1641     1248  120A  118A  2142  160A  118A  	fcall	___flmul
  1642     124D  1283               	bcf	3,5	;RP0=0, select bank0
  1643     124E  1303               	bcf	3,6	;RP1=0, select bank0
  1644     124F  0827               	movf	?___flmul+3,w
  1645     1250  00C5               	movwf	___fldiv@b+3
  1646     1251  0826               	movf	?___flmul+2,w
  1647     1252  00C4               	movwf	___fldiv@b+2
  1648     1253  0825               	movf	?___flmul+1,w
  1649     1254  00C3               	movwf	___fldiv@b+1
  1650     1255  0824               	movf	?___flmul,w
  1651     1256  00C2               	movwf	___fldiv@b
  1652     1257  160A  158A  262D  160A  118A  	fcall	___fldiv
  1653     125C  1283               	bcf	3,5	;RP0=0, select bank0
  1654     125D  1303               	bcf	3,6	;RP1=0, select bank0
  1655     125E  0841               	movf	?___fldiv+3,w
  1656     125F  1683               	bsf	3,5	;RP0=1, select bank1
  1657     1260  1303               	bcf	3,6	;RP1=0, select bank1
  1658     1261  00D0               	movwf	(_temp+3)^(0+128)
  1659     1262  1283               	bcf	3,5	;RP0=0, select bank0
  1660     1263  1303               	bcf	3,6	;RP1=0, select bank0
  1661     1264  0840               	movf	?___fldiv+2,w
  1662     1265  1683               	bsf	3,5	;RP0=1, select bank1
  1663     1266  1303               	bcf	3,6	;RP1=0, select bank1
  1664     1267  00CF               	movwf	(_temp+2)^(0+128)
  1665     1268  1283               	bcf	3,5	;RP0=0, select bank0
  1666     1269  1303               	bcf	3,6	;RP1=0, select bank0
  1667     126A  083F               	movf	?___fldiv+1,w
  1668     126B  1683               	bsf	3,5	;RP0=1, select bank1
  1669     126C  1303               	bcf	3,6	;RP1=0, select bank1
  1670     126D  00CE               	movwf	(_temp+1)^(0+128)
  1671     126E  1283               	bcf	3,5	;RP0=0, select bank0
  1672     126F  1303               	bcf	3,6	;RP1=0, select bank0
  1673     1270  083E               	movf	?___fldiv,w
  1674     1271  1683               	bsf	3,5	;RP0=1, select bank1
  1675     1272  1303               	bcf	3,6	;RP1=0, select bank1
  1676     1273  00CD               	movwf	_temp^(0+128)
  1677     1274                     l4189:
  1678                           
  1679                           ;Proyecto1_Master.c: 96:        I2C_Start();
  1680     1274  160A  158A  205D  160A  118A  	fcall	_I2C_Start
  1681     1279                     l4191:
  1682                           
  1683                           ;Proyecto1_Master.c: 97:        I2C_Write(0x61);
  1684     1279  3061               	movlw	97
  1685     127A  160A  158A  2091  160A  118A  	fcall	_I2C_Write
  1686     127F                     l4193:
  1687                           
  1688                           ;Proyecto1_Master.c: 98:        pot2 = I2C_Read();
  1689     127F  160A  158A  207B  160A  118A  	fcall	_I2C_Read
  1690     1284  1683               	bsf	3,5	;RP0=1, select bank1
  1691     1285  1303               	bcf	3,6	;RP1=0, select bank1
  1692     1286  00DC               	movwf	_pot2^(0+128)
  1693     1287                     l4195:
  1694                           
  1695                           ;Proyecto1_Master.c: 99:        I2C_Stop();
  1696     1287  160A  158A  2067  160A  118A  	fcall	_I2C_Stop
  1697     128C                     l4197:
  1698                           
  1699                           ;Proyecto1_Master.c: 100:        _delay((unsigned long)((100)*(8000000/4000.0)));
  1700     128C  3002               	movlw	2
  1701     128D  1683               	bsf	3,5	;RP0=1, select bank1
  1702     128E  1303               	bcf	3,6	;RP1=0, select bank1
  1703     128F  00C7               	movwf	(??_main^(0+128)+2)
  1704     1290  3004               	movlw	4
  1705     1291  00C6               	movwf	(??_main^(0+128)+1)
  1706     1292  30B9               	movlw	185
  1707     1293  00C5               	movwf	??_main^(0+128)
  1708     1294                     u6647:
  1709     1294  0BC5               	decfsz	??_main^(0+128),f
  1710     1295  2A94               	goto	u6647
  1711     1296  0BC6               	decfsz	(??_main^(0+128)+1),f
  1712     1297  2A94               	goto	u6647
  1713     1298  0BC7               	decfsz	(??_main^(0+128)+2),f
  1714     1299  2A94               	goto	u6647
  1715     129A  2A9B               	nop2
  1716     129B                     l4199:
  1717                           
  1718                           ;Proyecto1_Master.c: 102:        if (pot2 >= 100){
  1719     129B  3064               	movlw	100
  1720     129C  1683               	bsf	3,5	;RP0=1, select bank1
  1721     129D  1303               	bcf	3,6	;RP1=0, select bank1
  1722     129E  025C               	subwf	_pot2^(0+128),w
  1723     129F  1C03               	skipc
  1724     12A0  2AA2               	goto	u6551
  1725     12A1  2AA3               	goto	u6550
  1726     12A2                     u6551:
  1727     12A2  2AA8               	goto	l4203
  1728     12A3                     u6550:
  1729     12A3                     l4201:
  1730                           
  1731                           ;Proyecto1_Master.c: 103:            led = 1;
  1732     12A3  3001               	movlw	1
  1733     12A4  00D7               	movwf	_led^(0+128)
  1734     12A5  3000               	movlw	0
  1735     12A6  00D8               	movwf	(_led^(0+128)+1)
  1736                           
  1737                           ;Proyecto1_Master.c: 104:        }
  1738     12A7  2AAA               	goto	l4205
  1739     12A8                     l4203:
  1740                           
  1741                           ;Proyecto1_Master.c: 106:            led = 0;
  1742     12A8  01D7               	clrf	_led^(0+128)
  1743     12A9  01D8               	clrf	(_led+1)^(0+128)
  1744     12AA                     l4205:
  1745                           
  1746                           ;Proyecto1_Master.c: 110:        sprintf(valor, "%0.2f", temp);
  1747     12AA  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1748     12AB  00A0               	movwf	sprintf@f^(0+128)
  1749     12AC  0850               	movf	(_temp+3)^(0+128),w
  1750     12AD  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1751     12AE  084F               	movf	(_temp+2)^(0+128),w
  1752     12AF  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1753     12B0  084E               	movf	(_temp+1)^(0+128),w
  1754     12B1  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1755     12B2  084D               	movf	_temp^(0+128),w
  1756     12B3  00A1               	movwf	(?_sprintf^(0+128)+1)
  1757     12B4  30A4               	movlw	(low (_valor| (0+256)))& (0+255)
  1758     12B5  120A  158A  2016  160A  118A  	fcall	_sprintf
  1759     12BA                     l4207:
  1760                           
  1761                           ;Proyecto1_Master.c: 112:         Lcd_Set_Cursor(1,1);
  1762     12BA  01F9               	clrf	Lcd_Set_Cursor@col
  1763     12BB  0AF9               	incf	Lcd_Set_Cursor@col,f
  1764     12BC  3001               	movlw	1
  1765     12BD  160A  158A  21E7  160A  118A  	fcall	_Lcd_Set_Cursor
  1766     12C2                     l4209:
  1767                           
  1768                           ;Proyecto1_Master.c: 113:         Lcd_Write_String("Temp");
  1769     12C2  3097               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1770     12C3  00F9               	movwf	Lcd_Write_String@str
  1771     12C4  3080               	movlw	128
  1772     12C5  00FA               	movwf	Lcd_Write_String@str+1
  1773     12C6  160A  158A  217B  160A  118A  	fcall	_Lcd_Write_String
  1774     12CB                     l4211:
  1775                           
  1776                           ;Proyecto1_Master.c: 114:         Lcd_Set_Cursor(2,1);
  1777     12CB  01F9               	clrf	Lcd_Set_Cursor@col
  1778     12CC  0AF9               	incf	Lcd_Set_Cursor@col,f
  1779     12CD  3002               	movlw	2
  1780     12CE  160A  158A  21E7  160A  118A  	fcall	_Lcd_Set_Cursor
  1781     12D3                     l4213:
  1782                           
  1783                           ;Proyecto1_Master.c: 115:         Lcd_Write_String(valor);
  1784     12D3  30A4               	movlw	(low (_valor| (0+256)))& (0+255)
  1785     12D4  00F9               	movwf	Lcd_Write_String@str
  1786     12D5  3001               	movlw	1
  1787     12D6  00FA               	movwf	Lcd_Write_String@str+1
  1788     12D7  160A  158A  217B  160A  118A  	fcall	_Lcd_Write_String
  1789     12DC                     l4215:
  1790                           
  1791                           ;Proyecto1_Master.c: 116:         Lcd_Set_Cursor(2, 6);
  1792     12DC  3006               	movlw	6
  1793     12DD  00F9               	movwf	Lcd_Set_Cursor@col
  1794     12DE  3002               	movlw	2
  1795     12DF  160A  158A  21E7  160A  118A  	fcall	_Lcd_Set_Cursor
  1796     12E4                     l4217:
  1797                           
  1798                           ;Proyecto1_Master.c: 117:         Lcd_Write_Char(223);
  1799     12E4  30DF               	movlw	223
  1800     12E5  160A  158A  2071  160A  118A  	fcall	_Lcd_Write_Char
  1801     12EA                     l4219:
  1802                           
  1803                           ;Proyecto1_Master.c: 118:         Lcd_Write_String("C");
  1804     12EA  30AD               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1805     12EB  00F9               	movwf	Lcd_Write_String@str
  1806     12EC  3080               	movlw	128
  1807     12ED  00FA               	movwf	Lcd_Write_String@str+1
  1808     12EE  160A  158A  217B  160A  118A  	fcall	_Lcd_Write_String
  1809     12F3                     l4221:
  1810                           
  1811                           ;Proyecto1_Master.c: 125:         if (led == 0){
  1812     12F3  1683               	bsf	3,5	;RP0=1, select bank1
  1813     12F4  1303               	bcf	3,6	;RP1=0, select bank1
  1814     12F5  0857               	movf	_led^(0+128),w
  1815     12F6  0458               	iorwf	(_led+1)^(0+128),w
  1816     12F7  1D03               	btfss	3,2
  1817     12F8  2AFA               	goto	u6561
  1818     12F9  2AFB               	goto	u6560
  1819     12FA                     u6561:
  1820     12FA  2B1E               	goto	l4229
  1821     12FB                     u6560:
  1822     12FB                     l4223:
  1823                           
  1824                           ;Proyecto1_Master.c: 126:             Lcd_Set_Cursor(1,9);
  1825     12FB  3009               	movlw	9
  1826     12FC  00F9               	movwf	Lcd_Set_Cursor@col
  1827     12FD  3001               	movlw	1
  1828     12FE  160A  158A  21E7  160A  118A  	fcall	_Lcd_Set_Cursor
  1829     1303                     l4225:
  1830                           
  1831                           ;Proyecto1_Master.c: 127:             Lcd_Write_String("LUZ");
  1832     1303  30A9               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1833     1304  00F9               	movwf	Lcd_Write_String@str
  1834     1305  3080               	movlw	128
  1835     1306  00FA               	movwf	Lcd_Write_String@str+1
  1836     1307  160A  158A  217B  160A  118A  	fcall	_Lcd_Write_String
  1837     130C                     l4227:
  1838                           
  1839                           ;Proyecto1_Master.c: 128:             Lcd_Set_Cursor(2,9);
  1840     130C  3009               	movlw	9
  1841     130D  00F9               	movwf	Lcd_Set_Cursor@col
  1842     130E  3002               	movlw	2
  1843     130F  160A  158A  21E7  160A  118A  	fcall	_Lcd_Set_Cursor
  1844                           
  1845                           ;Proyecto1_Master.c: 129:             Lcd_Write_String("OFF");
  1846     1314  30A5               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1847     1315  00F9               	movwf	Lcd_Write_String@str
  1848     1316  3080               	movlw	128
  1849     1317  00FA               	movwf	Lcd_Write_String@str+1
  1850     1318  160A  158A  217B  160A  118A  	fcall	_Lcd_Write_String
  1851                           
  1852                           ;Proyecto1_Master.c: 130:         }
  1853     131D  2B46               	goto	l4237
  1854     131E                     l4229:
  1855     131E  0357               	decf	_led^(0+128),w
  1856     131F  0458               	iorwf	(_led+1)^(0+128),w
  1857     1320  1D03               	btfss	3,2
  1858     1321  2B23               	goto	u6571
  1859     1322  2B24               	goto	u6570
  1860     1323                     u6571:
  1861     1323  2B46               	goto	l4237
  1862     1324                     u6570:
  1863     1324                     l4231:
  1864                           
  1865                           ;Proyecto1_Master.c: 132:             Lcd_Set_Cursor(1,9);
  1866     1324  3009               	movlw	9
  1867     1325  00F9               	movwf	Lcd_Set_Cursor@col
  1868     1326  3001               	movlw	1
  1869     1327  160A  158A  21E7  160A  118A  	fcall	_Lcd_Set_Cursor
  1870     132C                     l4233:
  1871                           
  1872                           ;Proyecto1_Master.c: 133:             Lcd_Write_String("LUZ");
  1873     132C  30A9               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1874     132D  00F9               	movwf	Lcd_Write_String@str
  1875     132E  3080               	movlw	128
  1876     132F  00FA               	movwf	Lcd_Write_String@str+1
  1877     1330  160A  158A  217B  160A  118A  	fcall	_Lcd_Write_String
  1878     1335                     l4235:
  1879                           
  1880                           ;Proyecto1_Master.c: 134:             Lcd_Set_Cursor(2,9);
  1881     1335  3009               	movlw	9
  1882     1336  00F9               	movwf	Lcd_Set_Cursor@col
  1883     1337  3002               	movlw	2
  1884     1338  160A  158A  21E7  160A  118A  	fcall	_Lcd_Set_Cursor
  1885                           
  1886                           ;Proyecto1_Master.c: 135:             Lcd_Write_String("ON ");
  1887     133D  30A1               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1888     133E  00F9               	movwf	Lcd_Write_String@str
  1889     133F  3080               	movlw	128
  1890     1340  00FA               	movwf	Lcd_Write_String@str+1
  1891     1341  160A  158A  217B  160A  118A  	fcall	_Lcd_Write_String
  1892     1346                     l4237:
  1893                           
  1894                           ;Proyecto1_Master.c: 138:         if (motor == 0){
  1895     1346  1683               	bsf	3,5	;RP0=1, select bank1
  1896     1347  1303               	bcf	3,6	;RP1=0, select bank1
  1897     1348  0855               	movf	_motor^(0+128),w
  1898     1349  0456               	iorwf	(_motor+1)^(0+128),w
  1899     134A  1D03               	btfss	3,2
  1900     134B  2B4D               	goto	u6581
  1901     134C  2B4E               	goto	u6580
  1902     134D                     u6581:
  1903     134D  2B71               	goto	l4245
  1904     134E                     u6580:
  1905     134E                     l4239:
  1906                           
  1907                           ;Proyecto1_Master.c: 139:             Lcd_Set_Cursor(1,13);
  1908     134E  300D               	movlw	13
  1909     134F  00F9               	movwf	Lcd_Set_Cursor@col
  1910     1350  3001               	movlw	1
  1911     1351  160A  158A  21E7  160A  118A  	fcall	_Lcd_Set_Cursor
  1912     1356                     l4241:
  1913                           
  1914                           ;Proyecto1_Master.c: 140:             Lcd_Write_String("Dist");
  1915     1356  309C               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1916     1357  00F9               	movwf	Lcd_Write_String@str
  1917     1358  3080               	movlw	128
  1918     1359  00FA               	movwf	Lcd_Write_String@str+1
  1919     135A  160A  158A  217B  160A  118A  	fcall	_Lcd_Write_String
  1920     135F                     l4243:
  1921                           
  1922                           ;Proyecto1_Master.c: 141:             Lcd_Set_Cursor(2,13);
  1923     135F  300D               	movlw	13
  1924     1360  00F9               	movwf	Lcd_Set_Cursor@col
  1925     1361  3002               	movlw	2
  1926     1362  160A  158A  21E7  160A  118A  	fcall	_Lcd_Set_Cursor
  1927                           
  1928                           ;Proyecto1_Master.c: 142:             Lcd_Write_String("OFF");
  1929     1367  30A5               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1930     1368  00F9               	movwf	Lcd_Write_String@str
  1931     1369  3080               	movlw	128
  1932     136A  00FA               	movwf	Lcd_Write_String@str+1
  1933     136B  160A  158A  217B  160A  118A  	fcall	_Lcd_Write_String
  1934                           
  1935                           ;Proyecto1_Master.c: 143:         }
  1936     1370  29BA               	goto	l113
  1937     1371                     l4245:
  1938     1371  0355               	decf	_motor^(0+128),w
  1939     1372  0456               	iorwf	(_motor+1)^(0+128),w
  1940     1373  1D03               	btfss	3,2
  1941     1374  2B76               	goto	u6591
  1942     1375  2B77               	goto	u6590
  1943     1376                     u6591:
  1944     1376  29BA               	goto	l113
  1945     1377                     u6590:
  1946     1377                     l4247:
  1947                           
  1948                           ;Proyecto1_Master.c: 145:             Lcd_Set_Cursor(1,13);
  1949     1377  300D               	movlw	13
  1950     1378  00F9               	movwf	Lcd_Set_Cursor@col
  1951     1379  3001               	movlw	1
  1952     137A  160A  158A  21E7  160A  118A  	fcall	_Lcd_Set_Cursor
  1953     137F                     l4249:
  1954                           
  1955                           ;Proyecto1_Master.c: 146:             Lcd_Write_String("Dist");
  1956     137F  309C               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1957     1380  00F9               	movwf	Lcd_Write_String@str
  1958     1381  3080               	movlw	128
  1959     1382  00FA               	movwf	Lcd_Write_String@str+1
  1960     1383  160A  158A  217B  160A  118A  	fcall	_Lcd_Write_String
  1961     1388                     l4251:
  1962                           
  1963                           ;Proyecto1_Master.c: 147:             Lcd_Set_Cursor(2,13);
  1964     1388  300D               	movlw	13
  1965     1389  00F9               	movwf	Lcd_Set_Cursor@col
  1966     138A  3002               	movlw	2
  1967     138B  160A  158A  21E7  160A  118A  	fcall	_Lcd_Set_Cursor
  1968                           
  1969                           ;Proyecto1_Master.c: 148:             Lcd_Write_String("ON ");
  1970     1390  30A1               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1971     1391  00F9               	movwf	Lcd_Write_String@str
  1972     1392  3080               	movlw	128
  1973     1393  00FA               	movwf	Lcd_Write_String@str+1
  1974     1394  160A  158A  217B  160A  118A  	fcall	_Lcd_Write_String
  1975     1399  29BA               	goto	l113
  1976     139A  120A  118A  2800   	ljmp	start
  1977     139D                     __end_of_main:
  1978                           
  1979                           	psect	text1
  1980     0816                     __ptext1:	
  1981 ;; *************** function _sprintf *****************
  1982 ;; Defined at:
  1983 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;  sp              1    wreg     PTR unsigned char 
  1986 ;;		 -> valor(20), 
  1987 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1988 ;;		 -> STR_1(6), 
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;  sp              1   35[BANK1 ] PTR unsigned char 
  1991 ;;		 -> valor(20), 
  1992 ;;  fval            4   29[BANK1 ] PTR unsigned char 
  1993 ;;  tmpval          4   19[BANK1 ] struct .
  1994 ;;  val             4   15[BANK1 ] unsigned long 
  1995 ;;  prec            2   33[BANK1 ] int 
  1996 ;;  width           2   27[BANK1 ] int 
  1997 ;;  flag            2   25[BANK1 ] unsigned short 
  1998 ;;  eexp            2   23[BANK1 ] int 
  1999 ;;  cp              2    0        PTR const unsigned char 
  2000 ;;  len             2    0        unsigned int 
  2001 ;;  c               1   36[BANK1 ] unsigned char 
  2002 ;;  ap              1   14[BANK1 ] PTR void [1]
  2003 ;;		 -> ?_sprintf(2), 
  2004 ;;  d               1    0        unsigned char 
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  2    0[BANK1 ] int 
  2007 ;; Registers used:
  2008 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2014 ;;      Params:         0       0       5       0       0
  2015 ;;      Locals:         0       0      27       0       0
  2016 ;;      Temps:          0       0       5       0       0
  2017 ;;      Totals:         0       0      37       0       0
  2018 ;;Total ram usage:       37 bytes
  2019 ;; Hardware stack levels used: 1
  2020 ;; Hardware stack levels required when called: 3
  2021 ;; This function calls:
  2022 ;;		___awdiv
  2023 ;;		___fladd
  2024 ;;		___fleq
  2025 ;;		___flge
  2026 ;;		___flmul
  2027 ;;		___flneg
  2028 ;;		___flsub
  2029 ;;		___fltol
  2030 ;;		___lldiv
  2031 ;;		___llmod
  2032 ;;		___wmul
  2033 ;;		___xxtofl
  2034 ;;		__div_to_l_
  2035 ;;		__tdiv_to_l_
  2036 ;;		_fround
  2037 ;;		_isdigit
  2038 ;;		_scale
  2039 ;; This function is called by:
  2040 ;;		_main
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           
  2044     0816                     _sprintf:	
  2045                           ;psect for function _sprintf
  2046                           
  2047                           
  2048                           ;incstack = 0
  2049                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2050                           ;sprintf@sp stored from wreg
  2051     0816  1683               	bsf	3,5	;RP0=1, select bank1
  2052     0817  1303               	bcf	3,6	;RP1=0, select bank1
  2053     0818  00C3               	movwf	sprintf@sp^(0+128)
  2054     0819                     l3679:
  2055                           
  2056                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2057     0819  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2058     081A  00AE               	movwf	sprintf@ap^(0+128)
  2059                           
  2060                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2061     081B  2FEB               	goto	l3967
  2062     081C                     l3681:
  2063                           
  2064                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2065     081C  3025               	movlw	37
  2066     081D  0644               	xorwf	sprintf@c^(0+128),w
  2067     081E  1903               	btfsc	3,2
  2068     081F  2821               	goto	u5701
  2069     0820  2822               	goto	u5700
  2070     0821                     u5701:
  2071     0821  282C               	goto	l3687
  2072     0822                     u5700:
  2073     0822                     l3683:
  2074                           
  2075                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2076     0822  0843               	movf	sprintf@sp^(0+128),w
  2077     0823  0084               	movwf	4
  2078     0824  0844               	movf	sprintf@c^(0+128),w
  2079     0825  1783               	bsf	3,7	;select IRP bank2
  2080     0826  0080               	movwf	0
  2081     0827                     l3685:
  2082     0827  3001               	movlw	1
  2083     0828  00A5               	movwf	??_sprintf^(0+128)
  2084     0829  0825               	movf	??_sprintf^(0+128),w
  2085     082A  07C3               	addwf	sprintf@sp^(0+128),f
  2086                           
  2087                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  2088     082B  2FEB               	goto	l3967
  2089     082C                     l3687:
  2090                           
  2091                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2092     082C  01BB               	clrf	sprintf@width^(0+128)
  2093     082D  01BC               	clrf	(sprintf@width+1)^(0+128)
  2094                           
  2095                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2096     082E  01B9               	clrf	sprintf@flag^(0+128)
  2097     082F  01BA               	clrf	(sprintf@flag+1)^(0+128)
  2098     0830  2836               	goto	l3693
  2099     0831                     l394:	
  2100                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 596:    case '0':
  2101                           
  2102                           
  2103                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  2104     0831  1539               	bsf	sprintf@flag^(0+128),2
  2105     0832                     l3689:
  2106                           
  2107                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 598:     f++;
  2108     0832  3001               	movlw	1
  2109     0833  00A5               	movwf	??_sprintf^(0+128)
  2110     0834  0825               	movf	??_sprintf^(0+128),w
  2111     0835  07A0               	addwf	sprintf@f^(0+128),f
  2112     0836                     l3693:	
  2113                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  2114                           
  2115     0836  0820               	movf	sprintf@f^(0+128),w
  2116     0837  0084               	movwf	4
  2117     0838  120A  118A  200D  120A  158A  	fcall	stringdir
  2118     083D  00A5               	movwf	??_sprintf^(0+128)
  2119     083E  01A6               	clrf	(??_sprintf^(0+128)+1)
  2120                           
  2121                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2122                           ; Switch size 1, requested type "simple"
  2123                           ; Number of cases is 1, Range of values is 0 to 0
  2124                           ; switch strategies available:
  2125                           ; Name         Instructions Cycles
  2126                           ; simple_byte            4     3 (average)
  2127                           ; direct_byte           11     8 (fixed)
  2128                           ; jumptable            260     6 (fixed)
  2129                           ;	Chosen strategy is simple_byte
  2130     083F  0826               	movf	(??_sprintf+1)^(0+128),w
  2131     0840  3A00               	xorlw	0	; case 0
  2132     0841  1903               	skipnz
  2133     0842  2844               	goto	l4359
  2134     0843  2849               	goto	l3695
  2135     0844                     l4359:
  2136                           
  2137                           ; Switch size 1, requested type "simple"
  2138                           ; Number of cases is 1, Range of values is 48 to 48
  2139                           ; switch strategies available:
  2140                           ; Name         Instructions Cycles
  2141                           ; simple_byte            4     3 (average)
  2142                           ; direct_byte           14    11 (fixed)
  2143                           ; jumptable            263     9 (fixed)
  2144                           ;	Chosen strategy is simple_byte
  2145     0844  0825               	movf	??_sprintf^(0+128),w
  2146     0845  3A30               	xorlw	48	; case 48
  2147     0846  1903               	skipnz
  2148     0847  2831               	goto	l394
  2149     0848  2849               	goto	l3695
  2150     0849                     l3695:
  2151                           
  2152                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2153     0849  0820               	movf	sprintf@f^(0+128),w
  2154     084A  0084               	movwf	4
  2155     084B  120A  118A  200D  120A  158A  	fcall	stringdir
  2156     0850  120A  158A  2004  120A  158A  	fcall	_isdigit
  2157     0855  1C03               	btfss	3,0
  2158     0856  2858               	goto	u5711
  2159     0857  2859               	goto	u5710
  2160     0858                     u5711:
  2161     0858  2899               	goto	l3707
  2162     0859                     u5710:
  2163     0859                     l3697:
  2164                           
  2165                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2166     0859  1683               	bsf	3,5	;RP0=1, select bank1
  2167     085A  1303               	bcf	3,6	;RP1=0, select bank1
  2168     085B  01BB               	clrf	sprintf@width^(0+128)
  2169     085C  01BC               	clrf	(sprintf@width+1)^(0+128)
  2170     085D                     l3699:
  2171                           
  2172                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2173     085D  300A               	movlw	10
  2174     085E  00F0               	movwf	___wmul@multiplier
  2175     085F  3000               	movlw	0
  2176     0860  00F1               	movwf	___wmul@multiplier+1
  2177     0861  1683               	bsf	3,5	;RP0=1, select bank1
  2178     0862  1303               	bcf	3,6	;RP1=0, select bank1
  2179     0863  083C               	movf	(sprintf@width+1)^(0+128),w
  2180     0864  00F3               	movwf	___wmul@multiplicand+1
  2181     0865  083B               	movf	sprintf@width^(0+128),w
  2182     0866  00F2               	movwf	___wmul@multiplicand
  2183     0867  160A  158A  212F  120A  158A  	fcall	___wmul
  2184     086C  0871               	movf	?___wmul+1,w
  2185     086D  1683               	bsf	3,5	;RP0=1, select bank1
  2186     086E  1303               	bcf	3,6	;RP1=0, select bank1
  2187     086F  00BC               	movwf	(sprintf@width+1)^(0+128)
  2188     0870  0870               	movf	?___wmul,w
  2189     0871  00BB               	movwf	sprintf@width^(0+128)
  2190     0872                     l3701:
  2191                           
  2192                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2193     0872  0820               	movf	sprintf@f^(0+128),w
  2194     0873  0084               	movwf	4
  2195     0874  120A  118A  200D  120A  158A  	fcall	stringdir
  2196     0879  3ED0               	addlw	208
  2197     087A  00A5               	movwf	??_sprintf^(0+128)
  2198     087B  30FF               	movlw	255
  2199     087C  1803               	skipnc
  2200     087D  3000               	movlw	0
  2201     087E  00A6               	movwf	(??_sprintf^(0+128)+1)
  2202     087F  0825               	movf	??_sprintf^(0+128),w
  2203     0880  07BB               	addwf	sprintf@width^(0+128),f
  2204     0881  1803               	skipnc
  2205     0882  0ABC               	incf	(sprintf@width+1)^(0+128),f
  2206     0883  0826               	movf	(??_sprintf+1)^(0+128),w
  2207     0884  07BC               	addwf	(sprintf@width+1)^(0+128),f
  2208     0885                     l3703:
  2209     0885  3001               	movlw	1
  2210     0886  00A5               	movwf	??_sprintf^(0+128)
  2211     0887  0825               	movf	??_sprintf^(0+128),w
  2212     0888  07A0               	addwf	sprintf@f^(0+128),f
  2213     0889                     l3705:
  2214                           
  2215                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2216     0889  0820               	movf	sprintf@f^(0+128),w
  2217     088A  0084               	movwf	4
  2218     088B  120A  118A  200D  120A  158A  	fcall	stringdir
  2219     0890  120A  158A  2004  120A  158A  	fcall	_isdigit
  2220     0895  1803               	btfsc	3,0
  2221     0896  2898               	goto	u5721
  2222     0897  2899               	goto	u5720
  2223     0898                     u5721:
  2224     0898  285D               	goto	l3699
  2225     0899                     u5720:
  2226     0899                     l3707:
  2227                           
  2228                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2229     0899  1683               	bsf	3,5	;RP0=1, select bank1
  2230     089A  1303               	bcf	3,6	;RP1=0, select bank1
  2231     089B  0820               	movf	sprintf@f^(0+128),w
  2232     089C  0084               	movwf	4
  2233     089D  120A  118A  200D  120A  158A  	fcall	stringdir
  2234     08A2  3A2E               	xorlw	46
  2235     08A3  1D03               	skipz
  2236     08A4  28A6               	goto	u5731
  2237     08A5  28A7               	goto	u5730
  2238     08A6                     u5731:
  2239     08A6  28EC               	goto	l3723
  2240     08A7                     u5730:
  2241     08A7                     l3709:
  2242                           
  2243                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2244     08A7  173A               	bsf	(sprintf@flag^(0+128)+1),6
  2245     08A8                     l3711:
  2246                           
  2247                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 630:    f++;
  2248     08A8  3001               	movlw	1
  2249     08A9  00A5               	movwf	??_sprintf^(0+128)
  2250     08AA  0825               	movf	??_sprintf^(0+128),w
  2251     08AB  07A0               	addwf	sprintf@f^(0+128),f
  2252     08AC                     l3713:
  2253                           
  2254                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2255     08AC  01C1               	clrf	sprintf@prec^(0+128)
  2256     08AD  01C2               	clrf	(sprintf@prec+1)^(0+128)
  2257                           
  2258                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2259     08AE  28DB               	goto	l3721
  2260     08AF                     l3715:
  2261                           
  2262                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2263     08AF  300A               	movlw	10
  2264     08B0  00F0               	movwf	___wmul@multiplier
  2265     08B1  3000               	movlw	0
  2266     08B2  00F1               	movwf	___wmul@multiplier+1
  2267     08B3  1683               	bsf	3,5	;RP0=1, select bank1
  2268     08B4  1303               	bcf	3,6	;RP1=0, select bank1
  2269     08B5  0842               	movf	(sprintf@prec+1)^(0+128),w
  2270     08B6  00F3               	movwf	___wmul@multiplicand+1
  2271     08B7  0841               	movf	sprintf@prec^(0+128),w
  2272     08B8  00F2               	movwf	___wmul@multiplicand
  2273     08B9  160A  158A  212F  120A  158A  	fcall	___wmul
  2274     08BE  0871               	movf	?___wmul+1,w
  2275     08BF  1683               	bsf	3,5	;RP0=1, select bank1
  2276     08C0  1303               	bcf	3,6	;RP1=0, select bank1
  2277     08C1  00C2               	movwf	(sprintf@prec+1)^(0+128)
  2278     08C2  0870               	movf	?___wmul,w
  2279     08C3  00C1               	movwf	sprintf@prec^(0+128)
  2280     08C4                     l3717:
  2281                           
  2282                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2283     08C4  0820               	movf	sprintf@f^(0+128),w
  2284     08C5  0084               	movwf	4
  2285     08C6  120A  118A  200D  120A  158A  	fcall	stringdir
  2286     08CB  3ED0               	addlw	208
  2287     08CC  00A5               	movwf	??_sprintf^(0+128)
  2288     08CD  30FF               	movlw	255
  2289     08CE  1803               	skipnc
  2290     08CF  3000               	movlw	0
  2291     08D0  00A6               	movwf	(??_sprintf^(0+128)+1)
  2292     08D1  0825               	movf	??_sprintf^(0+128),w
  2293     08D2  07C1               	addwf	sprintf@prec^(0+128),f
  2294     08D3  1803               	skipnc
  2295     08D4  0AC2               	incf	(sprintf@prec+1)^(0+128),f
  2296     08D5  0826               	movf	(??_sprintf+1)^(0+128),w
  2297     08D6  07C2               	addwf	(sprintf@prec+1)^(0+128),f
  2298     08D7                     l3719:
  2299     08D7  3001               	movlw	1
  2300     08D8  00A5               	movwf	??_sprintf^(0+128)
  2301     08D9  0825               	movf	??_sprintf^(0+128),w
  2302     08DA  07A0               	addwf	sprintf@f^(0+128),f
  2303     08DB                     l3721:
  2304                           
  2305                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2306     08DB  0820               	movf	sprintf@f^(0+128),w
  2307     08DC  0084               	movwf	4
  2308     08DD  120A  118A  200D  120A  158A  	fcall	stringdir
  2309     08E2  120A  158A  2004  120A  158A  	fcall	_isdigit
  2310     08E7  1803               	btfsc	3,0
  2311     08E8  28EA               	goto	u5741
  2312     08E9  28EB               	goto	u5740
  2313     08EA                     u5741:
  2314     08EA  28AF               	goto	l3715
  2315     08EB                     u5740:
  2316     08EB  28F2               	goto	l3729
  2317     08EC                     l3723:
  2318                           
  2319                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2320     08EC  01C1               	clrf	sprintf@prec^(0+128)
  2321     08ED  01C2               	clrf	(sprintf@prec+1)^(0+128)
  2322     08EE                     l3725:
  2323                           
  2324                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2325     08EE  163A               	bsf	(sprintf@flag^(0+128)+1),4
  2326     08EF  28F2               	goto	l3729
  2327     08F0                     l409:	
  2328                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2329                           
  2330                           
  2331                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2332     08F0  153A               	bsf	(sprintf@flag^(0+128)+1),2
  2333                           
  2334                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 690:    break;
  2335     08F1  290E               	goto	l3731
  2336     08F2                     l3729:
  2337     08F2  3001               	movlw	1
  2338     08F3  1683               	bsf	3,5	;RP0=1, select bank1
  2339     08F4  1303               	bcf	3,6	;RP1=0, select bank1
  2340     08F5  07A0               	addwf	sprintf@f^(0+128),f
  2341     08F6  30FF               	movlw	-1
  2342     08F7  0720               	addwf	sprintf@f^(0+128),w
  2343     08F8  0084               	movwf	4
  2344     08F9  120A  118A  200D  120A  158A  	fcall	stringdir
  2345     08FE  00C4               	movwf	sprintf@c^(0+128)
  2346     08FF  00A5               	movwf	??_sprintf^(0+128)
  2347     0900  01A6               	clrf	(??_sprintf^(0+128)+1)
  2348                           
  2349                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2350                           ; Switch size 1, requested type "simple"
  2351                           ; Number of cases is 1, Range of values is 0 to 0
  2352                           ; switch strategies available:
  2353                           ; Name         Instructions Cycles
  2354                           ; simple_byte            4     3 (average)
  2355                           ; direct_byte           11     8 (fixed)
  2356                           ; jumptable            260     6 (fixed)
  2357                           ;	Chosen strategy is simple_byte
  2358     0901  0826               	movf	(??_sprintf+1)^(0+128),w
  2359     0902  3A00               	xorlw	0	; case 0
  2360     0903  1903               	skipnz
  2361     0904  2906               	goto	l4361
  2362     0905  2FEB               	goto	l3967
  2363     0906                     l4361:
  2364                           
  2365                           ; Switch size 1, requested type "simple"
  2366                           ; Number of cases is 2, Range of values is 0 to 102
  2367                           ; switch strategies available:
  2368                           ; Name         Instructions Cycles
  2369                           ; simple_byte            7     4 (average)
  2370                           ; jumptable            260     6 (fixed)
  2371                           ;	Chosen strategy is simple_byte
  2372     0906  0825               	movf	??_sprintf^(0+128),w
  2373     0907  3A00               	xorlw	0	; case 0
  2374     0908  1903               	skipnz
  2375     0909  2FFB               	goto	l3969
  2376     090A  3A66               	xorlw	102	; case 102
  2377     090B  1903               	skipnz
  2378     090C  28F0               	goto	l409
  2379     090D  2FEB               	goto	l3967
  2380     090E                     l3731:
  2381                           
  2382                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2383     090E  3000               	movlw	0
  2384     090F  0539               	andwf	sprintf@flag^(0+128),w
  2385     0910  00A5               	movwf	??_sprintf^(0+128)
  2386     0911  3007               	movlw	7
  2387     0912  053A               	andwf	(sprintf@flag+1)^(0+128),w
  2388     0913  00A6               	movwf	(??_sprintf+1)^(0+128)
  2389     0914  0825               	movf	??_sprintf^(0+128),w
  2390     0915  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2391     0916  1903               	btfsc	3,2
  2392     0917  2919               	goto	u5751
  2393     0918  291A               	goto	u5750
  2394     0919                     u5751:
  2395     0919  2EF9               	goto	l3905
  2396     091A                     u5750:
  2397     091A                     l3733:
  2398                           
  2399                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2400     091A  1E3A               	btfss	(sprintf@flag+1)^(0+128),4
  2401     091B  291D               	goto	u5761
  2402     091C  291E               	goto	u5760
  2403     091D                     u5761:
  2404     091D  2922               	goto	l3737
  2405     091E                     u5760:
  2406     091E                     l3735:
  2407                           
  2408                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2409     091E  3006               	movlw	6
  2410     091F  00C1               	movwf	sprintf@prec^(0+128)
  2411     0920  3000               	movlw	0
  2412     0921  00C2               	movwf	(sprintf@prec^(0+128)+1)
  2413     0922                     l3737:
  2414                           
  2415                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2416     0922  082E               	movf	sprintf@ap^(0+128),w
  2417     0923  0084               	movwf	4
  2418     0924  1383               	bcf	3,7	;select IRP bank0
  2419     0925  0800               	movf	0,w
  2420     0926  00BD               	movwf	sprintf@fval^(0+128)
  2421     0927  0A84               	incf	4,f
  2422     0928  0800               	movf	0,w
  2423     0929  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2424     092A  0A84               	incf	4,f
  2425     092B  0800               	movf	0,w
  2426     092C  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2427     092D  0A84               	incf	4,f
  2428     092E  0800               	movf	0,w
  2429     092F  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2430     0930                     l3739:
  2431     0930  3004               	movlw	4
  2432     0931  00A5               	movwf	??_sprintf^(0+128)
  2433     0932  0825               	movf	??_sprintf^(0+128),w
  2434     0933  07AE               	addwf	sprintf@ap^(0+128),f
  2435     0934                     l3741:
  2436                           
  2437                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2438     0934  0840               	movf	(sprintf@fval+3)^(0+128),w
  2439     0935  00F3               	movwf	___flge@ff1+3
  2440     0936  083F               	movf	(sprintf@fval+2)^(0+128),w
  2441     0937  00F2               	movwf	___flge@ff1+2
  2442     0938  083E               	movf	(sprintf@fval+1)^(0+128),w
  2443     0939  00F1               	movwf	___flge@ff1+1
  2444     093A  083D               	movf	sprintf@fval^(0+128),w
  2445     093B  00F0               	movwf	___flge@ff1
  2446     093C  3000               	movlw	0
  2447     093D  00F7               	movwf	___flge@ff2+3
  2448     093E  3000               	movlw	0
  2449     093F  00F6               	movwf	___flge@ff2+2
  2450     0940  3000               	movlw	0
  2451     0941  00F5               	movwf	___flge@ff2+1
  2452     0942  3000               	movlw	0
  2453     0943  00F4               	movwf	___flge@ff2
  2454     0944  160A  158A  24D4  120A  158A  	fcall	___flge
  2455     0949  1803               	btfsc	3,0
  2456     094A  294C               	goto	u5771
  2457     094B  294D               	goto	u5770
  2458     094C                     u5771:
  2459     094C  296A               	goto	l3747
  2460     094D                     u5770:
  2461     094D                     l3743:
  2462                           
  2463                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2464     094D  1683               	bsf	3,5	;RP0=1, select bank1
  2465     094E  1303               	bcf	3,6	;RP1=0, select bank1
  2466     094F  0840               	movf	(sprintf@fval+3)^(0+128),w
  2467     0950  00F3               	movwf	___flneg@f1+3
  2468     0951  083F               	movf	(sprintf@fval+2)^(0+128),w
  2469     0952  00F2               	movwf	___flneg@f1+2
  2470     0953  083E               	movf	(sprintf@fval+1)^(0+128),w
  2471     0954  00F1               	movwf	___flneg@f1+1
  2472     0955  083D               	movf	sprintf@fval^(0+128),w
  2473     0956  00F0               	movwf	___flneg@f1
  2474     0957  160A  158A  2086  120A  158A  	fcall	___flneg
  2475     095C  0873               	movf	?___flneg+3,w
  2476     095D  1683               	bsf	3,5	;RP0=1, select bank1
  2477     095E  1303               	bcf	3,6	;RP1=0, select bank1
  2478     095F  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2479     0960  0872               	movf	?___flneg+2,w
  2480     0961  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2481     0962  0871               	movf	?___flneg+1,w
  2482     0963  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2483     0964  0870               	movf	?___flneg,w
  2484     0965  00BD               	movwf	sprintf@fval^(0+128)
  2485     0966                     l3745:
  2486                           
  2487                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2488     0966  3003               	movlw	3
  2489     0967  04B9               	iorwf	sprintf@flag^(0+128),f
  2490     0968  3000               	movlw	0
  2491     0969  04BA               	iorwf	(sprintf@flag+1)^(0+128),f
  2492     096A                     l3747:
  2493                           
  2494                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2495     096A  1683               	bsf	3,5	;RP0=1, select bank1
  2496     096B  1303               	bcf	3,6	;RP1=0, select bank1
  2497     096C  01B7               	clrf	sprintf@eexp^(0+128)
  2498     096D  01B8               	clrf	(sprintf@eexp+1)^(0+128)
  2499     096E                     l3749:
  2500                           
  2501                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2502     096E  0840               	movf	(sprintf@fval+3)^(0+128),w
  2503     096F  00F3               	movwf	___fleq@ff1+3
  2504     0970  083F               	movf	(sprintf@fval+2)^(0+128),w
  2505     0971  00F2               	movwf	___fleq@ff1+2
  2506     0972  083E               	movf	(sprintf@fval+1)^(0+128),w
  2507     0973  00F1               	movwf	___fleq@ff1+1
  2508     0974  083D               	movf	sprintf@fval^(0+128),w
  2509     0975  00F0               	movwf	___fleq@ff1
  2510     0976  3000               	movlw	0
  2511     0977  00F7               	movwf	___fleq@ff2+3
  2512     0978  3000               	movlw	0
  2513     0979  00F6               	movwf	___fleq@ff2+2
  2514     097A  3000               	movlw	0
  2515     097B  00F5               	movwf	___fleq@ff2+1
  2516     097C  3000               	movlw	0
  2517     097D  00F4               	movwf	___fleq@ff2
  2518     097E  160A  158A  222C  120A  158A  	fcall	___fleq
  2519     0983  1803               	btfsc	3,0
  2520     0984  2986               	goto	u5781
  2521     0985  2987               	goto	u5780
  2522     0986                     u5781:
  2523     0986  2A77               	goto	l3775
  2524     0987                     u5780:
  2525     0987                     l3751:
  2526                           
  2527                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2528     0987  1003               	clrc
  2529     0988  1683               	bsf	3,5	;RP0=1, select bank1
  2530     0989  1303               	bcf	3,6	;RP1=0, select bank1
  2531     098A  0D3F               	rlf	(sprintf@fval+2)^(0+128),w
  2532     098B  0D40               	rlf	(sprintf@fval+3)^(0+128),w
  2533     098C  3E82               	addlw	130
  2534     098D  00B7               	movwf	sprintf@eexp^(0+128)
  2535     098E  30FF               	movlw	255
  2536     098F  1803               	skipnc
  2537     0990  3000               	movlw	0
  2538     0991  00B8               	movwf	(sprintf@eexp^(0+128)+1)
  2539     0992                     l3753:
  2540                           
  2541                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2542     0992  30FF               	movlw	255
  2543     0993  07B7               	addwf	sprintf@eexp^(0+128),f
  2544     0994  1803               	skipnc
  2545     0995  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2546     0996  30FF               	movlw	255
  2547     0997  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2548     0998                     l3755:
  2549                           
  2550                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2551     0998  3003               	movlw	3
  2552     0999  00F0               	movwf	___wmul@multiplier
  2553     099A  3000               	movlw	0
  2554     099B  00F1               	movwf	___wmul@multiplier+1
  2555     099C  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2556     099D  00F3               	movwf	___wmul@multiplicand+1
  2557     099E  0837               	movf	sprintf@eexp^(0+128),w
  2558     099F  00F2               	movwf	___wmul@multiplicand
  2559     09A0  160A  158A  212F  120A  158A  	fcall	___wmul
  2560     09A5  0871               	movf	?___wmul+1,w
  2561     09A6  1683               	bsf	3,5	;RP0=1, select bank1
  2562     09A7  1303               	bcf	3,6	;RP1=0, select bank1
  2563     09A8  00B8               	movwf	(sprintf@eexp+1)^(0+128)
  2564     09A9  0870               	movf	?___wmul,w
  2565     09AA  00B7               	movwf	sprintf@eexp^(0+128)
  2566     09AB                     l3757:
  2567                           
  2568                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2569     09AB  300A               	movlw	10
  2570     09AC  00F7               	movwf	___awdiv@divisor
  2571     09AD  3000               	movlw	0
  2572     09AE  00F8               	movwf	___awdiv@divisor+1
  2573     09AF  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2574     09B0  00FA               	movwf	___awdiv@dividend+1
  2575     09B1  0837               	movf	sprintf@eexp^(0+128),w
  2576     09B2  00F9               	movwf	___awdiv@dividend
  2577     09B3  160A  158A  23DC  120A  158A  	fcall	___awdiv
  2578     09B8  0878               	movf	?___awdiv+1,w
  2579     09B9  1683               	bsf	3,5	;RP0=1, select bank1
  2580     09BA  1303               	bcf	3,6	;RP1=0, select bank1
  2581     09BB  00B8               	movwf	(sprintf@eexp+1)^(0+128)
  2582     09BC  0877               	movf	?___awdiv,w
  2583     09BD  00B7               	movwf	sprintf@eexp^(0+128)
  2584     09BE                     l3759:
  2585                           
  2586                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2587     09BE  1FB8               	btfss	(sprintf@eexp+1)^(0+128),7
  2588     09BF  29C1               	goto	u5791
  2589     09C0  29C2               	goto	u5790
  2590     09C1                     u5791:
  2591     09C1  29C8               	goto	l3763
  2592     09C2                     u5790:
  2593     09C2                     l3761:
  2594                           
  2595                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2596     09C2  30FF               	movlw	255
  2597     09C3  07B7               	addwf	sprintf@eexp^(0+128),f
  2598     09C4  1803               	skipnc
  2599     09C5  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2600     09C6  30FF               	movlw	255
  2601     09C7  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2602     09C8                     l3763:
  2603                           
  2604                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2605     09C8  0337               	decf	sprintf@eexp^(0+128),w
  2606     09C9  3AFF               	xorlw	255
  2607     09CA  120A  118A  2487  120A  158A  	fcall	_scale
  2608     09CF  1283               	bcf	3,5	;RP0=0, select bank0
  2609     09D0  1303               	bcf	3,6	;RP1=0, select bank0
  2610     09D1  0841               	movf	?_scale+3,w
  2611     09D2  1683               	bsf	3,5	;RP0=1, select bank1
  2612     09D3  1303               	bcf	3,6	;RP1=0, select bank1
  2613     09D4  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
  2614     09D5  1283               	bcf	3,5	;RP0=0, select bank0
  2615     09D6  1303               	bcf	3,6	;RP1=0, select bank0
  2616     09D7  0840               	movf	?_scale+2,w
  2617     09D8  1683               	bsf	3,5	;RP0=1, select bank1
  2618     09D9  1303               	bcf	3,6	;RP1=0, select bank1
  2619     09DA  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
  2620     09DB  1283               	bcf	3,5	;RP0=0, select bank0
  2621     09DC  1303               	bcf	3,6	;RP1=0, select bank0
  2622     09DD  083F               	movf	?_scale+1,w
  2623     09DE  1683               	bsf	3,5	;RP0=1, select bank1
  2624     09DF  1303               	bcf	3,6	;RP1=0, select bank1
  2625     09E0  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
  2626     09E1  1283               	bcf	3,5	;RP0=0, select bank0
  2627     09E2  1303               	bcf	3,6	;RP1=0, select bank0
  2628     09E3  083E               	movf	?_scale,w
  2629     09E4  1683               	bsf	3,5	;RP0=1, select bank1
  2630     09E5  1303               	bcf	3,6	;RP1=0, select bank1
  2631     09E6  00B3               	movwf	sprintf@tmpval^(0+128)
  2632     09E7                     l3765:
  2633                           
  2634                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2635     09E7  0840               	movf	(sprintf@fval+3)^(0+128),w
  2636     09E8  1283               	bcf	3,5	;RP0=0, select bank0
  2637     09E9  1303               	bcf	3,6	;RP1=0, select bank0
  2638     09EA  00A7               	movwf	___flmul@b+3
  2639     09EB  1683               	bsf	3,5	;RP0=1, select bank1
  2640     09EC  1303               	bcf	3,6	;RP1=0, select bank1
  2641     09ED  083F               	movf	(sprintf@fval+2)^(0+128),w
  2642     09EE  1283               	bcf	3,5	;RP0=0, select bank0
  2643     09EF  1303               	bcf	3,6	;RP1=0, select bank0
  2644     09F0  00A6               	movwf	___flmul@b+2
  2645     09F1  1683               	bsf	3,5	;RP0=1, select bank1
  2646     09F2  1303               	bcf	3,6	;RP1=0, select bank1
  2647     09F3  083E               	movf	(sprintf@fval+1)^(0+128),w
  2648     09F4  1283               	bcf	3,5	;RP0=0, select bank0
  2649     09F5  1303               	bcf	3,6	;RP1=0, select bank0
  2650     09F6  00A5               	movwf	___flmul@b+1
  2651     09F7  1683               	bsf	3,5	;RP0=1, select bank1
  2652     09F8  1303               	bcf	3,6	;RP1=0, select bank1
  2653     09F9  083D               	movf	sprintf@fval^(0+128),w
  2654     09FA  1283               	bcf	3,5	;RP0=0, select bank0
  2655     09FB  1303               	bcf	3,6	;RP1=0, select bank0
  2656     09FC  00A4               	movwf	___flmul@b
  2657     09FD  1683               	bsf	3,5	;RP0=1, select bank1
  2658     09FE  1303               	bcf	3,6	;RP1=0, select bank1
  2659     09FF  0836               	movf	(sprintf@tmpval+3)^(0+128),w
  2660     0A00  1283               	bcf	3,5	;RP0=0, select bank0
  2661     0A01  1303               	bcf	3,6	;RP1=0, select bank0
  2662     0A02  00AB               	movwf	___flmul@a+3
  2663     0A03  1683               	bsf	3,5	;RP0=1, select bank1
  2664     0A04  1303               	bcf	3,6	;RP1=0, select bank1
  2665     0A05  0835               	movf	(sprintf@tmpval+2)^(0+128),w
  2666     0A06  1283               	bcf	3,5	;RP0=0, select bank0
  2667     0A07  1303               	bcf	3,6	;RP1=0, select bank0
  2668     0A08  00AA               	movwf	___flmul@a+2
  2669     0A09  1683               	bsf	3,5	;RP0=1, select bank1
  2670     0A0A  1303               	bcf	3,6	;RP1=0, select bank1
  2671     0A0B  0834               	movf	(sprintf@tmpval+1)^(0+128),w
  2672     0A0C  1283               	bcf	3,5	;RP0=0, select bank0
  2673     0A0D  1303               	bcf	3,6	;RP1=0, select bank0
  2674     0A0E  00A9               	movwf	___flmul@a+1
  2675     0A0F  1683               	bsf	3,5	;RP0=1, select bank1
  2676     0A10  1303               	bcf	3,6	;RP1=0, select bank1
  2677     0A11  0833               	movf	sprintf@tmpval^(0+128),w
  2678     0A12  1283               	bcf	3,5	;RP0=0, select bank0
  2679     0A13  1303               	bcf	3,6	;RP1=0, select bank0
  2680     0A14  00A8               	movwf	___flmul@a
  2681     0A15  120A  118A  2142  120A  158A  	fcall	___flmul
  2682     0A1A  1283               	bcf	3,5	;RP0=0, select bank0
  2683     0A1B  1303               	bcf	3,6	;RP1=0, select bank0
  2684     0A1C  0827               	movf	?___flmul+3,w
  2685     0A1D  1683               	bsf	3,5	;RP0=1, select bank1
  2686     0A1E  1303               	bcf	3,6	;RP1=0, select bank1
  2687     0A1F  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
  2688     0A20  1283               	bcf	3,5	;RP0=0, select bank0
  2689     0A21  1303               	bcf	3,6	;RP1=0, select bank0
  2690     0A22  0826               	movf	?___flmul+2,w
  2691     0A23  1683               	bsf	3,5	;RP0=1, select bank1
  2692     0A24  1303               	bcf	3,6	;RP1=0, select bank1
  2693     0A25  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
  2694     0A26  1283               	bcf	3,5	;RP0=0, select bank0
  2695     0A27  1303               	bcf	3,6	;RP1=0, select bank0
  2696     0A28  0825               	movf	?___flmul+1,w
  2697     0A29  1683               	bsf	3,5	;RP0=1, select bank1
  2698     0A2A  1303               	bcf	3,6	;RP1=0, select bank1
  2699     0A2B  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
  2700     0A2C  1283               	bcf	3,5	;RP0=0, select bank0
  2701     0A2D  1303               	bcf	3,6	;RP1=0, select bank0
  2702     0A2E  0824               	movf	?___flmul,w
  2703     0A2F  1683               	bsf	3,5	;RP0=1, select bank1
  2704     0A30  1303               	bcf	3,6	;RP1=0, select bank1
  2705     0A31  00B3               	movwf	sprintf@tmpval^(0+128)
  2706     0A32                     l3767:
  2707                           
  2708                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2709     0A32  0836               	movf	(sprintf@tmpval+3)^(0+128),w
  2710     0A33  00F3               	movwf	___flge@ff1+3
  2711     0A34  0835               	movf	(sprintf@tmpval+2)^(0+128),w
  2712     0A35  00F2               	movwf	___flge@ff1+2
  2713     0A36  0834               	movf	(sprintf@tmpval+1)^(0+128),w
  2714     0A37  00F1               	movwf	___flge@ff1+1
  2715     0A38  0833               	movf	sprintf@tmpval^(0+128),w
  2716     0A39  00F0               	movwf	___flge@ff1
  2717     0A3A  303F               	movlw	63
  2718     0A3B  00F7               	movwf	___flge@ff2+3
  2719     0A3C  3080               	movlw	128
  2720     0A3D  00F6               	movwf	___flge@ff2+2
  2721     0A3E  3000               	movlw	0
  2722     0A3F  00F5               	movwf	___flge@ff2+1
  2723     0A40  3000               	movlw	0
  2724     0A41  00F4               	movwf	___flge@ff2
  2725     0A42  160A  158A  24D4  120A  158A  	fcall	___flge
  2726     0A47  1803               	btfsc	3,0
  2727     0A48  2A4A               	goto	u5801
  2728     0A49  2A4B               	goto	u5800
  2729     0A4A                     u5801:
  2730     0A4A  2A54               	goto	l3771
  2731     0A4B                     u5800:
  2732     0A4B                     l3769:
  2733                           
  2734                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2735     0A4B  30FF               	movlw	255
  2736     0A4C  1683               	bsf	3,5	;RP0=1, select bank1
  2737     0A4D  1303               	bcf	3,6	;RP1=0, select bank1
  2738     0A4E  07B7               	addwf	sprintf@eexp^(0+128),f
  2739     0A4F  1803               	skipnc
  2740     0A50  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2741     0A51  30FF               	movlw	255
  2742     0A52  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2743     0A53  2A77               	goto	l3775
  2744     0A54                     l3771:
  2745     0A54  1683               	bsf	3,5	;RP0=1, select bank1
  2746     0A55  1303               	bcf	3,6	;RP1=0, select bank1
  2747     0A56  0836               	movf	(sprintf@tmpval+3)^(0+128),w
  2748     0A57  00F3               	movwf	___flge@ff1+3
  2749     0A58  0835               	movf	(sprintf@tmpval+2)^(0+128),w
  2750     0A59  00F2               	movwf	___flge@ff1+2
  2751     0A5A  0834               	movf	(sprintf@tmpval+1)^(0+128),w
  2752     0A5B  00F1               	movwf	___flge@ff1+1
  2753     0A5C  0833               	movf	sprintf@tmpval^(0+128),w
  2754     0A5D  00F0               	movwf	___flge@ff1
  2755     0A5E  3041               	movlw	65
  2756     0A5F  00F7               	movwf	___flge@ff2+3
  2757     0A60  3020               	movlw	32
  2758     0A61  00F6               	movwf	___flge@ff2+2
  2759     0A62  3000               	movlw	0
  2760     0A63  00F5               	movwf	___flge@ff2+1
  2761     0A64  3000               	movlw	0
  2762     0A65  00F4               	movwf	___flge@ff2
  2763     0A66  160A  158A  24D4  120A  158A  	fcall	___flge
  2764     0A6B  1C03               	btfss	3,0
  2765     0A6C  2A6E               	goto	u5811
  2766     0A6D  2A6F               	goto	u5810
  2767     0A6E                     u5811:
  2768     0A6E  2A77               	goto	l3775
  2769     0A6F                     u5810:
  2770     0A6F                     l3773:
  2771                           
  2772                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2773     0A6F  3001               	movlw	1
  2774     0A70  1683               	bsf	3,5	;RP0=1, select bank1
  2775     0A71  1303               	bcf	3,6	;RP1=0, select bank1
  2776     0A72  07B7               	addwf	sprintf@eexp^(0+128),f
  2777     0A73  1803               	skipnc
  2778     0A74  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2779     0A75  3000               	movlw	0
  2780     0A76  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2781     0A77                     l3775:
  2782                           
  2783                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2784     0A77  1683               	bsf	3,5	;RP0=1, select bank1
  2785     0A78  1303               	bcf	3,6	;RP1=0, select bank1
  2786     0A79  0842               	movf	(sprintf@prec+1)^(0+128),w
  2787     0A7A  3A80               	xorlw	128
  2788     0A7B  00FF               	movwf	btemp+1
  2789     0A7C  3080               	movlw	128
  2790     0A7D  027F               	subwf	btemp+1,w
  2791     0A7E  1D03               	skipz
  2792     0A7F  2A82               	goto	u5825
  2793     0A80  300D               	movlw	13
  2794     0A81  0241               	subwf	sprintf@prec^(0+128),w
  2795     0A82                     u5825:
  2796     0A82  1803               	skipnc
  2797     0A83  2A85               	goto	u5821
  2798     0A84  2A86               	goto	u5820
  2799     0A85                     u5821:
  2800     0A85  2ACD               	goto	l3779
  2801     0A86                     u5820:
  2802     0A86                     l3777:
  2803                           
  2804                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2805     0A86  1683               	bsf	3,5	;RP0=1, select bank1
  2806     0A87  1303               	bcf	3,6	;RP1=0, select bank1
  2807     0A88  0841               	movf	sprintf@prec^(0+128),w
  2808     0A89  160A  118A  239D  120A  158A  	fcall	_fround
  2809     0A8E  1283               	bcf	3,5	;RP0=0, select bank0
  2810     0A8F  1303               	bcf	3,6	;RP1=0, select bank0
  2811     0A90  0841               	movf	?_fround+3,w
  2812     0A91  00D5               	movwf	___fladd@b+3
  2813     0A92  0840               	movf	?_fround+2,w
  2814     0A93  00D4               	movwf	___fladd@b+2
  2815     0A94  083F               	movf	?_fround+1,w
  2816     0A95  00D3               	movwf	___fladd@b+1
  2817     0A96  083E               	movf	?_fround,w
  2818     0A97  00D2               	movwf	___fladd@b
  2819     0A98  1683               	bsf	3,5	;RP0=1, select bank1
  2820     0A99  1303               	bcf	3,6	;RP1=0, select bank1
  2821     0A9A  0840               	movf	(sprintf@fval+3)^(0+128),w
  2822     0A9B  1283               	bcf	3,5	;RP0=0, select bank0
  2823     0A9C  1303               	bcf	3,6	;RP1=0, select bank0
  2824     0A9D  00D9               	movwf	___fladd@a+3
  2825     0A9E  1683               	bsf	3,5	;RP0=1, select bank1
  2826     0A9F  1303               	bcf	3,6	;RP1=0, select bank1
  2827     0AA0  083F               	movf	(sprintf@fval+2)^(0+128),w
  2828     0AA1  1283               	bcf	3,5	;RP0=0, select bank0
  2829     0AA2  1303               	bcf	3,6	;RP1=0, select bank0
  2830     0AA3  00D8               	movwf	___fladd@a+2
  2831     0AA4  1683               	bsf	3,5	;RP0=1, select bank1
  2832     0AA5  1303               	bcf	3,6	;RP1=0, select bank1
  2833     0AA6  083E               	movf	(sprintf@fval+1)^(0+128),w
  2834     0AA7  1283               	bcf	3,5	;RP0=0, select bank0
  2835     0AA8  1303               	bcf	3,6	;RP1=0, select bank0
  2836     0AA9  00D7               	movwf	___fladd@a+1
  2837     0AAA  1683               	bsf	3,5	;RP0=1, select bank1
  2838     0AAB  1303               	bcf	3,6	;RP1=0, select bank1
  2839     0AAC  083D               	movf	sprintf@fval^(0+128),w
  2840     0AAD  1283               	bcf	3,5	;RP0=0, select bank0
  2841     0AAE  1303               	bcf	3,6	;RP1=0, select bank0
  2842     0AAF  00D6               	movwf	___fladd@a
  2843     0AB0  160A  118A  25A8  120A  158A  	fcall	___fladd
  2844     0AB5  1283               	bcf	3,5	;RP0=0, select bank0
  2845     0AB6  1303               	bcf	3,6	;RP1=0, select bank0
  2846     0AB7  0855               	movf	?___fladd+3,w
  2847     0AB8  1683               	bsf	3,5	;RP0=1, select bank1
  2848     0AB9  1303               	bcf	3,6	;RP1=0, select bank1
  2849     0ABA  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2850     0ABB  1283               	bcf	3,5	;RP0=0, select bank0
  2851     0ABC  1303               	bcf	3,6	;RP1=0, select bank0
  2852     0ABD  0854               	movf	?___fladd+2,w
  2853     0ABE  1683               	bsf	3,5	;RP0=1, select bank1
  2854     0ABF  1303               	bcf	3,6	;RP1=0, select bank1
  2855     0AC0  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2856     0AC1  1283               	bcf	3,5	;RP0=0, select bank0
  2857     0AC2  1303               	bcf	3,6	;RP1=0, select bank0
  2858     0AC3  0853               	movf	?___fladd+1,w
  2859     0AC4  1683               	bsf	3,5	;RP0=1, select bank1
  2860     0AC5  1303               	bcf	3,6	;RP1=0, select bank1
  2861     0AC6  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2862     0AC7  1283               	bcf	3,5	;RP0=0, select bank0
  2863     0AC8  1303               	bcf	3,6	;RP1=0, select bank0
  2864     0AC9  0852               	movf	?___fladd,w
  2865     0ACA  1683               	bsf	3,5	;RP0=1, select bank1
  2866     0ACB  1303               	bcf	3,6	;RP1=0, select bank1
  2867     0ACC  00BD               	movwf	sprintf@fval^(0+128)
  2868     0ACD                     l3779:
  2869                           
  2870                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2871     0ACD  1683               	bsf	3,5	;RP0=1, select bank1
  2872     0ACE  1303               	bcf	3,6	;RP1=0, select bank1
  2873     0ACF  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2874     0AD0  3A80               	xorlw	128
  2875     0AD1  00FF               	movwf	btemp+1
  2876     0AD2  3080               	movlw	128
  2877     0AD3  027F               	subwf	btemp+1,w
  2878     0AD4  1D03               	skipz
  2879     0AD5  2AD8               	goto	u5835
  2880     0AD6  300A               	movlw	10
  2881     0AD7  0237               	subwf	sprintf@eexp^(0+128),w
  2882     0AD8                     u5835:
  2883     0AD8  1803               	skipnc
  2884     0AD9  2ADB               	goto	u5831
  2885     0ADA  2ADC               	goto	u5830
  2886     0ADB                     u5831:
  2887     0ADB  2B2D               	goto	l3787
  2888     0ADC                     u5830:
  2889     0ADC                     l3781:
  2890     0ADC  1683               	bsf	3,5	;RP0=1, select bank1
  2891     0ADD  1303               	bcf	3,6	;RP1=0, select bank1
  2892     0ADE  0840               	movf	(sprintf@fval+3)^(0+128),w
  2893     0ADF  00F3               	movwf	___fleq@ff1+3
  2894     0AE0  083F               	movf	(sprintf@fval+2)^(0+128),w
  2895     0AE1  00F2               	movwf	___fleq@ff1+2
  2896     0AE2  083E               	movf	(sprintf@fval+1)^(0+128),w
  2897     0AE3  00F1               	movwf	___fleq@ff1+1
  2898     0AE4  083D               	movf	sprintf@fval^(0+128),w
  2899     0AE5  00F0               	movwf	___fleq@ff1
  2900     0AE6  3000               	movlw	0
  2901     0AE7  00F7               	movwf	___fleq@ff2+3
  2902     0AE8  3000               	movlw	0
  2903     0AE9  00F6               	movwf	___fleq@ff2+2
  2904     0AEA  3000               	movlw	0
  2905     0AEB  00F5               	movwf	___fleq@ff2+1
  2906     0AEC  3000               	movlw	0
  2907     0AED  00F4               	movwf	___fleq@ff2
  2908     0AEE  160A  158A  222C  120A  158A  	fcall	___fleq
  2909     0AF3  1803               	btfsc	3,0
  2910     0AF4  2AF6               	goto	u5841
  2911     0AF5  2AF7               	goto	u5840
  2912     0AF6                     u5841:
  2913     0AF6  2B9F               	goto	l3801
  2914     0AF7                     u5840:
  2915     0AF7                     l3783:
  2916     0AF7  1683               	bsf	3,5	;RP0=1, select bank1
  2917     0AF8  1303               	bcf	3,6	;RP1=0, select bank1
  2918     0AF9  0840               	movf	(sprintf@fval+3)^(0+128),w
  2919     0AFA  1283               	bcf	3,5	;RP0=0, select bank0
  2920     0AFB  1303               	bcf	3,6	;RP1=0, select bank0
  2921     0AFC  00D4               	movwf	___fltol@f1+3
  2922     0AFD  1683               	bsf	3,5	;RP0=1, select bank1
  2923     0AFE  1303               	bcf	3,6	;RP1=0, select bank1
  2924     0AFF  083F               	movf	(sprintf@fval+2)^(0+128),w
  2925     0B00  1283               	bcf	3,5	;RP0=0, select bank0
  2926     0B01  1303               	bcf	3,6	;RP1=0, select bank0
  2927     0B02  00D3               	movwf	___fltol@f1+2
  2928     0B03  1683               	bsf	3,5	;RP0=1, select bank1
  2929     0B04  1303               	bcf	3,6	;RP1=0, select bank1
  2930     0B05  083E               	movf	(sprintf@fval+1)^(0+128),w
  2931     0B06  1283               	bcf	3,5	;RP0=0, select bank0
  2932     0B07  1303               	bcf	3,6	;RP1=0, select bank0
  2933     0B08  00D2               	movwf	___fltol@f1+1
  2934     0B09  1683               	bsf	3,5	;RP0=1, select bank1
  2935     0B0A  1303               	bcf	3,6	;RP1=0, select bank1
  2936     0B0B  083D               	movf	sprintf@fval^(0+128),w
  2937     0B0C  1283               	bcf	3,5	;RP0=0, select bank0
  2938     0B0D  1303               	bcf	3,6	;RP1=0, select bank0
  2939     0B0E  00D1               	movwf	___fltol@f1
  2940     0B0F  120A  118A  20CA  120A  158A  	fcall	___fltol
  2941     0B14  1283               	bcf	3,5	;RP0=0, select bank0
  2942     0B15  1303               	bcf	3,6	;RP1=0, select bank0
  2943     0B16  0854               	movf	?___fltol+3,w
  2944     0B17  0453               	iorwf	?___fltol+2,w
  2945     0B18  0452               	iorwf	?___fltol+1,w
  2946     0B19  0451               	iorwf	?___fltol,w
  2947     0B1A  1D03               	skipz
  2948     0B1B  2B1D               	goto	u5851
  2949     0B1C  2B1E               	goto	u5850
  2950     0B1D                     u5851:
  2951     0B1D  2B9F               	goto	l3801
  2952     0B1E                     u5850:
  2953     0B1E                     l3785:
  2954     0B1E  1683               	bsf	3,5	;RP0=1, select bank1
  2955     0B1F  1303               	bcf	3,6	;RP1=0, select bank1
  2956     0B20  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2957     0B21  3A80               	xorlw	128
  2958     0B22  00FF               	movwf	btemp+1
  2959     0B23  3080               	movlw	128
  2960     0B24  027F               	subwf	btemp+1,w
  2961     0B25  1D03               	skipz
  2962     0B26  2B29               	goto	u5865
  2963     0B27  3002               	movlw	2
  2964     0B28  0237               	subwf	sprintf@eexp^(0+128),w
  2965     0B29                     u5865:
  2966     0B29  1C03               	skipc
  2967     0B2A  2B2C               	goto	u5861
  2968     0B2B  2B2D               	goto	u5860
  2969     0B2C                     u5861:
  2970     0B2C  2B9F               	goto	l3801
  2971     0B2D                     u5860:
  2972     0B2D                     l3787:
  2973                           
  2974                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2975     0B2D  1683               	bsf	3,5	;RP0=1, select bank1
  2976     0B2E  1303               	bcf	3,6	;RP1=0, select bank1
  2977     0B2F  0836               	movf	(sprintf@tmpval+3)^(0+128),w
  2978     0B30  00F3               	movwf	___flge@ff1+3
  2979     0B31  0835               	movf	(sprintf@tmpval+2)^(0+128),w
  2980     0B32  00F2               	movwf	___flge@ff1+2
  2981     0B33  0834               	movf	(sprintf@tmpval+1)^(0+128),w
  2982     0B34  00F1               	movwf	___flge@ff1+1
  2983     0B35  0833               	movf	sprintf@tmpval^(0+128),w
  2984     0B36  00F0               	movwf	___flge@ff1
  2985     0B37  3040               	movlw	64
  2986     0B38  00F7               	movwf	___flge@ff2+3
  2987     0B39  3089               	movlw	137
  2988     0B3A  00F6               	movwf	___flge@ff2+2
  2989     0B3B  3070               	movlw	112
  2990     0B3C  00F5               	movwf	___flge@ff2+1
  2991     0B3D  305F               	movlw	95
  2992     0B3E  00F4               	movwf	___flge@ff2
  2993     0B3F  160A  158A  24D4  120A  158A  	fcall	___flge
  2994     0B44  1803               	btfsc	3,0
  2995     0B45  2B47               	goto	u5871
  2996     0B46  2B48               	goto	u5870
  2997     0B47                     u5871:
  2998     0B47  2B51               	goto	l3791
  2999     0B48                     u5870:
  3000     0B48                     l3789:
  3001                           
  3002                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  3003     0B48  30F7               	movlw	247
  3004     0B49  1683               	bsf	3,5	;RP0=1, select bank1
  3005     0B4A  1303               	bcf	3,6	;RP1=0, select bank1
  3006     0B4B  07B7               	addwf	sprintf@eexp^(0+128),f
  3007     0B4C  1803               	skipnc
  3008     0B4D  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  3009     0B4E  30FF               	movlw	255
  3010     0B4F  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  3011                           
  3012                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1148:      }else{
  3013     0B50  2B59               	goto	l3793
  3014     0B51                     l3791:
  3015                           
  3016                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  3017     0B51  30F8               	movlw	248
  3018     0B52  1683               	bsf	3,5	;RP0=1, select bank1
  3019     0B53  1303               	bcf	3,6	;RP1=0, select bank1
  3020     0B54  07B7               	addwf	sprintf@eexp^(0+128),f
  3021     0B55  1803               	skipnc
  3022     0B56  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  3023     0B57  30FF               	movlw	255
  3024     0B58  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  3025     0B59                     l3793:
  3026                           
  3027                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  3028     0B59  0837               	movf	sprintf@eexp^(0+128),w
  3029     0B5A  120A  118A  2487  120A  158A  	fcall	_scale
  3030     0B5F  1283               	bcf	3,5	;RP0=0, select bank0
  3031     0B60  1303               	bcf	3,6	;RP1=0, select bank0
  3032     0B61  0841               	movf	?_scale+3,w
  3033     0B62  1683               	bsf	3,5	;RP0=1, select bank1
  3034     0B63  1303               	bcf	3,6	;RP1=0, select bank1
  3035     0B64  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
  3036     0B65  1283               	bcf	3,5	;RP0=0, select bank0
  3037     0B66  1303               	bcf	3,6	;RP1=0, select bank0
  3038     0B67  0840               	movf	?_scale+2,w
  3039     0B68  1683               	bsf	3,5	;RP0=1, select bank1
  3040     0B69  1303               	bcf	3,6	;RP1=0, select bank1
  3041     0B6A  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
  3042     0B6B  1283               	bcf	3,5	;RP0=0, select bank0
  3043     0B6C  1303               	bcf	3,6	;RP1=0, select bank0
  3044     0B6D  083F               	movf	?_scale+1,w
  3045     0B6E  1683               	bsf	3,5	;RP0=1, select bank1
  3046     0B6F  1303               	bcf	3,6	;RP1=0, select bank1
  3047     0B70  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
  3048     0B71  1283               	bcf	3,5	;RP0=0, select bank0
  3049     0B72  1303               	bcf	3,6	;RP1=0, select bank0
  3050     0B73  083E               	movf	?_scale,w
  3051     0B74  1683               	bsf	3,5	;RP0=1, select bank1
  3052     0B75  1303               	bcf	3,6	;RP1=0, select bank1
  3053     0B76  00B3               	movwf	sprintf@tmpval^(0+128)
  3054     0B77                     l3795:
  3055     0B77  0840               	movf	(sprintf@fval+3)^(0+128),w
  3056     0B78  00F3               	movwf	__div_to_l_@f1+3
  3057     0B79  083F               	movf	(sprintf@fval+2)^(0+128),w
  3058     0B7A  00F2               	movwf	__div_to_l_@f1+2
  3059     0B7B  083E               	movf	(sprintf@fval+1)^(0+128),w
  3060     0B7C  00F1               	movwf	__div_to_l_@f1+1
  3061     0B7D  083D               	movf	sprintf@fval^(0+128),w
  3062     0B7E  00F0               	movwf	__div_to_l_@f1
  3063     0B7F  0836               	movf	(sprintf@tmpval+3)^(0+128),w
  3064     0B80  00F7               	movwf	__div_to_l_@f2+3
  3065     0B81  0835               	movf	(sprintf@tmpval+2)^(0+128),w
  3066     0B82  00F6               	movwf	__div_to_l_@f2+2
  3067     0B83  0834               	movf	(sprintf@tmpval+1)^(0+128),w
  3068     0B84  00F5               	movwf	__div_to_l_@f2+1
  3069     0B85  0833               	movf	sprintf@tmpval^(0+128),w
  3070     0B86  00F4               	movwf	__div_to_l_@f2
  3071     0B87  160A  118A  20F2  120A  158A  	fcall	__div_to_l_
  3072     0B8C  0873               	movf	?__div_to_l_+3,w
  3073     0B8D  1683               	bsf	3,5	;RP0=1, select bank1
  3074     0B8E  1303               	bcf	3,6	;RP1=0, select bank1
  3075     0B8F  00B2               	movwf	(sprintf@val+3)^(0+128)
  3076     0B90  0872               	movf	?__div_to_l_+2,w
  3077     0B91  00B1               	movwf	(sprintf@val+2)^(0+128)
  3078     0B92  0871               	movf	?__div_to_l_+1,w
  3079     0B93  00B0               	movwf	(sprintf@val+1)^(0+128)
  3080     0B94  0870               	movf	?__div_to_l_,w
  3081     0B95  00AF               	movwf	sprintf@val^(0+128)
  3082     0B96                     l3799:
  3083                           
  3084                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  3085     0B96  3000               	movlw	0
  3086     0B97  00C0               	movwf	(sprintf@fval+3)^(0+128)
  3087     0B98  3000               	movlw	0
  3088     0B99  00BF               	movwf	(sprintf@fval+2)^(0+128)
  3089     0B9A  3000               	movlw	0
  3090     0B9B  00BE               	movwf	(sprintf@fval+1)^(0+128)
  3091     0B9C  3000               	movlw	0
  3092     0B9D  00BD               	movwf	sprintf@fval^(0+128)
  3093                           
  3094                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  3095     0B9E  2C23               	goto	l3807
  3096     0B9F                     l3801:
  3097                           
  3098                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  3099     0B9F  1683               	bsf	3,5	;RP0=1, select bank1
  3100     0BA0  1303               	bcf	3,6	;RP1=0, select bank1
  3101     0BA1  0840               	movf	(sprintf@fval+3)^(0+128),w
  3102     0BA2  1283               	bcf	3,5	;RP0=0, select bank0
  3103     0BA3  1303               	bcf	3,6	;RP1=0, select bank0
  3104     0BA4  00D4               	movwf	___fltol@f1+3
  3105     0BA5  1683               	bsf	3,5	;RP0=1, select bank1
  3106     0BA6  1303               	bcf	3,6	;RP1=0, select bank1
  3107     0BA7  083F               	movf	(sprintf@fval+2)^(0+128),w
  3108     0BA8  1283               	bcf	3,5	;RP0=0, select bank0
  3109     0BA9  1303               	bcf	3,6	;RP1=0, select bank0
  3110     0BAA  00D3               	movwf	___fltol@f1+2
  3111     0BAB  1683               	bsf	3,5	;RP0=1, select bank1
  3112     0BAC  1303               	bcf	3,6	;RP1=0, select bank1
  3113     0BAD  083E               	movf	(sprintf@fval+1)^(0+128),w
  3114     0BAE  1283               	bcf	3,5	;RP0=0, select bank0
  3115     0BAF  1303               	bcf	3,6	;RP1=0, select bank0
  3116     0BB0  00D2               	movwf	___fltol@f1+1
  3117     0BB1  1683               	bsf	3,5	;RP0=1, select bank1
  3118     0BB2  1303               	bcf	3,6	;RP1=0, select bank1
  3119     0BB3  083D               	movf	sprintf@fval^(0+128),w
  3120     0BB4  1283               	bcf	3,5	;RP0=0, select bank0
  3121     0BB5  1303               	bcf	3,6	;RP1=0, select bank0
  3122     0BB6  00D1               	movwf	___fltol@f1
  3123     0BB7  120A  118A  20CA  120A  158A  	fcall	___fltol
  3124     0BBC  1283               	bcf	3,5	;RP0=0, select bank0
  3125     0BBD  1303               	bcf	3,6	;RP1=0, select bank0
  3126     0BBE  0854               	movf	?___fltol+3,w
  3127     0BBF  1683               	bsf	3,5	;RP0=1, select bank1
  3128     0BC0  1303               	bcf	3,6	;RP1=0, select bank1
  3129     0BC1  00B2               	movwf	(sprintf@val+3)^(0+128)
  3130     0BC2  1283               	bcf	3,5	;RP0=0, select bank0
  3131     0BC3  1303               	bcf	3,6	;RP1=0, select bank0
  3132     0BC4  0853               	movf	?___fltol+2,w
  3133     0BC5  1683               	bsf	3,5	;RP0=1, select bank1
  3134     0BC6  1303               	bcf	3,6	;RP1=0, select bank1
  3135     0BC7  00B1               	movwf	(sprintf@val+2)^(0+128)
  3136     0BC8  1283               	bcf	3,5	;RP0=0, select bank0
  3137     0BC9  1303               	bcf	3,6	;RP1=0, select bank0
  3138     0BCA  0852               	movf	?___fltol+1,w
  3139     0BCB  1683               	bsf	3,5	;RP0=1, select bank1
  3140     0BCC  1303               	bcf	3,6	;RP1=0, select bank1
  3141     0BCD  00B0               	movwf	(sprintf@val+1)^(0+128)
  3142     0BCE  1283               	bcf	3,5	;RP0=0, select bank0
  3143     0BCF  1303               	bcf	3,6	;RP1=0, select bank0
  3144     0BD0  0851               	movf	?___fltol,w
  3145     0BD1  1683               	bsf	3,5	;RP0=1, select bank1
  3146     0BD2  1303               	bcf	3,6	;RP1=0, select bank1
  3147     0BD3  00AF               	movwf	sprintf@val^(0+128)
  3148     0BD4                     l3803:
  3149                           
  3150                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  3151     0BD4  0832               	movf	(sprintf@val+3)^(0+128),w
  3152     0BD5  00F3               	movwf	___xxtofl@val+3
  3153     0BD6  0831               	movf	(sprintf@val+2)^(0+128),w
  3154     0BD7  00F2               	movwf	___xxtofl@val+2
  3155     0BD8  0830               	movf	(sprintf@val+1)^(0+128),w
  3156     0BD9  00F1               	movwf	___xxtofl@val+1
  3157     0BDA  082F               	movf	sprintf@val^(0+128),w
  3158     0BDB  00F0               	movwf	___xxtofl@val
  3159     0BDC  3000               	movlw	0
  3160     0BDD  160A  118A  203A  120A  158A  	fcall	___xxtofl
  3161     0BE2  0873               	movf	?___xxtofl+3,w
  3162     0BE3  1283               	bcf	3,5	;RP0=0, select bank0
  3163     0BE4  1303               	bcf	3,6	;RP1=0, select bank0
  3164     0BE5  00E9               	movwf	___flsub@a+3
  3165     0BE6  0872               	movf	?___xxtofl+2,w
  3166     0BE7  00E8               	movwf	___flsub@a+2
  3167     0BE8  0871               	movf	?___xxtofl+1,w
  3168     0BE9  00E7               	movwf	___flsub@a+1
  3169     0BEA  0870               	movf	?___xxtofl,w
  3170     0BEB  00E6               	movwf	___flsub@a
  3171     0BEC  1683               	bsf	3,5	;RP0=1, select bank1
  3172     0BED  1303               	bcf	3,6	;RP1=0, select bank1
  3173     0BEE  0840               	movf	(sprintf@fval+3)^(0+128),w
  3174     0BEF  1283               	bcf	3,5	;RP0=0, select bank0
  3175     0BF0  1303               	bcf	3,6	;RP1=0, select bank0
  3176     0BF1  00ED               	movwf	___flsub@b+3
  3177     0BF2  1683               	bsf	3,5	;RP0=1, select bank1
  3178     0BF3  1303               	bcf	3,6	;RP1=0, select bank1
  3179     0BF4  083F               	movf	(sprintf@fval+2)^(0+128),w
  3180     0BF5  1283               	bcf	3,5	;RP0=0, select bank0
  3181     0BF6  1303               	bcf	3,6	;RP1=0, select bank0
  3182     0BF7  00EC               	movwf	___flsub@b+2
  3183     0BF8  1683               	bsf	3,5	;RP0=1, select bank1
  3184     0BF9  1303               	bcf	3,6	;RP1=0, select bank1
  3185     0BFA  083E               	movf	(sprintf@fval+1)^(0+128),w
  3186     0BFB  1283               	bcf	3,5	;RP0=0, select bank0
  3187     0BFC  1303               	bcf	3,6	;RP1=0, select bank0
  3188     0BFD  00EB               	movwf	___flsub@b+1
  3189     0BFE  1683               	bsf	3,5	;RP0=1, select bank1
  3190     0BFF  1303               	bcf	3,6	;RP1=0, select bank1
  3191     0C00  083D               	movf	sprintf@fval^(0+128),w
  3192     0C01  1283               	bcf	3,5	;RP0=0, select bank0
  3193     0C02  1303               	bcf	3,6	;RP1=0, select bank0
  3194     0C03  00EA               	movwf	___flsub@b
  3195     0C04  160A  158A  210B  120A  158A  	fcall	___flsub
  3196     0C09  1283               	bcf	3,5	;RP0=0, select bank0
  3197     0C0A  1303               	bcf	3,6	;RP1=0, select bank0
  3198     0C0B  0869               	movf	?___flsub+3,w
  3199     0C0C  1683               	bsf	3,5	;RP0=1, select bank1
  3200     0C0D  1303               	bcf	3,6	;RP1=0, select bank1
  3201     0C0E  00C0               	movwf	(sprintf@fval+3)^(0+128)
  3202     0C0F  1283               	bcf	3,5	;RP0=0, select bank0
  3203     0C10  1303               	bcf	3,6	;RP1=0, select bank0
  3204     0C11  0868               	movf	?___flsub+2,w
  3205     0C12  1683               	bsf	3,5	;RP0=1, select bank1
  3206     0C13  1303               	bcf	3,6	;RP1=0, select bank1
  3207     0C14  00BF               	movwf	(sprintf@fval+2)^(0+128)
  3208     0C15  1283               	bcf	3,5	;RP0=0, select bank0
  3209     0C16  1303               	bcf	3,6	;RP1=0, select bank0
  3210     0C17  0867               	movf	?___flsub+1,w
  3211     0C18  1683               	bsf	3,5	;RP0=1, select bank1
  3212     0C19  1303               	bcf	3,6	;RP1=0, select bank1
  3213     0C1A  00BE               	movwf	(sprintf@fval+1)^(0+128)
  3214     0C1B  1283               	bcf	3,5	;RP0=0, select bank0
  3215     0C1C  1303               	bcf	3,6	;RP1=0, select bank0
  3216     0C1D  0866               	movf	?___flsub,w
  3217     0C1E  1683               	bsf	3,5	;RP0=1, select bank1
  3218     0C1F  1303               	bcf	3,6	;RP1=0, select bank1
  3219     0C20  00BD               	movwf	sprintf@fval^(0+128)
  3220     0C21                     l3805:
  3221                           
  3222                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  3223     0C21  01B7               	clrf	sprintf@eexp^(0+128)
  3224     0C22  01B8               	clrf	(sprintf@eexp+1)^(0+128)
  3225     0C23                     l3807:
  3226                           
  3227                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3228     0C23  01C4               	clrf	sprintf@c^(0+128)
  3229     0C24  0AC4               	incf	sprintf@c^(0+128),f
  3230     0C25                     l3813:
  3231                           
  3232                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  3233     0C25  0844               	movf	sprintf@c^(0+128),w
  3234     0C26  00A5               	movwf	??_sprintf^(0+128)
  3235     0C27  3001               	movlw	1
  3236     0C28                     u5885:
  3237     0C28  1003               	clrc
  3238     0C29  0DA5               	rlf	??_sprintf^(0+128),f
  3239     0C2A  3EFF               	addlw	-1
  3240     0C2B  1D03               	skipz
  3241     0C2C  2C28               	goto	u5885
  3242     0C2D  1003               	clrc
  3243     0C2E  0D25               	rlf	??_sprintf^(0+128),w
  3244     0C2F  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3245     0C30  0084               	movwf	4
  3246     0C31  120A  118A  200D  120A  158A  	fcall	stringdir
  3247     0C36  00A6               	movwf	(??_sprintf+1)^(0+128)
  3248     0C37  120A  118A  200D  120A  158A  	fcall	stringdir
  3249     0C3C  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  3250     0C3D  120A  118A  200D  120A  158A  	fcall	stringdir
  3251     0C42  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  3252     0C43  120A  118A  200D  120A  158A  	fcall	stringdir
  3253     0C48  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  3254     0C49  0829               	movf	(??_sprintf+4)^(0+128),w
  3255     0C4A  0232               	subwf	(sprintf@val+3)^(0+128),w
  3256     0C4B  1D03               	skipz
  3257     0C4C  2C57               	goto	u5895
  3258     0C4D  0828               	movf	(??_sprintf+3)^(0+128),w
  3259     0C4E  0231               	subwf	(sprintf@val+2)^(0+128),w
  3260     0C4F  1D03               	skipz
  3261     0C50  2C57               	goto	u5895
  3262     0C51  0827               	movf	(??_sprintf+2)^(0+128),w
  3263     0C52  0230               	subwf	(sprintf@val+1)^(0+128),w
  3264     0C53  1D03               	skipz
  3265     0C54  2C57               	goto	u5895
  3266     0C55  0826               	movf	(??_sprintf+1)^(0+128),w
  3267     0C56  022F               	subwf	sprintf@val^(0+128),w
  3268     0C57                     u5895:
  3269     0C57  1803               	skipnc
  3270     0C58  2C5A               	goto	u5891
  3271     0C59  2C5B               	goto	u5890
  3272     0C5A                     u5891:
  3273     0C5A  2C5C               	goto	l3817
  3274     0C5B                     u5890:
  3275     0C5B  2C66               	goto	l3819
  3276     0C5C                     l3817:
  3277     0C5C  3001               	movlw	1
  3278     0C5D  00A5               	movwf	??_sprintf^(0+128)
  3279     0C5E  0825               	movf	??_sprintf^(0+128),w
  3280     0C5F  07C4               	addwf	sprintf@c^(0+128),f
  3281     0C60  300A               	movlw	10
  3282     0C61  0644               	xorwf	sprintf@c^(0+128),w
  3283     0C62  1D03               	btfss	3,2
  3284     0C63  2C65               	goto	u5901
  3285     0C64  2C66               	goto	u5900
  3286     0C65                     u5901:
  3287     0C65  2C25               	goto	l3813
  3288     0C66                     u5900:
  3289     0C66                     l3819:
  3290                           
  3291                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  3292     0C66  0844               	movf	sprintf@c^(0+128),w
  3293     0C67  0741               	addwf	sprintf@prec^(0+128),w
  3294     0C68  00A5               	movwf	??_sprintf^(0+128)
  3295     0C69  0842               	movf	(sprintf@prec+1)^(0+128),w
  3296     0C6A  1803               	skipnc
  3297     0C6B  0A42               	incf	(sprintf@prec+1)^(0+128),w
  3298     0C6C  00A6               	movwf	(??_sprintf^(0+128)+1)
  3299     0C6D  0837               	movf	sprintf@eexp^(0+128),w
  3300     0C6E  0725               	addwf	??_sprintf^(0+128),w
  3301     0C6F  00A7               	movwf	(??_sprintf+2)^(0+128)
  3302     0C70  0838               	movf	(sprintf@eexp+1)^(0+128),w
  3303     0C71  1803               	skipnc
  3304     0C72  0A38               	incf	(sprintf@eexp+1)^(0+128),w
  3305     0C73  0726               	addwf	(??_sprintf+1)^(0+128),w
  3306     0C74  00A8               	movwf	(??_sprintf+3)^(0+128)
  3307     0C75  0827               	movf	(??_sprintf+2)^(0+128),w
  3308     0C76  02BB               	subwf	sprintf@width^(0+128),f
  3309     0C77  0828               	movf	(??_sprintf+3)^(0+128),w
  3310     0C78  1C03               	skipc
  3311     0C79  03BC               	decf	(sprintf@width+1)^(0+128),f
  3312     0C7A  02BC               	subwf	(sprintf@width+1)^(0+128),f
  3313                           
  3314                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1169:     if(
  3315     0C7B  0841               	movf	sprintf@prec^(0+128),w
  3316     0C7C  0442               	iorwf	(sprintf@prec+1)^(0+128),w
  3317     0C7D  1903               	btfsc	3,2
  3318     0C7E  2C80               	goto	u5911
  3319     0C7F  2C81               	goto	u5910
  3320     0C80                     u5911:
  3321     0C80  2C87               	goto	l3823
  3322     0C81                     u5910:
  3323     0C81                     l3821:
  3324                           
  3325                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  3326     0C81  30FF               	movlw	255
  3327     0C82  07BB               	addwf	sprintf@width^(0+128),f
  3328     0C83  1803               	skipnc
  3329     0C84  0ABC               	incf	(sprintf@width+1)^(0+128),f
  3330     0C85  30FF               	movlw	255
  3331     0C86  07BC               	addwf	(sprintf@width+1)^(0+128),f
  3332     0C87                     l3823:
  3333                           
  3334                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  3335     0C87  3003               	movlw	3
  3336     0C88  0539               	andwf	sprintf@flag^(0+128),w
  3337     0C89  00A5               	movwf	??_sprintf^(0+128)
  3338     0C8A  3000               	movlw	0
  3339     0C8B  053A               	andwf	(sprintf@flag+1)^(0+128),w
  3340     0C8C  00A6               	movwf	(??_sprintf+1)^(0+128)
  3341     0C8D  0825               	movf	??_sprintf^(0+128),w
  3342     0C8E  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3343     0C8F  1903               	btfsc	3,2
  3344     0C90  2C92               	goto	u5921
  3345     0C91  2C93               	goto	u5920
  3346     0C92                     u5921:
  3347     0C92  2C99               	goto	l3827
  3348     0C93                     u5920:
  3349     0C93                     l3825:
  3350                           
  3351                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  3352     0C93  30FF               	movlw	255
  3353     0C94  07BB               	addwf	sprintf@width^(0+128),f
  3354     0C95  1803               	skipnc
  3355     0C96  0ABC               	incf	(sprintf@width+1)^(0+128),f
  3356     0C97  30FF               	movlw	255
  3357     0C98  07BC               	addwf	(sprintf@width+1)^(0+128),f
  3358     0C99                     l3827:
  3359                           
  3360                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1179:     if(flag
      +                           & 0x04) {
  3361     0C99  1D39               	btfss	sprintf@flag^(0+128),2
  3362     0C9A  2C9C               	goto	u5931
  3363     0C9B  2C9D               	goto	u5930
  3364     0C9C                     u5931:
  3365     0C9C  2CE3               	goto	l3849
  3366     0C9D                     u5930:
  3367     0C9D                     l3829:
  3368                           
  3369                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1183:      if(fla
      +                          g & 0x03)
  3370     0C9D  3003               	movlw	3
  3371     0C9E  0539               	andwf	sprintf@flag^(0+128),w
  3372     0C9F  00A5               	movwf	??_sprintf^(0+128)
  3373     0CA0  3000               	movlw	0
  3374     0CA1  053A               	andwf	(sprintf@flag+1)^(0+128),w
  3375     0CA2  00A6               	movwf	(??_sprintf+1)^(0+128)
  3376     0CA3  0825               	movf	??_sprintf^(0+128),w
  3377     0CA4  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3378     0CA5  1903               	btfsc	3,2
  3379     0CA6  2CA8               	goto	u5941
  3380     0CA7  2CA9               	goto	u5940
  3381     0CA8                     u5941:
  3382     0CA8  2CC4               	goto	l3841
  3383     0CA9                     u5940:
  3384     0CA9                     l3831:
  3385                           
  3386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1185:       ((*sp
      +                          ++ = ('-')));
  3387     0CA9  0843               	movf	sprintf@sp^(0+128),w
  3388     0CAA  0084               	movwf	4
  3389     0CAB  302D               	movlw	45
  3390     0CAC  1783               	bsf	3,7	;select IRP bank2
  3391     0CAD  0080               	movwf	0
  3392     0CAE                     l3833:
  3393     0CAE  3001               	movlw	1
  3394     0CAF  00A5               	movwf	??_sprintf^(0+128)
  3395     0CB0  0825               	movf	??_sprintf^(0+128),w
  3396     0CB1  07C3               	addwf	sprintf@sp^(0+128),f
  3397     0CB2  2CC4               	goto	l3841
  3398     0CB3                     l3835:
  3399                           
  3400                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1195:       ((*sp
      +                          ++ = ('0')));
  3401     0CB3  1683               	bsf	3,5	;RP0=1, select bank1
  3402     0CB4  1303               	bcf	3,6	;RP1=0, select bank1
  3403     0CB5  0843               	movf	sprintf@sp^(0+128),w
  3404     0CB6  0084               	movwf	4
  3405     0CB7  3030               	movlw	48
  3406     0CB8  1783               	bsf	3,7	;select IRP bank2
  3407     0CB9  0080               	movwf	0
  3408     0CBA                     l3837:
  3409     0CBA  3001               	movlw	1
  3410     0CBB  00A5               	movwf	??_sprintf^(0+128)
  3411     0CBC  0825               	movf	??_sprintf^(0+128),w
  3412     0CBD  07C3               	addwf	sprintf@sp^(0+128),f
  3413     0CBE                     l3839:
  3414                           
  3415                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1196:       width
      +                          --;
  3416     0CBE  30FF               	movlw	255
  3417     0CBF  07BB               	addwf	sprintf@width^(0+128),f
  3418     0CC0  1803               	skipnc
  3419     0CC1  0ABC               	incf	(sprintf@width+1)^(0+128),f
  3420     0CC2  30FF               	movlw	255
  3421     0CC3  07BC               	addwf	(sprintf@width+1)^(0+128),f
  3422     0CC4                     l3841:
  3423                           
  3424                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1194:      while(
      +                          width > 0) {
  3425     0CC4  083C               	movf	(sprintf@width+1)^(0+128),w
  3426     0CC5  3A80               	xorlw	128
  3427     0CC6  00FF               	movwf	btemp+1
  3428     0CC7  3080               	movlw	128
  3429     0CC8  027F               	subwf	btemp+1,w
  3430     0CC9  1D03               	skipz
  3431     0CCA  2CCD               	goto	u5955
  3432     0CCB  3001               	movlw	1
  3433     0CCC  023B               	subwf	sprintf@width^(0+128),w
  3434     0CCD                     u5955:
  3435     0CCD  1803               	skipnc
  3436     0CCE  2CD0               	goto	u5951
  3437     0CCF  2CD1               	goto	u5950
  3438     0CD0                     u5951:
  3439     0CD0  2CB3               	goto	l3835
  3440     0CD1                     u5950:
  3441     0CD1  2D6C               	goto	l446
  3442     0CD2                     l3843:
  3443                           
  3444                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  3445     0CD2  1683               	bsf	3,5	;RP0=1, select bank1
  3446     0CD3  1303               	bcf	3,6	;RP1=0, select bank1
  3447     0CD4  0843               	movf	sprintf@sp^(0+128),w
  3448     0CD5  0084               	movwf	4
  3449     0CD6  3020               	movlw	32
  3450     0CD7  1783               	bsf	3,7	;select IRP bank2
  3451     0CD8  0080               	movwf	0
  3452     0CD9                     l3845:
  3453     0CD9  3001               	movlw	1
  3454     0CDA  00A5               	movwf	??_sprintf^(0+128)
  3455     0CDB  0825               	movf	??_sprintf^(0+128),w
  3456     0CDC  07C3               	addwf	sprintf@sp^(0+128),f
  3457     0CDD                     l3847:
  3458                           
  3459                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1208:       width
      +                          --;
  3460     0CDD  30FF               	movlw	255
  3461     0CDE  07BB               	addwf	sprintf@width^(0+128),f
  3462     0CDF  1803               	skipnc
  3463     0CE0  0ABC               	incf	(sprintf@width+1)^(0+128),f
  3464     0CE1  30FF               	movlw	255
  3465     0CE2  07BC               	addwf	(sprintf@width+1)^(0+128),f
  3466     0CE3                     l3849:
  3467                           
  3468                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  3469     0CE3  083C               	movf	(sprintf@width+1)^(0+128),w
  3470     0CE4  3A80               	xorlw	128
  3471     0CE5  00FF               	movwf	btemp+1
  3472     0CE6  3080               	movlw	128
  3473     0CE7  027F               	subwf	btemp+1,w
  3474     0CE8  1D03               	skipz
  3475     0CE9  2CEC               	goto	u5965
  3476     0CEA  3001               	movlw	1
  3477     0CEB  023B               	subwf	sprintf@width^(0+128),w
  3478     0CEC                     u5965:
  3479     0CEC  1803               	skipnc
  3480     0CED  2CEF               	goto	u5961
  3481     0CEE  2CF0               	goto	u5960
  3482     0CEF                     u5961:
  3483     0CEF  2CD2               	goto	l3843
  3484     0CF0                     u5960:
  3485     0CF0                     l3851:
  3486                           
  3487                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  3488     0CF0  3003               	movlw	3
  3489     0CF1  1683               	bsf	3,5	;RP0=1, select bank1
  3490     0CF2  1303               	bcf	3,6	;RP1=0, select bank1
  3491     0CF3  0539               	andwf	sprintf@flag^(0+128),w
  3492     0CF4  00A5               	movwf	??_sprintf^(0+128)
  3493     0CF5  3000               	movlw	0
  3494     0CF6  053A               	andwf	(sprintf@flag+1)^(0+128),w
  3495     0CF7  00A6               	movwf	(??_sprintf+1)^(0+128)
  3496     0CF8  0825               	movf	??_sprintf^(0+128),w
  3497     0CF9  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3498     0CFA  1903               	btfsc	3,2
  3499     0CFB  2CFD               	goto	u5971
  3500     0CFC  2CFE               	goto	u5970
  3501     0CFD                     u5971:
  3502     0CFD  2D6C               	goto	l446
  3503     0CFE                     u5970:
  3504     0CFE                     l3853:
  3505                           
  3506                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3507     0CFE  0843               	movf	sprintf@sp^(0+128),w
  3508     0CFF  0084               	movwf	4
  3509     0D00  302D               	movlw	45
  3510     0D01  1783               	bsf	3,7	;select IRP bank2
  3511     0D02  0080               	movwf	0
  3512     0D03                     l3855:
  3513     0D03  3001               	movlw	1
  3514     0D04  00A5               	movwf	??_sprintf^(0+128)
  3515     0D05  0825               	movf	??_sprintf^(0+128),w
  3516     0D06  07C3               	addwf	sprintf@sp^(0+128),f
  3517     0D07  2D6C               	goto	l446
  3518     0D08                     l3857:
  3519                           
  3520                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3521     0D08  0844               	movf	sprintf@c^(0+128),w
  3522     0D09  00A5               	movwf	??_sprintf^(0+128)
  3523     0D0A  3001               	movlw	1
  3524     0D0B                     u5985:
  3525     0D0B  1003               	clrc
  3526     0D0C  0DA5               	rlf	??_sprintf^(0+128),f
  3527     0D0D  3EFF               	addlw	-1
  3528     0D0E  1D03               	skipz
  3529     0D0F  2D0B               	goto	u5985
  3530     0D10  1003               	clrc
  3531     0D11  0D25               	rlf	??_sprintf^(0+128),w
  3532     0D12  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3533     0D13  0084               	movwf	4
  3534     0D14  120A  118A  200D  120A  158A  	fcall	stringdir
  3535     0D19  00F0               	movwf	___lldiv@divisor
  3536     0D1A  120A  118A  200D  120A  158A  	fcall	stringdir
  3537     0D1F  00F1               	movwf	___lldiv@divisor+1
  3538     0D20  120A  118A  200D  120A  158A  	fcall	stringdir
  3539     0D25  00F2               	movwf	___lldiv@divisor+2
  3540     0D26  120A  118A  200D  120A  158A  	fcall	stringdir
  3541     0D2B  00F3               	movwf	___lldiv@divisor+3
  3542     0D2C  0832               	movf	(sprintf@val+3)^(0+128),w
  3543     0D2D  00F7               	movwf	___lldiv@dividend+3
  3544     0D2E  0831               	movf	(sprintf@val+2)^(0+128),w
  3545     0D2F  00F6               	movwf	___lldiv@dividend+2
  3546     0D30  0830               	movf	(sprintf@val+1)^(0+128),w
  3547     0D31  00F5               	movwf	___lldiv@dividend+1
  3548     0D32  082F               	movf	sprintf@val^(0+128),w
  3549     0D33  00F4               	movwf	___lldiv@dividend
  3550     0D34  160A  158A  2376  120A  158A  	fcall	___lldiv
  3551     0D39  0873               	movf	?___lldiv+3,w
  3552     0D3A  1683               	bsf	3,5	;RP0=1, select bank1
  3553     0D3B  1303               	bcf	3,6	;RP1=0, select bank1
  3554     0D3C  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
  3555     0D3D  0872               	movf	?___lldiv+2,w
  3556     0D3E  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
  3557     0D3F  0871               	movf	?___lldiv+1,w
  3558     0D40  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
  3559     0D41  0870               	movf	?___lldiv,w
  3560     0D42  00B3               	movwf	sprintf@tmpval^(0+128)
  3561     0D43                     l3859:
  3562                           
  3563                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3564     0D43  3000               	movlw	0
  3565     0D44  00F3               	movwf	___llmod@divisor+3
  3566     0D45  3000               	movlw	0
  3567     0D46  00F2               	movwf	___llmod@divisor+2
  3568     0D47  3000               	movlw	0
  3569     0D48  00F1               	movwf	___llmod@divisor+1
  3570     0D49  300A               	movlw	10
  3571     0D4A  00F0               	movwf	___llmod@divisor
  3572     0D4B  0836               	movf	(sprintf@tmpval+3)^(0+128),w
  3573     0D4C  00F7               	movwf	___llmod@dividend+3
  3574     0D4D  0835               	movf	(sprintf@tmpval+2)^(0+128),w
  3575     0D4E  00F6               	movwf	___llmod@dividend+2
  3576     0D4F  0834               	movf	(sprintf@tmpval+1)^(0+128),w
  3577     0D50  00F5               	movwf	___llmod@dividend+1
  3578     0D51  0833               	movf	sprintf@tmpval^(0+128),w
  3579     0D52  00F4               	movwf	___llmod@dividend
  3580     0D53  160A  158A  22C9  120A  158A  	fcall	___llmod
  3581     0D58  0873               	movf	?___llmod+3,w
  3582     0D59  1683               	bsf	3,5	;RP0=1, select bank1
  3583     0D5A  1303               	bcf	3,6	;RP1=0, select bank1
  3584     0D5B  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
  3585     0D5C  0872               	movf	?___llmod+2,w
  3586     0D5D  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
  3587     0D5E  0871               	movf	?___llmod+1,w
  3588     0D5F  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
  3589     0D60  0870               	movf	?___llmod,w
  3590     0D61  00B3               	movwf	sprintf@tmpval^(0+128)
  3591     0D62                     l3861:
  3592                           
  3593                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3594     0D62  0843               	movf	sprintf@sp^(0+128),w
  3595     0D63  0084               	movwf	4
  3596     0D64  0833               	movf	sprintf@tmpval^(0+128),w
  3597     0D65  3E30               	addlw	48
  3598     0D66  1783               	bsf	3,7	;select IRP bank2
  3599     0D67  0080               	movwf	0
  3600     0D68  3001               	movlw	1
  3601     0D69  00A5               	movwf	??_sprintf^(0+128)
  3602     0D6A  0825               	movf	??_sprintf^(0+128),w
  3603     0D6B  07C3               	addwf	sprintf@sp^(0+128),f
  3604     0D6C                     l446:	
  3605                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1232:    }
  3606                           
  3607                           
  3608                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3609     0D6C  3001               	movlw	1
  3610     0D6D  1683               	bsf	3,5	;RP0=1, select bank1
  3611     0D6E  1303               	bcf	3,6	;RP1=0, select bank1
  3612     0D6F  02C4               	subwf	sprintf@c^(0+128),f
  3613     0D70  0A44               	incf	sprintf@c^(0+128),w
  3614     0D71  1D03               	btfss	3,2
  3615     0D72  2D74               	goto	u5991
  3616     0D73  2D75               	goto	u5990
  3617     0D74                     u5991:
  3618     0D74  2D08               	goto	l3857
  3619     0D75                     u5990:
  3620     0D75  2D87               	goto	l3869
  3621     0D76                     l3863:
  3622                           
  3623                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3624     0D76  1683               	bsf	3,5	;RP0=1, select bank1
  3625     0D77  1303               	bcf	3,6	;RP1=0, select bank1
  3626     0D78  0843               	movf	sprintf@sp^(0+128),w
  3627     0D79  0084               	movwf	4
  3628     0D7A  3030               	movlw	48
  3629     0D7B  1783               	bsf	3,7	;select IRP bank2
  3630     0D7C  0080               	movwf	0
  3631     0D7D                     l3865:
  3632     0D7D  3001               	movlw	1
  3633     0D7E  00A5               	movwf	??_sprintf^(0+128)
  3634     0D7F  0825               	movf	??_sprintf^(0+128),w
  3635     0D80  07C3               	addwf	sprintf@sp^(0+128),f
  3636     0D81                     l3867:
  3637                           
  3638                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3639     0D81  30FF               	movlw	255
  3640     0D82  07B7               	addwf	sprintf@eexp^(0+128),f
  3641     0D83  1803               	skipnc
  3642     0D84  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  3643     0D85  30FF               	movlw	255
  3644     0D86  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  3645     0D87                     l3869:
  3646                           
  3647                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3648     0D87  0838               	movf	(sprintf@eexp+1)^(0+128),w
  3649     0D88  3A80               	xorlw	128
  3650     0D89  00FF               	movwf	btemp+1
  3651     0D8A  3080               	movlw	128
  3652     0D8B  027F               	subwf	btemp+1,w
  3653     0D8C  1D03               	skipz
  3654     0D8D  2D90               	goto	u6005
  3655     0D8E  3001               	movlw	1
  3656     0D8F  0237               	subwf	sprintf@eexp^(0+128),w
  3657     0D90                     u6005:
  3658     0D90  1803               	skipnc
  3659     0D91  2D93               	goto	u6001
  3660     0D92  2D94               	goto	u6000
  3661     0D93                     u6001:
  3662     0D93  2D76               	goto	l3863
  3663     0D94                     u6000:
  3664     0D94                     l3871:
  3665                           
  3666                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3667     0D94  1683               	bsf	3,5	;RP0=1, select bank1
  3668     0D95  1303               	bcf	3,6	;RP1=0, select bank1
  3669     0D96  0842               	movf	(sprintf@prec+1)^(0+128),w
  3670     0D97  3A80               	xorlw	128
  3671     0D98  00FF               	movwf	btemp+1
  3672     0D99  3080               	movlw	128
  3673     0D9A  027F               	subwf	btemp+1,w
  3674     0D9B  1D03               	skipz
  3675     0D9C  2D9F               	goto	u6015
  3676     0D9D  3009               	movlw	9
  3677     0D9E  0241               	subwf	sprintf@prec^(0+128),w
  3678     0D9F                     u6015:
  3679     0D9F  1C03               	skipc
  3680     0DA0  2DA2               	goto	u6011
  3681     0DA1  2DA3               	goto	u6010
  3682     0DA2                     u6011:
  3683     0DA2  2DA8               	goto	l3875
  3684     0DA3                     u6010:
  3685     0DA3                     l3873:
  3686                           
  3687                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3688     0DA3  3008               	movlw	8
  3689     0DA4  1683               	bsf	3,5	;RP0=1, select bank1
  3690     0DA5  1303               	bcf	3,6	;RP1=0, select bank1
  3691     0DA6  00C4               	movwf	sprintf@c^(0+128)
  3692     0DA7  2DAC               	goto	l453
  3693     0DA8                     l3875:
  3694                           
  3695                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3696     0DA8  1683               	bsf	3,5	;RP0=1, select bank1
  3697     0DA9  1303               	bcf	3,6	;RP1=0, select bank1
  3698     0DAA  0841               	movf	sprintf@prec^(0+128),w
  3699     0DAB  00C4               	movwf	sprintf@c^(0+128)
  3700     0DAC                     l453:
  3701                           
  3702                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3703     0DAC  0844               	movf	sprintf@c^(0+128),w
  3704     0DAD  00A5               	movwf	??_sprintf^(0+128)
  3705     0DAE  01A6               	clrf	(??_sprintf^(0+128)+1)
  3706     0DAF  0825               	movf	??_sprintf^(0+128),w
  3707     0DB0  02C1               	subwf	sprintf@prec^(0+128),f
  3708     0DB1  0826               	movf	(??_sprintf+1)^(0+128),w
  3709     0DB2  1C03               	skipc
  3710     0DB3  03C2               	decf	(sprintf@prec+1)^(0+128),f
  3711     0DB4  02C2               	subwf	(sprintf@prec+1)^(0+128),f
  3712     0DB5                     l3877:
  3713                           
  3714                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3715     0DB5  0844               	movf	sprintf@c^(0+128),w
  3716     0DB6  1903               	btfsc	3,2
  3717     0DB7  2DB9               	goto	u6021
  3718     0DB8  2DBA               	goto	u6020
  3719     0DB9                     u6021:
  3720     0DB9  2DC3               	goto	l3883
  3721     0DBA                     u6020:
  3722     0DBA                     l3879:
  3723                           
  3724                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3725     0DBA  0843               	movf	sprintf@sp^(0+128),w
  3726     0DBB  0084               	movwf	4
  3727     0DBC  302E               	movlw	46
  3728     0DBD  1783               	bsf	3,7	;select IRP bank2
  3729     0DBE  0080               	movwf	0
  3730     0DBF                     l3881:
  3731     0DBF  3001               	movlw	1
  3732     0DC0  00A5               	movwf	??_sprintf^(0+128)
  3733     0DC1  0825               	movf	??_sprintf^(0+128),w
  3734     0DC2  07C3               	addwf	sprintf@sp^(0+128),f
  3735     0DC3                     l3883:
  3736                           
  3737                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3738     0DC3  0844               	movf	sprintf@c^(0+128),w
  3739     0DC4  120A  118A  2487  120A  158A  	fcall	_scale
  3740     0DC9  1283               	bcf	3,5	;RP0=0, select bank0
  3741     0DCA  1303               	bcf	3,6	;RP1=0, select bank0
  3742     0DCB  0841               	movf	?_scale+3,w
  3743     0DCC  1683               	bsf	3,5	;RP0=1, select bank1
  3744     0DCD  1303               	bcf	3,6	;RP1=0, select bank1
  3745     0DCE  00AD               	movwf	(_sprintf$1126+3)^(0+128)
  3746     0DCF  1283               	bcf	3,5	;RP0=0, select bank0
  3747     0DD0  1303               	bcf	3,6	;RP1=0, select bank0
  3748     0DD1  0840               	movf	?_scale+2,w
  3749     0DD2  1683               	bsf	3,5	;RP0=1, select bank1
  3750     0DD3  1303               	bcf	3,6	;RP1=0, select bank1
  3751     0DD4  00AC               	movwf	(_sprintf$1126+2)^(0+128)
  3752     0DD5  1283               	bcf	3,5	;RP0=0, select bank0
  3753     0DD6  1303               	bcf	3,6	;RP1=0, select bank0
  3754     0DD7  083F               	movf	?_scale+1,w
  3755     0DD8  1683               	bsf	3,5	;RP0=1, select bank1
  3756     0DD9  1303               	bcf	3,6	;RP1=0, select bank1
  3757     0DDA  00AB               	movwf	(_sprintf$1126+1)^(0+128)
  3758     0DDB  1283               	bcf	3,5	;RP0=0, select bank0
  3759     0DDC  1303               	bcf	3,6	;RP1=0, select bank0
  3760     0DDD  083E               	movf	?_scale,w
  3761     0DDE  1683               	bsf	3,5	;RP0=1, select bank1
  3762     0DDF  1303               	bcf	3,6	;RP1=0, select bank1
  3763     0DE0  00AA               	movwf	_sprintf$1126^(0+128)
  3764     0DE1                     l3885:
  3765                           
  3766                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3767     0DE1  082D               	movf	(_sprintf$1126+3)^(0+128),w
  3768     0DE2  1283               	bcf	3,5	;RP0=0, select bank0
  3769     0DE3  1303               	bcf	3,6	;RP1=0, select bank0
  3770     0DE4  00AB               	movwf	___flmul@a+3
  3771     0DE5  1683               	bsf	3,5	;RP0=1, select bank1
  3772     0DE6  1303               	bcf	3,6	;RP1=0, select bank1
  3773     0DE7  082C               	movf	(_sprintf$1126+2)^(0+128),w
  3774     0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  3775     0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  3776     0DEA  00AA               	movwf	___flmul@a+2
  3777     0DEB  1683               	bsf	3,5	;RP0=1, select bank1
  3778     0DEC  1303               	bcf	3,6	;RP1=0, select bank1
  3779     0DED  082B               	movf	(_sprintf$1126+1)^(0+128),w
  3780     0DEE  1283               	bcf	3,5	;RP0=0, select bank0
  3781     0DEF  1303               	bcf	3,6	;RP1=0, select bank0
  3782     0DF0  00A9               	movwf	___flmul@a+1
  3783     0DF1  1683               	bsf	3,5	;RP0=1, select bank1
  3784     0DF2  1303               	bcf	3,6	;RP1=0, select bank1
  3785     0DF3  082A               	movf	_sprintf$1126^(0+128),w
  3786     0DF4  1283               	bcf	3,5	;RP0=0, select bank0
  3787     0DF5  1303               	bcf	3,6	;RP1=0, select bank0
  3788     0DF6  00A8               	movwf	___flmul@a
  3789     0DF7  1683               	bsf	3,5	;RP0=1, select bank1
  3790     0DF8  1303               	bcf	3,6	;RP1=0, select bank1
  3791     0DF9  0840               	movf	(sprintf@fval+3)^(0+128),w
  3792     0DFA  1283               	bcf	3,5	;RP0=0, select bank0
  3793     0DFB  1303               	bcf	3,6	;RP1=0, select bank0
  3794     0DFC  00A7               	movwf	___flmul@b+3
  3795     0DFD  1683               	bsf	3,5	;RP0=1, select bank1
  3796     0DFE  1303               	bcf	3,6	;RP1=0, select bank1
  3797     0DFF  083F               	movf	(sprintf@fval+2)^(0+128),w
  3798     0E00  1283               	bcf	3,5	;RP0=0, select bank0
  3799     0E01  1303               	bcf	3,6	;RP1=0, select bank0
  3800     0E02  00A6               	movwf	___flmul@b+2
  3801     0E03  1683               	bsf	3,5	;RP0=1, select bank1
  3802     0E04  1303               	bcf	3,6	;RP1=0, select bank1
  3803     0E05  083E               	movf	(sprintf@fval+1)^(0+128),w
  3804     0E06  1283               	bcf	3,5	;RP0=0, select bank0
  3805     0E07  1303               	bcf	3,6	;RP1=0, select bank0
  3806     0E08  00A5               	movwf	___flmul@b+1
  3807     0E09  1683               	bsf	3,5	;RP0=1, select bank1
  3808     0E0A  1303               	bcf	3,6	;RP1=0, select bank1
  3809     0E0B  083D               	movf	sprintf@fval^(0+128),w
  3810     0E0C  1283               	bcf	3,5	;RP0=0, select bank0
  3811     0E0D  1303               	bcf	3,6	;RP1=0, select bank0
  3812     0E0E  00A4               	movwf	___flmul@b
  3813     0E0F  120A  118A  2142  120A  158A  	fcall	___flmul
  3814     0E14  1283               	bcf	3,5	;RP0=0, select bank0
  3815     0E15  1303               	bcf	3,6	;RP1=0, select bank0
  3816     0E16  0827               	movf	?___flmul+3,w
  3817     0E17  00D4               	movwf	___fltol@f1+3
  3818     0E18  0826               	movf	?___flmul+2,w
  3819     0E19  00D3               	movwf	___fltol@f1+2
  3820     0E1A  0825               	movf	?___flmul+1,w
  3821     0E1B  00D2               	movwf	___fltol@f1+1
  3822     0E1C  0824               	movf	?___flmul,w
  3823     0E1D  00D1               	movwf	___fltol@f1
  3824     0E1E  120A  118A  20CA  120A  158A  	fcall	___fltol
  3825     0E23  1283               	bcf	3,5	;RP0=0, select bank0
  3826     0E24  1303               	bcf	3,6	;RP1=0, select bank0
  3827     0E25  0854               	movf	?___fltol+3,w
  3828     0E26  1683               	bsf	3,5	;RP0=1, select bank1
  3829     0E27  1303               	bcf	3,6	;RP1=0, select bank1
  3830     0E28  00B2               	movwf	(sprintf@val+3)^(0+128)
  3831     0E29  1283               	bcf	3,5	;RP0=0, select bank0
  3832     0E2A  1303               	bcf	3,6	;RP1=0, select bank0
  3833     0E2B  0853               	movf	?___fltol+2,w
  3834     0E2C  1683               	bsf	3,5	;RP0=1, select bank1
  3835     0E2D  1303               	bcf	3,6	;RP1=0, select bank1
  3836     0E2E  00B1               	movwf	(sprintf@val+2)^(0+128)
  3837     0E2F  1283               	bcf	3,5	;RP0=0, select bank0
  3838     0E30  1303               	bcf	3,6	;RP1=0, select bank0
  3839     0E31  0852               	movf	?___fltol+1,w
  3840     0E32  1683               	bsf	3,5	;RP0=1, select bank1
  3841     0E33  1303               	bcf	3,6	;RP1=0, select bank1
  3842     0E34  00B0               	movwf	(sprintf@val+1)^(0+128)
  3843     0E35  1283               	bcf	3,5	;RP0=0, select bank0
  3844     0E36  1303               	bcf	3,6	;RP1=0, select bank0
  3845     0E37  0851               	movf	?___fltol,w
  3846     0E38  1683               	bsf	3,5	;RP0=1, select bank1
  3847     0E39  1303               	bcf	3,6	;RP1=0, select bank1
  3848     0E3A  00AF               	movwf	sprintf@val^(0+128)
  3849                           
  3850                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3851     0E3B  2EDB               	goto	l3895
  3852     0E3C                     l3887:
  3853                           
  3854                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3855     0E3C  0844               	movf	sprintf@c^(0+128),w
  3856     0E3D  00A5               	movwf	??_sprintf^(0+128)
  3857     0E3E  3001               	movlw	1
  3858     0E3F                     u6035:
  3859     0E3F  1003               	clrc
  3860     0E40  0DA5               	rlf	??_sprintf^(0+128),f
  3861     0E41  3EFF               	addlw	-1
  3862     0E42  1D03               	skipz
  3863     0E43  2E3F               	goto	u6035
  3864     0E44  1003               	clrc
  3865     0E45  0D25               	rlf	??_sprintf^(0+128),w
  3866     0E46  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3867     0E47  0084               	movwf	4
  3868     0E48  120A  118A  200D  120A  158A  	fcall	stringdir
  3869     0E4D  00F0               	movwf	___lldiv@divisor
  3870     0E4E  120A  118A  200D  120A  158A  	fcall	stringdir
  3871     0E53  00F1               	movwf	___lldiv@divisor+1
  3872     0E54  120A  118A  200D  120A  158A  	fcall	stringdir
  3873     0E59  00F2               	movwf	___lldiv@divisor+2
  3874     0E5A  120A  118A  200D  120A  158A  	fcall	stringdir
  3875     0E5F  00F3               	movwf	___lldiv@divisor+3
  3876     0E60  0832               	movf	(sprintf@val+3)^(0+128),w
  3877     0E61  00F7               	movwf	___lldiv@dividend+3
  3878     0E62  0831               	movf	(sprintf@val+2)^(0+128),w
  3879     0E63  00F6               	movwf	___lldiv@dividend+2
  3880     0E64  0830               	movf	(sprintf@val+1)^(0+128),w
  3881     0E65  00F5               	movwf	___lldiv@dividend+1
  3882     0E66  082F               	movf	sprintf@val^(0+128),w
  3883     0E67  00F4               	movwf	___lldiv@dividend
  3884     0E68  160A  158A  2376  120A  158A  	fcall	___lldiv
  3885     0E6D  0873               	movf	?___lldiv+3,w
  3886     0E6E  1683               	bsf	3,5	;RP0=1, select bank1
  3887     0E6F  1303               	bcf	3,6	;RP1=0, select bank1
  3888     0E70  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
  3889     0E71  0872               	movf	?___lldiv+2,w
  3890     0E72  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
  3891     0E73  0871               	movf	?___lldiv+1,w
  3892     0E74  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
  3893     0E75  0870               	movf	?___lldiv,w
  3894     0E76  00B3               	movwf	sprintf@tmpval^(0+128)
  3895     0E77                     l3889:
  3896                           
  3897                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3898     0E77  3000               	movlw	0
  3899     0E78  00F3               	movwf	___llmod@divisor+3
  3900     0E79  3000               	movlw	0
  3901     0E7A  00F2               	movwf	___llmod@divisor+2
  3902     0E7B  3000               	movlw	0
  3903     0E7C  00F1               	movwf	___llmod@divisor+1
  3904     0E7D  300A               	movlw	10
  3905     0E7E  00F0               	movwf	___llmod@divisor
  3906     0E7F  0836               	movf	(sprintf@tmpval+3)^(0+128),w
  3907     0E80  00F7               	movwf	___llmod@dividend+3
  3908     0E81  0835               	movf	(sprintf@tmpval+2)^(0+128),w
  3909     0E82  00F6               	movwf	___llmod@dividend+2
  3910     0E83  0834               	movf	(sprintf@tmpval+1)^(0+128),w
  3911     0E84  00F5               	movwf	___llmod@dividend+1
  3912     0E85  0833               	movf	sprintf@tmpval^(0+128),w
  3913     0E86  00F4               	movwf	___llmod@dividend
  3914     0E87  160A  158A  22C9  120A  158A  	fcall	___llmod
  3915     0E8C  0873               	movf	?___llmod+3,w
  3916     0E8D  1683               	bsf	3,5	;RP0=1, select bank1
  3917     0E8E  1303               	bcf	3,6	;RP1=0, select bank1
  3918     0E8F  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
  3919     0E90  0872               	movf	?___llmod+2,w
  3920     0E91  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
  3921     0E92  0871               	movf	?___llmod+1,w
  3922     0E93  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
  3923     0E94  0870               	movf	?___llmod,w
  3924     0E95  00B3               	movwf	sprintf@tmpval^(0+128)
  3925     0E96                     l3891:
  3926                           
  3927                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3928     0E96  0843               	movf	sprintf@sp^(0+128),w
  3929     0E97  0084               	movwf	4
  3930     0E98  0833               	movf	sprintf@tmpval^(0+128),w
  3931     0E99  3E30               	addlw	48
  3932     0E9A  1783               	bsf	3,7	;select IRP bank2
  3933     0E9B  0080               	movwf	0
  3934     0E9C  3001               	movlw	1
  3935     0E9D  00A5               	movwf	??_sprintf^(0+128)
  3936     0E9E  0825               	movf	??_sprintf^(0+128),w
  3937     0E9F  07C3               	addwf	sprintf@sp^(0+128),f
  3938     0EA0                     l3893:
  3939                           
  3940                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3941     0EA0  0844               	movf	sprintf@c^(0+128),w
  3942     0EA1  00A5               	movwf	??_sprintf^(0+128)
  3943     0EA2  3001               	movlw	1
  3944     0EA3                     u6045:
  3945     0EA3  1003               	clrc
  3946     0EA4  0DA5               	rlf	??_sprintf^(0+128),f
  3947     0EA5  3EFF               	addlw	-1
  3948     0EA6  1D03               	skipz
  3949     0EA7  2EA3               	goto	u6045
  3950     0EA8  1003               	clrc
  3951     0EA9  0D25               	rlf	??_sprintf^(0+128),w
  3952     0EAA  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3953     0EAB  0084               	movwf	4
  3954     0EAC  120A  118A  200D  120A  158A  	fcall	stringdir
  3955     0EB1  00F0               	movwf	___llmod@divisor
  3956     0EB2  120A  118A  200D  120A  158A  	fcall	stringdir
  3957     0EB7  00F1               	movwf	___llmod@divisor+1
  3958     0EB8  120A  118A  200D  120A  158A  	fcall	stringdir
  3959     0EBD  00F2               	movwf	___llmod@divisor+2
  3960     0EBE  120A  118A  200D  120A  158A  	fcall	stringdir
  3961     0EC3  00F3               	movwf	___llmod@divisor+3
  3962     0EC4  0832               	movf	(sprintf@val+3)^(0+128),w
  3963     0EC5  00F7               	movwf	___llmod@dividend+3
  3964     0EC6  0831               	movf	(sprintf@val+2)^(0+128),w
  3965     0EC7  00F6               	movwf	___llmod@dividend+2
  3966     0EC8  0830               	movf	(sprintf@val+1)^(0+128),w
  3967     0EC9  00F5               	movwf	___llmod@dividend+1
  3968     0ECA  082F               	movf	sprintf@val^(0+128),w
  3969     0ECB  00F4               	movwf	___llmod@dividend
  3970     0ECC  160A  158A  22C9  120A  158A  	fcall	___llmod
  3971     0ED1  0873               	movf	?___llmod+3,w
  3972     0ED2  1683               	bsf	3,5	;RP0=1, select bank1
  3973     0ED3  1303               	bcf	3,6	;RP1=0, select bank1
  3974     0ED4  00B2               	movwf	(sprintf@val+3)^(0+128)
  3975     0ED5  0872               	movf	?___llmod+2,w
  3976     0ED6  00B1               	movwf	(sprintf@val+2)^(0+128)
  3977     0ED7  0871               	movf	?___llmod+1,w
  3978     0ED8  00B0               	movwf	(sprintf@val+1)^(0+128)
  3979     0ED9  0870               	movf	?___llmod,w
  3980     0EDA  00AF               	movwf	sprintf@val^(0+128)
  3981     0EDB                     l3895:
  3982                           
  3983                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3984     0EDB  3001               	movlw	1
  3985     0EDC  02C4               	subwf	sprintf@c^(0+128),f
  3986     0EDD  0A44               	incf	sprintf@c^(0+128),w
  3987     0EDE  1D03               	btfss	3,2
  3988     0EDF  2EE1               	goto	u6051
  3989     0EE0  2EE2               	goto	u6050
  3990     0EE1                     u6051:
  3991     0EE1  2E3C               	goto	l3887
  3992     0EE2                     u6050:
  3993     0EE2  2EF2               	goto	l3903
  3994     0EE3                     l3897:
  3995                           
  3996                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3997     0EE3  0843               	movf	sprintf@sp^(0+128),w
  3998     0EE4  0084               	movwf	4
  3999     0EE5  3030               	movlw	48
  4000     0EE6  1783               	bsf	3,7	;select IRP bank2
  4001     0EE7  0080               	movwf	0
  4002     0EE8                     l3899:
  4003     0EE8  3001               	movlw	1
  4004     0EE9  00A5               	movwf	??_sprintf^(0+128)
  4005     0EEA  0825               	movf	??_sprintf^(0+128),w
  4006     0EEB  07C3               	addwf	sprintf@sp^(0+128),f
  4007     0EEC                     l3901:
  4008                           
  4009                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  4010     0EEC  30FF               	movlw	255
  4011     0EED  07C1               	addwf	sprintf@prec^(0+128),f
  4012     0EEE  1803               	skipnc
  4013     0EEF  0AC2               	incf	(sprintf@prec+1)^(0+128),f
  4014     0EF0  30FF               	movlw	255
  4015     0EF1  07C2               	addwf	(sprintf@prec+1)^(0+128),f
  4016     0EF2                     l3903:
  4017                           
  4018                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  4019     0EF2  0841               	movf	sprintf@prec^(0+128),w
  4020     0EF3  0442               	iorwf	(sprintf@prec+1)^(0+128),w
  4021     0EF4  1D03               	btfss	3,2
  4022     0EF5  2EF7               	goto	u6061
  4023     0EF6  2EF8               	goto	u6060
  4024     0EF7                     u6061:
  4025     0EF7  2EE3               	goto	l3897
  4026     0EF8                     u6060:
  4027     0EF8  2FEB               	goto	l3967
  4028     0EF9                     l3905:
  4029                           
  4030                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  4031     0EF9  0841               	movf	sprintf@prec^(0+128),w
  4032     0EFA  0442               	iorwf	(sprintf@prec+1)^(0+128),w
  4033     0EFB  1D03               	btfss	3,2
  4034     0EFC  2EFE               	goto	u6071
  4035     0EFD  2EFF               	goto	u6070
  4036     0EFE                     u6071:
  4037     0EFE  2F0D               	goto	l461
  4038     0EFF                     u6070:
  4039     0EFF                     l3907:
  4040     0EFF  0832               	movf	(sprintf@val+3)^(0+128),w
  4041     0F00  0431               	iorwf	(sprintf@val+2)^(0+128),w
  4042     0F01  0430               	iorwf	(sprintf@val+1)^(0+128),w
  4043     0F02  042F               	iorwf	sprintf@val^(0+128),w
  4044     0F03  1D03               	skipz
  4045     0F04  2F06               	goto	u6081
  4046     0F05  2F07               	goto	u6080
  4047     0F06                     u6081:
  4048     0F06  2F0D               	goto	l461
  4049     0F07                     u6080:
  4050     0F07                     l3909:
  4051                           
  4052                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  4053     0F07  3001               	movlw	1
  4054     0F08  07C1               	addwf	sprintf@prec^(0+128),f
  4055     0F09  1803               	skipnc
  4056     0F0A  0AC2               	incf	(sprintf@prec+1)^(0+128),f
  4057     0F0B  3000               	movlw	0
  4058     0F0C  07C2               	addwf	(sprintf@prec+1)^(0+128),f
  4059     0F0D                     l461:
  4060                           
  4061                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  4062     0F0D  0842               	movf	(sprintf@prec+1)^(0+128),w
  4063     0F0E  3A80               	xorlw	128
  4064     0F0F  3C80               	sublw	128
  4065     0F10  1D03               	skipz
  4066     0F11  2F14               	goto	u6095
  4067     0F12  0841               	movf	sprintf@prec^(0+128),w
  4068     0F13  0244               	subwf	sprintf@c^(0+128),w
  4069     0F14                     u6095:
  4070     0F14  1803               	skipnc
  4071     0F15  2F17               	goto	u6091
  4072     0F16  2F18               	goto	u6090
  4073     0F17                     u6091:
  4074     0F17  2F1D               	goto	l3913
  4075     0F18                     u6090:
  4076     0F18                     l3911:
  4077                           
  4078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  4079     0F18  1683               	bsf	3,5	;RP0=1, select bank1
  4080     0F19  1303               	bcf	3,6	;RP1=0, select bank1
  4081     0F1A  0841               	movf	sprintf@prec^(0+128),w
  4082     0F1B  00C4               	movwf	sprintf@c^(0+128)
  4083     0F1C  2F35               	goto	l3917
  4084     0F1D                     l3913:
  4085     0F1D  1683               	bsf	3,5	;RP0=1, select bank1
  4086     0F1E  1303               	bcf	3,6	;RP1=0, select bank1
  4087     0F1F  0842               	movf	(sprintf@prec+1)^(0+128),w
  4088     0F20  3A80               	xorlw	128
  4089     0F21  00A5               	movwf	??_sprintf^(0+128)
  4090     0F22  3080               	movlw	128
  4091     0F23  0225               	subwf	??_sprintf^(0+128),w
  4092     0F24  1D03               	skipz
  4093     0F25  2F28               	goto	u6105
  4094     0F26  0844               	movf	sprintf@c^(0+128),w
  4095     0F27  0241               	subwf	sprintf@prec^(0+128),w
  4096     0F28                     u6105:
  4097     0F28  1803               	skipnc
  4098     0F29  2F2B               	goto	u6101
  4099     0F2A  2F2C               	goto	u6100
  4100     0F2B                     u6101:
  4101     0F2B  2F35               	goto	l3917
  4102     0F2C                     u6100:
  4103     0F2C                     l3915:
  4104                           
  4105                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  4106     0F2C  1683               	bsf	3,5	;RP0=1, select bank1
  4107     0F2D  1303               	bcf	3,6	;RP1=0, select bank1
  4108     0F2E  0844               	movf	sprintf@c^(0+128),w
  4109     0F2F  00A5               	movwf	??_sprintf^(0+128)
  4110     0F30  01A6               	clrf	(??_sprintf^(0+128)+1)
  4111     0F31  0825               	movf	??_sprintf^(0+128),w
  4112     0F32  00C1               	movwf	sprintf@prec^(0+128)
  4113     0F33  0826               	movf	(??_sprintf+1)^(0+128),w
  4114     0F34  00C2               	movwf	(sprintf@prec+1)^(0+128)
  4115     0F35                     l3917:
  4116                           
  4117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  4118     0F35  1683               	bsf	3,5	;RP0=1, select bank1
  4119     0F36  1303               	bcf	3,6	;RP1=0, select bank1
  4120     0F37  083B               	movf	sprintf@width^(0+128),w
  4121     0F38  043C               	iorwf	(sprintf@width+1)^(0+128),w
  4122     0F39  1903               	btfsc	3,2
  4123     0F3A  2F3C               	goto	u6111
  4124     0F3B  2F3D               	goto	u6110
  4125     0F3C                     u6111:
  4126     0F3C  2F4F               	goto	l3923
  4127     0F3D                     u6110:
  4128     0F3D                     l3919:
  4129     0F3D  3003               	movlw	3
  4130     0F3E  0539               	andwf	sprintf@flag^(0+128),w
  4131     0F3F  00A5               	movwf	??_sprintf^(0+128)
  4132     0F40  3000               	movlw	0
  4133     0F41  053A               	andwf	(sprintf@flag+1)^(0+128),w
  4134     0F42  00A6               	movwf	(??_sprintf+1)^(0+128)
  4135     0F43  0825               	movf	??_sprintf^(0+128),w
  4136     0F44  0426               	iorwf	(??_sprintf^(0+128)+1),w
  4137     0F45  1903               	btfsc	3,2
  4138     0F46  2F48               	goto	u6121
  4139     0F47  2F49               	goto	u6120
  4140     0F48                     u6121:
  4141     0F48  2F4F               	goto	l3923
  4142     0F49                     u6120:
  4143     0F49                     l3921:
  4144                           
  4145                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1372:    width--;
  4146     0F49  30FF               	movlw	255
  4147     0F4A  07BB               	addwf	sprintf@width^(0+128),f
  4148     0F4B  1803               	skipnc
  4149     0F4C  0ABC               	incf	(sprintf@width+1)^(0+128),f
  4150     0F4D  30FF               	movlw	255
  4151     0F4E  07BC               	addwf	(sprintf@width+1)^(0+128),f
  4152     0F4F                     l3923:
  4153                           
  4154                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
  4155     0F4F  1F3A               	btfss	(sprintf@flag+1)^(0+128),6
  4156     0F50  2F52               	goto	u6131
  4157     0F51  2F53               	goto	u6130
  4158     0F52                     u6131:
  4159     0F52  2F6E               	goto	l3931
  4160     0F53                     u6130:
  4161     0F53                     l3925:
  4162                           
  4163                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
  4164     0F53  0842               	movf	(sprintf@prec+1)^(0+128),w
  4165     0F54  3A80               	xorlw	128
  4166     0F55  00A5               	movwf	??_sprintf^(0+128)
  4167     0F56  083C               	movf	(sprintf@width+1)^(0+128),w
  4168     0F57  3A80               	xorlw	128
  4169     0F58  0225               	subwf	??_sprintf^(0+128),w
  4170     0F59  1D03               	skipz
  4171     0F5A  2F5D               	goto	u6145
  4172     0F5B  083B               	movf	sprintf@width^(0+128),w
  4173     0F5C  0241               	subwf	sprintf@prec^(0+128),w
  4174     0F5D                     u6145:
  4175     0F5D  1803               	skipnc
  4176     0F5E  2F60               	goto	u6141
  4177     0F5F  2F61               	goto	u6140
  4178     0F60                     u6141:
  4179     0F60  2F6A               	goto	l3929
  4180     0F61                     u6140:
  4181     0F61                     l3927:
  4182                           
  4183                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
  4184     0F61  1683               	bsf	3,5	;RP0=1, select bank1
  4185     0F62  1303               	bcf	3,6	;RP1=0, select bank1
  4186     0F63  0841               	movf	sprintf@prec^(0+128),w
  4187     0F64  02BB               	subwf	sprintf@width^(0+128),f
  4188     0F65  0842               	movf	(sprintf@prec+1)^(0+128),w
  4189     0F66  1C03               	skipc
  4190     0F67  03BC               	decf	(sprintf@width+1)^(0+128),f
  4191     0F68  02BC               	subwf	(sprintf@width+1)^(0+128),f
  4192     0F69  2F6E               	goto	l3931
  4193     0F6A                     l3929:
  4194                           
  4195                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
  4196     0F6A  1683               	bsf	3,5	;RP0=1, select bank1
  4197     0F6B  1303               	bcf	3,6	;RP1=0, select bank1
  4198     0F6C  01BB               	clrf	sprintf@width^(0+128)
  4199     0F6D  01BC               	clrf	(sprintf@width+1)^(0+128)
  4200     0F6E                     l3931:
  4201                           
  4202                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  4203     0F6E  083C               	movf	(sprintf@width+1)^(0+128),w
  4204     0F6F  3A80               	xorlw	128
  4205     0F70  3C80               	sublw	128
  4206     0F71  1D03               	skipz
  4207     0F72  2F75               	goto	u6155
  4208     0F73  083B               	movf	sprintf@width^(0+128),w
  4209     0F74  0244               	subwf	sprintf@c^(0+128),w
  4210     0F75                     u6155:
  4211     0F75  1803               	skipnc
  4212     0F76  2F78               	goto	u6151
  4213     0F77  2F79               	goto	u6150
  4214     0F78                     u6151:
  4215     0F78  2F85               	goto	l3935
  4216     0F79                     u6150:
  4217     0F79                     l3933:
  4218                           
  4219                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  4220     0F79  1683               	bsf	3,5	;RP0=1, select bank1
  4221     0F7A  1303               	bcf	3,6	;RP1=0, select bank1
  4222     0F7B  0844               	movf	sprintf@c^(0+128),w
  4223     0F7C  00A5               	movwf	??_sprintf^(0+128)
  4224     0F7D  01A6               	clrf	(??_sprintf^(0+128)+1)
  4225     0F7E  0825               	movf	??_sprintf^(0+128),w
  4226     0F7F  02BB               	subwf	sprintf@width^(0+128),f
  4227     0F80  0826               	movf	(??_sprintf+1)^(0+128),w
  4228     0F81  1C03               	skipc
  4229     0F82  03BC               	decf	(sprintf@width+1)^(0+128),f
  4230     0F83  02BC               	subwf	(sprintf@width+1)^(0+128),f
  4231     0F84  2F89               	goto	l3937
  4232     0F85                     l3935:
  4233                           
  4234                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  4235     0F85  1683               	bsf	3,5	;RP0=1, select bank1
  4236     0F86  1303               	bcf	3,6	;RP1=0, select bank1
  4237     0F87  01BB               	clrf	sprintf@width^(0+128)
  4238     0F88  01BC               	clrf	(sprintf@width+1)^(0+128)
  4239     0F89                     l3937:
  4240                           
  4241                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  4242     0F89  1D39               	btfss	sprintf@flag^(0+128),2
  4243     0F8A  2F8C               	goto	u6161
  4244     0F8B  2F8D               	goto	u6160
  4245     0F8C                     u6161:
  4246     0F8C  2FBE               	goto	l3953
  4247     0F8D                     u6160:
  4248     0F8D                     l3939:
  4249                           
  4250                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
  4251     0F8D  3003               	movlw	3
  4252     0F8E  0539               	andwf	sprintf@flag^(0+128),w
  4253     0F8F  00A5               	movwf	??_sprintf^(0+128)
  4254     0F90  3000               	movlw	0
  4255     0F91  053A               	andwf	(sprintf@flag+1)^(0+128),w
  4256     0F92  00A6               	movwf	(??_sprintf+1)^(0+128)
  4257     0F93  0825               	movf	??_sprintf^(0+128),w
  4258     0F94  0426               	iorwf	(??_sprintf^(0+128)+1),w
  4259     0F95  1903               	btfsc	3,2
  4260     0F96  2F98               	goto	u6171
  4261     0F97  2F99               	goto	u6170
  4262     0F98                     u6171:
  4263     0F98  2FA2               	goto	l3945
  4264     0F99                     u6170:
  4265     0F99                     l3941:
  4266                           
  4267                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
  4268     0F99  0843               	movf	sprintf@sp^(0+128),w
  4269     0F9A  0084               	movwf	4
  4270     0F9B  302D               	movlw	45
  4271     0F9C  1783               	bsf	3,7	;select IRP bank2
  4272     0F9D  0080               	movwf	0
  4273     0F9E                     l3943:
  4274     0F9E  3001               	movlw	1
  4275     0F9F  00A5               	movwf	??_sprintf^(0+128)
  4276     0FA0  0825               	movf	??_sprintf^(0+128),w
  4277     0FA1  07C3               	addwf	sprintf@sp^(0+128),f
  4278     0FA2                     l3945:
  4279                           
  4280                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  4281     0FA2  083B               	movf	sprintf@width^(0+128),w
  4282     0FA3  043C               	iorwf	(sprintf@width+1)^(0+128),w
  4283     0FA4  1903               	btfsc	3,2
  4284     0FA5  2FA7               	goto	u6181
  4285     0FA6  2FA8               	goto	u6180
  4286     0FA7                     u6181:
  4287     0FA7  2FEB               	goto	l3967
  4288     0FA8                     u6180:
  4289     0FA8                     l3947:
  4290                           
  4291                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  4292     0FA8  0843               	movf	sprintf@sp^(0+128),w
  4293     0FA9  0084               	movwf	4
  4294     0FAA  3030               	movlw	48
  4295     0FAB  1783               	bsf	3,7	;select IRP bank2
  4296     0FAC  0080               	movwf	0
  4297     0FAD                     l3949:
  4298     0FAD  3001               	movlw	1
  4299     0FAE  00A5               	movwf	??_sprintf^(0+128)
  4300     0FAF  0825               	movf	??_sprintf^(0+128),w
  4301     0FB0  07C3               	addwf	sprintf@sp^(0+128),f
  4302     0FB1                     l3951:
  4303     0FB1  30FF               	movlw	255
  4304     0FB2  07BB               	addwf	sprintf@width^(0+128),f
  4305     0FB3  1803               	skipnc
  4306     0FB4  0ABC               	incf	(sprintf@width+1)^(0+128),f
  4307     0FB5  30FF               	movlw	255
  4308     0FB6  07BC               	addwf	(sprintf@width+1)^(0+128),f
  4309     0FB7  083B               	movf	sprintf@width^(0+128),w
  4310     0FB8  043C               	iorwf	(sprintf@width+1)^(0+128),w
  4311     0FB9  1D03               	btfss	3,2
  4312     0FBA  2FBC               	goto	u6191
  4313     0FBB  2FBD               	goto	u6190
  4314     0FBC                     u6191:
  4315     0FBC  2FA8               	goto	l3947
  4316     0FBD                     u6190:
  4317     0FBD  2FEB               	goto	l3967
  4318     0FBE                     l3953:
  4319                           
  4320                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1450:    if(width
  4321     0FBE  083B               	movf	sprintf@width^(0+128),w
  4322     0FBF  043C               	iorwf	(sprintf@width+1)^(0+128),w
  4323     0FC0  1903               	btfsc	3,2
  4324     0FC1  2FC3               	goto	u6201
  4325     0FC2  2FC4               	goto	u6200
  4326     0FC3                     u6201:
  4327     0FC3  2FD9               	goto	l3961
  4328     0FC4                     u6200:
  4329     0FC4                     l3955:
  4330                           
  4331                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  4332     0FC4  0843               	movf	sprintf@sp^(0+128),w
  4333     0FC5  0084               	movwf	4
  4334     0FC6  3020               	movlw	32
  4335     0FC7  1783               	bsf	3,7	;select IRP bank2
  4336     0FC8  0080               	movwf	0
  4337     0FC9                     l3957:
  4338     0FC9  3001               	movlw	1
  4339     0FCA  00A5               	movwf	??_sprintf^(0+128)
  4340     0FCB  0825               	movf	??_sprintf^(0+128),w
  4341     0FCC  07C3               	addwf	sprintf@sp^(0+128),f
  4342     0FCD                     l3959:
  4343     0FCD  30FF               	movlw	255
  4344     0FCE  07BB               	addwf	sprintf@width^(0+128),f
  4345     0FCF  1803               	skipnc
  4346     0FD0  0ABC               	incf	(sprintf@width+1)^(0+128),f
  4347     0FD1  30FF               	movlw	255
  4348     0FD2  07BC               	addwf	(sprintf@width+1)^(0+128),f
  4349     0FD3  083B               	movf	sprintf@width^(0+128),w
  4350     0FD4  043C               	iorwf	(sprintf@width+1)^(0+128),w
  4351     0FD5  1D03               	btfss	3,2
  4352     0FD6  2FD8               	goto	u6211
  4353     0FD7  2FD9               	goto	u6210
  4354     0FD8                     u6211:
  4355     0FD8  2FC4               	goto	l3955
  4356     0FD9                     u6210:
  4357     0FD9                     l3961:
  4358                           
  4359                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  4360     0FD9  3003               	movlw	3
  4361     0FDA  0539               	andwf	sprintf@flag^(0+128),w
  4362     0FDB  00A5               	movwf	??_sprintf^(0+128)
  4363     0FDC  3000               	movlw	0
  4364     0FDD  053A               	andwf	(sprintf@flag+1)^(0+128),w
  4365     0FDE  00A6               	movwf	(??_sprintf+1)^(0+128)
  4366     0FDF  0825               	movf	??_sprintf^(0+128),w
  4367     0FE0  0426               	iorwf	(??_sprintf^(0+128)+1),w
  4368     0FE1  1903               	btfsc	3,2
  4369     0FE2  2FE4               	goto	u6221
  4370     0FE3  2FE5               	goto	u6220
  4371     0FE4                     u6221:
  4372     0FE4  2FEB               	goto	l3967
  4373     0FE5                     u6220:
  4374     0FE5                     l3963:
  4375                           
  4376                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  4377     0FE5  0843               	movf	sprintf@sp^(0+128),w
  4378     0FE6  0084               	movwf	4
  4379     0FE7  302D               	movlw	45
  4380     0FE8  1783               	bsf	3,7	;select IRP bank2
  4381     0FE9  0080               	movwf	0
  4382     0FEA  2827               	goto	l3685
  4383     0FEB                     l3967:
  4384                           
  4385                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4386     0FEB  3001               	movlw	1
  4387     0FEC  07A0               	addwf	sprintf@f^(0+128),f
  4388     0FED  30FF               	movlw	-1
  4389     0FEE  0720               	addwf	sprintf@f^(0+128),w
  4390     0FEF  0084               	movwf	4
  4391     0FF0  120A  118A  200D  120A  158A  	fcall	stringdir
  4392     0FF5  00C4               	movwf	sprintf@c^(0+128)
  4393     0FF6  0844               	movf	sprintf@c^(0+128),w
  4394     0FF7  1D03               	btfss	3,2
  4395     0FF8  2FFA               	goto	u6231
  4396     0FF9  2FFB               	goto	u6230
  4397     0FFA                     u6231:
  4398     0FFA  281C               	goto	l3681
  4399     0FFB                     u6230:
  4400     0FFB                     l3969:
  4401                           
  4402                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4403     0FFB  0843               	movf	sprintf@sp^(0+128),w
  4404     0FFC  0084               	movwf	4
  4405     0FFD  1783               	bsf	3,7	;select IRP bank2
  4406     0FFE  0180               	clrf	0
  4407     0FFF                     l482:
  4408     0FFF  0008               	return
  4409     1000                     __end_of_sprintf:
  4410                           
  4411                           	psect	text2
  4412     0487                     __ptext2:	
  4413 ;; *************** function _scale *****************
  4414 ;; Defined at:
  4415 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;  scl             1    wreg     char 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;  scl             1   48[BANK0 ] char 
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  4   30[BANK0 ] char 
  4422 ;; Registers used:
  4423 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4429 ;;      Params:         0       4       0       0       0
  4430 ;;      Locals:         0       5       0       0       0
  4431 ;;      Temps:          0      10       0       0       0
  4432 ;;      Totals:         0      19       0       0       0
  4433 ;;Total ram usage:       19 bytes
  4434 ;; Hardware stack levels used: 1
  4435 ;; Hardware stack levels required when called: 2
  4436 ;; This function calls:
  4437 ;;		___awdiv
  4438 ;;		___awmod
  4439 ;;		___flmul
  4440 ;; This function is called by:
  4441 ;;		_sprintf
  4442 ;; This function uses a non-reentrant model
  4443 ;;
  4444                           
  4445     0487                     _scale:	
  4446                           ;psect for function _scale
  4447                           
  4448                           
  4449                           ;incstack = 0
  4450                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4451                           ;scale@scl stored from wreg
  4452     0487  1283               	bcf	3,5	;RP0=0, select bank0
  4453     0488  1303               	bcf	3,6	;RP1=0, select bank0
  4454     0489  00D0               	movwf	scale@scl
  4455     048A                     l3281:
  4456                           
  4457                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  4458     048A  1FD0               	btfss	scale@scl,7
  4459     048B  2C8D               	goto	u4691
  4460     048C  2C8E               	goto	u4690
  4461     048D                     u4691:
  4462     048D  2E3B               	goto	l3303
  4463     048E                     u4690:
  4464     048E                     l3283:
  4465                           
  4466                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  4467     048E  09D0               	comf	scale@scl,f
  4468     048F  0AD0               	incf	scale@scl,f
  4469     0490                     l3285:
  4470                           
  4471                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  4472     0490  0850               	movf	scale@scl,w
  4473     0491  3A80               	xorlw	128
  4474     0492  3E12               	addlw	-238
  4475     0493  1C03               	skipc
  4476     0494  2C96               	goto	u4701
  4477     0495  2C97               	goto	u4700
  4478     0496                     u4701:
  4479     0496  2D7F               	goto	l3293
  4480     0497                     u4700:
  4481     0497                     l3287:
  4482                           
  4483                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4484     0497  300A               	movlw	10
  4485     0498  00F7               	movwf	___awdiv@divisor
  4486     0499  3000               	movlw	0
  4487     049A  00F8               	movwf	___awdiv@divisor+1
  4488     049B  0850               	movf	scale@scl,w
  4489     049C  00F2               	movwf	___awmod@dividend
  4490     049D  01F3               	clrf	___awmod@dividend+1
  4491     049E  1BF2               	btfsc	___awmod@dividend,7
  4492     049F  03F3               	decf	___awmod@dividend+1,f
  4493     04A0  3064               	movlw	100
  4494     04A1  00F0               	movwf	___awmod@divisor
  4495     04A2  3000               	movlw	0
  4496     04A3  00F1               	movwf	___awmod@divisor+1
  4497     04A4  160A  158A  231D  120A  118A  	fcall	___awmod
  4498     04A9  0871               	movf	?___awmod+1,w
  4499     04AA  00FA               	movwf	___awdiv@dividend+1
  4500     04AB  0870               	movf	?___awmod,w
  4501     04AC  00F9               	movwf	___awdiv@dividend
  4502     04AD  160A  158A  23DC  120A  118A  	fcall	___awdiv
  4503     04B2  0877               	movf	?___awdiv,w
  4504     04B3  1283               	bcf	3,5	;RP0=0, select bank0
  4505     04B4  1303               	bcf	3,6	;RP1=0, select bank0
  4506     04B5  00C2               	movwf	??_scale
  4507     04B6  3001               	movlw	1
  4508     04B7                     u4715:
  4509     04B7  1003               	clrc
  4510     04B8  0DC2               	rlf	??_scale,f
  4511     04B9  3EFF               	addlw	-1
  4512     04BA  1D03               	skipz
  4513     04BB  2CB7               	goto	u4715
  4514     04BC  1003               	clrc
  4515     04BD  0D42               	rlf	??_scale,w
  4516     04BE  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4517     04BF  0084               	movwf	4
  4518     04C0  120A  118A  200D  120A  118A  	fcall	stringdir
  4519     04C5  00C3               	movwf	??_scale+1
  4520     04C6  120A  118A  200D  120A  118A  	fcall	stringdir
  4521     04CB  00C4               	movwf	??_scale+2
  4522     04CC  120A  118A  200D  120A  118A  	fcall	stringdir
  4523     04D1  00C5               	movwf	??_scale+3
  4524     04D2  120A  118A  200D  120A  118A  	fcall	stringdir
  4525     04D7  00C6               	movwf	??_scale+4
  4526     04D8  0846               	movf	??_scale+4,w
  4527     04D9  00A7               	movwf	___flmul@b+3
  4528     04DA  0845               	movf	??_scale+3,w
  4529     04DB  00A6               	movwf	___flmul@b+2
  4530     04DC  0844               	movf	??_scale+2,w
  4531     04DD  00A5               	movwf	___flmul@b+1
  4532     04DE  0843               	movf	??_scale+1,w
  4533     04DF  00A4               	movwf	___flmul@b
  4534     04E0  3064               	movlw	100
  4535     04E1  00F7               	movwf	___awdiv@divisor
  4536     04E2  3000               	movlw	0
  4537     04E3  00F8               	movwf	___awdiv@divisor+1
  4538     04E4  0850               	movf	scale@scl,w
  4539     04E5  00F9               	movwf	___awdiv@dividend
  4540     04E6  01FA               	clrf	___awdiv@dividend+1
  4541     04E7  1BF9               	btfsc	___awdiv@dividend,7
  4542     04E8  03FA               	decf	___awdiv@dividend+1,f
  4543     04E9  160A  158A  23DC  120A  118A  	fcall	___awdiv
  4544     04EE  0877               	movf	?___awdiv,w
  4545     04EF  1283               	bcf	3,5	;RP0=0, select bank0
  4546     04F0  1303               	bcf	3,6	;RP1=0, select bank0
  4547     04F1  00C7               	movwf	??_scale+5
  4548     04F2  3001               	movlw	1
  4549     04F3                     u4725:
  4550     04F3  1003               	clrc
  4551     04F4  0DC7               	rlf	??_scale+5,f
  4552     04F5  3EFF               	addlw	-1
  4553     04F6  1D03               	skipz
  4554     04F7  2CF3               	goto	u4725
  4555     04F8  1003               	clrc
  4556     04F9  0D47               	rlf	??_scale+5,w
  4557     04FA  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4558     04FB  0084               	movwf	4
  4559     04FC  120A  118A  200D  120A  118A  	fcall	stringdir
  4560     0501  00C8               	movwf	??_scale+6
  4561     0502  120A  118A  200D  120A  118A  	fcall	stringdir
  4562     0507  00C9               	movwf	??_scale+7
  4563     0508  120A  118A  200D  120A  118A  	fcall	stringdir
  4564     050D  00CA               	movwf	??_scale+8
  4565     050E  120A  118A  200D  120A  118A  	fcall	stringdir
  4566     0513  00CB               	movwf	??_scale+9
  4567     0514  084B               	movf	??_scale+9,w
  4568     0515  00AB               	movwf	___flmul@a+3
  4569     0516  084A               	movf	??_scale+8,w
  4570     0517  00AA               	movwf	___flmul@a+2
  4571     0518  0849               	movf	??_scale+7,w
  4572     0519  00A9               	movwf	___flmul@a+1
  4573     051A  0848               	movf	??_scale+6,w
  4574     051B  00A8               	movwf	___flmul@a
  4575     051C  120A  118A  2142  120A  118A  	fcall	___flmul
  4576     0521  1283               	bcf	3,5	;RP0=0, select bank0
  4577     0522  1303               	bcf	3,6	;RP1=0, select bank0
  4578     0523  0827               	movf	?___flmul+3,w
  4579     0524  00CF               	movwf	_scale$1125+3
  4580     0525  0826               	movf	?___flmul+2,w
  4581     0526  00CE               	movwf	_scale$1125+2
  4582     0527  0825               	movf	?___flmul+1,w
  4583     0528  00CD               	movwf	_scale$1125+1
  4584     0529  0824               	movf	?___flmul,w
  4585     052A  00CC               	movwf	_scale$1125
  4586                           
  4587                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4588     052B  300A               	movlw	10
  4589     052C  00F0               	movwf	___awmod@divisor
  4590     052D  3000               	movlw	0
  4591     052E  00F1               	movwf	___awmod@divisor+1
  4592     052F  0850               	movf	scale@scl,w
  4593     0530  00F2               	movwf	___awmod@dividend
  4594     0531  01F3               	clrf	___awmod@dividend+1
  4595     0532  1BF2               	btfsc	___awmod@dividend,7
  4596     0533  03F3               	decf	___awmod@dividend+1,f
  4597     0534  160A  158A  231D  120A  118A  	fcall	___awmod
  4598     0539  0870               	movf	?___awmod,w
  4599     053A  1283               	bcf	3,5	;RP0=0, select bank0
  4600     053B  1303               	bcf	3,6	;RP1=0, select bank0
  4601     053C  00C2               	movwf	??_scale
  4602     053D  3001               	movlw	1
  4603     053E                     u4735:
  4604     053E  1003               	clrc
  4605     053F  0DC2               	rlf	??_scale,f
  4606     0540  3EFF               	addlw	-1
  4607     0541  1D03               	skipz
  4608     0542  2D3E               	goto	u4735
  4609     0543  1003               	clrc
  4610     0544  0D42               	rlf	??_scale,w
  4611     0545  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4612     0546  0084               	movwf	4
  4613     0547  120A  118A  200D  120A  118A  	fcall	stringdir
  4614     054C  00C3               	movwf	??_scale+1
  4615     054D  120A  118A  200D  120A  118A  	fcall	stringdir
  4616     0552  00C4               	movwf	??_scale+2
  4617     0553  120A  118A  200D  120A  118A  	fcall	stringdir
  4618     0558  00C5               	movwf	??_scale+3
  4619     0559  120A  118A  200D  120A  118A  	fcall	stringdir
  4620     055E  00C6               	movwf	??_scale+4
  4621     055F  0846               	movf	??_scale+4,w
  4622     0560  00A7               	movwf	___flmul@b+3
  4623     0561  0845               	movf	??_scale+3,w
  4624     0562  00A6               	movwf	___flmul@b+2
  4625     0563  0844               	movf	??_scale+2,w
  4626     0564  00A5               	movwf	___flmul@b+1
  4627     0565  0843               	movf	??_scale+1,w
  4628     0566  00A4               	movwf	___flmul@b
  4629     0567  084F               	movf	_scale$1125+3,w
  4630     0568  00AB               	movwf	___flmul@a+3
  4631     0569  084E               	movf	_scale$1125+2,w
  4632     056A  00AA               	movwf	___flmul@a+2
  4633     056B  084D               	movf	_scale$1125+1,w
  4634     056C  00A9               	movwf	___flmul@a+1
  4635     056D  084C               	movf	_scale$1125,w
  4636     056E  00A8               	movwf	___flmul@a
  4637     056F  120A  118A  2142  120A  118A  	fcall	___flmul
  4638     0574  1283               	bcf	3,5	;RP0=0, select bank0
  4639     0575  1303               	bcf	3,6	;RP1=0, select bank0
  4640     0576  0827               	movf	?___flmul+3,w
  4641     0577  00C1               	movwf	?_scale+3
  4642     0578  0826               	movf	?___flmul+2,w
  4643     0579  00C0               	movwf	?_scale+2
  4644     057A  0825               	movf	?___flmul+1,w
  4645     057B  00BF               	movwf	?_scale+1
  4646     057C  0824               	movf	?___flmul,w
  4647     057D  00BE               	movwf	?_scale
  4648     057E  2FE5               	goto	l381
  4649     057F                     l3293:
  4650     057F  0850               	movf	scale@scl,w
  4651     0580  3A80               	xorlw	128
  4652     0581  3E75               	addlw	-139
  4653     0582  1C03               	skipc
  4654     0583  2D85               	goto	u4741
  4655     0584  2D86               	goto	u4740
  4656     0585                     u4741:
  4657     0585  2E0E               	goto	l3299
  4658     0586                     u4740:
  4659     0586                     l3295:
  4660                           
  4661                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4662     0586  300A               	movlw	10
  4663     0587  00F0               	movwf	___awmod@divisor
  4664     0588  3000               	movlw	0
  4665     0589  00F1               	movwf	___awmod@divisor+1
  4666     058A  0850               	movf	scale@scl,w
  4667     058B  00F2               	movwf	___awmod@dividend
  4668     058C  01F3               	clrf	___awmod@dividend+1
  4669     058D  1BF2               	btfsc	___awmod@dividend,7
  4670     058E  03F3               	decf	___awmod@dividend+1,f
  4671     058F  160A  158A  231D  120A  118A  	fcall	___awmod
  4672     0594  0870               	movf	?___awmod,w
  4673     0595  1283               	bcf	3,5	;RP0=0, select bank0
  4674     0596  1303               	bcf	3,6	;RP1=0, select bank0
  4675     0597  00C2               	movwf	??_scale
  4676     0598  3001               	movlw	1
  4677     0599                     u4755:
  4678     0599  1003               	clrc
  4679     059A  0DC2               	rlf	??_scale,f
  4680     059B  3EFF               	addlw	-1
  4681     059C  1D03               	skipz
  4682     059D  2D99               	goto	u4755
  4683     059E  1003               	clrc
  4684     059F  0D42               	rlf	??_scale,w
  4685     05A0  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4686     05A1  0084               	movwf	4
  4687     05A2  120A  118A  200D  120A  118A  	fcall	stringdir
  4688     05A7  00C3               	movwf	??_scale+1
  4689     05A8  120A  118A  200D  120A  118A  	fcall	stringdir
  4690     05AD  00C4               	movwf	??_scale+2
  4691     05AE  120A  118A  200D  120A  118A  	fcall	stringdir
  4692     05B3  00C5               	movwf	??_scale+3
  4693     05B4  120A  118A  200D  120A  118A  	fcall	stringdir
  4694     05B9  00C6               	movwf	??_scale+4
  4695     05BA  0846               	movf	??_scale+4,w
  4696     05BB  00A7               	movwf	___flmul@b+3
  4697     05BC  0845               	movf	??_scale+3,w
  4698     05BD  00A6               	movwf	___flmul@b+2
  4699     05BE  0844               	movf	??_scale+2,w
  4700     05BF  00A5               	movwf	___flmul@b+1
  4701     05C0  0843               	movf	??_scale+1,w
  4702     05C1  00A4               	movwf	___flmul@b
  4703     05C2  300A               	movlw	10
  4704     05C3  00F7               	movwf	___awdiv@divisor
  4705     05C4  3000               	movlw	0
  4706     05C5  00F8               	movwf	___awdiv@divisor+1
  4707     05C6  0850               	movf	scale@scl,w
  4708     05C7  00F9               	movwf	___awdiv@dividend
  4709     05C8  01FA               	clrf	___awdiv@dividend+1
  4710     05C9  1BF9               	btfsc	___awdiv@dividend,7
  4711     05CA  03FA               	decf	___awdiv@dividend+1,f
  4712     05CB  160A  158A  23DC  120A  118A  	fcall	___awdiv
  4713     05D0  0877               	movf	?___awdiv,w
  4714     05D1  1283               	bcf	3,5	;RP0=0, select bank0
  4715     05D2  1303               	bcf	3,6	;RP1=0, select bank0
  4716     05D3  00C7               	movwf	??_scale+5
  4717     05D4  3001               	movlw	1
  4718     05D5                     u4765:
  4719     05D5  1003               	clrc
  4720     05D6  0DC7               	rlf	??_scale+5,f
  4721     05D7  3EFF               	addlw	-1
  4722     05D8  1D03               	skipz
  4723     05D9  2DD5               	goto	u4765
  4724     05DA  1003               	clrc
  4725     05DB  0D47               	rlf	??_scale+5,w
  4726     05DC  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4727     05DD  0084               	movwf	4
  4728     05DE  120A  118A  200D  120A  118A  	fcall	stringdir
  4729     05E3  00C8               	movwf	??_scale+6
  4730     05E4  120A  118A  200D  120A  118A  	fcall	stringdir
  4731     05E9  00C9               	movwf	??_scale+7
  4732     05EA  120A  118A  200D  120A  118A  	fcall	stringdir
  4733     05EF  00CA               	movwf	??_scale+8
  4734     05F0  120A  118A  200D  120A  118A  	fcall	stringdir
  4735     05F5  00CB               	movwf	??_scale+9
  4736     05F6  084B               	movf	??_scale+9,w
  4737     05F7  00AB               	movwf	___flmul@a+3
  4738     05F8  084A               	movf	??_scale+8,w
  4739     05F9  00AA               	movwf	___flmul@a+2
  4740     05FA  0849               	movf	??_scale+7,w
  4741     05FB  00A9               	movwf	___flmul@a+1
  4742     05FC  0848               	movf	??_scale+6,w
  4743     05FD  00A8               	movwf	___flmul@a
  4744     05FE  120A  118A  2142  120A  118A  	fcall	___flmul
  4745     0603  1283               	bcf	3,5	;RP0=0, select bank0
  4746     0604  1303               	bcf	3,6	;RP1=0, select bank0
  4747     0605  0827               	movf	?___flmul+3,w
  4748     0606  00C1               	movwf	?_scale+3
  4749     0607  0826               	movf	?___flmul+2,w
  4750     0608  00C0               	movwf	?_scale+2
  4751     0609  0825               	movf	?___flmul+1,w
  4752     060A  00BF               	movwf	?_scale+1
  4753     060B  0824               	movf	?___flmul,w
  4754     060C  00BE               	movwf	?_scale
  4755     060D  2FE5               	goto	l381
  4756     060E                     l3299:
  4757                           
  4758                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4759     060E  0850               	movf	scale@scl,w
  4760     060F  00C2               	movwf	??_scale
  4761     0610  3001               	movlw	1
  4762     0611                     u4775:
  4763     0611  1003               	clrc
  4764     0612  0DC2               	rlf	??_scale,f
  4765     0613  3EFF               	addlw	-1
  4766     0614  1D03               	skipz
  4767     0615  2E11               	goto	u4775
  4768     0616  1003               	clrc
  4769     0617  0D42               	rlf	??_scale,w
  4770     0618  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4771     0619  0084               	movwf	4
  4772     061A  120A  118A  200D  120A  118A  	fcall	stringdir
  4773     061F  00C3               	movwf	??_scale+1
  4774     0620  120A  118A  200D  120A  118A  	fcall	stringdir
  4775     0625  00C4               	movwf	??_scale+2
  4776     0626  120A  118A  200D  120A  118A  	fcall	stringdir
  4777     062B  00C5               	movwf	??_scale+3
  4778     062C  120A  118A  200D  120A  118A  	fcall	stringdir
  4779     0631  00C6               	movwf	??_scale+4
  4780     0632  0846               	movf	??_scale+4,w
  4781     0633  00C1               	movwf	?_scale+3
  4782     0634  0845               	movf	??_scale+3,w
  4783     0635  00C0               	movwf	?_scale+2
  4784     0636  0844               	movf	??_scale+2,w
  4785     0637  00BF               	movwf	?_scale+1
  4786     0638  0843               	movf	??_scale+1,w
  4787     0639  00BE               	movwf	?_scale
  4788     063A  2FE5               	goto	l381
  4789     063B                     l3303:
  4790                           
  4791                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4792     063B  0850               	movf	scale@scl,w
  4793     063C  3A80               	xorlw	128
  4794     063D  3E12               	addlw	-238
  4795     063E  1C03               	skipc
  4796     063F  2E41               	goto	u4781
  4797     0640  2E42               	goto	u4780
  4798     0641                     u4781:
  4799     0641  2F2A               	goto	l3311
  4800     0642                     u4780:
  4801     0642                     l3305:
  4802                           
  4803                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4804     0642  300A               	movlw	10
  4805     0643  00F7               	movwf	___awdiv@divisor
  4806     0644  3000               	movlw	0
  4807     0645  00F8               	movwf	___awdiv@divisor+1
  4808     0646  0850               	movf	scale@scl,w
  4809     0647  00F2               	movwf	___awmod@dividend
  4810     0648  01F3               	clrf	___awmod@dividend+1
  4811     0649  1BF2               	btfsc	___awmod@dividend,7
  4812     064A  03F3               	decf	___awmod@dividend+1,f
  4813     064B  3064               	movlw	100
  4814     064C  00F0               	movwf	___awmod@divisor
  4815     064D  3000               	movlw	0
  4816     064E  00F1               	movwf	___awmod@divisor+1
  4817     064F  160A  158A  231D  120A  118A  	fcall	___awmod
  4818     0654  0871               	movf	?___awmod+1,w
  4819     0655  00FA               	movwf	___awdiv@dividend+1
  4820     0656  0870               	movf	?___awmod,w
  4821     0657  00F9               	movwf	___awdiv@dividend
  4822     0658  160A  158A  23DC  120A  118A  	fcall	___awdiv
  4823     065D  0877               	movf	?___awdiv,w
  4824     065E  1283               	bcf	3,5	;RP0=0, select bank0
  4825     065F  1303               	bcf	3,6	;RP1=0, select bank0
  4826     0660  00C2               	movwf	??_scale
  4827     0661  3001               	movlw	1
  4828     0662                     u4795:
  4829     0662  1003               	clrc
  4830     0663  0DC2               	rlf	??_scale,f
  4831     0664  3EFF               	addlw	-1
  4832     0665  1D03               	skipz
  4833     0666  2E62               	goto	u4795
  4834     0667  1003               	clrc
  4835     0668  0D42               	rlf	??_scale,w
  4836     0669  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4837     066A  0084               	movwf	4
  4838     066B  120A  118A  200D  120A  118A  	fcall	stringdir
  4839     0670  00C3               	movwf	??_scale+1
  4840     0671  120A  118A  200D  120A  118A  	fcall	stringdir
  4841     0676  00C4               	movwf	??_scale+2
  4842     0677  120A  118A  200D  120A  118A  	fcall	stringdir
  4843     067C  00C5               	movwf	??_scale+3
  4844     067D  120A  118A  200D  120A  118A  	fcall	stringdir
  4845     0682  00C6               	movwf	??_scale+4
  4846     0683  0846               	movf	??_scale+4,w
  4847     0684  00A7               	movwf	___flmul@b+3
  4848     0685  0845               	movf	??_scale+3,w
  4849     0686  00A6               	movwf	___flmul@b+2
  4850     0687  0844               	movf	??_scale+2,w
  4851     0688  00A5               	movwf	___flmul@b+1
  4852     0689  0843               	movf	??_scale+1,w
  4853     068A  00A4               	movwf	___flmul@b
  4854     068B  3064               	movlw	100
  4855     068C  00F7               	movwf	___awdiv@divisor
  4856     068D  3000               	movlw	0
  4857     068E  00F8               	movwf	___awdiv@divisor+1
  4858     068F  0850               	movf	scale@scl,w
  4859     0690  00F9               	movwf	___awdiv@dividend
  4860     0691  01FA               	clrf	___awdiv@dividend+1
  4861     0692  1BF9               	btfsc	___awdiv@dividend,7
  4862     0693  03FA               	decf	___awdiv@dividend+1,f
  4863     0694  160A  158A  23DC  120A  118A  	fcall	___awdiv
  4864     0699  0877               	movf	?___awdiv,w
  4865     069A  1283               	bcf	3,5	;RP0=0, select bank0
  4866     069B  1303               	bcf	3,6	;RP1=0, select bank0
  4867     069C  00C7               	movwf	??_scale+5
  4868     069D  3001               	movlw	1
  4869     069E                     u4805:
  4870     069E  1003               	clrc
  4871     069F  0DC7               	rlf	??_scale+5,f
  4872     06A0  3EFF               	addlw	-1
  4873     06A1  1D03               	skipz
  4874     06A2  2E9E               	goto	u4805
  4875     06A3  1003               	clrc
  4876     06A4  0D47               	rlf	??_scale+5,w
  4877     06A5  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4878     06A6  0084               	movwf	4
  4879     06A7  120A  118A  200D  120A  118A  	fcall	stringdir
  4880     06AC  00C8               	movwf	??_scale+6
  4881     06AD  120A  118A  200D  120A  118A  	fcall	stringdir
  4882     06B2  00C9               	movwf	??_scale+7
  4883     06B3  120A  118A  200D  120A  118A  	fcall	stringdir
  4884     06B8  00CA               	movwf	??_scale+8
  4885     06B9  120A  118A  200D  120A  118A  	fcall	stringdir
  4886     06BE  00CB               	movwf	??_scale+9
  4887     06BF  084B               	movf	??_scale+9,w
  4888     06C0  00AB               	movwf	___flmul@a+3
  4889     06C1  084A               	movf	??_scale+8,w
  4890     06C2  00AA               	movwf	___flmul@a+2
  4891     06C3  0849               	movf	??_scale+7,w
  4892     06C4  00A9               	movwf	___flmul@a+1
  4893     06C5  0848               	movf	??_scale+6,w
  4894     06C6  00A8               	movwf	___flmul@a
  4895     06C7  120A  118A  2142  120A  118A  	fcall	___flmul
  4896     06CC  1283               	bcf	3,5	;RP0=0, select bank0
  4897     06CD  1303               	bcf	3,6	;RP1=0, select bank0
  4898     06CE  0827               	movf	?___flmul+3,w
  4899     06CF  00CF               	movwf	_scale$1125+3
  4900     06D0  0826               	movf	?___flmul+2,w
  4901     06D1  00CE               	movwf	_scale$1125+2
  4902     06D2  0825               	movf	?___flmul+1,w
  4903     06D3  00CD               	movwf	_scale$1125+1
  4904     06D4  0824               	movf	?___flmul,w
  4905     06D5  00CC               	movwf	_scale$1125
  4906                           
  4907                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4908     06D6  300A               	movlw	10
  4909     06D7  00F0               	movwf	___awmod@divisor
  4910     06D8  3000               	movlw	0
  4911     06D9  00F1               	movwf	___awmod@divisor+1
  4912     06DA  0850               	movf	scale@scl,w
  4913     06DB  00F2               	movwf	___awmod@dividend
  4914     06DC  01F3               	clrf	___awmod@dividend+1
  4915     06DD  1BF2               	btfsc	___awmod@dividend,7
  4916     06DE  03F3               	decf	___awmod@dividend+1,f
  4917     06DF  160A  158A  231D  120A  118A  	fcall	___awmod
  4918     06E4  0870               	movf	?___awmod,w
  4919     06E5  1283               	bcf	3,5	;RP0=0, select bank0
  4920     06E6  1303               	bcf	3,6	;RP1=0, select bank0
  4921     06E7  00C2               	movwf	??_scale
  4922     06E8  3001               	movlw	1
  4923     06E9                     u4815:
  4924     06E9  1003               	clrc
  4925     06EA  0DC2               	rlf	??_scale,f
  4926     06EB  3EFF               	addlw	-1
  4927     06EC  1D03               	skipz
  4928     06ED  2EE9               	goto	u4815
  4929     06EE  1003               	clrc
  4930     06EF  0D42               	rlf	??_scale,w
  4931     06F0  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4932     06F1  0084               	movwf	4
  4933     06F2  120A  118A  200D  120A  118A  	fcall	stringdir
  4934     06F7  00C3               	movwf	??_scale+1
  4935     06F8  120A  118A  200D  120A  118A  	fcall	stringdir
  4936     06FD  00C4               	movwf	??_scale+2
  4937     06FE  120A  118A  200D  120A  118A  	fcall	stringdir
  4938     0703  00C5               	movwf	??_scale+3
  4939     0704  120A  118A  200D  120A  118A  	fcall	stringdir
  4940     0709  00C6               	movwf	??_scale+4
  4941     070A  0846               	movf	??_scale+4,w
  4942     070B  00A7               	movwf	___flmul@b+3
  4943     070C  0845               	movf	??_scale+3,w
  4944     070D  00A6               	movwf	___flmul@b+2
  4945     070E  0844               	movf	??_scale+2,w
  4946     070F  00A5               	movwf	___flmul@b+1
  4947     0710  0843               	movf	??_scale+1,w
  4948     0711  00A4               	movwf	___flmul@b
  4949     0712  084F               	movf	_scale$1125+3,w
  4950     0713  00AB               	movwf	___flmul@a+3
  4951     0714  084E               	movf	_scale$1125+2,w
  4952     0715  00AA               	movwf	___flmul@a+2
  4953     0716  084D               	movf	_scale$1125+1,w
  4954     0717  00A9               	movwf	___flmul@a+1
  4955     0718  084C               	movf	_scale$1125,w
  4956     0719  00A8               	movwf	___flmul@a
  4957     071A  120A  118A  2142  120A  118A  	fcall	___flmul
  4958     071F  1283               	bcf	3,5	;RP0=0, select bank0
  4959     0720  1303               	bcf	3,6	;RP1=0, select bank0
  4960     0721  0827               	movf	?___flmul+3,w
  4961     0722  00C1               	movwf	?_scale+3
  4962     0723  0826               	movf	?___flmul+2,w
  4963     0724  00C0               	movwf	?_scale+2
  4964     0725  0825               	movf	?___flmul+1,w
  4965     0726  00BF               	movwf	?_scale+1
  4966     0727  0824               	movf	?___flmul,w
  4967     0728  00BE               	movwf	?_scale
  4968     0729  2FE5               	goto	l381
  4969     072A                     l3311:
  4970     072A  0850               	movf	scale@scl,w
  4971     072B  3A80               	xorlw	128
  4972     072C  3E75               	addlw	-139
  4973     072D  1C03               	skipc
  4974     072E  2F30               	goto	u4821
  4975     072F  2F31               	goto	u4820
  4976     0730                     u4821:
  4977     0730  2FB9               	goto	l3317
  4978     0731                     u4820:
  4979     0731                     l3313:
  4980                           
  4981                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4982     0731  300A               	movlw	10
  4983     0732  00F0               	movwf	___awmod@divisor
  4984     0733  3000               	movlw	0
  4985     0734  00F1               	movwf	___awmod@divisor+1
  4986     0735  0850               	movf	scale@scl,w
  4987     0736  00F2               	movwf	___awmod@dividend
  4988     0737  01F3               	clrf	___awmod@dividend+1
  4989     0738  1BF2               	btfsc	___awmod@dividend,7
  4990     0739  03F3               	decf	___awmod@dividend+1,f
  4991     073A  160A  158A  231D  120A  118A  	fcall	___awmod
  4992     073F  0870               	movf	?___awmod,w
  4993     0740  1283               	bcf	3,5	;RP0=0, select bank0
  4994     0741  1303               	bcf	3,6	;RP1=0, select bank0
  4995     0742  00C2               	movwf	??_scale
  4996     0743  3001               	movlw	1
  4997     0744                     u4835:
  4998     0744  1003               	clrc
  4999     0745  0DC2               	rlf	??_scale,f
  5000     0746  3EFF               	addlw	-1
  5001     0747  1D03               	skipz
  5002     0748  2F44               	goto	u4835
  5003     0749  1003               	clrc
  5004     074A  0D42               	rlf	??_scale,w
  5005     074B  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5006     074C  0084               	movwf	4
  5007     074D  120A  118A  200D  120A  118A  	fcall	stringdir
  5008     0752  00C3               	movwf	??_scale+1
  5009     0753  120A  118A  200D  120A  118A  	fcall	stringdir
  5010     0758  00C4               	movwf	??_scale+2
  5011     0759  120A  118A  200D  120A  118A  	fcall	stringdir
  5012     075E  00C5               	movwf	??_scale+3
  5013     075F  120A  118A  200D  120A  118A  	fcall	stringdir
  5014     0764  00C6               	movwf	??_scale+4
  5015     0765  0846               	movf	??_scale+4,w
  5016     0766  00A7               	movwf	___flmul@b+3
  5017     0767  0845               	movf	??_scale+3,w
  5018     0768  00A6               	movwf	___flmul@b+2
  5019     0769  0844               	movf	??_scale+2,w
  5020     076A  00A5               	movwf	___flmul@b+1
  5021     076B  0843               	movf	??_scale+1,w
  5022     076C  00A4               	movwf	___flmul@b
  5023     076D  300A               	movlw	10
  5024     076E  00F7               	movwf	___awdiv@divisor
  5025     076F  3000               	movlw	0
  5026     0770  00F8               	movwf	___awdiv@divisor+1
  5027     0771  0850               	movf	scale@scl,w
  5028     0772  00F9               	movwf	___awdiv@dividend
  5029     0773  01FA               	clrf	___awdiv@dividend+1
  5030     0774  1BF9               	btfsc	___awdiv@dividend,7
  5031     0775  03FA               	decf	___awdiv@dividend+1,f
  5032     0776  160A  158A  23DC  120A  118A  	fcall	___awdiv
  5033     077B  0877               	movf	?___awdiv,w
  5034     077C  1283               	bcf	3,5	;RP0=0, select bank0
  5035     077D  1303               	bcf	3,6	;RP1=0, select bank0
  5036     077E  00C7               	movwf	??_scale+5
  5037     077F  3001               	movlw	1
  5038     0780                     u4845:
  5039     0780  1003               	clrc
  5040     0781  0DC7               	rlf	??_scale+5,f
  5041     0782  3EFF               	addlw	-1
  5042     0783  1D03               	skipz
  5043     0784  2F80               	goto	u4845
  5044     0785  1003               	clrc
  5045     0786  0D47               	rlf	??_scale+5,w
  5046     0787  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  5047     0788  0084               	movwf	4
  5048     0789  120A  118A  200D  120A  118A  	fcall	stringdir
  5049     078E  00C8               	movwf	??_scale+6
  5050     078F  120A  118A  200D  120A  118A  	fcall	stringdir
  5051     0794  00C9               	movwf	??_scale+7
  5052     0795  120A  118A  200D  120A  118A  	fcall	stringdir
  5053     079A  00CA               	movwf	??_scale+8
  5054     079B  120A  118A  200D  120A  118A  	fcall	stringdir
  5055     07A0  00CB               	movwf	??_scale+9
  5056     07A1  084B               	movf	??_scale+9,w
  5057     07A2  00AB               	movwf	___flmul@a+3
  5058     07A3  084A               	movf	??_scale+8,w
  5059     07A4  00AA               	movwf	___flmul@a+2
  5060     07A5  0849               	movf	??_scale+7,w
  5061     07A6  00A9               	movwf	___flmul@a+1
  5062     07A7  0848               	movf	??_scale+6,w
  5063     07A8  00A8               	movwf	___flmul@a
  5064     07A9  120A  118A  2142  120A  118A  	fcall	___flmul
  5065     07AE  1283               	bcf	3,5	;RP0=0, select bank0
  5066     07AF  1303               	bcf	3,6	;RP1=0, select bank0
  5067     07B0  0827               	movf	?___flmul+3,w
  5068     07B1  00C1               	movwf	?_scale+3
  5069     07B2  0826               	movf	?___flmul+2,w
  5070     07B3  00C0               	movwf	?_scale+2
  5071     07B4  0825               	movf	?___flmul+1,w
  5072     07B5  00BF               	movwf	?_scale+1
  5073     07B6  0824               	movf	?___flmul,w
  5074     07B7  00BE               	movwf	?_scale
  5075     07B8  2FE5               	goto	l381
  5076     07B9                     l3317:
  5077                           
  5078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  5079     07B9  0850               	movf	scale@scl,w
  5080     07BA  00C2               	movwf	??_scale
  5081     07BB  3001               	movlw	1
  5082     07BC                     u4855:
  5083     07BC  1003               	clrc
  5084     07BD  0DC2               	rlf	??_scale,f
  5085     07BE  3EFF               	addlw	-1
  5086     07BF  1D03               	skipz
  5087     07C0  2FBC               	goto	u4855
  5088     07C1  1003               	clrc
  5089     07C2  0D42               	rlf	??_scale,w
  5090     07C3  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5091     07C4  0084               	movwf	4
  5092     07C5  120A  118A  200D  120A  118A  	fcall	stringdir
  5093     07CA  00C3               	movwf	??_scale+1
  5094     07CB  120A  118A  200D  120A  118A  	fcall	stringdir
  5095     07D0  00C4               	movwf	??_scale+2
  5096     07D1  120A  118A  200D  120A  118A  	fcall	stringdir
  5097     07D6  00C5               	movwf	??_scale+3
  5098     07D7  120A  118A  200D  120A  118A  	fcall	stringdir
  5099     07DC  00C6               	movwf	??_scale+4
  5100     07DD  0846               	movf	??_scale+4,w
  5101     07DE  00C1               	movwf	?_scale+3
  5102     07DF  0845               	movf	??_scale+3,w
  5103     07E0  00C0               	movwf	?_scale+2
  5104     07E1  0844               	movf	??_scale+2,w
  5105     07E2  00BF               	movwf	?_scale+1
  5106     07E3  0843               	movf	??_scale+1,w
  5107     07E4  00BE               	movwf	?_scale
  5108     07E5                     l381:
  5109     07E5  0008               	return
  5110     07E6                     __end_of_scale:
  5111                           
  5112                           	psect	text3
  5113     1B1D                     __ptext3:	
  5114 ;; *************** function ___awmod *****************
  5115 ;; Defined at:
  5116 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  5117 ;; Parameters:    Size  Location     Type
  5118 ;;  divisor         2    0[COMMON] int 
  5119 ;;  dividend        2    2[COMMON] int 
  5120 ;; Auto vars:     Size  Location     Type
  5121 ;;  sign            1    6[COMMON] unsigned char 
  5122 ;;  counter         1    5[COMMON] unsigned char 
  5123 ;; Return value:  Size  Location     Type
  5124 ;;                  2    0[COMMON] int 
  5125 ;; Registers used:
  5126 ;;		wreg, status,2, status,0
  5127 ;; Tracked objects:
  5128 ;;		On entry : 0/0
  5129 ;;		On exit  : 0/0
  5130 ;;		Unchanged: 0/0
  5131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5132 ;;      Params:         4       0       0       0       0
  5133 ;;      Locals:         2       0       0       0       0
  5134 ;;      Temps:          1       0       0       0       0
  5135 ;;      Totals:         7       0       0       0       0
  5136 ;;Total ram usage:        7 bytes
  5137 ;; Hardware stack levels used: 1
  5138 ;; This function calls:
  5139 ;;		Nothing
  5140 ;; This function is called by:
  5141 ;;		_scale
  5142 ;; This function uses a non-reentrant model
  5143 ;;
  5144                           
  5145     1B1D                     ___awmod:	
  5146                           ;psect for function ___awmod
  5147                           
  5148     1B1D                     l2841:	
  5149                           ;incstack = 0
  5150                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5151                           
  5152     1B1D  01F6               	clrf	___awmod@sign
  5153     1B1E                     l2843:
  5154     1B1E  1FF3               	btfss	___awmod@dividend+1,7
  5155     1B1F  2B21               	goto	u3551
  5156     1B20  2B22               	goto	u3550
  5157     1B21                     u3551:
  5158     1B21  2B29               	goto	l2849
  5159     1B22                     u3550:
  5160     1B22                     l2845:
  5161     1B22  09F2               	comf	___awmod@dividend,f
  5162     1B23  09F3               	comf	___awmod@dividend+1,f
  5163     1B24  0AF2               	incf	___awmod@dividend,f
  5164     1B25  1903               	skipnz
  5165     1B26  0AF3               	incf	___awmod@dividend+1,f
  5166     1B27                     l2847:
  5167     1B27  01F6               	clrf	___awmod@sign
  5168     1B28  0AF6               	incf	___awmod@sign,f
  5169     1B29                     l2849:
  5170     1B29  1FF1               	btfss	___awmod@divisor+1,7
  5171     1B2A  2B2C               	goto	u3561
  5172     1B2B  2B2D               	goto	u3560
  5173     1B2C                     u3561:
  5174     1B2C  2B32               	goto	l2853
  5175     1B2D                     u3560:
  5176     1B2D                     l2851:
  5177     1B2D  09F0               	comf	___awmod@divisor,f
  5178     1B2E  09F1               	comf	___awmod@divisor+1,f
  5179     1B2F  0AF0               	incf	___awmod@divisor,f
  5180     1B30  1903               	skipnz
  5181     1B31  0AF1               	incf	___awmod@divisor+1,f
  5182     1B32                     l2853:
  5183     1B32  0870               	movf	___awmod@divisor,w
  5184     1B33  0471               	iorwf	___awmod@divisor+1,w
  5185     1B34  1903               	btfsc	3,2
  5186     1B35  2B37               	goto	u3571
  5187     1B36  2B38               	goto	u3570
  5188     1B37                     u3571:
  5189     1B37  2B67               	goto	l2871
  5190     1B38                     u3570:
  5191     1B38                     l2855:
  5192     1B38  01F5               	clrf	___awmod@counter
  5193     1B39  0AF5               	incf	___awmod@counter,f
  5194     1B3A  2B46               	goto	l2861
  5195     1B3B                     l2857:
  5196     1B3B  3001               	movlw	1
  5197     1B3C                     u3585:
  5198     1B3C  1003               	clrc
  5199     1B3D  0DF0               	rlf	___awmod@divisor,f
  5200     1B3E  0DF1               	rlf	___awmod@divisor+1,f
  5201     1B3F  3EFF               	addlw	-1
  5202     1B40  1D03               	skipz
  5203     1B41  2B3C               	goto	u3585
  5204     1B42                     l2859:
  5205     1B42  3001               	movlw	1
  5206     1B43  00F4               	movwf	??___awmod
  5207     1B44  0874               	movf	??___awmod,w
  5208     1B45  07F5               	addwf	___awmod@counter,f
  5209     1B46                     l2861:
  5210     1B46  1FF1               	btfss	___awmod@divisor+1,7
  5211     1B47  2B49               	goto	u3591
  5212     1B48  2B4A               	goto	u3590
  5213     1B49                     u3591:
  5214     1B49  2B3B               	goto	l2857
  5215     1B4A                     u3590:
  5216     1B4A                     l2863:
  5217     1B4A  0871               	movf	___awmod@divisor+1,w
  5218     1B4B  0273               	subwf	___awmod@dividend+1,w
  5219     1B4C  1D03               	skipz
  5220     1B4D  2B50               	goto	u3605
  5221     1B4E  0870               	movf	___awmod@divisor,w
  5222     1B4F  0272               	subwf	___awmod@dividend,w
  5223     1B50                     u3605:
  5224     1B50  1C03               	skipc
  5225     1B51  2B53               	goto	u3601
  5226     1B52  2B54               	goto	u3600
  5227     1B53                     u3601:
  5228     1B53  2B5A               	goto	l2867
  5229     1B54                     u3600:
  5230     1B54                     l2865:
  5231     1B54  0870               	movf	___awmod@divisor,w
  5232     1B55  02F2               	subwf	___awmod@dividend,f
  5233     1B56  0871               	movf	___awmod@divisor+1,w
  5234     1B57  1C03               	skipc
  5235     1B58  03F3               	decf	___awmod@dividend+1,f
  5236     1B59  02F3               	subwf	___awmod@dividend+1,f
  5237     1B5A                     l2867:
  5238     1B5A  3001               	movlw	1
  5239     1B5B                     u3615:
  5240     1B5B  1003               	clrc
  5241     1B5C  0CF1               	rrf	___awmod@divisor+1,f
  5242     1B5D  0CF0               	rrf	___awmod@divisor,f
  5243     1B5E  3EFF               	addlw	-1
  5244     1B5F  1D03               	skipz
  5245     1B60  2B5B               	goto	u3615
  5246     1B61                     l2869:
  5247     1B61  3001               	movlw	1
  5248     1B62  02F5               	subwf	___awmod@counter,f
  5249     1B63  1D03               	btfss	3,2
  5250     1B64  2B66               	goto	u3621
  5251     1B65  2B67               	goto	u3620
  5252     1B66                     u3621:
  5253     1B66  2B4A               	goto	l2863
  5254     1B67                     u3620:
  5255     1B67                     l2871:
  5256     1B67  0876               	movf	___awmod@sign,w
  5257     1B68  1903               	btfsc	3,2
  5258     1B69  2B6B               	goto	u3631
  5259     1B6A  2B6C               	goto	u3630
  5260     1B6B                     u3631:
  5261     1B6B  2B71               	goto	l2875
  5262     1B6C                     u3630:
  5263     1B6C                     l2873:
  5264     1B6C  09F2               	comf	___awmod@dividend,f
  5265     1B6D  09F3               	comf	___awmod@dividend+1,f
  5266     1B6E  0AF2               	incf	___awmod@dividend,f
  5267     1B6F  1903               	skipnz
  5268     1B70  0AF3               	incf	___awmod@dividend+1,f
  5269     1B71                     l2875:
  5270     1B71  0873               	movf	___awmod@dividend+1,w
  5271     1B72  00F1               	movwf	?___awmod+1
  5272     1B73  0872               	movf	___awmod@dividend,w
  5273     1B74  00F0               	movwf	?___awmod
  5274     1B75                     l652:
  5275     1B75  0008               	return
  5276     1B76                     __end_of___awmod:
  5277                           
  5278                           	psect	text4
  5279     1BDC                     __ptext4:	
  5280 ;; *************** function ___awdiv *****************
  5281 ;; Defined at:
  5282 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  5283 ;; Parameters:    Size  Location     Type
  5284 ;;  divisor         2    7[COMMON] int 
  5285 ;;  dividend        2    9[COMMON] int 
  5286 ;; Auto vars:     Size  Location     Type
  5287 ;;  quotient        2    2[BANK0 ] int 
  5288 ;;  sign            1    1[BANK0 ] unsigned char 
  5289 ;;  counter         1    0[BANK0 ] unsigned char 
  5290 ;; Return value:  Size  Location     Type
  5291 ;;                  2    7[COMMON] int 
  5292 ;; Registers used:
  5293 ;;		wreg, status,2, status,0
  5294 ;; Tracked objects:
  5295 ;;		On entry : 0/0
  5296 ;;		On exit  : 0/0
  5297 ;;		Unchanged: 0/0
  5298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5299 ;;      Params:         4       0       0       0       0
  5300 ;;      Locals:         0       4       0       0       0
  5301 ;;      Temps:          1       0       0       0       0
  5302 ;;      Totals:         5       4       0       0       0
  5303 ;;Total ram usage:        9 bytes
  5304 ;; Hardware stack levels used: 1
  5305 ;; This function calls:
  5306 ;;		Nothing
  5307 ;; This function is called by:
  5308 ;;		_scale
  5309 ;;		_sprintf
  5310 ;; This function uses a non-reentrant model
  5311 ;;
  5312                           
  5313     1BDC                     ___awdiv:	
  5314                           ;psect for function ___awdiv
  5315                           
  5316     1BDC                     l2797:	
  5317                           ;incstack = 0
  5318                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5319                           
  5320     1BDC  1283               	bcf	3,5	;RP0=0, select bank0
  5321     1BDD  1303               	bcf	3,6	;RP1=0, select bank0
  5322     1BDE  01A1               	clrf	___awdiv@sign
  5323     1BDF                     l2799:
  5324     1BDF  1FF8               	btfss	___awdiv@divisor+1,7
  5325     1BE0  2BE2               	goto	u3451
  5326     1BE1  2BE3               	goto	u3450
  5327     1BE2                     u3451:
  5328     1BE2  2BEA               	goto	l2805
  5329     1BE3                     u3450:
  5330     1BE3                     l2801:
  5331     1BE3  09F7               	comf	___awdiv@divisor,f
  5332     1BE4  09F8               	comf	___awdiv@divisor+1,f
  5333     1BE5  0AF7               	incf	___awdiv@divisor,f
  5334     1BE6  1903               	skipnz
  5335     1BE7  0AF8               	incf	___awdiv@divisor+1,f
  5336     1BE8                     l2803:
  5337     1BE8  01A1               	clrf	___awdiv@sign
  5338     1BE9  0AA1               	incf	___awdiv@sign,f
  5339     1BEA                     l2805:
  5340     1BEA  1FFA               	btfss	___awdiv@dividend+1,7
  5341     1BEB  2BED               	goto	u3461
  5342     1BEC  2BEE               	goto	u3460
  5343     1BED                     u3461:
  5344     1BED  2BF7               	goto	l2811
  5345     1BEE                     u3460:
  5346     1BEE                     l2807:
  5347     1BEE  09F9               	comf	___awdiv@dividend,f
  5348     1BEF  09FA               	comf	___awdiv@dividend+1,f
  5349     1BF0  0AF9               	incf	___awdiv@dividend,f
  5350     1BF1  1903               	skipnz
  5351     1BF2  0AFA               	incf	___awdiv@dividend+1,f
  5352     1BF3                     l2809:
  5353     1BF3  3001               	movlw	1
  5354     1BF4  00FB               	movwf	??___awdiv
  5355     1BF5  087B               	movf	??___awdiv,w
  5356     1BF6  06A1               	xorwf	___awdiv@sign,f
  5357     1BF7                     l2811:
  5358     1BF7  01A2               	clrf	___awdiv@quotient
  5359     1BF8  01A3               	clrf	___awdiv@quotient+1
  5360     1BF9                     l2813:
  5361     1BF9  0877               	movf	___awdiv@divisor,w
  5362     1BFA  0478               	iorwf	___awdiv@divisor+1,w
  5363     1BFB  1903               	btfsc	3,2
  5364     1BFC  2BFE               	goto	u3471
  5365     1BFD  2BFF               	goto	u3470
  5366     1BFE                     u3471:
  5367     1BFE  2C36               	goto	l2833
  5368     1BFF                     u3470:
  5369     1BFF                     l2815:
  5370     1BFF  01A0               	clrf	___awdiv@counter
  5371     1C00  0AA0               	incf	___awdiv@counter,f
  5372     1C01  2C0D               	goto	l2821
  5373     1C02                     l2817:
  5374     1C02  3001               	movlw	1
  5375     1C03                     u3485:
  5376     1C03  1003               	clrc
  5377     1C04  0DF7               	rlf	___awdiv@divisor,f
  5378     1C05  0DF8               	rlf	___awdiv@divisor+1,f
  5379     1C06  3EFF               	addlw	-1
  5380     1C07  1D03               	skipz
  5381     1C08  2C03               	goto	u3485
  5382     1C09                     l2819:
  5383     1C09  3001               	movlw	1
  5384     1C0A  00FB               	movwf	??___awdiv
  5385     1C0B  087B               	movf	??___awdiv,w
  5386     1C0C  07A0               	addwf	___awdiv@counter,f
  5387     1C0D                     l2821:
  5388     1C0D  1FF8               	btfss	___awdiv@divisor+1,7
  5389     1C0E  2C10               	goto	u3491
  5390     1C0F  2C11               	goto	u3490
  5391     1C10                     u3491:
  5392     1C10  2C02               	goto	l2817
  5393     1C11                     u3490:
  5394     1C11                     l2823:
  5395     1C11  3001               	movlw	1
  5396     1C12                     u3505:
  5397     1C12  1003               	clrc
  5398     1C13  0DA2               	rlf	___awdiv@quotient,f
  5399     1C14  0DA3               	rlf	___awdiv@quotient+1,f
  5400     1C15  3EFF               	addlw	-1
  5401     1C16  1D03               	skipz
  5402     1C17  2C12               	goto	u3505
  5403     1C18  0878               	movf	___awdiv@divisor+1,w
  5404     1C19  027A               	subwf	___awdiv@dividend+1,w
  5405     1C1A  1D03               	skipz
  5406     1C1B  2C1E               	goto	u3515
  5407     1C1C  0877               	movf	___awdiv@divisor,w
  5408     1C1D  0279               	subwf	___awdiv@dividend,w
  5409     1C1E                     u3515:
  5410     1C1E  1C03               	skipc
  5411     1C1F  2C21               	goto	u3511
  5412     1C20  2C22               	goto	u3510
  5413     1C21                     u3511:
  5414     1C21  2C29               	goto	l2829
  5415     1C22                     u3510:
  5416     1C22                     l2825:
  5417     1C22  0877               	movf	___awdiv@divisor,w
  5418     1C23  02F9               	subwf	___awdiv@dividend,f
  5419     1C24  0878               	movf	___awdiv@divisor+1,w
  5420     1C25  1C03               	skipc
  5421     1C26  03FA               	decf	___awdiv@dividend+1,f
  5422     1C27  02FA               	subwf	___awdiv@dividend+1,f
  5423     1C28                     l2827:
  5424     1C28  1422               	bsf	___awdiv@quotient,0
  5425     1C29                     l2829:
  5426     1C29  3001               	movlw	1
  5427     1C2A                     u3525:
  5428     1C2A  1003               	clrc
  5429     1C2B  0CF8               	rrf	___awdiv@divisor+1,f
  5430     1C2C  0CF7               	rrf	___awdiv@divisor,f
  5431     1C2D  3EFF               	addlw	-1
  5432     1C2E  1D03               	skipz
  5433     1C2F  2C2A               	goto	u3525
  5434     1C30                     l2831:
  5435     1C30  3001               	movlw	1
  5436     1C31  02A0               	subwf	___awdiv@counter,f
  5437     1C32  1D03               	btfss	3,2
  5438     1C33  2C35               	goto	u3531
  5439     1C34  2C36               	goto	u3530
  5440     1C35                     u3531:
  5441     1C35  2C11               	goto	l2823
  5442     1C36                     u3530:
  5443     1C36                     l2833:
  5444     1C36  0821               	movf	___awdiv@sign,w
  5445     1C37  1903               	btfsc	3,2
  5446     1C38  2C3A               	goto	u3541
  5447     1C39  2C3B               	goto	u3540
  5448     1C3A                     u3541:
  5449     1C3A  2C40               	goto	l2837
  5450     1C3B                     u3540:
  5451     1C3B                     l2835:
  5452     1C3B  09A2               	comf	___awdiv@quotient,f
  5453     1C3C  09A3               	comf	___awdiv@quotient+1,f
  5454     1C3D  0AA2               	incf	___awdiv@quotient,f
  5455     1C3E  1903               	skipnz
  5456     1C3F  0AA3               	incf	___awdiv@quotient+1,f
  5457     1C40                     l2837:
  5458     1C40  0823               	movf	___awdiv@quotient+1,w
  5459     1C41  00F8               	movwf	?___awdiv+1
  5460     1C42  0822               	movf	___awdiv@quotient,w
  5461     1C43  00F7               	movwf	?___awdiv
  5462     1C44                     l639:
  5463     1C44  0008               	return
  5464     1C45                     __end_of___awdiv:
  5465                           
  5466                           	psect	text5
  5467     0804                     __ptext5:	
  5468 ;; *************** function _isdigit *****************
  5469 ;; Defined at:
  5470 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;  c               1    wreg     unsigned char 
  5473 ;; Auto vars:     Size  Location     Type
  5474 ;;  c               1    1[COMMON] unsigned char 
  5475 ;; Return value:  Size  Location     Type
  5476 ;;		None               void
  5477 ;; Registers used:
  5478 ;;		wreg, status,2, status,0
  5479 ;; Tracked objects:
  5480 ;;		On entry : 0/0
  5481 ;;		On exit  : 0/0
  5482 ;;		Unchanged: 0/0
  5483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5484 ;;      Params:         0       0       0       0       0
  5485 ;;      Locals:         2       0       0       0       0
  5486 ;;      Temps:          0       0       0       0       0
  5487 ;;      Totals:         2       0       0       0       0
  5488 ;;Total ram usage:        2 bytes
  5489 ;; Hardware stack levels used: 1
  5490 ;; This function calls:
  5491 ;;		Nothing
  5492 ;; This function is called by:
  5493 ;;		_sprintf
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497     0804                     _isdigit:	
  5498                           ;psect for function _isdigit
  5499                           
  5500                           
  5501                           ;incstack = 0
  5502                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5503                           ;isdigit@c stored from wreg
  5504     0804  00F1               	movwf	isdigit@c
  5505     0805                     l3321:
  5506     0805  01F0               	clrf	_isdigit$902
  5507     0806                     l3323:
  5508     0806  303A               	movlw	58
  5509     0807  0271               	subwf	isdigit@c,w
  5510     0808  1803               	skipnc
  5511     0809  280B               	goto	u4861
  5512     080A  280C               	goto	u4860
  5513     080B                     u4861:
  5514     080B  2814               	goto	l3329
  5515     080C                     u4860:
  5516     080C                     l3325:
  5517     080C  3030               	movlw	48
  5518     080D  0271               	subwf	isdigit@c,w
  5519     080E  1C03               	skipc
  5520     080F  2811               	goto	u4871
  5521     0810  2812               	goto	u4870
  5522     0811                     u4871:
  5523     0811  2814               	goto	l3329
  5524     0812                     u4870:
  5525     0812                     l3327:
  5526     0812  01F0               	clrf	_isdigit$902
  5527     0813  0AF0               	incf	_isdigit$902,f
  5528     0814                     l3329:
  5529     0814  0C70               	rrf	_isdigit$902,w
  5530     0815                     l973:
  5531     0815  0008               	return
  5532     0816                     __end_of_isdigit:
  5533                           
  5534                           	psect	text6
  5535     139D                     __ptext6:	
  5536 ;; *************** function _fround *****************
  5537 ;; Defined at:
  5538 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  5539 ;; Parameters:    Size  Location     Type
  5540 ;;  prec            1    wreg     unsigned char 
  5541 ;; Auto vars:     Size  Location     Type
  5542 ;;  prec            1   49[BANK0 ] unsigned char 
  5543 ;; Return value:  Size  Location     Type
  5544 ;;                  4   30[BANK0 ] unsigned char 
  5545 ;; Registers used:
  5546 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5547 ;; Tracked objects:
  5548 ;;		On entry : 0/0
  5549 ;;		On exit  : 0/0
  5550 ;;		Unchanged: 0/0
  5551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5552 ;;      Params:         0       4       0       0       0
  5553 ;;      Locals:         0       9       0       0       0
  5554 ;;      Temps:          0       7       0       0       0
  5555 ;;      Totals:         0      20       0       0       0
  5556 ;;Total ram usage:       20 bytes
  5557 ;; Hardware stack levels used: 1
  5558 ;; Hardware stack levels required when called: 2
  5559 ;; This function calls:
  5560 ;;		___flmul
  5561 ;;		___lwdiv
  5562 ;;		___lwmod
  5563 ;; This function is called by:
  5564 ;;		_sprintf
  5565 ;; This function uses a non-reentrant model
  5566 ;;
  5567                           
  5568     139D                     _fround:	
  5569                           ;psect for function _fround
  5570                           
  5571                           
  5572                           ;incstack = 0
  5573                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5574                           ;fround@prec stored from wreg
  5575     139D  1283               	bcf	3,5	;RP0=0, select bank0
  5576     139E  1303               	bcf	3,6	;RP1=0, select bank0
  5577     139F  00D1               	movwf	fround@prec
  5578     13A0                     l3263:
  5579                           
  5580                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5581     13A0  306E               	movlw	110
  5582     13A1  0251               	subwf	fround@prec,w
  5583     13A2  1C03               	skipc
  5584     13A3  2BA5               	goto	u4611
  5585     13A4  2BA6               	goto	u4610
  5586     13A5                     u4611:
  5587     13A5  2CB3               	goto	l3271
  5588     13A6                     u4610:
  5589     13A6                     l3265:
  5590                           
  5591                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5592     13A6  303F               	movlw	63
  5593     13A7  00A7               	movwf	___flmul@b+3
  5594     13A8  3000               	movlw	0
  5595     13A9  00A6               	movwf	___flmul@b+2
  5596     13AA  3000               	movlw	0
  5597     13AB  00A5               	movwf	___flmul@b+1
  5598     13AC  3000               	movlw	0
  5599     13AD  00A4               	movwf	___flmul@b
  5600     13AE  3064               	movlw	100
  5601     13AF  00F6               	movwf	___lwdiv@divisor
  5602     13B0  3000               	movlw	0
  5603     13B1  00F7               	movwf	___lwdiv@divisor+1
  5604     13B2  0851               	movf	fround@prec,w
  5605     13B3  00C2               	movwf	??_fround
  5606     13B4  01C3               	clrf	??_fround+1
  5607     13B5  0842               	movf	??_fround,w
  5608     13B6  00F8               	movwf	___lwdiv@dividend
  5609     13B7  0843               	movf	??_fround+1,w
  5610     13B8  00F9               	movwf	___lwdiv@dividend+1
  5611     13B9  160A  158A  21A3  160A  118A  	fcall	___lwdiv
  5612     13BE  0876               	movf	?___lwdiv,w
  5613     13BF  1283               	bcf	3,5	;RP0=0, select bank0
  5614     13C0  1303               	bcf	3,6	;RP1=0, select bank0
  5615     13C1  00C4               	movwf	??_fround+2
  5616     13C2  3001               	movlw	1
  5617     13C3                     u4625:
  5618     13C3  1003               	clrc
  5619     13C4  0DC4               	rlf	??_fround+2,f
  5620     13C5  3EFF               	addlw	-1
  5621     13C6  1D03               	skipz
  5622     13C7  2BC3               	goto	u4625
  5623     13C8  1003               	clrc
  5624     13C9  0D44               	rlf	??_fround+2,w
  5625     13CA  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5626     13CB  0084               	movwf	4
  5627     13CC  120A  118A  200D  160A  118A  	fcall	stringdir
  5628     13D1  00C5               	movwf	??_fround+3
  5629     13D2  120A  118A  200D  160A  118A  	fcall	stringdir
  5630     13D7  00C6               	movwf	??_fround+4
  5631     13D8  120A  118A  200D  160A  118A  	fcall	stringdir
  5632     13DD  00C7               	movwf	??_fround+5
  5633     13DE  120A  118A  200D  160A  118A  	fcall	stringdir
  5634     13E3  00C8               	movwf	??_fround+6
  5635     13E4  0848               	movf	??_fround+6,w
  5636     13E5  00AB               	movwf	___flmul@a+3
  5637     13E6  0847               	movf	??_fround+5,w
  5638     13E7  00AA               	movwf	___flmul@a+2
  5639     13E8  0846               	movf	??_fround+4,w
  5640     13E9  00A9               	movwf	___flmul@a+1
  5641     13EA  0845               	movf	??_fround+3,w
  5642     13EB  00A8               	movwf	___flmul@a
  5643     13EC  120A  118A  2142  160A  118A  	fcall	___flmul
  5644     13F1  1283               	bcf	3,5	;RP0=0, select bank0
  5645     13F2  1303               	bcf	3,6	;RP1=0, select bank0
  5646     13F3  0827               	movf	?___flmul+3,w
  5647     13F4  00D0               	movwf	_fround$1123+3
  5648     13F5  0826               	movf	?___flmul+2,w
  5649     13F6  00CF               	movwf	_fround$1123+2
  5650     13F7  0825               	movf	?___flmul+1,w
  5651     13F8  00CE               	movwf	_fround$1123+1
  5652     13F9  0824               	movf	?___flmul,w
  5653     13FA  00CD               	movwf	_fround$1123
  5654                           
  5655                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5656     13FB  300A               	movlw	10
  5657     13FC  00F6               	movwf	___lwdiv@divisor
  5658     13FD  3000               	movlw	0
  5659     13FE  00F7               	movwf	___lwdiv@divisor+1
  5660     13FF  0851               	movf	fround@prec,w
  5661     1400  00C2               	movwf	??_fround
  5662     1401  01C3               	clrf	??_fround+1
  5663     1402  0842               	movf	??_fround,w
  5664     1403  00F2               	movwf	___lwmod@dividend
  5665     1404  0843               	movf	??_fround+1,w
  5666     1405  00F3               	movwf	___lwmod@dividend+1
  5667     1406  3064               	movlw	100
  5668     1407  00F0               	movwf	___lwmod@divisor
  5669     1408  3000               	movlw	0
  5670     1409  00F1               	movwf	___lwmod@divisor+1
  5671     140A  160A  118A  2000  160A  118A  	fcall	___lwmod
  5672     140F  0871               	movf	?___lwmod+1,w
  5673     1410  00F9               	movwf	___lwdiv@dividend+1
  5674     1411  0870               	movf	?___lwmod,w
  5675     1412  00F8               	movwf	___lwdiv@dividend
  5676     1413  160A  158A  21A3  160A  118A  	fcall	___lwdiv
  5677     1418  0876               	movf	?___lwdiv,w
  5678     1419  1283               	bcf	3,5	;RP0=0, select bank0
  5679     141A  1303               	bcf	3,6	;RP1=0, select bank0
  5680     141B  00C4               	movwf	??_fround+2
  5681     141C  3001               	movlw	1
  5682     141D                     u4635:
  5683     141D  1003               	clrc
  5684     141E  0DC4               	rlf	??_fround+2,f
  5685     141F  3EFF               	addlw	-1
  5686     1420  1D03               	skipz
  5687     1421  2C1D               	goto	u4635
  5688     1422  1003               	clrc
  5689     1423  0D44               	rlf	??_fround+2,w
  5690     1424  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5691     1425  0084               	movwf	4
  5692     1426  120A  118A  200D  160A  118A  	fcall	stringdir
  5693     142B  00C5               	movwf	??_fround+3
  5694     142C  120A  118A  200D  160A  118A  	fcall	stringdir
  5695     1431  00C6               	movwf	??_fround+4
  5696     1432  120A  118A  200D  160A  118A  	fcall	stringdir
  5697     1437  00C7               	movwf	??_fround+5
  5698     1438  120A  118A  200D  160A  118A  	fcall	stringdir
  5699     143D  00C8               	movwf	??_fround+6
  5700     143E  0848               	movf	??_fround+6,w
  5701     143F  00A7               	movwf	___flmul@b+3
  5702     1440  0847               	movf	??_fround+5,w
  5703     1441  00A6               	movwf	___flmul@b+2
  5704     1442  0846               	movf	??_fround+4,w
  5705     1443  00A5               	movwf	___flmul@b+1
  5706     1444  0845               	movf	??_fround+3,w
  5707     1445  00A4               	movwf	___flmul@b
  5708     1446  0850               	movf	_fround$1123+3,w
  5709     1447  00AB               	movwf	___flmul@a+3
  5710     1448  084F               	movf	_fround$1123+2,w
  5711     1449  00AA               	movwf	___flmul@a+2
  5712     144A  084E               	movf	_fround$1123+1,w
  5713     144B  00A9               	movwf	___flmul@a+1
  5714     144C  084D               	movf	_fround$1123,w
  5715     144D  00A8               	movwf	___flmul@a
  5716     144E  120A  118A  2142  160A  118A  	fcall	___flmul
  5717     1453  1283               	bcf	3,5	;RP0=0, select bank0
  5718     1454  1303               	bcf	3,6	;RP1=0, select bank0
  5719     1455  0827               	movf	?___flmul+3,w
  5720     1456  00CC               	movwf	_fround$1124+3
  5721     1457  0826               	movf	?___flmul+2,w
  5722     1458  00CB               	movwf	_fround$1124+2
  5723     1459  0825               	movf	?___flmul+1,w
  5724     145A  00CA               	movwf	_fround$1124+1
  5725     145B  0824               	movf	?___flmul,w
  5726     145C  00C9               	movwf	_fround$1124
  5727                           
  5728                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5729     145D  300A               	movlw	10
  5730     145E  00F0               	movwf	___lwmod@divisor
  5731     145F  3000               	movlw	0
  5732     1460  00F1               	movwf	___lwmod@divisor+1
  5733     1461  0851               	movf	fround@prec,w
  5734     1462  00C2               	movwf	??_fround
  5735     1463  01C3               	clrf	??_fround+1
  5736     1464  0842               	movf	??_fround,w
  5737     1465  00F2               	movwf	___lwmod@dividend
  5738     1466  0843               	movf	??_fround+1,w
  5739     1467  00F3               	movwf	___lwmod@dividend+1
  5740     1468  160A  118A  2000  160A  118A  	fcall	___lwmod
  5741     146D  0870               	movf	?___lwmod,w
  5742     146E  1283               	bcf	3,5	;RP0=0, select bank0
  5743     146F  1303               	bcf	3,6	;RP1=0, select bank0
  5744     1470  00C4               	movwf	??_fround+2
  5745     1471  3001               	movlw	1
  5746     1472                     u4645:
  5747     1472  1003               	clrc
  5748     1473  0DC4               	rlf	??_fround+2,f
  5749     1474  3EFF               	addlw	-1
  5750     1475  1D03               	skipz
  5751     1476  2C72               	goto	u4645
  5752     1477  1003               	clrc
  5753     1478  0D44               	rlf	??_fround+2,w
  5754     1479  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5755     147A  0084               	movwf	4
  5756     147B  120A  118A  200D  160A  118A  	fcall	stringdir
  5757     1480  00C5               	movwf	??_fround+3
  5758     1481  120A  118A  200D  160A  118A  	fcall	stringdir
  5759     1486  00C6               	movwf	??_fround+4
  5760     1487  120A  118A  200D  160A  118A  	fcall	stringdir
  5761     148C  00C7               	movwf	??_fround+5
  5762     148D  120A  118A  200D  160A  118A  	fcall	stringdir
  5763     1492  00C8               	movwf	??_fround+6
  5764     1493  0848               	movf	??_fround+6,w
  5765     1494  00A7               	movwf	___flmul@b+3
  5766     1495  0847               	movf	??_fround+5,w
  5767     1496  00A6               	movwf	___flmul@b+2
  5768     1497  0846               	movf	??_fround+4,w
  5769     1498  00A5               	movwf	___flmul@b+1
  5770     1499  0845               	movf	??_fround+3,w
  5771     149A  00A4               	movwf	___flmul@b
  5772     149B  084C               	movf	_fround$1124+3,w
  5773     149C  00AB               	movwf	___flmul@a+3
  5774     149D  084B               	movf	_fround$1124+2,w
  5775     149E  00AA               	movwf	___flmul@a+2
  5776     149F  084A               	movf	_fround$1124+1,w
  5777     14A0  00A9               	movwf	___flmul@a+1
  5778     14A1  0849               	movf	_fround$1124,w
  5779     14A2  00A8               	movwf	___flmul@a
  5780     14A3  120A  118A  2142  160A  118A  	fcall	___flmul
  5781     14A8  1283               	bcf	3,5	;RP0=0, select bank0
  5782     14A9  1303               	bcf	3,6	;RP1=0, select bank0
  5783     14AA  0827               	movf	?___flmul+3,w
  5784     14AB  00C1               	movwf	?_fround+3
  5785     14AC  0826               	movf	?___flmul+2,w
  5786     14AD  00C0               	movwf	?_fround+2
  5787     14AE  0825               	movf	?___flmul+1,w
  5788     14AF  00BF               	movwf	?_fround+1
  5789     14B0  0824               	movf	?___flmul,w
  5790     14B1  00BE               	movwf	?_fround
  5791     14B2  2DA7               	goto	l374
  5792     14B3                     l3271:
  5793     14B3  300B               	movlw	11
  5794     14B4  0251               	subwf	fround@prec,w
  5795     14B5  1C03               	skipc
  5796     14B6  2CB8               	goto	u4651
  5797     14B7  2CB9               	goto	u4650
  5798     14B8                     u4651:
  5799     14B8  2D64               	goto	l3277
  5800     14B9                     u4650:
  5801     14B9                     l3273:
  5802                           
  5803                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5804     14B9  303F               	movlw	63
  5805     14BA  00A7               	movwf	___flmul@b+3
  5806     14BB  3000               	movlw	0
  5807     14BC  00A6               	movwf	___flmul@b+2
  5808     14BD  3000               	movlw	0
  5809     14BE  00A5               	movwf	___flmul@b+1
  5810     14BF  3000               	movlw	0
  5811     14C0  00A4               	movwf	___flmul@b
  5812     14C1  300A               	movlw	10
  5813     14C2  00F6               	movwf	___lwdiv@divisor
  5814     14C3  3000               	movlw	0
  5815     14C4  00F7               	movwf	___lwdiv@divisor+1
  5816     14C5  0851               	movf	fround@prec,w
  5817     14C6  00C2               	movwf	??_fround
  5818     14C7  01C3               	clrf	??_fround+1
  5819     14C8  0842               	movf	??_fround,w
  5820     14C9  00F8               	movwf	___lwdiv@dividend
  5821     14CA  0843               	movf	??_fround+1,w
  5822     14CB  00F9               	movwf	___lwdiv@dividend+1
  5823     14CC  160A  158A  21A3  160A  118A  	fcall	___lwdiv
  5824     14D1  0876               	movf	?___lwdiv,w
  5825     14D2  1283               	bcf	3,5	;RP0=0, select bank0
  5826     14D3  1303               	bcf	3,6	;RP1=0, select bank0
  5827     14D4  00C4               	movwf	??_fround+2
  5828     14D5  3001               	movlw	1
  5829     14D6                     u4665:
  5830     14D6  1003               	clrc
  5831     14D7  0DC4               	rlf	??_fround+2,f
  5832     14D8  3EFF               	addlw	-1
  5833     14D9  1D03               	skipz
  5834     14DA  2CD6               	goto	u4665
  5835     14DB  1003               	clrc
  5836     14DC  0D44               	rlf	??_fround+2,w
  5837     14DD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5838     14DE  0084               	movwf	4
  5839     14DF  120A  118A  200D  160A  118A  	fcall	stringdir
  5840     14E4  00C5               	movwf	??_fround+3
  5841     14E5  120A  118A  200D  160A  118A  	fcall	stringdir
  5842     14EA  00C6               	movwf	??_fround+4
  5843     14EB  120A  118A  200D  160A  118A  	fcall	stringdir
  5844     14F0  00C7               	movwf	??_fround+5
  5845     14F1  120A  118A  200D  160A  118A  	fcall	stringdir
  5846     14F6  00C8               	movwf	??_fround+6
  5847     14F7  0848               	movf	??_fround+6,w
  5848     14F8  00AB               	movwf	___flmul@a+3
  5849     14F9  0847               	movf	??_fround+5,w
  5850     14FA  00AA               	movwf	___flmul@a+2
  5851     14FB  0846               	movf	??_fround+4,w
  5852     14FC  00A9               	movwf	___flmul@a+1
  5853     14FD  0845               	movf	??_fround+3,w
  5854     14FE  00A8               	movwf	___flmul@a
  5855     14FF  120A  118A  2142  160A  118A  	fcall	___flmul
  5856     1504  1283               	bcf	3,5	;RP0=0, select bank0
  5857     1505  1303               	bcf	3,6	;RP1=0, select bank0
  5858     1506  0827               	movf	?___flmul+3,w
  5859     1507  00D0               	movwf	_fround$1123+3
  5860     1508  0826               	movf	?___flmul+2,w
  5861     1509  00CF               	movwf	_fround$1123+2
  5862     150A  0825               	movf	?___flmul+1,w
  5863     150B  00CE               	movwf	_fround$1123+1
  5864     150C  0824               	movf	?___flmul,w
  5865     150D  00CD               	movwf	_fround$1123
  5866                           
  5867                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5868     150E  300A               	movlw	10
  5869     150F  00F0               	movwf	___lwmod@divisor
  5870     1510  3000               	movlw	0
  5871     1511  00F1               	movwf	___lwmod@divisor+1
  5872     1512  0851               	movf	fround@prec,w
  5873     1513  00C2               	movwf	??_fround
  5874     1514  01C3               	clrf	??_fround+1
  5875     1515  0842               	movf	??_fround,w
  5876     1516  00F2               	movwf	___lwmod@dividend
  5877     1517  0843               	movf	??_fround+1,w
  5878     1518  00F3               	movwf	___lwmod@dividend+1
  5879     1519  160A  118A  2000  160A  118A  	fcall	___lwmod
  5880     151E  0870               	movf	?___lwmod,w
  5881     151F  1283               	bcf	3,5	;RP0=0, select bank0
  5882     1520  1303               	bcf	3,6	;RP1=0, select bank0
  5883     1521  00C4               	movwf	??_fround+2
  5884     1522  3001               	movlw	1
  5885     1523                     u4675:
  5886     1523  1003               	clrc
  5887     1524  0DC4               	rlf	??_fround+2,f
  5888     1525  3EFF               	addlw	-1
  5889     1526  1D03               	skipz
  5890     1527  2D23               	goto	u4675
  5891     1528  1003               	clrc
  5892     1529  0D44               	rlf	??_fround+2,w
  5893     152A  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5894     152B  0084               	movwf	4
  5895     152C  120A  118A  200D  160A  118A  	fcall	stringdir
  5896     1531  00C5               	movwf	??_fround+3
  5897     1532  120A  118A  200D  160A  118A  	fcall	stringdir
  5898     1537  00C6               	movwf	??_fround+4
  5899     1538  120A  118A  200D  160A  118A  	fcall	stringdir
  5900     153D  00C7               	movwf	??_fround+5
  5901     153E  120A  118A  200D  160A  118A  	fcall	stringdir
  5902     1543  00C8               	movwf	??_fround+6
  5903     1544  0848               	movf	??_fround+6,w
  5904     1545  00A7               	movwf	___flmul@b+3
  5905     1546  0847               	movf	??_fround+5,w
  5906     1547  00A6               	movwf	___flmul@b+2
  5907     1548  0846               	movf	??_fround+4,w
  5908     1549  00A5               	movwf	___flmul@b+1
  5909     154A  0845               	movf	??_fround+3,w
  5910     154B  00A4               	movwf	___flmul@b
  5911     154C  0850               	movf	_fround$1123+3,w
  5912     154D  00AB               	movwf	___flmul@a+3
  5913     154E  084F               	movf	_fround$1123+2,w
  5914     154F  00AA               	movwf	___flmul@a+2
  5915     1550  084E               	movf	_fround$1123+1,w
  5916     1551  00A9               	movwf	___flmul@a+1
  5917     1552  084D               	movf	_fround$1123,w
  5918     1553  00A8               	movwf	___flmul@a
  5919     1554  120A  118A  2142  160A  118A  	fcall	___flmul
  5920     1559  1283               	bcf	3,5	;RP0=0, select bank0
  5921     155A  1303               	bcf	3,6	;RP1=0, select bank0
  5922     155B  0827               	movf	?___flmul+3,w
  5923     155C  00C1               	movwf	?_fround+3
  5924     155D  0826               	movf	?___flmul+2,w
  5925     155E  00C0               	movwf	?_fround+2
  5926     155F  0825               	movf	?___flmul+1,w
  5927     1560  00BF               	movwf	?_fround+1
  5928     1561  0824               	movf	?___flmul,w
  5929     1562  00BE               	movwf	?_fround
  5930     1563  2DA7               	goto	l374
  5931     1564                     l3277:
  5932                           
  5933                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5934     1564  303F               	movlw	63
  5935     1565  00A7               	movwf	___flmul@b+3
  5936     1566  3000               	movlw	0
  5937     1567  00A6               	movwf	___flmul@b+2
  5938     1568  3000               	movlw	0
  5939     1569  00A5               	movwf	___flmul@b+1
  5940     156A  3000               	movlw	0
  5941     156B  00A4               	movwf	___flmul@b
  5942     156C  0851               	movf	fround@prec,w
  5943     156D  00C2               	movwf	??_fround
  5944     156E  3001               	movlw	1
  5945     156F                     u4685:
  5946     156F  1003               	clrc
  5947     1570  0DC2               	rlf	??_fround,f
  5948     1571  3EFF               	addlw	-1
  5949     1572  1D03               	skipz
  5950     1573  2D6F               	goto	u4685
  5951     1574  1003               	clrc
  5952     1575  0D42               	rlf	??_fround,w
  5953     1576  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5954     1577  0084               	movwf	4
  5955     1578  120A  118A  200D  160A  118A  	fcall	stringdir
  5956     157D  00C3               	movwf	??_fround+1
  5957     157E  120A  118A  200D  160A  118A  	fcall	stringdir
  5958     1583  00C4               	movwf	??_fround+2
  5959     1584  120A  118A  200D  160A  118A  	fcall	stringdir
  5960     1589  00C5               	movwf	??_fround+3
  5961     158A  120A  118A  200D  160A  118A  	fcall	stringdir
  5962     158F  00C6               	movwf	??_fround+4
  5963     1590  0846               	movf	??_fround+4,w
  5964     1591  00AB               	movwf	___flmul@a+3
  5965     1592  0845               	movf	??_fround+3,w
  5966     1593  00AA               	movwf	___flmul@a+2
  5967     1594  0844               	movf	??_fround+2,w
  5968     1595  00A9               	movwf	___flmul@a+1
  5969     1596  0843               	movf	??_fround+1,w
  5970     1597  00A8               	movwf	___flmul@a
  5971     1598  120A  118A  2142  160A  118A  	fcall	___flmul
  5972     159D  1283               	bcf	3,5	;RP0=0, select bank0
  5973     159E  1303               	bcf	3,6	;RP1=0, select bank0
  5974     159F  0827               	movf	?___flmul+3,w
  5975     15A0  00C1               	movwf	?_fround+3
  5976     15A1  0826               	movf	?___flmul+2,w
  5977     15A2  00C0               	movwf	?_fround+2
  5978     15A3  0825               	movf	?___flmul+1,w
  5979     15A4  00BF               	movwf	?_fround+1
  5980     15A5  0824               	movf	?___flmul,w
  5981     15A6  00BE               	movwf	?_fround
  5982     15A7                     l374:
  5983     15A7  0008               	return
  5984     15A8                     __end_of_fround:
  5985                           
  5986                           	psect	text7
  5987     1000                     __ptext7:	
  5988 ;; *************** function ___lwmod *****************
  5989 ;; Defined at:
  5990 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  5991 ;; Parameters:    Size  Location     Type
  5992 ;;  divisor         2    0[COMMON] unsigned int 
  5993 ;;  dividend        2    2[COMMON] unsigned int 
  5994 ;; Auto vars:     Size  Location     Type
  5995 ;;  counter         1    5[COMMON] unsigned char 
  5996 ;; Return value:  Size  Location     Type
  5997 ;;                  2    0[COMMON] unsigned int 
  5998 ;; Registers used:
  5999 ;;		wreg, status,2, status,0
  6000 ;; Tracked objects:
  6001 ;;		On entry : 0/0
  6002 ;;		On exit  : 0/0
  6003 ;;		Unchanged: 0/0
  6004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6005 ;;      Params:         4       0       0       0       0
  6006 ;;      Locals:         1       0       0       0       0
  6007 ;;      Temps:          1       0       0       0       0
  6008 ;;      Totals:         6       0       0       0       0
  6009 ;;Total ram usage:        6 bytes
  6010 ;; Hardware stack levels used: 1
  6011 ;; This function calls:
  6012 ;;		Nothing
  6013 ;; This function is called by:
  6014 ;;		_fround
  6015 ;; This function uses a non-reentrant model
  6016 ;;
  6017                           
  6018     1000                     ___lwmod:	
  6019                           ;psect for function ___lwmod
  6020                           
  6021     1000                     l2905:	
  6022                           ;incstack = 0
  6023                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6024                           
  6025     1000  0870               	movf	___lwmod@divisor,w
  6026     1001  0471               	iorwf	___lwmod@divisor+1,w
  6027     1002  1903               	btfsc	3,2
  6028     1003  2805               	goto	u3711
  6029     1004  2806               	goto	u3710
  6030     1005                     u3711:
  6031     1005  2835               	goto	l2923
  6032     1006                     u3710:
  6033     1006                     l2907:
  6034     1006  01F5               	clrf	___lwmod@counter
  6035     1007  0AF5               	incf	___lwmod@counter,f
  6036     1008  2814               	goto	l2913
  6037     1009                     l2909:
  6038     1009  3001               	movlw	1
  6039     100A                     u3725:
  6040     100A  1003               	clrc
  6041     100B  0DF0               	rlf	___lwmod@divisor,f
  6042     100C  0DF1               	rlf	___lwmod@divisor+1,f
  6043     100D  3EFF               	addlw	-1
  6044     100E  1D03               	skipz
  6045     100F  280A               	goto	u3725
  6046     1010                     l2911:
  6047     1010  3001               	movlw	1
  6048     1011  00F4               	movwf	??___lwmod
  6049     1012  0874               	movf	??___lwmod,w
  6050     1013  07F5               	addwf	___lwmod@counter,f
  6051     1014                     l2913:
  6052     1014  1FF1               	btfss	___lwmod@divisor+1,7
  6053     1015  2817               	goto	u3731
  6054     1016  2818               	goto	u3730
  6055     1017                     u3731:
  6056     1017  2809               	goto	l2909
  6057     1018                     u3730:
  6058     1018                     l2915:
  6059     1018  0871               	movf	___lwmod@divisor+1,w
  6060     1019  0273               	subwf	___lwmod@dividend+1,w
  6061     101A  1D03               	skipz
  6062     101B  281E               	goto	u3745
  6063     101C  0870               	movf	___lwmod@divisor,w
  6064     101D  0272               	subwf	___lwmod@dividend,w
  6065     101E                     u3745:
  6066     101E  1C03               	skipc
  6067     101F  2821               	goto	u3741
  6068     1020  2822               	goto	u3740
  6069     1021                     u3741:
  6070     1021  2828               	goto	l2919
  6071     1022                     u3740:
  6072     1022                     l2917:
  6073     1022  0870               	movf	___lwmod@divisor,w
  6074     1023  02F2               	subwf	___lwmod@dividend,f
  6075     1024  0871               	movf	___lwmod@divisor+1,w
  6076     1025  1C03               	skipc
  6077     1026  03F3               	decf	___lwmod@dividend+1,f
  6078     1027  02F3               	subwf	___lwmod@dividend+1,f
  6079     1028                     l2919:
  6080     1028  3001               	movlw	1
  6081     1029                     u3755:
  6082     1029  1003               	clrc
  6083     102A  0CF1               	rrf	___lwmod@divisor+1,f
  6084     102B  0CF0               	rrf	___lwmod@divisor,f
  6085     102C  3EFF               	addlw	-1
  6086     102D  1D03               	skipz
  6087     102E  2829               	goto	u3755
  6088     102F                     l2921:
  6089     102F  3001               	movlw	1
  6090     1030  02F5               	subwf	___lwmod@counter,f
  6091     1031  1D03               	btfss	3,2
  6092     1032  2834               	goto	u3761
  6093     1033  2835               	goto	u3760
  6094     1034                     u3761:
  6095     1034  2818               	goto	l2915
  6096     1035                     u3760:
  6097     1035                     l2923:
  6098     1035  0873               	movf	___lwmod@dividend+1,w
  6099     1036  00F1               	movwf	?___lwmod+1
  6100     1037  0872               	movf	___lwmod@dividend,w
  6101     1038  00F0               	movwf	?___lwmod
  6102     1039                     l802:
  6103     1039  0008               	return
  6104     103A                     __end_of___lwmod:
  6105                           
  6106                           	psect	text8
  6107     19A3                     __ptext8:	
  6108 ;; *************** function ___lwdiv *****************
  6109 ;; Defined at:
  6110 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  6111 ;; Parameters:    Size  Location     Type
  6112 ;;  divisor         2    6[COMMON] unsigned int 
  6113 ;;  dividend        2    8[COMMON] unsigned int 
  6114 ;; Auto vars:     Size  Location     Type
  6115 ;;  quotient        2   11[COMMON] unsigned int 
  6116 ;;  counter         1   13[COMMON] unsigned char 
  6117 ;; Return value:  Size  Location     Type
  6118 ;;                  2    6[COMMON] unsigned int 
  6119 ;; Registers used:
  6120 ;;		wreg, status,2, status,0
  6121 ;; Tracked objects:
  6122 ;;		On entry : 0/0
  6123 ;;		On exit  : 0/0
  6124 ;;		Unchanged: 0/0
  6125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6126 ;;      Params:         4       0       0       0       0
  6127 ;;      Locals:         3       0       0       0       0
  6128 ;;      Temps:          1       0       0       0       0
  6129 ;;      Totals:         8       0       0       0       0
  6130 ;;Total ram usage:        8 bytes
  6131 ;; Hardware stack levels used: 1
  6132 ;; This function calls:
  6133 ;;		Nothing
  6134 ;; This function is called by:
  6135 ;;		_fround
  6136 ;; This function uses a non-reentrant model
  6137 ;;
  6138                           
  6139     19A3                     ___lwdiv:	
  6140                           ;psect for function ___lwdiv
  6141                           
  6142     19A3                     l2879:	
  6143                           ;incstack = 0
  6144                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6145                           
  6146     19A3  01FB               	clrf	___lwdiv@quotient
  6147     19A4  01FC               	clrf	___lwdiv@quotient+1
  6148     19A5                     l2881:
  6149     19A5  0876               	movf	___lwdiv@divisor,w
  6150     19A6  0477               	iorwf	___lwdiv@divisor+1,w
  6151     19A7  1903               	btfsc	3,2
  6152     19A8  29AA               	goto	u3641
  6153     19A9  29AB               	goto	u3640
  6154     19AA                     u3641:
  6155     19AA  29E2               	goto	l2901
  6156     19AB                     u3640:
  6157     19AB                     l2883:
  6158     19AB  01FD               	clrf	___lwdiv@counter
  6159     19AC  0AFD               	incf	___lwdiv@counter,f
  6160     19AD  29B9               	goto	l2889
  6161     19AE                     l2885:
  6162     19AE  3001               	movlw	1
  6163     19AF                     u3655:
  6164     19AF  1003               	clrc
  6165     19B0  0DF6               	rlf	___lwdiv@divisor,f
  6166     19B1  0DF7               	rlf	___lwdiv@divisor+1,f
  6167     19B2  3EFF               	addlw	-1
  6168     19B3  1D03               	skipz
  6169     19B4  29AF               	goto	u3655
  6170     19B5                     l2887:
  6171     19B5  3001               	movlw	1
  6172     19B6  00FA               	movwf	??___lwdiv
  6173     19B7  087A               	movf	??___lwdiv,w
  6174     19B8  07FD               	addwf	___lwdiv@counter,f
  6175     19B9                     l2889:
  6176     19B9  1FF7               	btfss	___lwdiv@divisor+1,7
  6177     19BA  29BC               	goto	u3661
  6178     19BB  29BD               	goto	u3660
  6179     19BC                     u3661:
  6180     19BC  29AE               	goto	l2885
  6181     19BD                     u3660:
  6182     19BD                     l2891:
  6183     19BD  3001               	movlw	1
  6184     19BE                     u3675:
  6185     19BE  1003               	clrc
  6186     19BF  0DFB               	rlf	___lwdiv@quotient,f
  6187     19C0  0DFC               	rlf	___lwdiv@quotient+1,f
  6188     19C1  3EFF               	addlw	-1
  6189     19C2  1D03               	skipz
  6190     19C3  29BE               	goto	u3675
  6191     19C4  0877               	movf	___lwdiv@divisor+1,w
  6192     19C5  0279               	subwf	___lwdiv@dividend+1,w
  6193     19C6  1D03               	skipz
  6194     19C7  29CA               	goto	u3685
  6195     19C8  0876               	movf	___lwdiv@divisor,w
  6196     19C9  0278               	subwf	___lwdiv@dividend,w
  6197     19CA                     u3685:
  6198     19CA  1C03               	skipc
  6199     19CB  29CD               	goto	u3681
  6200     19CC  29CE               	goto	u3680
  6201     19CD                     u3681:
  6202     19CD  29D5               	goto	l2897
  6203     19CE                     u3680:
  6204     19CE                     l2893:
  6205     19CE  0876               	movf	___lwdiv@divisor,w
  6206     19CF  02F8               	subwf	___lwdiv@dividend,f
  6207     19D0  0877               	movf	___lwdiv@divisor+1,w
  6208     19D1  1C03               	skipc
  6209     19D2  03F9               	decf	___lwdiv@dividend+1,f
  6210     19D3  02F9               	subwf	___lwdiv@dividend+1,f
  6211     19D4                     l2895:
  6212     19D4  147B               	bsf	___lwdiv@quotient,0
  6213     19D5                     l2897:
  6214     19D5  3001               	movlw	1
  6215     19D6                     u3695:
  6216     19D6  1003               	clrc
  6217     19D7  0CF7               	rrf	___lwdiv@divisor+1,f
  6218     19D8  0CF6               	rrf	___lwdiv@divisor,f
  6219     19D9  3EFF               	addlw	-1
  6220     19DA  1D03               	skipz
  6221     19DB  29D6               	goto	u3695
  6222     19DC                     l2899:
  6223     19DC  3001               	movlw	1
  6224     19DD  02FD               	subwf	___lwdiv@counter,f
  6225     19DE  1D03               	btfss	3,2
  6226     19DF  29E1               	goto	u3701
  6227     19E0  29E2               	goto	u3700
  6228     19E1                     u3701:
  6229     19E1  29BD               	goto	l2891
  6230     19E2                     u3700:
  6231     19E2                     l2901:
  6232     19E2  087C               	movf	___lwdiv@quotient+1,w
  6233     19E3  00F7               	movwf	?___lwdiv+1
  6234     19E4  087B               	movf	___lwdiv@quotient,w
  6235     19E5  00F6               	movwf	?___lwdiv
  6236     19E6                     l792:
  6237     19E6  0008               	return
  6238     19E7                     __end_of___lwdiv:
  6239                           
  6240                           	psect	text9
  6241     0142                     __ptext9:	
  6242 ;; *************** function ___flmul *****************
  6243 ;; Defined at:
  6244 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;  b               4    4[BANK0 ] unsigned int 
  6247 ;;  a               4    8[BANK0 ] unsigned int 
  6248 ;; Auto vars:     Size  Location     Type
  6249 ;;  prod            4   24[BANK0 ] struct .
  6250 ;;  grs             4   18[BANK0 ] unsigned long 
  6251 ;;  temp            2   28[BANK0 ] struct .
  6252 ;;  bexp            1   23[BANK0 ] unsigned char 
  6253 ;;  aexp            1   22[BANK0 ] unsigned char 
  6254 ;;  sign            1   17[BANK0 ] unsigned char 
  6255 ;; Return value:  Size  Location     Type
  6256 ;;                  4    4[BANK0 ] unsigned char 
  6257 ;; Registers used:
  6258 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6259 ;; Tracked objects:
  6260 ;;		On entry : 0/0
  6261 ;;		On exit  : 0/0
  6262 ;;		Unchanged: 0/0
  6263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6264 ;;      Params:         0       8       0       0       0
  6265 ;;      Locals:         0      13       0       0       0
  6266 ;;      Temps:          0       5       0       0       0
  6267 ;;      Totals:         0      26       0       0       0
  6268 ;;Total ram usage:       26 bytes
  6269 ;; Hardware stack levels used: 1
  6270 ;; Hardware stack levels required when called: 1
  6271 ;; This function calls:
  6272 ;;		__Umul8_16
  6273 ;; This function is called by:
  6274 ;;		_main
  6275 ;;		_fround
  6276 ;;		_scale
  6277 ;;		_sprintf
  6278 ;; This function uses a non-reentrant model
  6279 ;;
  6280                           
  6281     0142                     ___flmul:	
  6282                           ;psect for function ___flmul
  6283                           
  6284     0142                     l3121:	
  6285                           ;incstack = 0
  6286                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6287                           
  6288     0142  1283               	bcf	3,5	;RP0=0, select bank0
  6289     0143  1303               	bcf	3,6	;RP1=0, select bank0
  6290     0144  0827               	movf	___flmul@b+3,w
  6291     0145  3980               	andlw	128
  6292     0146  00B1               	movwf	___flmul@sign
  6293     0147                     l3123:
  6294     0147  0827               	movf	___flmul@b+3,w
  6295     0148  00AC               	movwf	??___flmul
  6296     0149  072C               	addwf	??___flmul,w
  6297     014A  00B7               	movwf	___flmul@bexp
  6298     014B                     l3125:
  6299     014B  1FA6               	btfss	___flmul@b+2,7
  6300     014C  294E               	goto	u4231
  6301     014D  294F               	goto	u4230
  6302     014E                     u4231:
  6303     014E  2950               	goto	l3129
  6304     014F                     u4230:
  6305     014F                     l3127:
  6306     014F  1437               	bsf	___flmul@bexp,0
  6307     0150                     l3129:
  6308     0150  0837               	movf	___flmul@bexp,w
  6309     0151  1903               	btfsc	3,2
  6310     0152  2954               	goto	u4241
  6311     0153  2955               	goto	u4240
  6312     0154                     u4241:
  6313     0154  2964               	goto	l3137
  6314     0155                     u4240:
  6315     0155                     l3131:
  6316     0155  0A37               	incf	___flmul@bexp,w
  6317     0156  1D03               	btfss	3,2
  6318     0157  2959               	goto	u4251
  6319     0158  295A               	goto	u4250
  6320     0159                     u4251:
  6321     0159  2962               	goto	l3135
  6322     015A                     u4250:
  6323     015A                     l3133:
  6324     015A  3000               	movlw	0
  6325     015B  00A7               	movwf	___flmul@b+3
  6326     015C  3000               	movlw	0
  6327     015D  00A6               	movwf	___flmul@b+2
  6328     015E  3000               	movlw	0
  6329     015F  00A5               	movwf	___flmul@b+1
  6330     0160  3000               	movlw	0
  6331     0161  00A4               	movwf	___flmul@b
  6332     0162                     l3135:
  6333     0162  17A6               	bsf	___flmul@b+2,7
  6334     0163  296C               	goto	l3139
  6335     0164                     l3137:
  6336     0164  3000               	movlw	0
  6337     0165  00A7               	movwf	___flmul@b+3
  6338     0166  3000               	movlw	0
  6339     0167  00A6               	movwf	___flmul@b+2
  6340     0168  3000               	movlw	0
  6341     0169  00A5               	movwf	___flmul@b+1
  6342     016A  3000               	movlw	0
  6343     016B  00A4               	movwf	___flmul@b
  6344     016C                     l3139:
  6345     016C  082B               	movf	___flmul@a+3,w
  6346     016D  3980               	andlw	128
  6347     016E  00AC               	movwf	??___flmul
  6348     016F  082C               	movf	??___flmul,w
  6349     0170  06B1               	xorwf	___flmul@sign,f
  6350     0171                     l3141:
  6351     0171  082B               	movf	___flmul@a+3,w
  6352     0172  00AC               	movwf	??___flmul
  6353     0173  072C               	addwf	??___flmul,w
  6354     0174  00B6               	movwf	___flmul@aexp
  6355     0175                     l3143:
  6356     0175  1FAA               	btfss	___flmul@a+2,7
  6357     0176  2978               	goto	u4261
  6358     0177  2979               	goto	u4260
  6359     0178                     u4261:
  6360     0178  297A               	goto	l3147
  6361     0179                     u4260:
  6362     0179                     l3145:
  6363     0179  1436               	bsf	___flmul@aexp,0
  6364     017A                     l3147:
  6365     017A  0836               	movf	___flmul@aexp,w
  6366     017B  1903               	btfsc	3,2
  6367     017C  297E               	goto	u4271
  6368     017D  297F               	goto	u4270
  6369     017E                     u4271:
  6370     017E  298E               	goto	l3155
  6371     017F                     u4270:
  6372     017F                     l3149:
  6373     017F  0A36               	incf	___flmul@aexp,w
  6374     0180  1D03               	btfss	3,2
  6375     0181  2983               	goto	u4281
  6376     0182  2984               	goto	u4280
  6377     0183                     u4281:
  6378     0183  298C               	goto	l3153
  6379     0184                     u4280:
  6380     0184                     l3151:
  6381     0184  3000               	movlw	0
  6382     0185  00AB               	movwf	___flmul@a+3
  6383     0186  3000               	movlw	0
  6384     0187  00AA               	movwf	___flmul@a+2
  6385     0188  3000               	movlw	0
  6386     0189  00A9               	movwf	___flmul@a+1
  6387     018A  3000               	movlw	0
  6388     018B  00A8               	movwf	___flmul@a
  6389     018C                     l3153:
  6390     018C  17AA               	bsf	___flmul@a+2,7
  6391     018D  2996               	goto	l3157
  6392     018E                     l3155:
  6393     018E  3000               	movlw	0
  6394     018F  00AB               	movwf	___flmul@a+3
  6395     0190  3000               	movlw	0
  6396     0191  00AA               	movwf	___flmul@a+2
  6397     0192  3000               	movlw	0
  6398     0193  00A9               	movwf	___flmul@a+1
  6399     0194  3000               	movlw	0
  6400     0195  00A8               	movwf	___flmul@a
  6401     0196                     l3157:
  6402     0196  0836               	movf	___flmul@aexp,w
  6403     0197  1903               	btfsc	3,2
  6404     0198  299A               	goto	u4291
  6405     0199  299B               	goto	u4290
  6406     019A                     u4291:
  6407     019A  29A0               	goto	l3161
  6408     019B                     u4290:
  6409     019B                     l3159:
  6410     019B  0837               	movf	___flmul@bexp,w
  6411     019C  1D03               	btfss	3,2
  6412     019D  299F               	goto	u4301
  6413     019E  29A0               	goto	u4300
  6414     019F                     u4301:
  6415     019F  29A9               	goto	l3165
  6416     01A0                     u4300:
  6417     01A0                     l3161:
  6418     01A0  3000               	movlw	0
  6419     01A1  00A7               	movwf	?___flmul+3
  6420     01A2  3000               	movlw	0
  6421     01A3  00A6               	movwf	?___flmul+2
  6422     01A4  3000               	movlw	0
  6423     01A5  00A5               	movwf	?___flmul+1
  6424     01A6  3000               	movlw	0
  6425     01A7  00A4               	movwf	?___flmul
  6426     01A8  2C86               	goto	l909
  6427     01A9                     l3165:
  6428     01A9  0824               	movf	___flmul@b,w
  6429     01AA  00F0               	movwf	__Umul8_16@multiplicand
  6430     01AB  082A               	movf	___flmul@a+2,w
  6431     01AC  160A  158A  2154  120A  118A  	fcall	__Umul8_16
  6432     01B1  0871               	movf	?__Umul8_16+1,w
  6433     01B2  1283               	bcf	3,5	;RP0=0, select bank0
  6434     01B3  1303               	bcf	3,6	;RP1=0, select bank0
  6435     01B4  00BD               	movwf	___flmul@temp+1
  6436     01B5  0870               	movf	?__Umul8_16,w
  6437     01B6  00BC               	movwf	___flmul@temp
  6438     01B7                     l3167:
  6439     01B7  083C               	movf	___flmul@temp,w
  6440     01B8  00AC               	movwf	??___flmul
  6441     01B9  01AD               	clrf	??___flmul+1
  6442     01BA  01AE               	clrf	??___flmul+2
  6443     01BB  01AF               	clrf	??___flmul+3
  6444     01BC  082F               	movf	??___flmul+3,w
  6445     01BD  00B5               	movwf	___flmul@grs+3
  6446     01BE  082E               	movf	??___flmul+2,w
  6447     01BF  00B4               	movwf	___flmul@grs+2
  6448     01C0  082D               	movf	??___flmul+1,w
  6449     01C1  00B3               	movwf	___flmul@grs+1
  6450     01C2  082C               	movf	??___flmul,w
  6451     01C3  00B2               	movwf	___flmul@grs
  6452     01C4                     l3169:
  6453     01C4  083D               	movf	___flmul@temp+1,w
  6454     01C5  00AC               	movwf	??___flmul
  6455     01C6  01AD               	clrf	??___flmul+1
  6456     01C7  01AE               	clrf	??___flmul+2
  6457     01C8  01AF               	clrf	??___flmul+3
  6458     01C9  082F               	movf	??___flmul+3,w
  6459     01CA  00BB               	movwf	___flmul@prod+3
  6460     01CB  082E               	movf	??___flmul+2,w
  6461     01CC  00BA               	movwf	___flmul@prod+2
  6462     01CD  082D               	movf	??___flmul+1,w
  6463     01CE  00B9               	movwf	___flmul@prod+1
  6464     01CF  082C               	movf	??___flmul,w
  6465     01D0  00B8               	movwf	___flmul@prod
  6466     01D1  0825               	movf	___flmul@b+1,w
  6467     01D2  00F0               	movwf	__Umul8_16@multiplicand
  6468     01D3  0829               	movf	___flmul@a+1,w
  6469     01D4  160A  158A  2154  120A  118A  	fcall	__Umul8_16
  6470     01D9  0871               	movf	?__Umul8_16+1,w
  6471     01DA  1283               	bcf	3,5	;RP0=0, select bank0
  6472     01DB  1303               	bcf	3,6	;RP1=0, select bank0
  6473     01DC  00BD               	movwf	___flmul@temp+1
  6474     01DD  0870               	movf	?__Umul8_16,w
  6475     01DE  00BC               	movwf	___flmul@temp
  6476     01DF                     l3171:
  6477     01DF  083C               	movf	___flmul@temp,w
  6478     01E0  00AC               	movwf	??___flmul
  6479     01E1  01AD               	clrf	??___flmul+1
  6480     01E2  01AE               	clrf	??___flmul+2
  6481     01E3  01AF               	clrf	??___flmul+3
  6482     01E4  082C               	movf	??___flmul,w
  6483     01E5  07B2               	addwf	___flmul@grs,f
  6484     01E6  082D               	movf	??___flmul+1,w
  6485     01E7  1103               	clrz
  6486     01E8  1803               	skipnc
  6487     01E9  3E01               	addlw	1
  6488     01EA  1903               	skipnz
  6489     01EB  29ED               	goto	u4311
  6490     01EC  07B3               	addwf	___flmul@grs+1,f
  6491     01ED                     u4311:
  6492     01ED  082E               	movf	??___flmul+2,w
  6493     01EE  1103               	clrz
  6494     01EF  1803               	skipnc
  6495     01F0  3E01               	addlw	1
  6496     01F1  1903               	skipnz
  6497     01F2  29F4               	goto	u4312
  6498     01F3  07B4               	addwf	___flmul@grs+2,f
  6499     01F4                     u4312:
  6500     01F4  082F               	movf	??___flmul+3,w
  6501     01F5  1103               	clrz
  6502     01F6  1803               	skipnc
  6503     01F7  3E01               	addlw	1
  6504     01F8  1903               	skipnz
  6505     01F9  29FB               	goto	u4313
  6506     01FA  07B5               	addwf	___flmul@grs+3,f
  6507     01FB                     u4313:
  6508     01FB                     l3173:
  6509     01FB  083D               	movf	___flmul@temp+1,w
  6510     01FC  00AC               	movwf	??___flmul
  6511     01FD  01AD               	clrf	??___flmul+1
  6512     01FE  01AE               	clrf	??___flmul+2
  6513     01FF  01AF               	clrf	??___flmul+3
  6514     0200  082C               	movf	??___flmul,w
  6515     0201  07B8               	addwf	___flmul@prod,f
  6516     0202  082D               	movf	??___flmul+1,w
  6517     0203  1103               	clrz
  6518     0204  1803               	skipnc
  6519     0205  3E01               	addlw	1
  6520     0206  1903               	skipnz
  6521     0207  2A09               	goto	u4321
  6522     0208  07B9               	addwf	___flmul@prod+1,f
  6523     0209                     u4321:
  6524     0209  082E               	movf	??___flmul+2,w
  6525     020A  1103               	clrz
  6526     020B  1803               	skipnc
  6527     020C  3E01               	addlw	1
  6528     020D  1903               	skipnz
  6529     020E  2A10               	goto	u4322
  6530     020F  07BA               	addwf	___flmul@prod+2,f
  6531     0210                     u4322:
  6532     0210  082F               	movf	??___flmul+3,w
  6533     0211  1103               	clrz
  6534     0212  1803               	skipnc
  6535     0213  3E01               	addlw	1
  6536     0214  1903               	skipnz
  6537     0215  2A17               	goto	u4323
  6538     0216  07BB               	addwf	___flmul@prod+3,f
  6539     0217                     u4323:
  6540     0217  0826               	movf	___flmul@b+2,w
  6541     0218  00F0               	movwf	__Umul8_16@multiplicand
  6542     0219  0828               	movf	___flmul@a,w
  6543     021A  160A  158A  2154  120A  118A  	fcall	__Umul8_16
  6544     021F  0871               	movf	?__Umul8_16+1,w
  6545     0220  1283               	bcf	3,5	;RP0=0, select bank0
  6546     0221  1303               	bcf	3,6	;RP1=0, select bank0
  6547     0222  00BD               	movwf	___flmul@temp+1
  6548     0223  0870               	movf	?__Umul8_16,w
  6549     0224  00BC               	movwf	___flmul@temp
  6550     0225                     l3175:
  6551     0225  083C               	movf	___flmul@temp,w
  6552     0226  00AC               	movwf	??___flmul
  6553     0227  01AD               	clrf	??___flmul+1
  6554     0228  01AE               	clrf	??___flmul+2
  6555     0229  01AF               	clrf	??___flmul+3
  6556     022A  082C               	movf	??___flmul,w
  6557     022B  07B2               	addwf	___flmul@grs,f
  6558     022C  082D               	movf	??___flmul+1,w
  6559     022D  1103               	clrz
  6560     022E  1803               	skipnc
  6561     022F  3E01               	addlw	1
  6562     0230  1903               	skipnz
  6563     0231  2A33               	goto	u4331
  6564     0232  07B3               	addwf	___flmul@grs+1,f
  6565     0233                     u4331:
  6566     0233  082E               	movf	??___flmul+2,w
  6567     0234  1103               	clrz
  6568     0235  1803               	skipnc
  6569     0236  3E01               	addlw	1
  6570     0237  1903               	skipnz
  6571     0238  2A3A               	goto	u4332
  6572     0239  07B4               	addwf	___flmul@grs+2,f
  6573     023A                     u4332:
  6574     023A  082F               	movf	??___flmul+3,w
  6575     023B  1103               	clrz
  6576     023C  1803               	skipnc
  6577     023D  3E01               	addlw	1
  6578     023E  1903               	skipnz
  6579     023F  2A41               	goto	u4333
  6580     0240  07B5               	addwf	___flmul@grs+3,f
  6581     0241                     u4333:
  6582     0241                     l3177:
  6583     0241  083D               	movf	___flmul@temp+1,w
  6584     0242  00AC               	movwf	??___flmul
  6585     0243  01AD               	clrf	??___flmul+1
  6586     0244  01AE               	clrf	??___flmul+2
  6587     0245  01AF               	clrf	??___flmul+3
  6588     0246  082C               	movf	??___flmul,w
  6589     0247  07B8               	addwf	___flmul@prod,f
  6590     0248  082D               	movf	??___flmul+1,w
  6591     0249  1103               	clrz
  6592     024A  1803               	skipnc
  6593     024B  3E01               	addlw	1
  6594     024C  1903               	skipnz
  6595     024D  2A4F               	goto	u4341
  6596     024E  07B9               	addwf	___flmul@prod+1,f
  6597     024F                     u4341:
  6598     024F  082E               	movf	??___flmul+2,w
  6599     0250  1103               	clrz
  6600     0251  1803               	skipnc
  6601     0252  3E01               	addlw	1
  6602     0253  1903               	skipnz
  6603     0254  2A56               	goto	u4342
  6604     0255  07BA               	addwf	___flmul@prod+2,f
  6605     0256                     u4342:
  6606     0256  082F               	movf	??___flmul+3,w
  6607     0257  1103               	clrz
  6608     0258  1803               	skipnc
  6609     0259  3E01               	addlw	1
  6610     025A  1903               	skipnz
  6611     025B  2A5D               	goto	u4343
  6612     025C  07BB               	addwf	___flmul@prod+3,f
  6613     025D                     u4343:
  6614     025D                     l3179:
  6615     025D  3008               	movlw	8
  6616     025E  00AC               	movwf	??___flmul
  6617     025F                     u4355:
  6618     025F  1003               	clrc
  6619     0260  0DB2               	rlf	___flmul@grs,f
  6620     0261  0DB3               	rlf	___flmul@grs+1,f
  6621     0262  0DB4               	rlf	___flmul@grs+2,f
  6622     0263  0DB5               	rlf	___flmul@grs+3,f
  6623     0264  0BAC               	decfsz	??___flmul,f
  6624     0265  2A5F               	goto	u4355
  6625     0266                     l3181:
  6626     0266  0825               	movf	___flmul@b+1,w
  6627     0267  00F0               	movwf	__Umul8_16@multiplicand
  6628     0268  0828               	movf	___flmul@a,w
  6629     0269  160A  158A  2154  120A  118A  	fcall	__Umul8_16
  6630     026E  0871               	movf	?__Umul8_16+1,w
  6631     026F  1283               	bcf	3,5	;RP0=0, select bank0
  6632     0270  1303               	bcf	3,6	;RP1=0, select bank0
  6633     0271  00BD               	movwf	___flmul@temp+1
  6634     0272  0870               	movf	?__Umul8_16,w
  6635     0273  00BC               	movwf	___flmul@temp
  6636     0274                     l3183:
  6637     0274  083C               	movf	___flmul@temp,w
  6638     0275  00AC               	movwf	??___flmul
  6639     0276  083D               	movf	___flmul@temp+1,w
  6640     0277  00AD               	movwf	??___flmul+1
  6641     0278  01AE               	clrf	??___flmul+2
  6642     0279  01AF               	clrf	??___flmul+3
  6643     027A  082C               	movf	??___flmul,w
  6644     027B  07B2               	addwf	___flmul@grs,f
  6645     027C  082D               	movf	??___flmul+1,w
  6646     027D  1103               	clrz
  6647     027E  1803               	skipnc
  6648     027F  3E01               	addlw	1
  6649     0280  1903               	skipnz
  6650     0281  2A83               	goto	u4361
  6651     0282  07B3               	addwf	___flmul@grs+1,f
  6652     0283                     u4361:
  6653     0283  082E               	movf	??___flmul+2,w
  6654     0284  1103               	clrz
  6655     0285  1803               	skipnc
  6656     0286  3E01               	addlw	1
  6657     0287  1903               	skipnz
  6658     0288  2A8A               	goto	u4362
  6659     0289  07B4               	addwf	___flmul@grs+2,f
  6660     028A                     u4362:
  6661     028A  082F               	movf	??___flmul+3,w
  6662     028B  1103               	clrz
  6663     028C  1803               	skipnc
  6664     028D  3E01               	addlw	1
  6665     028E  1903               	skipnz
  6666     028F  2A91               	goto	u4363
  6667     0290  07B5               	addwf	___flmul@grs+3,f
  6668     0291                     u4363:
  6669     0291                     l3185:
  6670     0291  0824               	movf	___flmul@b,w
  6671     0292  00F0               	movwf	__Umul8_16@multiplicand
  6672     0293  0829               	movf	___flmul@a+1,w
  6673     0294  160A  158A  2154  120A  118A  	fcall	__Umul8_16
  6674     0299  0871               	movf	?__Umul8_16+1,w
  6675     029A  1283               	bcf	3,5	;RP0=0, select bank0
  6676     029B  1303               	bcf	3,6	;RP1=0, select bank0
  6677     029C  00BD               	movwf	___flmul@temp+1
  6678     029D  0870               	movf	?__Umul8_16,w
  6679     029E  00BC               	movwf	___flmul@temp
  6680     029F                     l3187:
  6681     029F  083C               	movf	___flmul@temp,w
  6682     02A0  00AC               	movwf	??___flmul
  6683     02A1  083D               	movf	___flmul@temp+1,w
  6684     02A2  00AD               	movwf	??___flmul+1
  6685     02A3  01AE               	clrf	??___flmul+2
  6686     02A4  01AF               	clrf	??___flmul+3
  6687     02A5  082C               	movf	??___flmul,w
  6688     02A6  07B2               	addwf	___flmul@grs,f
  6689     02A7  082D               	movf	??___flmul+1,w
  6690     02A8  1103               	clrz
  6691     02A9  1803               	skipnc
  6692     02AA  3E01               	addlw	1
  6693     02AB  1903               	skipnz
  6694     02AC  2AAE               	goto	u4371
  6695     02AD  07B3               	addwf	___flmul@grs+1,f
  6696     02AE                     u4371:
  6697     02AE  082E               	movf	??___flmul+2,w
  6698     02AF  1103               	clrz
  6699     02B0  1803               	skipnc
  6700     02B1  3E01               	addlw	1
  6701     02B2  1903               	skipnz
  6702     02B3  2AB5               	goto	u4372
  6703     02B4  07B4               	addwf	___flmul@grs+2,f
  6704     02B5                     u4372:
  6705     02B5  082F               	movf	??___flmul+3,w
  6706     02B6  1103               	clrz
  6707     02B7  1803               	skipnc
  6708     02B8  3E01               	addlw	1
  6709     02B9  1903               	skipnz
  6710     02BA  2ABC               	goto	u4373
  6711     02BB  07B5               	addwf	___flmul@grs+3,f
  6712     02BC                     u4373:
  6713     02BC                     l3189:
  6714     02BC  3008               	movlw	8
  6715     02BD  00AC               	movwf	??___flmul
  6716     02BE                     u4385:
  6717     02BE  1003               	clrc
  6718     02BF  0DB2               	rlf	___flmul@grs,f
  6719     02C0  0DB3               	rlf	___flmul@grs+1,f
  6720     02C1  0DB4               	rlf	___flmul@grs+2,f
  6721     02C2  0DB5               	rlf	___flmul@grs+3,f
  6722     02C3  0BAC               	decfsz	??___flmul,f
  6723     02C4  2ABE               	goto	u4385
  6724     02C5  0824               	movf	___flmul@b,w
  6725     02C6  00F0               	movwf	__Umul8_16@multiplicand
  6726     02C7  0828               	movf	___flmul@a,w
  6727     02C8  160A  158A  2154  120A  118A  	fcall	__Umul8_16
  6728     02CD  0871               	movf	?__Umul8_16+1,w
  6729     02CE  1283               	bcf	3,5	;RP0=0, select bank0
  6730     02CF  1303               	bcf	3,6	;RP1=0, select bank0
  6731     02D0  00BD               	movwf	___flmul@temp+1
  6732     02D1  0870               	movf	?__Umul8_16,w
  6733     02D2  00BC               	movwf	___flmul@temp
  6734     02D3                     l3191:
  6735     02D3  083C               	movf	___flmul@temp,w
  6736     02D4  00AC               	movwf	??___flmul
  6737     02D5  083D               	movf	___flmul@temp+1,w
  6738     02D6  00AD               	movwf	??___flmul+1
  6739     02D7  01AE               	clrf	??___flmul+2
  6740     02D8  01AF               	clrf	??___flmul+3
  6741     02D9  082C               	movf	??___flmul,w
  6742     02DA  07B2               	addwf	___flmul@grs,f
  6743     02DB  082D               	movf	??___flmul+1,w
  6744     02DC  1103               	clrz
  6745     02DD  1803               	skipnc
  6746     02DE  3E01               	addlw	1
  6747     02DF  1903               	skipnz
  6748     02E0  2AE2               	goto	u4391
  6749     02E1  07B3               	addwf	___flmul@grs+1,f
  6750     02E2                     u4391:
  6751     02E2  082E               	movf	??___flmul+2,w
  6752     02E3  1103               	clrz
  6753     02E4  1803               	skipnc
  6754     02E5  3E01               	addlw	1
  6755     02E6  1903               	skipnz
  6756     02E7  2AE9               	goto	u4392
  6757     02E8  07B4               	addwf	___flmul@grs+2,f
  6758     02E9                     u4392:
  6759     02E9  082F               	movf	??___flmul+3,w
  6760     02EA  1103               	clrz
  6761     02EB  1803               	skipnc
  6762     02EC  3E01               	addlw	1
  6763     02ED  1903               	skipnz
  6764     02EE  2AF0               	goto	u4393
  6765     02EF  07B5               	addwf	___flmul@grs+3,f
  6766     02F0                     u4393:
  6767     02F0                     l3193:
  6768     02F0  0825               	movf	___flmul@b+1,w
  6769     02F1  00F0               	movwf	__Umul8_16@multiplicand
  6770     02F2  082A               	movf	___flmul@a+2,w
  6771     02F3  160A  158A  2154  120A  118A  	fcall	__Umul8_16
  6772     02F8  0871               	movf	?__Umul8_16+1,w
  6773     02F9  1283               	bcf	3,5	;RP0=0, select bank0
  6774     02FA  1303               	bcf	3,6	;RP1=0, select bank0
  6775     02FB  00BD               	movwf	___flmul@temp+1
  6776     02FC  0870               	movf	?__Umul8_16,w
  6777     02FD  00BC               	movwf	___flmul@temp
  6778     02FE  083C               	movf	___flmul@temp,w
  6779     02FF  00AC               	movwf	??___flmul
  6780     0300  083D               	movf	___flmul@temp+1,w
  6781     0301  00AD               	movwf	??___flmul+1
  6782     0302  01AE               	clrf	??___flmul+2
  6783     0303  01AF               	clrf	??___flmul+3
  6784     0304  082C               	movf	??___flmul,w
  6785     0305  07B8               	addwf	___flmul@prod,f
  6786     0306  082D               	movf	??___flmul+1,w
  6787     0307  1103               	clrz
  6788     0308  1803               	skipnc
  6789     0309  3E01               	addlw	1
  6790     030A  1903               	skipnz
  6791     030B  2B0D               	goto	u4401
  6792     030C  07B9               	addwf	___flmul@prod+1,f
  6793     030D                     u4401:
  6794     030D  082E               	movf	??___flmul+2,w
  6795     030E  1103               	clrz
  6796     030F  1803               	skipnc
  6797     0310  3E01               	addlw	1
  6798     0311  1903               	skipnz
  6799     0312  2B14               	goto	u4402
  6800     0313  07BA               	addwf	___flmul@prod+2,f
  6801     0314                     u4402:
  6802     0314  082F               	movf	??___flmul+3,w
  6803     0315  1103               	clrz
  6804     0316  1803               	skipnc
  6805     0317  3E01               	addlw	1
  6806     0318  1903               	skipnz
  6807     0319  2B1B               	goto	u4403
  6808     031A  07BB               	addwf	___flmul@prod+3,f
  6809     031B                     u4403:
  6810     031B                     l3195:
  6811     031B  0826               	movf	___flmul@b+2,w
  6812     031C  00F0               	movwf	__Umul8_16@multiplicand
  6813     031D  0829               	movf	___flmul@a+1,w
  6814     031E  160A  158A  2154  120A  118A  	fcall	__Umul8_16
  6815     0323  0871               	movf	?__Umul8_16+1,w
  6816     0324  1283               	bcf	3,5	;RP0=0, select bank0
  6817     0325  1303               	bcf	3,6	;RP1=0, select bank0
  6818     0326  00BD               	movwf	___flmul@temp+1
  6819     0327  0870               	movf	?__Umul8_16,w
  6820     0328  00BC               	movwf	___flmul@temp
  6821     0329                     l3197:
  6822     0329  083C               	movf	___flmul@temp,w
  6823     032A  00AC               	movwf	??___flmul
  6824     032B  083D               	movf	___flmul@temp+1,w
  6825     032C  00AD               	movwf	??___flmul+1
  6826     032D  01AE               	clrf	??___flmul+2
  6827     032E  01AF               	clrf	??___flmul+3
  6828     032F  082C               	movf	??___flmul,w
  6829     0330  07B8               	addwf	___flmul@prod,f
  6830     0331  082D               	movf	??___flmul+1,w
  6831     0332  1103               	clrz
  6832     0333  1803               	skipnc
  6833     0334  3E01               	addlw	1
  6834     0335  1903               	skipnz
  6835     0336  2B38               	goto	u4411
  6836     0337  07B9               	addwf	___flmul@prod+1,f
  6837     0338                     u4411:
  6838     0338  082E               	movf	??___flmul+2,w
  6839     0339  1103               	clrz
  6840     033A  1803               	skipnc
  6841     033B  3E01               	addlw	1
  6842     033C  1903               	skipnz
  6843     033D  2B3F               	goto	u4412
  6844     033E  07BA               	addwf	___flmul@prod+2,f
  6845     033F                     u4412:
  6846     033F  082F               	movf	??___flmul+3,w
  6847     0340  1103               	clrz
  6848     0341  1803               	skipnc
  6849     0342  3E01               	addlw	1
  6850     0343  1903               	skipnz
  6851     0344  2B46               	goto	u4413
  6852     0345  07BB               	addwf	___flmul@prod+3,f
  6853     0346                     u4413:
  6854     0346  0826               	movf	___flmul@b+2,w
  6855     0347  00F0               	movwf	__Umul8_16@multiplicand
  6856     0348  082A               	movf	___flmul@a+2,w
  6857     0349  160A  158A  2154  120A  118A  	fcall	__Umul8_16
  6858     034E  0871               	movf	?__Umul8_16+1,w
  6859     034F  1283               	bcf	3,5	;RP0=0, select bank0
  6860     0350  1303               	bcf	3,6	;RP1=0, select bank0
  6861     0351  00BD               	movwf	___flmul@temp+1
  6862     0352  0870               	movf	?__Umul8_16,w
  6863     0353  00BC               	movwf	___flmul@temp
  6864     0354                     l3199:
  6865     0354  083C               	movf	___flmul@temp,w
  6866     0355  00AC               	movwf	??___flmul
  6867     0356  083D               	movf	___flmul@temp+1,w
  6868     0357  00AD               	movwf	??___flmul+1
  6869     0358  01AE               	clrf	??___flmul+2
  6870     0359  01AF               	clrf	??___flmul+3
  6871     035A  3008               	movlw	8
  6872     035B                     u4425:
  6873     035B  1003               	clrc
  6874     035C  0DAC               	rlf	??___flmul,f
  6875     035D  0DAD               	rlf	??___flmul+1,f
  6876     035E  0DAE               	rlf	??___flmul+2,f
  6877     035F  0DAF               	rlf	??___flmul+3,f
  6878     0360                     u4420:
  6879     0360  3EFF               	addlw	-1
  6880     0361  1D03               	skipz
  6881     0362  2B5B               	goto	u4425
  6882     0363  082C               	movf	??___flmul,w
  6883     0364  07B8               	addwf	___flmul@prod,f
  6884     0365  082D               	movf	??___flmul+1,w
  6885     0366  1103               	clrz
  6886     0367  1803               	skipnc
  6887     0368  3E01               	addlw	1
  6888     0369  1903               	skipnz
  6889     036A  2B6C               	goto	u4431
  6890     036B  07B9               	addwf	___flmul@prod+1,f
  6891     036C                     u4431:
  6892     036C  082E               	movf	??___flmul+2,w
  6893     036D  1103               	clrz
  6894     036E  1803               	skipnc
  6895     036F  3E01               	addlw	1
  6896     0370  1903               	skipnz
  6897     0371  2B73               	goto	u4432
  6898     0372  07BA               	addwf	___flmul@prod+2,f
  6899     0373                     u4432:
  6900     0373  082F               	movf	??___flmul+3,w
  6901     0374  1103               	clrz
  6902     0375  1803               	skipnc
  6903     0376  3E01               	addlw	1
  6904     0377  1903               	skipnz
  6905     0378  2B7A               	goto	u4433
  6906     0379  07BB               	addwf	___flmul@prod+3,f
  6907     037A                     u4433:
  6908     037A                     l3201:
  6909     037A  0832               	movf	___flmul@grs,w
  6910     037B  00AC               	movwf	??___flmul
  6911     037C  0833               	movf	___flmul@grs+1,w
  6912     037D  00AD               	movwf	??___flmul+1
  6913     037E  0834               	movf	___flmul@grs+2,w
  6914     037F  00AE               	movwf	??___flmul+2
  6915     0380  0835               	movf	___flmul@grs+3,w
  6916     0381  00AF               	movwf	??___flmul+3
  6917     0382  3018               	movlw	24
  6918     0383                     u4445:
  6919     0383  1003               	clrc
  6920     0384  0CAF               	rrf	??___flmul+3,f
  6921     0385  0CAE               	rrf	??___flmul+2,f
  6922     0386  0CAD               	rrf	??___flmul+1,f
  6923     0387  0CAC               	rrf	??___flmul,f
  6924     0388                     u4440:
  6925     0388  3EFF               	addlw	-1
  6926     0389  1D03               	skipz
  6927     038A  2B83               	goto	u4445
  6928     038B  082C               	movf	??___flmul,w
  6929     038C  07B8               	addwf	___flmul@prod,f
  6930     038D  082D               	movf	??___flmul+1,w
  6931     038E  1103               	clrz
  6932     038F  1803               	skipnc
  6933     0390  3E01               	addlw	1
  6934     0391  1903               	skipnz
  6935     0392  2B94               	goto	u4451
  6936     0393  07B9               	addwf	___flmul@prod+1,f
  6937     0394                     u4451:
  6938     0394  082E               	movf	??___flmul+2,w
  6939     0395  1103               	clrz
  6940     0396  1803               	skipnc
  6941     0397  3E01               	addlw	1
  6942     0398  1903               	skipnz
  6943     0399  2B9B               	goto	u4452
  6944     039A  07BA               	addwf	___flmul@prod+2,f
  6945     039B                     u4452:
  6946     039B  082F               	movf	??___flmul+3,w
  6947     039C  1103               	clrz
  6948     039D  1803               	skipnc
  6949     039E  3E01               	addlw	1
  6950     039F  1903               	skipnz
  6951     03A0  2BA2               	goto	u4453
  6952     03A1  07BB               	addwf	___flmul@prod+3,f
  6953     03A2                     u4453:
  6954     03A2                     l3203:
  6955     03A2  3008               	movlw	8
  6956     03A3  00AC               	movwf	??___flmul
  6957     03A4                     u4465:
  6958     03A4  1003               	clrc
  6959     03A5  0DB2               	rlf	___flmul@grs,f
  6960     03A6  0DB3               	rlf	___flmul@grs+1,f
  6961     03A7  0DB4               	rlf	___flmul@grs+2,f
  6962     03A8  0DB5               	rlf	___flmul@grs+3,f
  6963     03A9  0BAC               	decfsz	??___flmul,f
  6964     03AA  2BA4               	goto	u4465
  6965     03AB                     l3205:
  6966     03AB  0837               	movf	___flmul@bexp,w
  6967     03AC  0736               	addwf	___flmul@aexp,w
  6968     03AD  00AC               	movwf	??___flmul
  6969     03AE  01AD               	clrf	??___flmul+1
  6970     03AF  0DAD               	rlf	??___flmul+1,f
  6971     03B0  082C               	movf	??___flmul,w
  6972     03B1  3E82               	addlw	130
  6973     03B2  00BC               	movwf	___flmul@temp
  6974     03B3  082D               	movf	??___flmul+1,w
  6975     03B4  1803               	skipnc
  6976     03B5  3E01               	addlw	1
  6977     03B6  3EFF               	addlw	255
  6978     03B7  00BD               	movwf	___flmul@temp+1
  6979     03B8  2BD6               	goto	l3217
  6980     03B9                     l3207:
  6981     03B9  3001               	movlw	1
  6982     03BA  00AC               	movwf	??___flmul
  6983     03BB                     u4475:
  6984     03BB  1003               	clrc
  6985     03BC  0DB8               	rlf	___flmul@prod,f
  6986     03BD  0DB9               	rlf	___flmul@prod+1,f
  6987     03BE  0DBA               	rlf	___flmul@prod+2,f
  6988     03BF  0DBB               	rlf	___flmul@prod+3,f
  6989     03C0  0BAC               	decfsz	??___flmul,f
  6990     03C1  2BBB               	goto	u4475
  6991     03C2                     l3209:
  6992     03C2  1FB5               	btfss	___flmul@grs+3,7
  6993     03C3  2BC5               	goto	u4481
  6994     03C4  2BC6               	goto	u4480
  6995     03C5                     u4481:
  6996     03C5  2BC7               	goto	l3213
  6997     03C6                     u4480:
  6998     03C6                     l3211:
  6999     03C6  1438               	bsf	___flmul@prod,0
  7000     03C7                     l3213:
  7001     03C7  3001               	movlw	1
  7002     03C8  00AC               	movwf	??___flmul
  7003     03C9                     u4495:
  7004     03C9  1003               	clrc
  7005     03CA  0DB2               	rlf	___flmul@grs,f
  7006     03CB  0DB3               	rlf	___flmul@grs+1,f
  7007     03CC  0DB4               	rlf	___flmul@grs+2,f
  7008     03CD  0DB5               	rlf	___flmul@grs+3,f
  7009     03CE  0BAC               	decfsz	??___flmul,f
  7010     03CF  2BC9               	goto	u4495
  7011     03D0                     l3215:
  7012     03D0  30FF               	movlw	255
  7013     03D1  07BC               	addwf	___flmul@temp,f
  7014     03D2  1803               	skipnc
  7015     03D3  0ABD               	incf	___flmul@temp+1,f
  7016     03D4  30FF               	movlw	255
  7017     03D5  07BD               	addwf	___flmul@temp+1,f
  7018     03D6                     l3217:
  7019     03D6  1FBA               	btfss	___flmul@prod+2,7
  7020     03D7  2BD9               	goto	u4501
  7021     03D8  2BDA               	goto	u4500
  7022     03D9                     u4501:
  7023     03D9  2BB9               	goto	l3207
  7024     03DA                     u4500:
  7025     03DA                     l3219:
  7026     03DA  01B6               	clrf	___flmul@aexp
  7027     03DB                     l3221:
  7028     03DB  1FB5               	btfss	___flmul@grs+3,7
  7029     03DC  2BDE               	goto	u4511
  7030     03DD  2BDF               	goto	u4510
  7031     03DE                     u4511:
  7032     03DE  2BFB               	goto	l3229
  7033     03DF                     u4510:
  7034     03DF                     l3223:
  7035     03DF  30FF               	movlw	255
  7036     03E0  0532               	andwf	___flmul@grs,w
  7037     03E1  00AC               	movwf	??___flmul
  7038     03E2  30FF               	movlw	255
  7039     03E3  0533               	andwf	___flmul@grs+1,w
  7040     03E4  00AD               	movwf	??___flmul+1
  7041     03E5  30FF               	movlw	255
  7042     03E6  0534               	andwf	___flmul@grs+2,w
  7043     03E7  00AE               	movwf	??___flmul+2
  7044     03E8  307F               	movlw	127
  7045     03E9  0535               	andwf	___flmul@grs+3,w
  7046     03EA  00AF               	movwf	??___flmul+3
  7047     03EB  082F               	movf	??___flmul+3,w
  7048     03EC  042E               	iorwf	??___flmul+2,w
  7049     03ED  042D               	iorwf	??___flmul+1,w
  7050     03EE  042C               	iorwf	??___flmul,w
  7051     03EF  1903               	skipnz
  7052     03F0  2BF2               	goto	u4521
  7053     03F1  2BF3               	goto	u4520
  7054     03F2                     u4521:
  7055     03F2  2BF6               	goto	l915
  7056     03F3                     u4520:
  7057     03F3                     l3225:
  7058     03F3  01B6               	clrf	___flmul@aexp
  7059     03F4  0AB6               	incf	___flmul@aexp,f
  7060     03F5  2BFB               	goto	l3229
  7061     03F6                     l915:
  7062     03F6  1C38               	btfss	___flmul@prod,0
  7063     03F7  2BF9               	goto	u4531
  7064     03F8  2BFA               	goto	u4530
  7065     03F9                     u4531:
  7066     03F9  2BFB               	goto	l3229
  7067     03FA                     u4530:
  7068     03FA  2BF3               	goto	l3225
  7069     03FB                     l3229:
  7070     03FB  0836               	movf	___flmul@aexp,w
  7071     03FC  1903               	btfsc	3,2
  7072     03FD  2BFF               	goto	u4541
  7073     03FE  2C00               	goto	u4540
  7074     03FF                     u4541:
  7075     03FF  2C31               	goto	l3239
  7076     0400                     u4540:
  7077     0400                     l3231:
  7078     0400  3001               	movlw	1
  7079     0401  07B8               	addwf	___flmul@prod,f
  7080     0402  3000               	movlw	0
  7081     0403  1803               	skipnc
  7082     0404  3001               	movlw	1
  7083     0405  07B9               	addwf	___flmul@prod+1,f
  7084     0406  3000               	movlw	0
  7085     0407  1803               	skipnc
  7086     0408  3001               	movlw	1
  7087     0409  07BA               	addwf	___flmul@prod+2,f
  7088     040A  3000               	movlw	0
  7089     040B  1803               	skipnc
  7090     040C  3001               	movlw	1
  7091     040D  07BB               	addwf	___flmul@prod+3,f
  7092     040E                     l3233:
  7093     040E  1C3B               	btfss	___flmul@prod+3,0
  7094     040F  2C11               	goto	u4551
  7095     0410  2C12               	goto	u4550
  7096     0411                     u4551:
  7097     0411  2C31               	goto	l3239
  7098     0412                     u4550:
  7099     0412                     l3235:
  7100     0412  0838               	movf	___flmul@prod,w
  7101     0413  00AC               	movwf	??___flmul
  7102     0414  0839               	movf	___flmul@prod+1,w
  7103     0415  00AD               	movwf	??___flmul+1
  7104     0416  083A               	movf	___flmul@prod+2,w
  7105     0417  00AE               	movwf	??___flmul+2
  7106     0418  083B               	movf	___flmul@prod+3,w
  7107     0419  00AF               	movwf	??___flmul+3
  7108     041A  3001               	movlw	1
  7109     041B  00B0               	movwf	??___flmul+4
  7110     041C                     u4565:
  7111     041C  0D2F               	rlf	??___flmul+3,w
  7112     041D  0CAF               	rrf	??___flmul+3,f
  7113     041E  0CAE               	rrf	??___flmul+2,f
  7114     041F  0CAD               	rrf	??___flmul+1,f
  7115     0420  0CAC               	rrf	??___flmul,f
  7116     0421                     u4560:
  7117     0421  0BB0               	decfsz	??___flmul+4,f
  7118     0422  2C1C               	goto	u4565
  7119     0423  082F               	movf	??___flmul+3,w
  7120     0424  00BB               	movwf	___flmul@prod+3
  7121     0425  082E               	movf	??___flmul+2,w
  7122     0426  00BA               	movwf	___flmul@prod+2
  7123     0427  082D               	movf	??___flmul+1,w
  7124     0428  00B9               	movwf	___flmul@prod+1
  7125     0429  082C               	movf	??___flmul,w
  7126     042A  00B8               	movwf	___flmul@prod
  7127     042B                     l3237:
  7128     042B  3001               	movlw	1
  7129     042C  07BC               	addwf	___flmul@temp,f
  7130     042D  1803               	skipnc
  7131     042E  0ABD               	incf	___flmul@temp+1,f
  7132     042F  3000               	movlw	0
  7133     0430  07BD               	addwf	___flmul@temp+1,f
  7134     0431                     l3239:
  7135     0431  083D               	movf	___flmul@temp+1,w
  7136     0432  3A80               	xorlw	128
  7137     0433  00FF               	movwf	btemp+1
  7138     0434  3080               	movlw	128
  7139     0435  027F               	subwf	btemp+1,w
  7140     0436  1D03               	skipz
  7141     0437  2C3A               	goto	u4575
  7142     0438  30FF               	movlw	255
  7143     0439  023C               	subwf	___flmul@temp,w
  7144     043A                     u4575:
  7145     043A  1C03               	skipc
  7146     043B  2C3D               	goto	u4571
  7147     043C  2C3E               	goto	u4570
  7148     043D                     u4571:
  7149     043D  2C49               	goto	l3243
  7150     043E                     u4570:
  7151     043E                     l3241:
  7152     043E  307F               	movlw	127
  7153     043F  1283               	bcf	3,5	;RP0=0, select bank0
  7154     0440  1303               	bcf	3,6	;RP1=0, select bank0
  7155     0441  00BB               	movwf	___flmul@prod+3
  7156     0442  3080               	movlw	128
  7157     0443  00BA               	movwf	___flmul@prod+2
  7158     0444  3000               	movlw	0
  7159     0445  00B9               	movwf	___flmul@prod+1
  7160     0446  3000               	movlw	0
  7161     0447  00B8               	movwf	___flmul@prod
  7162     0448  2C7A               	goto	l921
  7163     0449                     l3243:
  7164     0449  1283               	bcf	3,5	;RP0=0, select bank0
  7165     044A  1303               	bcf	3,6	;RP1=0, select bank0
  7166     044B  083D               	movf	___flmul@temp+1,w
  7167     044C  3A80               	xorlw	128
  7168     044D  00FF               	movwf	btemp+1
  7169     044E  3080               	movlw	128
  7170     044F  027F               	subwf	btemp+1,w
  7171     0450  1D03               	skipz
  7172     0451  2C54               	goto	u4585
  7173     0452  3001               	movlw	1
  7174     0453  023C               	subwf	___flmul@temp,w
  7175     0454                     u4585:
  7176     0454  1803               	skipnc
  7177     0455  2C57               	goto	u4581
  7178     0456  2C58               	goto	u4580
  7179     0457                     u4581:
  7180     0457  2C64               	goto	l3249
  7181     0458                     u4580:
  7182     0458                     l3245:
  7183     0458  3000               	movlw	0
  7184     0459  1283               	bcf	3,5	;RP0=0, select bank0
  7185     045A  1303               	bcf	3,6	;RP1=0, select bank0
  7186     045B  00BB               	movwf	___flmul@prod+3
  7187     045C  3000               	movlw	0
  7188     045D  00BA               	movwf	___flmul@prod+2
  7189     045E  3000               	movlw	0
  7190     045F  00B9               	movwf	___flmul@prod+1
  7191     0460  3000               	movlw	0
  7192     0461  00B8               	movwf	___flmul@prod
  7193     0462                     l3247:
  7194     0462  01B1               	clrf	___flmul@sign
  7195     0463  2C7A               	goto	l921
  7196     0464                     l3249:
  7197     0464  1283               	bcf	3,5	;RP0=0, select bank0
  7198     0465  1303               	bcf	3,6	;RP1=0, select bank0
  7199     0466  083C               	movf	___flmul@temp,w
  7200     0467  00B7               	movwf	___flmul@bexp
  7201     0468  30FF               	movlw	255
  7202     0469  05B8               	andwf	___flmul@prod,f
  7203     046A  30FF               	movlw	255
  7204     046B  05B9               	andwf	___flmul@prod+1,f
  7205     046C  307F               	movlw	127
  7206     046D  05BA               	andwf	___flmul@prod+2,f
  7207     046E  3000               	movlw	0
  7208     046F  05BB               	andwf	___flmul@prod+3,f
  7209     0470                     l3251:
  7210     0470  1C37               	btfss	___flmul@bexp,0
  7211     0471  2C73               	goto	u4591
  7212     0472  2C74               	goto	u4590
  7213     0473                     u4591:
  7214     0473  2C75               	goto	l3255
  7215     0474                     u4590:
  7216     0474                     l3253:
  7217     0474  17BA               	bsf	___flmul@prod+2,7
  7218     0475                     l3255:
  7219     0475  0837               	movf	___flmul@bexp,w
  7220     0476  00AC               	movwf	??___flmul
  7221     0477  1003               	clrc
  7222     0478  0C2C               	rrf	??___flmul,w
  7223     0479  00BB               	movwf	___flmul@prod+3
  7224     047A                     l921:
  7225     047A  0831               	movf	___flmul@sign,w
  7226     047B  00AC               	movwf	??___flmul
  7227     047C  082C               	movf	??___flmul,w
  7228     047D  04BB               	iorwf	___flmul@prod+3,f
  7229     047E                     l3257:
  7230     047E  083B               	movf	___flmul@prod+3,w
  7231     047F  00A7               	movwf	?___flmul+3
  7232     0480  083A               	movf	___flmul@prod+2,w
  7233     0481  00A6               	movwf	?___flmul+2
  7234     0482  0839               	movf	___flmul@prod+1,w
  7235     0483  00A5               	movwf	?___flmul+1
  7236     0484  0838               	movf	___flmul@prod,w
  7237     0485  00A4               	movwf	?___flmul
  7238     0486                     l909:
  7239     0486  0008               	return
  7240     0487                     __end_of___flmul:
  7241                           
  7242                           	psect	text10
  7243     1954                     __ptext10:	
  7244 ;; *************** function __Umul8_16 *****************
  7245 ;; Defined at:
  7246 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  7247 ;; Parameters:    Size  Location     Type
  7248 ;;  multiplier      1    wreg     unsigned char 
  7249 ;;  multiplicand    1    0[COMMON] unsigned char 
  7250 ;; Auto vars:     Size  Location     Type
  7251 ;;  multiplier      1    8[COMMON] unsigned char 
  7252 ;;  word_mpld       2    6[COMMON] unsigned int 
  7253 ;;  product         2    4[COMMON] unsigned int 
  7254 ;; Return value:  Size  Location     Type
  7255 ;;                  2    0[COMMON] unsigned int 
  7256 ;; Registers used:
  7257 ;;		wreg, status,2, status,0
  7258 ;; Tracked objects:
  7259 ;;		On entry : 0/0
  7260 ;;		On exit  : 0/0
  7261 ;;		Unchanged: 0/0
  7262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7263 ;;      Params:         2       0       0       0       0
  7264 ;;      Locals:         5       0       0       0       0
  7265 ;;      Temps:          2       0       0       0       0
  7266 ;;      Totals:         9       0       0       0       0
  7267 ;;Total ram usage:        9 bytes
  7268 ;; Hardware stack levels used: 1
  7269 ;; This function calls:
  7270 ;;		Nothing
  7271 ;; This function is called by:
  7272 ;;		___flmul
  7273 ;; This function uses a non-reentrant model
  7274 ;;
  7275                           
  7276     1954                     __Umul8_16:	
  7277                           ;psect for function __Umul8_16
  7278                           
  7279                           
  7280                           ;incstack = 0
  7281                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7282                           ;__Umul8_16@multiplier stored from wreg
  7283     1954  00F8               	movwf	__Umul8_16@multiplier
  7284     1955                     l2745:
  7285     1955  01F4               	clrf	__Umul8_16@product
  7286     1956  01F5               	clrf	__Umul8_16@product+1
  7287     1957                     l2747:
  7288     1957  0870               	movf	__Umul8_16@multiplicand,w
  7289     1958  00F2               	movwf	??__Umul8_16
  7290     1959  01F3               	clrf	??__Umul8_16+1
  7291     195A  0872               	movf	??__Umul8_16,w
  7292     195B  00F6               	movwf	__Umul8_16@word_mpld
  7293     195C  0873               	movf	??__Umul8_16+1,w
  7294     195D  00F7               	movwf	__Umul8_16@word_mpld+1
  7295     195E                     l2749:
  7296     195E  1C78               	btfss	__Umul8_16@multiplier,0
  7297     195F  2961               	goto	u3371
  7298     1960  2962               	goto	u3370
  7299     1961                     u3371:
  7300     1961  2968               	goto	l928
  7301     1962                     u3370:
  7302     1962                     l2751:
  7303     1962  0876               	movf	__Umul8_16@word_mpld,w
  7304     1963  07F4               	addwf	__Umul8_16@product,f
  7305     1964  1803               	skipnc
  7306     1965  0AF5               	incf	__Umul8_16@product+1,f
  7307     1966  0877               	movf	__Umul8_16@word_mpld+1,w
  7308     1967  07F5               	addwf	__Umul8_16@product+1,f
  7309     1968                     l928:
  7310     1968  3001               	movlw	1
  7311     1969                     u3385:
  7312     1969  1003               	clrc
  7313     196A  0DF6               	rlf	__Umul8_16@word_mpld,f
  7314     196B  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  7315     196C  3EFF               	addlw	-1
  7316     196D  1D03               	skipz
  7317     196E  2969               	goto	u3385
  7318     196F  1003               	clrc
  7319     1970  0CF8               	rrf	__Umul8_16@multiplier,f
  7320     1971                     l2753:
  7321     1971  0878               	movf	__Umul8_16@multiplier,w
  7322     1972  1D03               	btfss	3,2
  7323     1973  2975               	goto	u3391
  7324     1974  2976               	goto	u3390
  7325     1975                     u3391:
  7326     1975  295E               	goto	l2749
  7327     1976                     u3390:
  7328     1976                     l2755:
  7329     1976  0875               	movf	__Umul8_16@product+1,w
  7330     1977  00F1               	movwf	?__Umul8_16+1
  7331     1978  0874               	movf	__Umul8_16@product,w
  7332     1979  00F0               	movwf	?__Umul8_16
  7333     197A                     l930:
  7334     197A  0008               	return
  7335     197B                     __end_of__Umul8_16:
  7336                           
  7337                           	psect	text11
  7338     1D76                     __ptext11:	
  7339 ;; *************** function __tdiv_to_l_ *****************
  7340 ;; Defined at:
  7341 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftdivl.c"
  7342 ;; Parameters:    Size  Location     Type
  7343 ;;  f1              4    0[COMMON] float 
  7344 ;;  f2              4    4[COMMON] float 
  7345 ;; Auto vars:     Size  Location     Type
  7346 ;;  quot            4    0[BANK0 ] unsigned long 
  7347 ;;  exp1            1    5[BANK0 ] unsigned char 
  7348 ;;  cntr            1    4[BANK0 ] unsigned char 
  7349 ;; Return value:  Size  Location     Type
  7350 ;;                  4    0[COMMON] unsigned long 
  7351 ;; Registers used:
  7352 ;;		wreg, status,2, status,0
  7353 ;; Tracked objects:
  7354 ;;		On entry : 0/0
  7355 ;;		On exit  : 0/0
  7356 ;;		Unchanged: 0/0
  7357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7358 ;;      Params:         8       0       0       0       0
  7359 ;;      Locals:         0       6       0       0       0
  7360 ;;      Temps:          3       0       0       0       0
  7361 ;;      Totals:        11       6       0       0       0
  7362 ;;Total ram usage:       17 bytes
  7363 ;; Hardware stack levels used: 1
  7364 ;; This function calls:
  7365 ;;		Nothing
  7366 ;; This function is called by:
  7367 ;;		_sprintf
  7368 ;; This function uses a non-reentrant model
  7369 ;;
  7370                           
  7371     1D76                     __tdiv_to_l_:	
  7372                           ;psect for function __tdiv_to_l_
  7373                           
  7374     1D76                     l3333:	
  7375                           ;incstack = 0
  7376                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  7377                           
  7378     1D76  0870               	movf	__tdiv_to_l_@f1,w
  7379     1D77  00F8               	movwf	??__tdiv_to_l_
  7380     1D78  0871               	movf	__tdiv_to_l_@f1+1,w
  7381     1D79  00F9               	movwf	??__tdiv_to_l_+1
  7382     1D7A  0872               	movf	__tdiv_to_l_@f1+2,w
  7383     1D7B  00FA               	movwf	??__tdiv_to_l_+2
  7384     1D7C  1003               	clrc
  7385     1D7D  0D79               	rlf	??__tdiv_to_l_+1,w
  7386     1D7E  0D7A               	rlf	??__tdiv_to_l_+2,w
  7387     1D7F  1283               	bcf	3,5	;RP0=0, select bank0
  7388     1D80  1303               	bcf	3,6	;RP1=0, select bank0
  7389     1D81  00A5               	movwf	__tdiv_to_l_@exp1
  7390     1D82  0825               	movf	__tdiv_to_l_@exp1,w
  7391     1D83  1D03               	btfss	3,2
  7392     1D84  2D86               	goto	u4881
  7393     1D85  2D87               	goto	u4880
  7394     1D86                     u4881:
  7395     1D86  2D90               	goto	l3339
  7396     1D87                     u4880:
  7397     1D87                     l3335:
  7398     1D87  3000               	movlw	0
  7399     1D88  00F3               	movwf	?__tdiv_to_l_+3
  7400     1D89  3000               	movlw	0
  7401     1D8A  00F2               	movwf	?__tdiv_to_l_+2
  7402     1D8B  3000               	movlw	0
  7403     1D8C  00F1               	movwf	?__tdiv_to_l_+1
  7404     1D8D  3000               	movlw	0
  7405     1D8E  00F0               	movwf	?__tdiv_to_l_
  7406     1D8F  2E2C               	goto	l703
  7407     1D90                     l3339:
  7408     1D90  0874               	movf	__tdiv_to_l_@f2,w
  7409     1D91  00F8               	movwf	??__tdiv_to_l_
  7410     1D92  0875               	movf	__tdiv_to_l_@f2+1,w
  7411     1D93  00F9               	movwf	??__tdiv_to_l_+1
  7412     1D94  0876               	movf	__tdiv_to_l_@f2+2,w
  7413     1D95  00FA               	movwf	??__tdiv_to_l_+2
  7414     1D96  1003               	clrc
  7415     1D97  0D79               	rlf	??__tdiv_to_l_+1,w
  7416     1D98  0D7A               	rlf	??__tdiv_to_l_+2,w
  7417     1D99  00A4               	movwf	__tdiv_to_l_@cntr
  7418     1D9A  0824               	movf	__tdiv_to_l_@cntr,w
  7419     1D9B  1D03               	btfss	3,2
  7420     1D9C  2D9E               	goto	u4891
  7421     1D9D  2D9F               	goto	u4890
  7422     1D9E                     u4891:
  7423     1D9E  2DA0               	goto	l704
  7424     1D9F                     u4890:
  7425     1D9F  2D87               	goto	l3335
  7426     1DA0                     l704:
  7427     1DA0  17F1               	bsf	__tdiv_to_l_@f1+1,7
  7428     1DA1                     l3345:
  7429     1DA1  30FF               	movlw	255
  7430     1DA2  05F0               	andwf	__tdiv_to_l_@f1,f
  7431     1DA3  30FF               	movlw	255
  7432     1DA4  05F1               	andwf	__tdiv_to_l_@f1+1,f
  7433     1DA5  3000               	movlw	0
  7434     1DA6  05F2               	andwf	__tdiv_to_l_@f1+2,f
  7435     1DA7                     l3347:
  7436     1DA7  17F5               	bsf	__tdiv_to_l_@f2+1,7
  7437     1DA8  30FF               	movlw	255
  7438     1DA9  05F4               	andwf	__tdiv_to_l_@f2,f
  7439     1DAA  30FF               	movlw	255
  7440     1DAB  05F5               	andwf	__tdiv_to_l_@f2+1,f
  7441     1DAC  3000               	movlw	0
  7442     1DAD  05F6               	andwf	__tdiv_to_l_@f2+2,f
  7443     1DAE  3000               	movlw	0
  7444     1DAF  00A3               	movwf	__tdiv_to_l_@quot+3
  7445     1DB0  3000               	movlw	0
  7446     1DB1  00A2               	movwf	__tdiv_to_l_@quot+2
  7447     1DB2  3000               	movlw	0
  7448     1DB3  00A1               	movwf	__tdiv_to_l_@quot+1
  7449     1DB4  3000               	movlw	0
  7450     1DB5  00A0               	movwf	__tdiv_to_l_@quot
  7451     1DB6                     l3349:
  7452     1DB6  307F               	movlw	127
  7453     1DB7  02A5               	subwf	__tdiv_to_l_@exp1,f
  7454     1DB8                     l3351:
  7455     1DB8  3098               	movlw	152
  7456     1DB9  0724               	addwf	__tdiv_to_l_@cntr,w
  7457     1DBA  00F8               	movwf	??__tdiv_to_l_
  7458     1DBB  0878               	movf	??__tdiv_to_l_,w
  7459     1DBC  02A5               	subwf	__tdiv_to_l_@exp1,f
  7460     1DBD  3018               	movlw	24
  7461     1DBE  00A4               	movwf	__tdiv_to_l_@cntr
  7462     1DBF                     l3353:
  7463     1DBF  3001               	movlw	1
  7464     1DC0  00F8               	movwf	??__tdiv_to_l_
  7465     1DC1                     u4905:
  7466     1DC1  1003               	clrc
  7467     1DC2  0DA0               	rlf	__tdiv_to_l_@quot,f
  7468     1DC3  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7469     1DC4  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7470     1DC5  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7471     1DC6  0BF8               	decfsz	??__tdiv_to_l_,f
  7472     1DC7  2DC1               	goto	u4905
  7473     1DC8                     l3355:
  7474     1DC8  0876               	movf	__tdiv_to_l_@f2+2,w
  7475     1DC9  0272               	subwf	__tdiv_to_l_@f1+2,w
  7476     1DCA  1D03               	skipz
  7477     1DCB  2DD2               	goto	u4915
  7478     1DCC  0875               	movf	__tdiv_to_l_@f2+1,w
  7479     1DCD  0271               	subwf	__tdiv_to_l_@f1+1,w
  7480     1DCE  1D03               	skipz
  7481     1DCF  2DD2               	goto	u4915
  7482     1DD0  0874               	movf	__tdiv_to_l_@f2,w
  7483     1DD1  0270               	subwf	__tdiv_to_l_@f1,w
  7484     1DD2                     u4915:
  7485     1DD2  1C03               	skipc
  7486     1DD3  2DD5               	goto	u4911
  7487     1DD4  2DD6               	goto	u4910
  7488     1DD5                     u4911:
  7489     1DD5  2DE1               	goto	l3361
  7490     1DD6                     u4910:
  7491     1DD6                     l3357:
  7492     1DD6  0874               	movf	__tdiv_to_l_@f2,w
  7493     1DD7  02F0               	subwf	__tdiv_to_l_@f1,f
  7494     1DD8  0875               	movf	__tdiv_to_l_@f2+1,w
  7495     1DD9  1C03               	skipc
  7496     1DDA  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  7497     1DDB  02F1               	subwf	__tdiv_to_l_@f1+1,f
  7498     1DDC  0876               	movf	__tdiv_to_l_@f2+2,w
  7499     1DDD  1C03               	skipc
  7500     1DDE  0A76               	incf	__tdiv_to_l_@f2+2,w
  7501     1DDF  02F2               	subwf	__tdiv_to_l_@f1+2,f
  7502     1DE0                     l3359:
  7503     1DE0  1420               	bsf	__tdiv_to_l_@quot,0
  7504     1DE1                     l3361:
  7505     1DE1  3001               	movlw	1
  7506     1DE2                     u4925:
  7507     1DE2  1003               	clrc
  7508     1DE3  0DF0               	rlf	__tdiv_to_l_@f1,f
  7509     1DE4  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  7510     1DE5  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  7511     1DE6  3EFF               	addlw	-1
  7512     1DE7  1D03               	skipz
  7513     1DE8  2DE2               	goto	u4925
  7514     1DE9                     l3363:
  7515     1DE9  3001               	movlw	1
  7516     1DEA  02A4               	subwf	__tdiv_to_l_@cntr,f
  7517     1DEB  1D03               	btfss	3,2
  7518     1DEC  2DEE               	goto	u4931
  7519     1DED  2DEF               	goto	u4930
  7520     1DEE                     u4931:
  7521     1DEE  2DBF               	goto	l3353
  7522     1DEF                     u4930:
  7523     1DEF                     l707:
  7524     1DEF  1FA5               	btfss	__tdiv_to_l_@exp1,7
  7525     1DF0  2DF2               	goto	u4941
  7526     1DF1  2DF3               	goto	u4940
  7527     1DF2                     u4941:
  7528     1DF2  2E0D               	goto	l3373
  7529     1DF3                     u4940:
  7530     1DF3                     l3365:
  7531     1DF3  0825               	movf	__tdiv_to_l_@exp1,w
  7532     1DF4  3A80               	xorlw	128
  7533     1DF5  3E97               	addlw	151
  7534     1DF6  1803               	skipnc
  7535     1DF7  2DF9               	goto	u4951
  7536     1DF8  2DFA               	goto	u4950
  7537     1DF9                     u4951:
  7538     1DF9  2DFB               	goto	l3371
  7539     1DFA                     u4950:
  7540     1DFA  2D87               	goto	l3335
  7541     1DFB                     l3371:
  7542     1DFB  3001               	movlw	1
  7543     1DFC                     u4965:
  7544     1DFC  1003               	clrc
  7545     1DFD  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  7546     1DFE  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  7547     1DFF  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  7548     1E00  0CA0               	rrf	__tdiv_to_l_@quot,f
  7549     1E01  3EFF               	addlw	-1
  7550     1E02  1D03               	skipz
  7551     1E03  2DFC               	goto	u4965
  7552     1E04  3001               	movlw	1
  7553     1E05  00F8               	movwf	??__tdiv_to_l_
  7554     1E06  0878               	movf	??__tdiv_to_l_,w
  7555     1E07  07A5               	addwf	__tdiv_to_l_@exp1,f
  7556     1E08  1D03               	btfss	3,2
  7557     1E09  2E0B               	goto	u4971
  7558     1E0A  2E0C               	goto	u4970
  7559     1E0B                     u4971:
  7560     1E0B  2DFB               	goto	l3371
  7561     1E0C                     u4970:
  7562     1E0C  2E24               	goto	l3381
  7563     1E0D                     l3373:
  7564     1E0D  3018               	movlw	24
  7565     1E0E  0225               	subwf	__tdiv_to_l_@exp1,w
  7566     1E0F  1C03               	skipc
  7567     1E10  2E12               	goto	u4981
  7568     1E11  2E13               	goto	u4980
  7569     1E12                     u4981:
  7570     1E12  2E1F               	goto	l714
  7571     1E13                     u4980:
  7572     1E13  2D87               	goto	l3335
  7573     1E14                     l3379:
  7574     1E14  3001               	movlw	1
  7575     1E15  00F8               	movwf	??__tdiv_to_l_
  7576     1E16                     u4995:
  7577     1E16  1003               	clrc
  7578     1E17  0DA0               	rlf	__tdiv_to_l_@quot,f
  7579     1E18  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7580     1E19  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7581     1E1A  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7582     1E1B  0BF8               	decfsz	??__tdiv_to_l_,f
  7583     1E1C  2E16               	goto	u4995
  7584     1E1D  3001               	movlw	1
  7585     1E1E  02A5               	subwf	__tdiv_to_l_@exp1,f
  7586     1E1F                     l714:
  7587     1E1F  0825               	movf	__tdiv_to_l_@exp1,w
  7588     1E20  1D03               	btfss	3,2
  7589     1E21  2E23               	goto	u5001
  7590     1E22  2E24               	goto	u5000
  7591     1E23                     u5001:
  7592     1E23  2E14               	goto	l3379
  7593     1E24                     u5000:
  7594     1E24                     l3381:
  7595     1E24  0823               	movf	__tdiv_to_l_@quot+3,w
  7596     1E25  00F3               	movwf	?__tdiv_to_l_+3
  7597     1E26  0822               	movf	__tdiv_to_l_@quot+2,w
  7598     1E27  00F2               	movwf	?__tdiv_to_l_+2
  7599     1E28  0821               	movf	__tdiv_to_l_@quot+1,w
  7600     1E29  00F1               	movwf	?__tdiv_to_l_+1
  7601     1E2A  0820               	movf	__tdiv_to_l_@quot,w
  7602     1E2B  00F0               	movwf	?__tdiv_to_l_
  7603     1E2C                     l703:
  7604     1E2C  0008               	return
  7605     1E2D                     __end_of__tdiv_to_l_:
  7606                           
  7607                           	psect	text12
  7608     10F2                     __ptext12:	
  7609 ;; *************** function __div_to_l_ *****************
  7610 ;; Defined at:
  7611 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fldivl.c"
  7612 ;; Parameters:    Size  Location     Type
  7613 ;;  f1              4    0[COMMON] unsigned long 
  7614 ;;  f2              4    4[COMMON] unsigned long 
  7615 ;; Auto vars:     Size  Location     Type
  7616 ;;  quot            4    0[BANK0 ] unsigned long 
  7617 ;;  exp1            1    5[BANK0 ] unsigned char 
  7618 ;;  cntr            1    4[BANK0 ] unsigned char 
  7619 ;; Return value:  Size  Location     Type
  7620 ;;                  4    0[COMMON] unsigned long 
  7621 ;; Registers used:
  7622 ;;		wreg, status,2, status,0
  7623 ;; Tracked objects:
  7624 ;;		On entry : 0/0
  7625 ;;		On exit  : 0/0
  7626 ;;		Unchanged: 0/0
  7627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7628 ;;      Params:         8       0       0       0       0
  7629 ;;      Locals:         0       6       0       0       0
  7630 ;;      Temps:          1       0       0       0       0
  7631 ;;      Totals:         9       6       0       0       0
  7632 ;;Total ram usage:       15 bytes
  7633 ;; Hardware stack levels used: 1
  7634 ;; This function calls:
  7635 ;;		Nothing
  7636 ;; This function is called by:
  7637 ;;		_sprintf
  7638 ;; This function uses a non-reentrant model
  7639 ;;
  7640                           
  7641     10F2                     __div_to_l_:	
  7642                           ;psect for function __div_to_l_
  7643                           
  7644     10F2                     l3385:	
  7645                           ;incstack = 0
  7646                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  7647                           
  7648     10F2  1003               	clrc
  7649     10F3  0D72               	rlf	__div_to_l_@f1+2,w
  7650     10F4  0D73               	rlf	__div_to_l_@f1+3,w
  7651     10F5  1283               	bcf	3,5	;RP0=0, select bank0
  7652     10F6  1303               	bcf	3,6	;RP1=0, select bank0
  7653     10F7  00A5               	movwf	__div_to_l_@exp1
  7654     10F8  0825               	movf	__div_to_l_@exp1,w
  7655     10F9  1D03               	btfss	3,2
  7656     10FA  28FC               	goto	u5011
  7657     10FB  28FD               	goto	u5010
  7658     10FC                     u5011:
  7659     10FC  2906               	goto	l3391
  7660     10FD                     u5010:
  7661     10FD                     l3387:
  7662     10FD  3000               	movlw	0
  7663     10FE  00F3               	movwf	?__div_to_l_+3
  7664     10FF  3000               	movlw	0
  7665     1100  00F2               	movwf	?__div_to_l_+2
  7666     1101  3000               	movlw	0
  7667     1102  00F1               	movwf	?__div_to_l_+1
  7668     1103  3000               	movlw	0
  7669     1104  00F0               	movwf	?__div_to_l_
  7670     1105  29A9               	goto	l656
  7671     1106                     l3391:
  7672     1106  1003               	clrc
  7673     1107  0D76               	rlf	__div_to_l_@f2+2,w
  7674     1108  0D77               	rlf	__div_to_l_@f2+3,w
  7675     1109  00A4               	movwf	__div_to_l_@cntr
  7676     110A  0824               	movf	__div_to_l_@cntr,w
  7677     110B  1D03               	btfss	3,2
  7678     110C  290E               	goto	u5021
  7679     110D  290F               	goto	u5020
  7680     110E                     u5021:
  7681     110E  2910               	goto	l657
  7682     110F                     u5020:
  7683     110F  28FD               	goto	l3387
  7684     1110                     l657:
  7685     1110  17F2               	bsf	__div_to_l_@f1+2,7
  7686     1111                     l3397:
  7687     1111  30FF               	movlw	255
  7688     1112  05F0               	andwf	__div_to_l_@f1,f
  7689     1113  30FF               	movlw	255
  7690     1114  05F1               	andwf	__div_to_l_@f1+1,f
  7691     1115  30FF               	movlw	255
  7692     1116  05F2               	andwf	__div_to_l_@f1+2,f
  7693     1117  3000               	movlw	0
  7694     1118  05F3               	andwf	__div_to_l_@f1+3,f
  7695     1119                     l3399:
  7696     1119  17F6               	bsf	__div_to_l_@f2+2,7
  7697     111A  30FF               	movlw	255
  7698     111B  05F4               	andwf	__div_to_l_@f2,f
  7699     111C  30FF               	movlw	255
  7700     111D  05F5               	andwf	__div_to_l_@f2+1,f
  7701     111E  30FF               	movlw	255
  7702     111F  05F6               	andwf	__div_to_l_@f2+2,f
  7703     1120  3000               	movlw	0
  7704     1121  05F7               	andwf	__div_to_l_@f2+3,f
  7705     1122  3000               	movlw	0
  7706     1123  00A3               	movwf	__div_to_l_@quot+3
  7707     1124  3000               	movlw	0
  7708     1125  00A2               	movwf	__div_to_l_@quot+2
  7709     1126  3000               	movlw	0
  7710     1127  00A1               	movwf	__div_to_l_@quot+1
  7711     1128  3000               	movlw	0
  7712     1129  00A0               	movwf	__div_to_l_@quot
  7713     112A                     l3401:
  7714     112A  307F               	movlw	127
  7715     112B  02A5               	subwf	__div_to_l_@exp1,f
  7716     112C                     l3403:
  7717     112C  30A0               	movlw	160
  7718     112D  0724               	addwf	__div_to_l_@cntr,w
  7719     112E  00F8               	movwf	??__div_to_l_
  7720     112F  0878               	movf	??__div_to_l_,w
  7721     1130  02A5               	subwf	__div_to_l_@exp1,f
  7722     1131  3020               	movlw	32
  7723     1132  00A4               	movwf	__div_to_l_@cntr
  7724     1133                     l3405:
  7725     1133  3001               	movlw	1
  7726     1134  00F8               	movwf	??__div_to_l_
  7727     1135                     u5035:
  7728     1135  1003               	clrc
  7729     1136  0DA0               	rlf	__div_to_l_@quot,f
  7730     1137  0DA1               	rlf	__div_to_l_@quot+1,f
  7731     1138  0DA2               	rlf	__div_to_l_@quot+2,f
  7732     1139  0DA3               	rlf	__div_to_l_@quot+3,f
  7733     113A  0BF8               	decfsz	??__div_to_l_,f
  7734     113B  2935               	goto	u5035
  7735     113C                     l3407:
  7736     113C  0877               	movf	__div_to_l_@f2+3,w
  7737     113D  0273               	subwf	__div_to_l_@f1+3,w
  7738     113E  1D03               	skipz
  7739     113F  294A               	goto	u5045
  7740     1140  0876               	movf	__div_to_l_@f2+2,w
  7741     1141  0272               	subwf	__div_to_l_@f1+2,w
  7742     1142  1D03               	skipz
  7743     1143  294A               	goto	u5045
  7744     1144  0875               	movf	__div_to_l_@f2+1,w
  7745     1145  0271               	subwf	__div_to_l_@f1+1,w
  7746     1146  1D03               	skipz
  7747     1147  294A               	goto	u5045
  7748     1148  0874               	movf	__div_to_l_@f2,w
  7749     1149  0270               	subwf	__div_to_l_@f1,w
  7750     114A                     u5045:
  7751     114A  1C03               	skipc
  7752     114B  294D               	goto	u5041
  7753     114C  294E               	goto	u5040
  7754     114D                     u5041:
  7755     114D  295D               	goto	l3413
  7756     114E                     u5040:
  7757     114E                     l3409:
  7758     114E  0874               	movf	__div_to_l_@f2,w
  7759     114F  02F0               	subwf	__div_to_l_@f1,f
  7760     1150  0875               	movf	__div_to_l_@f2+1,w
  7761     1151  1C03               	skipc
  7762     1152  0F75               	incfsz	__div_to_l_@f2+1,w
  7763     1153  02F1               	subwf	__div_to_l_@f1+1,f
  7764     1154  0876               	movf	__div_to_l_@f2+2,w
  7765     1155  1C03               	skipc
  7766     1156  0F76               	incfsz	__div_to_l_@f2+2,w
  7767     1157  02F2               	subwf	__div_to_l_@f1+2,f
  7768     1158  0877               	movf	__div_to_l_@f2+3,w
  7769     1159  1C03               	skipc
  7770     115A  0F77               	incfsz	__div_to_l_@f2+3,w
  7771     115B  02F3               	subwf	__div_to_l_@f1+3,f
  7772     115C                     l3411:
  7773     115C  1420               	bsf	__div_to_l_@quot,0
  7774     115D                     l3413:
  7775     115D  3001               	movlw	1
  7776     115E  00F8               	movwf	??__div_to_l_
  7777     115F                     u5055:
  7778     115F  1003               	clrc
  7779     1160  0DF0               	rlf	__div_to_l_@f1,f
  7780     1161  0DF1               	rlf	__div_to_l_@f1+1,f
  7781     1162  0DF2               	rlf	__div_to_l_@f1+2,f
  7782     1163  0DF3               	rlf	__div_to_l_@f1+3,f
  7783     1164  0BF8               	decfsz	??__div_to_l_,f
  7784     1165  295F               	goto	u5055
  7785     1166                     l3415:
  7786     1166  3001               	movlw	1
  7787     1167  02A4               	subwf	__div_to_l_@cntr,f
  7788     1168  1D03               	btfss	3,2
  7789     1169  296B               	goto	u5061
  7790     116A  296C               	goto	u5060
  7791     116B                     u5061:
  7792     116B  2933               	goto	l3405
  7793     116C                     u5060:
  7794     116C                     l660:
  7795     116C  1FA5               	btfss	__div_to_l_@exp1,7
  7796     116D  296F               	goto	u5071
  7797     116E  2970               	goto	u5070
  7798     116F                     u5071:
  7799     116F  298A               	goto	l3425
  7800     1170                     u5070:
  7801     1170                     l3417:
  7802     1170  0825               	movf	__div_to_l_@exp1,w
  7803     1171  3A80               	xorlw	128
  7804     1172  3E9F               	addlw	159
  7805     1173  1803               	skipnc
  7806     1174  2976               	goto	u5081
  7807     1175  2977               	goto	u5080
  7808     1176                     u5081:
  7809     1176  2978               	goto	l3423
  7810     1177                     u5080:
  7811     1177  28FD               	goto	l3387
  7812     1178                     l3423:
  7813     1178  3001               	movlw	1
  7814     1179                     u5095:
  7815     1179  1003               	clrc
  7816     117A  0CA3               	rrf	__div_to_l_@quot+3,f
  7817     117B  0CA2               	rrf	__div_to_l_@quot+2,f
  7818     117C  0CA1               	rrf	__div_to_l_@quot+1,f
  7819     117D  0CA0               	rrf	__div_to_l_@quot,f
  7820     117E  3EFF               	addlw	-1
  7821     117F  1D03               	skipz
  7822     1180  2979               	goto	u5095
  7823     1181  3001               	movlw	1
  7824     1182  00F8               	movwf	??__div_to_l_
  7825     1183  0878               	movf	??__div_to_l_,w
  7826     1184  07A5               	addwf	__div_to_l_@exp1,f
  7827     1185  1D03               	btfss	3,2
  7828     1186  2988               	goto	u5101
  7829     1187  2989               	goto	u5100
  7830     1188                     u5101:
  7831     1188  2978               	goto	l3423
  7832     1189                     u5100:
  7833     1189  29A1               	goto	l3433
  7834     118A                     l3425:
  7835     118A  3020               	movlw	32
  7836     118B  0225               	subwf	__div_to_l_@exp1,w
  7837     118C  1C03               	skipc
  7838     118D  298F               	goto	u5111
  7839     118E  2990               	goto	u5110
  7840     118F                     u5111:
  7841     118F  299C               	goto	l667
  7842     1190                     u5110:
  7843     1190  28FD               	goto	l3387
  7844     1191                     l3431:
  7845     1191  3001               	movlw	1
  7846     1192  00F8               	movwf	??__div_to_l_
  7847     1193                     u5125:
  7848     1193  1003               	clrc
  7849     1194  0DA0               	rlf	__div_to_l_@quot,f
  7850     1195  0DA1               	rlf	__div_to_l_@quot+1,f
  7851     1196  0DA2               	rlf	__div_to_l_@quot+2,f
  7852     1197  0DA3               	rlf	__div_to_l_@quot+3,f
  7853     1198  0BF8               	decfsz	??__div_to_l_,f
  7854     1199  2993               	goto	u5125
  7855     119A  3001               	movlw	1
  7856     119B  02A5               	subwf	__div_to_l_@exp1,f
  7857     119C                     l667:
  7858     119C  0825               	movf	__div_to_l_@exp1,w
  7859     119D  1D03               	btfss	3,2
  7860     119E  29A0               	goto	u5131
  7861     119F  29A1               	goto	u5130
  7862     11A0                     u5131:
  7863     11A0  2991               	goto	l3431
  7864     11A1                     u5130:
  7865     11A1                     l3433:
  7866     11A1  0823               	movf	__div_to_l_@quot+3,w
  7867     11A2  00F3               	movwf	?__div_to_l_+3
  7868     11A3  0822               	movf	__div_to_l_@quot+2,w
  7869     11A4  00F2               	movwf	?__div_to_l_+2
  7870     11A5  0821               	movf	__div_to_l_@quot+1,w
  7871     11A6  00F1               	movwf	?__div_to_l_+1
  7872     11A7  0820               	movf	__div_to_l_@quot,w
  7873     11A8  00F0               	movwf	?__div_to_l_
  7874     11A9                     l656:
  7875     11A9  0008               	return
  7876     11AA                     __end_of__div_to_l_:
  7877                           
  7878                           	psect	text13
  7879     103A                     __ptext13:	
  7880 ;; *************** function ___xxtofl *****************
  7881 ;; Defined at:
  7882 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  7883 ;; Parameters:    Size  Location     Type
  7884 ;;  sign            1    wreg     unsigned char 
  7885 ;;  val             4    0[COMMON] long 
  7886 ;; Auto vars:     Size  Location     Type
  7887 ;;  sign            1    8[COMMON] unsigned char 
  7888 ;;  arg             4   10[COMMON] unsigned long 
  7889 ;;  exp             1    9[COMMON] unsigned char 
  7890 ;; Return value:  Size  Location     Type
  7891 ;;                  4    0[COMMON] unsigned char 
  7892 ;; Registers used:
  7893 ;;		wreg, status,2, status,0
  7894 ;; Tracked objects:
  7895 ;;		On entry : 0/0
  7896 ;;		On exit  : 0/0
  7897 ;;		Unchanged: 0/0
  7898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7899 ;;      Params:         4       0       0       0       0
  7900 ;;      Locals:         6       0       0       0       0
  7901 ;;      Temps:          4       0       0       0       0
  7902 ;;      Totals:        14       0       0       0       0
  7903 ;;Total ram usage:       14 bytes
  7904 ;; Hardware stack levels used: 1
  7905 ;; This function calls:
  7906 ;;		Nothing
  7907 ;; This function is called by:
  7908 ;;		_main
  7909 ;;		_sprintf
  7910 ;; This function uses a non-reentrant model
  7911 ;;
  7912                           
  7913     103A                     ___xxtofl:	
  7914                           ;psect for function ___xxtofl
  7915                           
  7916                           
  7917                           ;incstack = 0
  7918                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7919                           ;___xxtofl@sign stored from wreg
  7920     103A  00F8               	movwf	___xxtofl@sign
  7921     103B                     l3577:
  7922     103B  0878               	movf	___xxtofl@sign,w
  7923     103C  1903               	btfsc	3,2
  7924     103D  283F               	goto	u5521
  7925     103E  2840               	goto	u5520
  7926     103F                     u5521:
  7927     103F  2854               	goto	l3583
  7928     1040                     u5520:
  7929     1040                     l3579:
  7930     1040  1FF3               	btfss	___xxtofl@val+3,7
  7931     1041  2843               	goto	u5531
  7932     1042  2844               	goto	u5530
  7933     1043                     u5531:
  7934     1043  2854               	goto	l3583
  7935     1044                     u5530:
  7936     1044                     l3581:
  7937     1044  0970               	comf	___xxtofl@val,w
  7938     1045  00FA               	movwf	___xxtofl@arg
  7939     1046  0971               	comf	___xxtofl@val+1,w
  7940     1047  00FB               	movwf	___xxtofl@arg+1
  7941     1048  0972               	comf	___xxtofl@val+2,w
  7942     1049  00FC               	movwf	___xxtofl@arg+2
  7943     104A  0973               	comf	___xxtofl@val+3,w
  7944     104B  00FD               	movwf	___xxtofl@arg+3
  7945     104C  0AFA               	incf	___xxtofl@arg,f
  7946     104D  1903               	skipnz
  7947     104E  0AFB               	incf	___xxtofl@arg+1,f
  7948     104F  1903               	skipnz
  7949     1050  0AFC               	incf	___xxtofl@arg+2,f
  7950     1051  1903               	skipnz
  7951     1052  0AFD               	incf	___xxtofl@arg+3,f
  7952     1053  285C               	goto	l953
  7953     1054                     l3583:
  7954     1054  0873               	movf	___xxtofl@val+3,w
  7955     1055  00FD               	movwf	___xxtofl@arg+3
  7956     1056  0872               	movf	___xxtofl@val+2,w
  7957     1057  00FC               	movwf	___xxtofl@arg+2
  7958     1058  0871               	movf	___xxtofl@val+1,w
  7959     1059  00FB               	movwf	___xxtofl@arg+1
  7960     105A  0870               	movf	___xxtofl@val,w
  7961     105B  00FA               	movwf	___xxtofl@arg
  7962     105C                     l953:
  7963     105C  0873               	movf	___xxtofl@val+3,w
  7964     105D  0472               	iorwf	___xxtofl@val+2,w
  7965     105E  0471               	iorwf	___xxtofl@val+1,w
  7966     105F  0470               	iorwf	___xxtofl@val,w
  7967     1060  1D03               	skipz
  7968     1061  2863               	goto	u5541
  7969     1062  2864               	goto	u5540
  7970     1063                     u5541:
  7971     1063  286D               	goto	l3589
  7972     1064                     u5540:
  7973     1064                     l3585:
  7974     1064  3000               	movlw	0
  7975     1065  00F3               	movwf	?___xxtofl+3
  7976     1066  3000               	movlw	0
  7977     1067  00F2               	movwf	?___xxtofl+2
  7978     1068  3000               	movlw	0
  7979     1069  00F1               	movwf	?___xxtofl+1
  7980     106A  3000               	movlw	0
  7981     106B  00F0               	movwf	?___xxtofl
  7982     106C  28F1               	goto	l955
  7983     106D                     l3589:
  7984     106D  3096               	movlw	150
  7985     106E  00F9               	movwf	___xxtofl@exp
  7986     106F  287D               	goto	l3593
  7987     1070                     l3591:
  7988     1070  3001               	movlw	1
  7989     1071  00F4               	movwf	??___xxtofl
  7990     1072  0874               	movf	??___xxtofl,w
  7991     1073  07F9               	addwf	___xxtofl@exp,f
  7992     1074  3001               	movlw	1
  7993     1075                     u5555:
  7994     1075  1003               	clrc
  7995     1076  0CFD               	rrf	___xxtofl@arg+3,f
  7996     1077  0CFC               	rrf	___xxtofl@arg+2,f
  7997     1078  0CFB               	rrf	___xxtofl@arg+1,f
  7998     1079  0CFA               	rrf	___xxtofl@arg,f
  7999     107A  3EFF               	addlw	-1
  8000     107B  1D03               	skipz
  8001     107C  2875               	goto	u5555
  8002     107D                     l3593:
  8003     107D  30FE               	movlw	254
  8004     107E  057D               	andwf	___xxtofl@arg+3,w
  8005     107F  1D03               	btfss	3,2
  8006     1080  2882               	goto	u5561
  8007     1081  2883               	goto	u5560
  8008     1082                     u5561:
  8009     1082  2870               	goto	l3591
  8010     1083                     u5560:
  8011     1083  289F               	goto	l959
  8012     1084                     l3595:
  8013     1084  3001               	movlw	1
  8014     1085  00F4               	movwf	??___xxtofl
  8015     1086  0874               	movf	??___xxtofl,w
  8016     1087  07F9               	addwf	___xxtofl@exp,f
  8017     1088                     l3597:
  8018     1088  3001               	movlw	1
  8019     1089  07FA               	addwf	___xxtofl@arg,f
  8020     108A  3000               	movlw	0
  8021     108B  1803               	skipnc
  8022     108C  3001               	movlw	1
  8023     108D  07FB               	addwf	___xxtofl@arg+1,f
  8024     108E  3000               	movlw	0
  8025     108F  1803               	skipnc
  8026     1090  3001               	movlw	1
  8027     1091  07FC               	addwf	___xxtofl@arg+2,f
  8028     1092  3000               	movlw	0
  8029     1093  1803               	skipnc
  8030     1094  3001               	movlw	1
  8031     1095  07FD               	addwf	___xxtofl@arg+3,f
  8032     1096                     l3599:
  8033     1096  3001               	movlw	1
  8034     1097                     u5575:
  8035     1097  1003               	clrc
  8036     1098  0CFD               	rrf	___xxtofl@arg+3,f
  8037     1099  0CFC               	rrf	___xxtofl@arg+2,f
  8038     109A  0CFB               	rrf	___xxtofl@arg+1,f
  8039     109B  0CFA               	rrf	___xxtofl@arg,f
  8040     109C  3EFF               	addlw	-1
  8041     109D  1D03               	skipz
  8042     109E  2897               	goto	u5575
  8043     109F                     l959:
  8044     109F  30FF               	movlw	255
  8045     10A0  057D               	andwf	___xxtofl@arg+3,w
  8046     10A1  1D03               	btfss	3,2
  8047     10A2  28A4               	goto	u5581
  8048     10A3  28A5               	goto	u5580
  8049     10A4                     u5581:
  8050     10A4  2884               	goto	l3595
  8051     10A5                     u5580:
  8052     10A5  28B1               	goto	l3603
  8053     10A6                     l3601:
  8054     10A6  3001               	movlw	1
  8055     10A7  02F9               	subwf	___xxtofl@exp,f
  8056     10A8  3001               	movlw	1
  8057     10A9  00F4               	movwf	??___xxtofl
  8058     10AA                     u5595:
  8059     10AA  1003               	clrc
  8060     10AB  0DFA               	rlf	___xxtofl@arg,f
  8061     10AC  0DFB               	rlf	___xxtofl@arg+1,f
  8062     10AD  0DFC               	rlf	___xxtofl@arg+2,f
  8063     10AE  0DFD               	rlf	___xxtofl@arg+3,f
  8064     10AF  0BF4               	decfsz	??___xxtofl,f
  8065     10B0  28AA               	goto	u5595
  8066     10B1                     l3603:
  8067     10B1  1BFC               	btfsc	___xxtofl@arg+2,7
  8068     10B2  28B4               	goto	u5601
  8069     10B3  28B5               	goto	u5600
  8070     10B4                     u5601:
  8071     10B4  28BB               	goto	l966
  8072     10B5                     u5600:
  8073     10B5                     l3605:
  8074     10B5  3002               	movlw	2
  8075     10B6  0279               	subwf	___xxtofl@exp,w
  8076     10B7  1803               	skipnc
  8077     10B8  28BA               	goto	u5611
  8078     10B9  28BB               	goto	u5610
  8079     10BA                     u5611:
  8080     10BA  28A6               	goto	l3601
  8081     10BB                     u5610:
  8082     10BB                     l966:
  8083     10BB  1879               	btfsc	___xxtofl@exp,0
  8084     10BC  28BE               	goto	u5621
  8085     10BD  28BF               	goto	u5620
  8086     10BE                     u5621:
  8087     10BE  28C7               	goto	l967
  8088     10BF                     u5620:
  8089     10BF                     l3607:
  8090     10BF  30FF               	movlw	255
  8091     10C0  05FA               	andwf	___xxtofl@arg,f
  8092     10C1  30FF               	movlw	255
  8093     10C2  05FB               	andwf	___xxtofl@arg+1,f
  8094     10C3  307F               	movlw	127
  8095     10C4  05FC               	andwf	___xxtofl@arg+2,f
  8096     10C5  30FF               	movlw	255
  8097     10C6  05FD               	andwf	___xxtofl@arg+3,f
  8098     10C7                     l967:
  8099     10C7  1003               	clrc
  8100     10C8  0CF9               	rrf	___xxtofl@exp,f
  8101     10C9                     l3609:
  8102     10C9  0879               	movf	___xxtofl@exp,w
  8103     10CA  00F4               	movwf	??___xxtofl
  8104     10CB  01F5               	clrf	??___xxtofl+1
  8105     10CC  01F6               	clrf	??___xxtofl+2
  8106     10CD  01F7               	clrf	??___xxtofl+3
  8107     10CE  3018               	movlw	24
  8108     10CF                     u5635:
  8109     10CF  1003               	clrc
  8110     10D0  0DF4               	rlf	??___xxtofl,f
  8111     10D1  0DF5               	rlf	??___xxtofl+1,f
  8112     10D2  0DF6               	rlf	??___xxtofl+2,f
  8113     10D3  0DF7               	rlf	??___xxtofl+3,f
  8114     10D4                     u5630:
  8115     10D4  3EFF               	addlw	-1
  8116     10D5  1D03               	skipz
  8117     10D6  28CF               	goto	u5635
  8118     10D7  0874               	movf	??___xxtofl,w
  8119     10D8  04FA               	iorwf	___xxtofl@arg,f
  8120     10D9  0875               	movf	??___xxtofl+1,w
  8121     10DA  04FB               	iorwf	___xxtofl@arg+1,f
  8122     10DB  0876               	movf	??___xxtofl+2,w
  8123     10DC  04FC               	iorwf	___xxtofl@arg+2,f
  8124     10DD  0877               	movf	??___xxtofl+3,w
  8125     10DE  04FD               	iorwf	___xxtofl@arg+3,f
  8126     10DF                     l3611:
  8127     10DF  0878               	movf	___xxtofl@sign,w
  8128     10E0  1903               	btfsc	3,2
  8129     10E1  28E3               	goto	u5641
  8130     10E2  28E4               	goto	u5640
  8131     10E3                     u5641:
  8132     10E3  28E9               	goto	l3617
  8133     10E4                     u5640:
  8134     10E4                     l3613:
  8135     10E4  1FF3               	btfss	___xxtofl@val+3,7
  8136     10E5  28E7               	goto	u5651
  8137     10E6  28E8               	goto	u5650
  8138     10E7                     u5651:
  8139     10E7  28E9               	goto	l3617
  8140     10E8                     u5650:
  8141     10E8                     l3615:
  8142     10E8  17FD               	bsf	___xxtofl@arg+3,7
  8143     10E9                     l3617:
  8144     10E9  087D               	movf	___xxtofl@arg+3,w
  8145     10EA  00F3               	movwf	?___xxtofl+3
  8146     10EB  087C               	movf	___xxtofl@arg+2,w
  8147     10EC  00F2               	movwf	?___xxtofl+2
  8148     10ED  087B               	movf	___xxtofl@arg+1,w
  8149     10EE  00F1               	movwf	?___xxtofl+1
  8150     10EF  087A               	movf	___xxtofl@arg,w
  8151     10F0  00F0               	movwf	?___xxtofl
  8152     10F1                     l955:
  8153     10F1  0008               	return
  8154     10F2                     __end_of___xxtofl:
  8155                           
  8156                           	psect	text14
  8157     192F                     __ptext14:	
  8158 ;; *************** function ___wmul *****************
  8159 ;; Defined at:
  8160 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  8161 ;; Parameters:    Size  Location     Type
  8162 ;;  multiplier      2    0[COMMON] unsigned int 
  8163 ;;  multiplicand    2    2[COMMON] unsigned int 
  8164 ;; Auto vars:     Size  Location     Type
  8165 ;;  product         2    4[COMMON] unsigned int 
  8166 ;; Return value:  Size  Location     Type
  8167 ;;                  2    0[COMMON] unsigned int 
  8168 ;; Registers used:
  8169 ;;		wreg, status,2, status,0
  8170 ;; Tracked objects:
  8171 ;;		On entry : 0/0
  8172 ;;		On exit  : 0/0
  8173 ;;		Unchanged: 0/0
  8174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8175 ;;      Params:         4       0       0       0       0
  8176 ;;      Locals:         2       0       0       0       0
  8177 ;;      Temps:          0       0       0       0       0
  8178 ;;      Totals:         6       0       0       0       0
  8179 ;;Total ram usage:        6 bytes
  8180 ;; Hardware stack levels used: 1
  8181 ;; This function calls:
  8182 ;;		Nothing
  8183 ;; This function is called by:
  8184 ;;		_sprintf
  8185 ;; This function uses a non-reentrant model
  8186 ;;
  8187                           
  8188     192F                     ___wmul:	
  8189                           ;psect for function ___wmul
  8190                           
  8191     192F                     l3437:	
  8192                           ;incstack = 0
  8193                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8194                           
  8195     192F  01F4               	clrf	___wmul@product
  8196     1930  01F5               	clrf	___wmul@product+1
  8197     1931                     l3439:
  8198     1931  1C70               	btfss	___wmul@multiplier,0
  8199     1932  2934               	goto	u5141
  8200     1933  2935               	goto	u5140
  8201     1934                     u5141:
  8202     1934  293B               	goto	l486
  8203     1935                     u5140:
  8204     1935                     l3441:
  8205     1935  0872               	movf	___wmul@multiplicand,w
  8206     1936  07F4               	addwf	___wmul@product,f
  8207     1937  1803               	skipnc
  8208     1938  0AF5               	incf	___wmul@product+1,f
  8209     1939  0873               	movf	___wmul@multiplicand+1,w
  8210     193A  07F5               	addwf	___wmul@product+1,f
  8211     193B                     l486:
  8212     193B  3001               	movlw	1
  8213     193C                     u5155:
  8214     193C  1003               	clrc
  8215     193D  0DF2               	rlf	___wmul@multiplicand,f
  8216     193E  0DF3               	rlf	___wmul@multiplicand+1,f
  8217     193F  3EFF               	addlw	-1
  8218     1940  1D03               	skipz
  8219     1941  293C               	goto	u5155
  8220     1942                     l3443:
  8221     1942  3001               	movlw	1
  8222     1943                     u5165:
  8223     1943  1003               	clrc
  8224     1944  0CF1               	rrf	___wmul@multiplier+1,f
  8225     1945  0CF0               	rrf	___wmul@multiplier,f
  8226     1946  3EFF               	addlw	-1
  8227     1947  1D03               	skipz
  8228     1948  2943               	goto	u5165
  8229     1949                     l3445:
  8230     1949  0870               	movf	___wmul@multiplier,w
  8231     194A  0471               	iorwf	___wmul@multiplier+1,w
  8232     194B  1D03               	btfss	3,2
  8233     194C  294E               	goto	u5171
  8234     194D  294F               	goto	u5170
  8235     194E                     u5171:
  8236     194E  2931               	goto	l3439
  8237     194F                     u5170:
  8238     194F                     l3447:
  8239     194F  0875               	movf	___wmul@product+1,w
  8240     1950  00F1               	movwf	?___wmul+1
  8241     1951  0874               	movf	___wmul@product,w
  8242     1952  00F0               	movwf	?___wmul
  8243     1953                     l488:
  8244     1953  0008               	return
  8245     1954                     __end_of___wmul:
  8246                           
  8247                           	psect	text15
  8248     1AC9                     __ptext15:	
  8249 ;; *************** function ___llmod *****************
  8250 ;; Defined at:
  8251 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\llmod.c"
  8252 ;; Parameters:    Size  Location     Type
  8253 ;;  divisor         4    0[COMMON] unsigned long 
  8254 ;;  dividend        4    4[COMMON] unsigned long 
  8255 ;; Auto vars:     Size  Location     Type
  8256 ;;  counter         1    9[COMMON] unsigned char 
  8257 ;; Return value:  Size  Location     Type
  8258 ;;                  4    0[COMMON] unsigned long 
  8259 ;; Registers used:
  8260 ;;		wreg, status,2, status,0
  8261 ;; Tracked objects:
  8262 ;;		On entry : 0/0
  8263 ;;		On exit  : 0/0
  8264 ;;		Unchanged: 0/0
  8265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8266 ;;      Params:         8       0       0       0       0
  8267 ;;      Locals:         1       0       0       0       0
  8268 ;;      Temps:          1       0       0       0       0
  8269 ;;      Totals:        10       0       0       0       0
  8270 ;;Total ram usage:       10 bytes
  8271 ;; Hardware stack levels used: 1
  8272 ;; This function calls:
  8273 ;;		Nothing
  8274 ;; This function is called by:
  8275 ;;		_sprintf
  8276 ;; This function uses a non-reentrant model
  8277 ;;
  8278                           
  8279     1AC9                     ___llmod:	
  8280                           ;psect for function ___llmod
  8281                           
  8282     1AC9                     l3551:	
  8283                           ;incstack = 0
  8284                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  8285                           
  8286     1AC9  0873               	movf	___llmod@divisor+3,w
  8287     1ACA  0472               	iorwf	___llmod@divisor+2,w
  8288     1ACB  0471               	iorwf	___llmod@divisor+1,w
  8289     1ACC  0470               	iorwf	___llmod@divisor,w
  8290     1ACD  1903               	skipnz
  8291     1ACE  2AD0               	goto	u5461
  8292     1ACF  2AD1               	goto	u5460
  8293     1AD0                     u5461:
  8294     1AD0  2B14               	goto	l3567
  8295     1AD1                     u5460:
  8296     1AD1                     l3553:
  8297     1AD1  01F9               	clrf	___llmod@counter
  8298     1AD2  0AF9               	incf	___llmod@counter,f
  8299     1AD3  2AE1               	goto	l3557
  8300     1AD4                     l3555:
  8301     1AD4  3001               	movlw	1
  8302     1AD5  00F8               	movwf	??___llmod
  8303     1AD6                     u5475:
  8304     1AD6  1003               	clrc
  8305     1AD7  0DF0               	rlf	___llmod@divisor,f
  8306     1AD8  0DF1               	rlf	___llmod@divisor+1,f
  8307     1AD9  0DF2               	rlf	___llmod@divisor+2,f
  8308     1ADA  0DF3               	rlf	___llmod@divisor+3,f
  8309     1ADB  0BF8               	decfsz	??___llmod,f
  8310     1ADC  2AD6               	goto	u5475
  8311     1ADD  3001               	movlw	1
  8312     1ADE  00F8               	movwf	??___llmod
  8313     1ADF  0878               	movf	??___llmod,w
  8314     1AE0  07F9               	addwf	___llmod@counter,f
  8315     1AE1                     l3557:
  8316     1AE1  1FF3               	btfss	___llmod@divisor+3,7
  8317     1AE2  2AE4               	goto	u5481
  8318     1AE3  2AE5               	goto	u5480
  8319     1AE4                     u5481:
  8320     1AE4  2AD4               	goto	l3555
  8321     1AE5                     u5480:
  8322     1AE5                     l3559:
  8323     1AE5  0873               	movf	___llmod@divisor+3,w
  8324     1AE6  0277               	subwf	___llmod@dividend+3,w
  8325     1AE7  1D03               	skipz
  8326     1AE8  2AF3               	goto	u5495
  8327     1AE9  0872               	movf	___llmod@divisor+2,w
  8328     1AEA  0276               	subwf	___llmod@dividend+2,w
  8329     1AEB  1D03               	skipz
  8330     1AEC  2AF3               	goto	u5495
  8331     1AED  0871               	movf	___llmod@divisor+1,w
  8332     1AEE  0275               	subwf	___llmod@dividend+1,w
  8333     1AEF  1D03               	skipz
  8334     1AF0  2AF3               	goto	u5495
  8335     1AF1  0870               	movf	___llmod@divisor,w
  8336     1AF2  0274               	subwf	___llmod@dividend,w
  8337     1AF3                     u5495:
  8338     1AF3  1C03               	skipc
  8339     1AF4  2AF6               	goto	u5491
  8340     1AF5  2AF7               	goto	u5490
  8341     1AF6                     u5491:
  8342     1AF6  2B05               	goto	l3563
  8343     1AF7                     u5490:
  8344     1AF7                     l3561:
  8345     1AF7  0870               	movf	___llmod@divisor,w
  8346     1AF8  02F4               	subwf	___llmod@dividend,f
  8347     1AF9  0871               	movf	___llmod@divisor+1,w
  8348     1AFA  1C03               	skipc
  8349     1AFB  0F71               	incfsz	___llmod@divisor+1,w
  8350     1AFC  02F5               	subwf	___llmod@dividend+1,f
  8351     1AFD  0872               	movf	___llmod@divisor+2,w
  8352     1AFE  1C03               	skipc
  8353     1AFF  0F72               	incfsz	___llmod@divisor+2,w
  8354     1B00  02F6               	subwf	___llmod@dividend+2,f
  8355     1B01  0873               	movf	___llmod@divisor+3,w
  8356     1B02  1C03               	skipc
  8357     1B03  0F73               	incfsz	___llmod@divisor+3,w
  8358     1B04  02F7               	subwf	___llmod@dividend+3,f
  8359     1B05                     l3563:
  8360     1B05  3001               	movlw	1
  8361     1B06                     u5505:
  8362     1B06  1003               	clrc
  8363     1B07  0CF3               	rrf	___llmod@divisor+3,f
  8364     1B08  0CF2               	rrf	___llmod@divisor+2,f
  8365     1B09  0CF1               	rrf	___llmod@divisor+1,f
  8366     1B0A  0CF0               	rrf	___llmod@divisor,f
  8367     1B0B  3EFF               	addlw	-1
  8368     1B0C  1D03               	skipz
  8369     1B0D  2B06               	goto	u5505
  8370     1B0E                     l3565:
  8371     1B0E  3001               	movlw	1
  8372     1B0F  02F9               	subwf	___llmod@counter,f
  8373     1B10  1D03               	btfss	3,2
  8374     1B11  2B13               	goto	u5511
  8375     1B12  2B14               	goto	u5510
  8376     1B13                     u5511:
  8377     1B13  2AE5               	goto	l3559
  8378     1B14                     u5510:
  8379     1B14                     l3567:
  8380     1B14  0877               	movf	___llmod@dividend+3,w
  8381     1B15  00F3               	movwf	?___llmod+3
  8382     1B16  0876               	movf	___llmod@dividend+2,w
  8383     1B17  00F2               	movwf	?___llmod+2
  8384     1B18  0875               	movf	___llmod@dividend+1,w
  8385     1B19  00F1               	movwf	?___llmod+1
  8386     1B1A  0874               	movf	___llmod@dividend,w
  8387     1B1B  00F0               	movwf	?___llmod
  8388     1B1C                     l742:
  8389     1B1C  0008               	return
  8390     1B1D                     __end_of___llmod:
  8391                           
  8392                           	psect	text16
  8393     1B76                     __ptext16:	
  8394 ;; *************** function ___lldiv *****************
  8395 ;; Defined at:
  8396 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  8397 ;; Parameters:    Size  Location     Type
  8398 ;;  divisor         4    0[COMMON] unsigned long 
  8399 ;;  dividend        4    4[COMMON] unsigned long 
  8400 ;; Auto vars:     Size  Location     Type
  8401 ;;  quotient        4    9[COMMON] unsigned long 
  8402 ;;  counter         1   13[COMMON] unsigned char 
  8403 ;; Return value:  Size  Location     Type
  8404 ;;                  4    0[COMMON] unsigned long 
  8405 ;; Registers used:
  8406 ;;		wreg, status,2, status,0
  8407 ;; Tracked objects:
  8408 ;;		On entry : 0/0
  8409 ;;		On exit  : 0/0
  8410 ;;		Unchanged: 0/0
  8411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8412 ;;      Params:         8       0       0       0       0
  8413 ;;      Locals:         5       0       0       0       0
  8414 ;;      Temps:          1       0       0       0       0
  8415 ;;      Totals:        14       0       0       0       0
  8416 ;;Total ram usage:       14 bytes
  8417 ;; Hardware stack levels used: 1
  8418 ;; This function calls:
  8419 ;;		Nothing
  8420 ;; This function is called by:
  8421 ;;		_sprintf
  8422 ;; This function uses a non-reentrant model
  8423 ;;
  8424                           
  8425     1B76                     ___lldiv:	
  8426                           ;psect for function ___lldiv
  8427                           
  8428     1B76                     l3451:	
  8429                           ;incstack = 0
  8430                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8431                           
  8432     1B76  3000               	movlw	0
  8433     1B77  00FC               	movwf	___lldiv@quotient+3
  8434     1B78  3000               	movlw	0
  8435     1B79  00FB               	movwf	___lldiv@quotient+2
  8436     1B7A  3000               	movlw	0
  8437     1B7B  00FA               	movwf	___lldiv@quotient+1
  8438     1B7C  3000               	movlw	0
  8439     1B7D  00F9               	movwf	___lldiv@quotient
  8440     1B7E  0873               	movf	___lldiv@divisor+3,w
  8441     1B7F  0472               	iorwf	___lldiv@divisor+2,w
  8442     1B80  0471               	iorwf	___lldiv@divisor+1,w
  8443     1B81  0470               	iorwf	___lldiv@divisor,w
  8444     1B82  1903               	skipnz
  8445     1B83  2B85               	goto	u5181
  8446     1B84  2B86               	goto	u5180
  8447     1B85                     u5181:
  8448     1B85  2BD3               	goto	l3471
  8449     1B86                     u5180:
  8450     1B86                     l3453:
  8451     1B86  01FD               	clrf	___lldiv@counter
  8452     1B87  0AFD               	incf	___lldiv@counter,f
  8453     1B88  2B96               	goto	l3457
  8454     1B89                     l3455:
  8455     1B89  3001               	movlw	1
  8456     1B8A  00F8               	movwf	??___lldiv
  8457     1B8B                     u5195:
  8458     1B8B  1003               	clrc
  8459     1B8C  0DF0               	rlf	___lldiv@divisor,f
  8460     1B8D  0DF1               	rlf	___lldiv@divisor+1,f
  8461     1B8E  0DF2               	rlf	___lldiv@divisor+2,f
  8462     1B8F  0DF3               	rlf	___lldiv@divisor+3,f
  8463     1B90  0BF8               	decfsz	??___lldiv,f
  8464     1B91  2B8B               	goto	u5195
  8465     1B92  3001               	movlw	1
  8466     1B93  00F8               	movwf	??___lldiv
  8467     1B94  0878               	movf	??___lldiv,w
  8468     1B95  07FD               	addwf	___lldiv@counter,f
  8469     1B96                     l3457:
  8470     1B96  1FF3               	btfss	___lldiv@divisor+3,7
  8471     1B97  2B99               	goto	u5201
  8472     1B98  2B9A               	goto	u5200
  8473     1B99                     u5201:
  8474     1B99  2B89               	goto	l3455
  8475     1B9A                     u5200:
  8476     1B9A                     l3459:
  8477     1B9A  3001               	movlw	1
  8478     1B9B  00F8               	movwf	??___lldiv
  8479     1B9C                     u5215:
  8480     1B9C  1003               	clrc
  8481     1B9D  0DF9               	rlf	___lldiv@quotient,f
  8482     1B9E  0DFA               	rlf	___lldiv@quotient+1,f
  8483     1B9F  0DFB               	rlf	___lldiv@quotient+2,f
  8484     1BA0  0DFC               	rlf	___lldiv@quotient+3,f
  8485     1BA1  0BF8               	decfsz	??___lldiv,f
  8486     1BA2  2B9C               	goto	u5215
  8487     1BA3                     l3461:
  8488     1BA3  0873               	movf	___lldiv@divisor+3,w
  8489     1BA4  0277               	subwf	___lldiv@dividend+3,w
  8490     1BA5  1D03               	skipz
  8491     1BA6  2BB1               	goto	u5225
  8492     1BA7  0872               	movf	___lldiv@divisor+2,w
  8493     1BA8  0276               	subwf	___lldiv@dividend+2,w
  8494     1BA9  1D03               	skipz
  8495     1BAA  2BB1               	goto	u5225
  8496     1BAB  0871               	movf	___lldiv@divisor+1,w
  8497     1BAC  0275               	subwf	___lldiv@dividend+1,w
  8498     1BAD  1D03               	skipz
  8499     1BAE  2BB1               	goto	u5225
  8500     1BAF  0870               	movf	___lldiv@divisor,w
  8501     1BB0  0274               	subwf	___lldiv@dividend,w
  8502     1BB1                     u5225:
  8503     1BB1  1C03               	skipc
  8504     1BB2  2BB4               	goto	u5221
  8505     1BB3  2BB5               	goto	u5220
  8506     1BB4                     u5221:
  8507     1BB4  2BC4               	goto	l3467
  8508     1BB5                     u5220:
  8509     1BB5                     l3463:
  8510     1BB5  0870               	movf	___lldiv@divisor,w
  8511     1BB6  02F4               	subwf	___lldiv@dividend,f
  8512     1BB7  0871               	movf	___lldiv@divisor+1,w
  8513     1BB8  1C03               	skipc
  8514     1BB9  0F71               	incfsz	___lldiv@divisor+1,w
  8515     1BBA  02F5               	subwf	___lldiv@dividend+1,f
  8516     1BBB  0872               	movf	___lldiv@divisor+2,w
  8517     1BBC  1C03               	skipc
  8518     1BBD  0F72               	incfsz	___lldiv@divisor+2,w
  8519     1BBE  02F6               	subwf	___lldiv@dividend+2,f
  8520     1BBF  0873               	movf	___lldiv@divisor+3,w
  8521     1BC0  1C03               	skipc
  8522     1BC1  0F73               	incfsz	___lldiv@divisor+3,w
  8523     1BC2  02F7               	subwf	___lldiv@dividend+3,f
  8524     1BC3                     l3465:
  8525     1BC3  1479               	bsf	___lldiv@quotient,0
  8526     1BC4                     l3467:
  8527     1BC4  3001               	movlw	1
  8528     1BC5                     u5235:
  8529     1BC5  1003               	clrc
  8530     1BC6  0CF3               	rrf	___lldiv@divisor+3,f
  8531     1BC7  0CF2               	rrf	___lldiv@divisor+2,f
  8532     1BC8  0CF1               	rrf	___lldiv@divisor+1,f
  8533     1BC9  0CF0               	rrf	___lldiv@divisor,f
  8534     1BCA  3EFF               	addlw	-1
  8535     1BCB  1D03               	skipz
  8536     1BCC  2BC5               	goto	u5235
  8537     1BCD                     l3469:
  8538     1BCD  3001               	movlw	1
  8539     1BCE  02FD               	subwf	___lldiv@counter,f
  8540     1BCF  1D03               	btfss	3,2
  8541     1BD0  2BD2               	goto	u5241
  8542     1BD1  2BD3               	goto	u5240
  8543     1BD2                     u5241:
  8544     1BD2  2B9A               	goto	l3459
  8545     1BD3                     u5240:
  8546     1BD3                     l3471:
  8547     1BD3  087C               	movf	___lldiv@quotient+3,w
  8548     1BD4  00F3               	movwf	?___lldiv+3
  8549     1BD5  087B               	movf	___lldiv@quotient+2,w
  8550     1BD6  00F2               	movwf	?___lldiv+2
  8551     1BD7  087A               	movf	___lldiv@quotient+1,w
  8552     1BD8  00F1               	movwf	?___lldiv+1
  8553     1BD9  0879               	movf	___lldiv@quotient,w
  8554     1BDA  00F0               	movwf	?___lldiv
  8555     1BDB                     l522:
  8556     1BDB  0008               	return
  8557     1BDC                     __end_of___lldiv:
  8558                           
  8559                           	psect	text17
  8560     00CA                     __ptext17:	
  8561 ;; *************** function ___fltol *****************
  8562 ;; Defined at:
  8563 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  8564 ;; Parameters:    Size  Location     Type
  8565 ;;  f1              4   49[BANK0 ] unsigned long 
  8566 ;; Auto vars:     Size  Location     Type
  8567 ;;  exp1            1   58[BANK0 ] unsigned char 
  8568 ;;  sign1           1   57[BANK0 ] unsigned char 
  8569 ;; Return value:  Size  Location     Type
  8570 ;;                  4   49[BANK0 ] long 
  8571 ;; Registers used:
  8572 ;;		wreg, status,2, status,0
  8573 ;; Tracked objects:
  8574 ;;		On entry : 0/0
  8575 ;;		On exit  : 0/0
  8576 ;;		Unchanged: 0/0
  8577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8578 ;;      Params:         0       4       0       0       0
  8579 ;;      Locals:         0       2       0       0       0
  8580 ;;      Temps:          0       4       0       0       0
  8581 ;;      Totals:         0      10       0       0       0
  8582 ;;Total ram usage:       10 bytes
  8583 ;; Hardware stack levels used: 1
  8584 ;; This function calls:
  8585 ;;		Nothing
  8586 ;; This function is called by:
  8587 ;;		_sprintf
  8588 ;; This function uses a non-reentrant model
  8589 ;;
  8590                           
  8591     00CA                     ___fltol:	
  8592                           ;psect for function ___fltol
  8593                           
  8594     00CA                     l3515:	
  8595                           ;incstack = 0
  8596                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8597                           
  8598     00CA  1003               	clrc
  8599     00CB  1283               	bcf	3,5	;RP0=0, select bank0
  8600     00CC  1303               	bcf	3,6	;RP1=0, select bank0
  8601     00CD  0D53               	rlf	___fltol@f1+2,w
  8602     00CE  0D54               	rlf	___fltol@f1+3,w
  8603     00CF  00DA               	movwf	___fltol@exp1
  8604     00D0  085A               	movf	___fltol@exp1,w
  8605     00D1  1D03               	btfss	3,2
  8606     00D2  28D4               	goto	u5361
  8607     00D3  28D5               	goto	u5360
  8608     00D4                     u5361:
  8609     00D4  28DE               	goto	l3521
  8610     00D5                     u5360:
  8611     00D5                     l3517:
  8612     00D5  3000               	movlw	0
  8613     00D6  00D4               	movwf	?___fltol+3
  8614     00D7  3000               	movlw	0
  8615     00D8  00D3               	movwf	?___fltol+2
  8616     00D9  3000               	movlw	0
  8617     00DA  00D2               	movwf	?___fltol+1
  8618     00DB  3000               	movlw	0
  8619     00DC  00D1               	movwf	?___fltol
  8620     00DD  2941               	goto	l689
  8621     00DE                     l3521:
  8622     00DE  0851               	movf	___fltol@f1,w
  8623     00DF  00D5               	movwf	??___fltol
  8624     00E0  0852               	movf	___fltol@f1+1,w
  8625     00E1  00D6               	movwf	??___fltol+1
  8626     00E2  0853               	movf	___fltol@f1+2,w
  8627     00E3  00D7               	movwf	??___fltol+2
  8628     00E4  0854               	movf	___fltol@f1+3,w
  8629     00E5  00D8               	movwf	??___fltol+3
  8630     00E6  301F               	movlw	31
  8631     00E7                     u5375:
  8632     00E7  1003               	clrc
  8633     00E8  0CD8               	rrf	??___fltol+3,f
  8634     00E9  0CD7               	rrf	??___fltol+2,f
  8635     00EA  0CD6               	rrf	??___fltol+1,f
  8636     00EB  0CD5               	rrf	??___fltol,f
  8637     00EC                     u5370:
  8638     00EC  3EFF               	addlw	-1
  8639     00ED  1D03               	skipz
  8640     00EE  28E7               	goto	u5375
  8641     00EF  0855               	movf	??___fltol,w
  8642     00F0  00D9               	movwf	___fltol@sign1
  8643     00F1                     l3523:
  8644     00F1  17D3               	bsf	___fltol@f1+2,7
  8645     00F2                     l3525:
  8646     00F2  30FF               	movlw	255
  8647     00F3  05D1               	andwf	___fltol@f1,f
  8648     00F4  30FF               	movlw	255
  8649     00F5  05D2               	andwf	___fltol@f1+1,f
  8650     00F6  30FF               	movlw	255
  8651     00F7  05D3               	andwf	___fltol@f1+2,f
  8652     00F8  3000               	movlw	0
  8653     00F9  05D4               	andwf	___fltol@f1+3,f
  8654     00FA                     l3527:
  8655     00FA  3096               	movlw	150
  8656     00FB  02DA               	subwf	___fltol@exp1,f
  8657     00FC                     l3529:
  8658     00FC  1FDA               	btfss	___fltol@exp1,7
  8659     00FD  28FF               	goto	u5381
  8660     00FE  2900               	goto	u5380
  8661     00FF                     u5381:
  8662     00FF  291A               	goto	l3539
  8663     0100                     u5380:
  8664     0100                     l3531:
  8665     0100  085A               	movf	___fltol@exp1,w
  8666     0101  3A80               	xorlw	128
  8667     0102  3E97               	addlw	151
  8668     0103  1803               	skipnc
  8669     0104  2906               	goto	u5391
  8670     0105  2907               	goto	u5390
  8671     0106                     u5391:
  8672     0106  2908               	goto	l3537
  8673     0107                     u5390:
  8674     0107  28D5               	goto	l3517
  8675     0108                     l3537:
  8676     0108  3001               	movlw	1
  8677     0109                     u5405:
  8678     0109  1003               	clrc
  8679     010A  0CD4               	rrf	___fltol@f1+3,f
  8680     010B  0CD3               	rrf	___fltol@f1+2,f
  8681     010C  0CD2               	rrf	___fltol@f1+1,f
  8682     010D  0CD1               	rrf	___fltol@f1,f
  8683     010E  3EFF               	addlw	-1
  8684     010F  1D03               	skipz
  8685     0110  2909               	goto	u5405
  8686     0111  3001               	movlw	1
  8687     0112  00D5               	movwf	??___fltol
  8688     0113  0855               	movf	??___fltol,w
  8689     0114  07DA               	addwf	___fltol@exp1,f
  8690     0115  1D03               	btfss	3,2
  8691     0116  2918               	goto	u5411
  8692     0117  2919               	goto	u5410
  8693     0118                     u5411:
  8694     0118  2908               	goto	l3537
  8695     0119                     u5410:
  8696     0119  2931               	goto	l3547
  8697     011A                     l3539:
  8698     011A  3020               	movlw	32
  8699     011B  025A               	subwf	___fltol@exp1,w
  8700     011C  1C03               	skipc
  8701     011D  291F               	goto	u5421
  8702     011E  2920               	goto	u5420
  8703     011F                     u5421:
  8704     011F  292C               	goto	l696
  8705     0120                     u5420:
  8706     0120  28D5               	goto	l3517
  8707     0121                     l3545:
  8708     0121  3001               	movlw	1
  8709     0122  00D5               	movwf	??___fltol
  8710     0123                     u5435:
  8711     0123  1003               	clrc
  8712     0124  0DD1               	rlf	___fltol@f1,f
  8713     0125  0DD2               	rlf	___fltol@f1+1,f
  8714     0126  0DD3               	rlf	___fltol@f1+2,f
  8715     0127  0DD4               	rlf	___fltol@f1+3,f
  8716     0128  0BD5               	decfsz	??___fltol,f
  8717     0129  2923               	goto	u5435
  8718     012A  3001               	movlw	1
  8719     012B  02DA               	subwf	___fltol@exp1,f
  8720     012C                     l696:
  8721     012C  085A               	movf	___fltol@exp1,w
  8722     012D  1D03               	btfss	3,2
  8723     012E  2930               	goto	u5441
  8724     012F  2931               	goto	u5440
  8725     0130                     u5441:
  8726     0130  2921               	goto	l3545
  8727     0131                     u5440:
  8728     0131                     l3547:
  8729     0131  0859               	movf	___fltol@sign1,w
  8730     0132  1903               	btfsc	3,2
  8731     0133  2935               	goto	u5451
  8732     0134  2936               	goto	u5450
  8733     0135                     u5451:
  8734     0135  2941               	goto	l699
  8735     0136                     u5450:
  8736     0136                     l3549:
  8737     0136  09D1               	comf	___fltol@f1,f
  8738     0137  09D2               	comf	___fltol@f1+1,f
  8739     0138  09D3               	comf	___fltol@f1+2,f
  8740     0139  09D4               	comf	___fltol@f1+3,f
  8741     013A  0AD1               	incf	___fltol@f1,f
  8742     013B  1903               	skipnz
  8743     013C  0AD2               	incf	___fltol@f1+1,f
  8744     013D  1903               	skipnz
  8745     013E  0AD3               	incf	___fltol@f1+2,f
  8746     013F  1903               	skipnz
  8747     0140  0AD4               	incf	___fltol@f1+3,f
  8748     0141                     l699:
  8749     0141                     l689:
  8750     0141  0008               	return
  8751     0142                     __end_of___fltol:
  8752                           
  8753                           	psect	text18
  8754     190B                     __ptext18:	
  8755 ;; *************** function ___flsub *****************
  8756 ;; Defined at:
  8757 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  8758 ;; Parameters:    Size  Location     Type
  8759 ;;  a               4   70[BANK0 ] long 
  8760 ;;  b               4   74[BANK0 ] long 
  8761 ;; Auto vars:     Size  Location     Type
  8762 ;;		None
  8763 ;; Return value:  Size  Location     Type
  8764 ;;                  4   70[BANK0 ] long 
  8765 ;; Registers used:
  8766 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8767 ;; Tracked objects:
  8768 ;;		On entry : 0/0
  8769 ;;		On exit  : 0/0
  8770 ;;		Unchanged: 0/0
  8771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8772 ;;      Params:         0       8       0       0       0
  8773 ;;      Locals:         0       0       0       0       0
  8774 ;;      Temps:          0       0       0       0       0
  8775 ;;      Totals:         0       8       0       0       0
  8776 ;;Total ram usage:        8 bytes
  8777 ;; Hardware stack levels used: 1
  8778 ;; Hardware stack levels required when called: 1
  8779 ;; This function calls:
  8780 ;;		___fladd
  8781 ;; This function is called by:
  8782 ;;		_sprintf
  8783 ;; This function uses a non-reentrant model
  8784 ;;
  8785                           
  8786     190B                     ___flsub:	
  8787                           ;psect for function ___flsub
  8788                           
  8789     190B                     l3571:	
  8790                           ;incstack = 0
  8791                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8792                           
  8793     190B  3080               	movlw	128
  8794     190C  1283               	bcf	3,5	;RP0=0, select bank0
  8795     190D  1303               	bcf	3,6	;RP1=0, select bank0
  8796     190E  06E9               	xorwf	___flsub@a+3,f
  8797     190F                     l3573:
  8798     190F  086D               	movf	___flsub@b+3,w
  8799     1910  00D5               	movwf	___fladd@b+3
  8800     1911  086C               	movf	___flsub@b+2,w
  8801     1912  00D4               	movwf	___fladd@b+2
  8802     1913  086B               	movf	___flsub@b+1,w
  8803     1914  00D3               	movwf	___fladd@b+1
  8804     1915  086A               	movf	___flsub@b,w
  8805     1916  00D2               	movwf	___fladd@b
  8806     1917  0869               	movf	___flsub@a+3,w
  8807     1918  00D9               	movwf	___fladd@a+3
  8808     1919  0868               	movf	___flsub@a+2,w
  8809     191A  00D8               	movwf	___fladd@a+2
  8810     191B  0867               	movf	___flsub@a+1,w
  8811     191C  00D7               	movwf	___fladd@a+1
  8812     191D  0866               	movf	___flsub@a,w
  8813     191E  00D6               	movwf	___fladd@a
  8814     191F  160A  118A  25A8  160A  158A  	fcall	___fladd
  8815     1924  1283               	bcf	3,5	;RP0=0, select bank0
  8816     1925  1303               	bcf	3,6	;RP1=0, select bank0
  8817     1926  0855               	movf	?___fladd+3,w
  8818     1927  00E9               	movwf	?___flsub+3
  8819     1928  0854               	movf	?___fladd+2,w
  8820     1929  00E8               	movwf	?___flsub+2
  8821     192A  0853               	movf	?___fladd+1,w
  8822     192B  00E7               	movwf	?___flsub+1
  8823     192C  0852               	movf	?___fladd,w
  8824     192D  00E6               	movwf	?___flsub
  8825     192E                     l859:
  8826     192E  0008               	return
  8827     192F                     __end_of___flsub:
  8828                           
  8829                           	psect	text19
  8830     15A8                     __ptext19:	
  8831 ;; *************** function ___fladd *****************
  8832 ;; Defined at:
  8833 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  8834 ;; Parameters:    Size  Location     Type
  8835 ;;  b               4   50[BANK0 ] long 
  8836 ;;  a               4   54[BANK0 ] long 
  8837 ;; Auto vars:     Size  Location     Type
  8838 ;;  grs             1   69[BANK0 ] unsigned char 
  8839 ;;  bexp            1   68[BANK0 ] unsigned char 
  8840 ;;  aexp            1   67[BANK0 ] unsigned char 
  8841 ;;  signs           1   66[BANK0 ] unsigned char 
  8842 ;; Return value:  Size  Location     Type
  8843 ;;                  4   50[BANK0 ] unsigned char 
  8844 ;; Registers used:
  8845 ;;		wreg, status,2, status,0, btemp+1
  8846 ;; Tracked objects:
  8847 ;;		On entry : 0/0
  8848 ;;		On exit  : 0/0
  8849 ;;		Unchanged: 0/0
  8850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8851 ;;      Params:         0       8       0       0       0
  8852 ;;      Locals:         0       4       0       0       0
  8853 ;;      Temps:          0       8       0       0       0
  8854 ;;      Totals:         0      20       0       0       0
  8855 ;;Total ram usage:       20 bytes
  8856 ;; Hardware stack levels used: 1
  8857 ;; This function calls:
  8858 ;;		Nothing
  8859 ;; This function is called by:
  8860 ;;		_sprintf
  8861 ;;		___flsub
  8862 ;; This function uses a non-reentrant model
  8863 ;;
  8864                           
  8865     15A8                     ___fladd:	
  8866                           ;psect for function ___fladd
  8867                           
  8868     15A8                     l2927:	
  8869                           ;incstack = 0
  8870                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8871                           
  8872     15A8  1283               	bcf	3,5	;RP0=0, select bank0
  8873     15A9  1303               	bcf	3,6	;RP1=0, select bank0
  8874     15AA  0855               	movf	___fladd@b+3,w
  8875     15AB  3980               	andlw	128
  8876     15AC  00E2               	movwf	___fladd@signs
  8877     15AD                     l2929:
  8878     15AD  0855               	movf	___fladd@b+3,w
  8879     15AE  00DA               	movwf	??___fladd
  8880     15AF  075A               	addwf	??___fladd,w
  8881     15B0  00E4               	movwf	___fladd@bexp
  8882     15B1                     l2931:
  8883     15B1  1FD4               	btfss	___fladd@b+2,7
  8884     15B2  2DB4               	goto	u3771
  8885     15B3  2DB5               	goto	u3770
  8886     15B4                     u3771:
  8887     15B4  2DB6               	goto	l2935
  8888     15B5                     u3770:
  8889     15B5                     l2933:
  8890     15B5  1464               	bsf	___fladd@bexp,0
  8891     15B6                     l2935:
  8892     15B6  0864               	movf	___fladd@bexp,w
  8893     15B7  1903               	btfsc	3,2
  8894     15B8  2DBA               	goto	u3781
  8895     15B9  2DBB               	goto	u3780
  8896     15BA                     u3781:
  8897     15BA  2DCB               	goto	l2945
  8898     15BB                     u3780:
  8899     15BB                     l2937:
  8900     15BB  0A64               	incf	___fladd@bexp,w
  8901     15BC  1D03               	btfss	3,2
  8902     15BD  2DBF               	goto	u3791
  8903     15BE  2DC0               	goto	u3790
  8904     15BF                     u3791:
  8905     15BF  2DC8               	goto	l2941
  8906     15C0                     u3790:
  8907     15C0                     l2939:
  8908     15C0  3000               	movlw	0
  8909     15C1  00D5               	movwf	___fladd@b+3
  8910     15C2  3000               	movlw	0
  8911     15C3  00D4               	movwf	___fladd@b+2
  8912     15C4  3000               	movlw	0
  8913     15C5  00D3               	movwf	___fladd@b+1
  8914     15C6  3000               	movlw	0
  8915     15C7  00D2               	movwf	___fladd@b
  8916     15C8                     l2941:
  8917     15C8  17D4               	bsf	___fladd@b+2,7
  8918     15C9                     l2943:
  8919     15C9  01D5               	clrf	___fladd@b+3
  8920     15CA  2DD3               	goto	l2947
  8921     15CB                     l2945:
  8922     15CB  3000               	movlw	0
  8923     15CC  00D5               	movwf	___fladd@b+3
  8924     15CD  3000               	movlw	0
  8925     15CE  00D4               	movwf	___fladd@b+2
  8926     15CF  3000               	movlw	0
  8927     15D0  00D3               	movwf	___fladd@b+1
  8928     15D1  3000               	movlw	0
  8929     15D2  00D2               	movwf	___fladd@b
  8930     15D3                     l2947:
  8931     15D3  0859               	movf	___fladd@a+3,w
  8932     15D4  3980               	andlw	128
  8933     15D5  00E3               	movwf	___fladd@aexp
  8934     15D6                     l2949:
  8935     15D6  0863               	movf	___fladd@aexp,w
  8936     15D7  0662               	xorwf	___fladd@signs,w
  8937     15D8  1903               	skipnz
  8938     15D9  2DDB               	goto	u3801
  8939     15DA  2DDC               	goto	u3800
  8940     15DB                     u3801:
  8941     15DB  2DDD               	goto	l2953
  8942     15DC                     u3800:
  8943     15DC                     l2951:
  8944     15DC  1762               	bsf	___fladd@signs,6
  8945     15DD                     l2953:
  8946     15DD  0859               	movf	___fladd@a+3,w
  8947     15DE  00DA               	movwf	??___fladd
  8948     15DF  075A               	addwf	??___fladd,w
  8949     15E0  00E3               	movwf	___fladd@aexp
  8950     15E1                     l2955:
  8951     15E1  1FD8               	btfss	___fladd@a+2,7
  8952     15E2  2DE4               	goto	u3811
  8953     15E3  2DE5               	goto	u3810
  8954     15E4                     u3811:
  8955     15E4  2DE6               	goto	l2959
  8956     15E5                     u3810:
  8957     15E5                     l2957:
  8958     15E5  1463               	bsf	___fladd@aexp,0
  8959     15E6                     l2959:
  8960     15E6  0863               	movf	___fladd@aexp,w
  8961     15E7  1903               	btfsc	3,2
  8962     15E8  2DEA               	goto	u3821
  8963     15E9  2DEB               	goto	u3820
  8964     15EA                     u3821:
  8965     15EA  2DFB               	goto	l2969
  8966     15EB                     u3820:
  8967     15EB                     l2961:
  8968     15EB  0A63               	incf	___fladd@aexp,w
  8969     15EC  1D03               	btfss	3,2
  8970     15ED  2DEF               	goto	u3831
  8971     15EE  2DF0               	goto	u3830
  8972     15EF                     u3831:
  8973     15EF  2DF8               	goto	l2965
  8974     15F0                     u3830:
  8975     15F0                     l2963:
  8976     15F0  3000               	movlw	0
  8977     15F1  00D9               	movwf	___fladd@a+3
  8978     15F2  3000               	movlw	0
  8979     15F3  00D8               	movwf	___fladd@a+2
  8980     15F4  3000               	movlw	0
  8981     15F5  00D7               	movwf	___fladd@a+1
  8982     15F6  3000               	movlw	0
  8983     15F7  00D6               	movwf	___fladd@a
  8984     15F8                     l2965:
  8985     15F8  17D8               	bsf	___fladd@a+2,7
  8986     15F9                     l2967:
  8987     15F9  01D9               	clrf	___fladd@a+3
  8988     15FA  2E03               	goto	l813
  8989     15FB                     l2969:
  8990     15FB  3000               	movlw	0
  8991     15FC  00D9               	movwf	___fladd@a+3
  8992     15FD  3000               	movlw	0
  8993     15FE  00D8               	movwf	___fladd@a+2
  8994     15FF  3000               	movlw	0
  8995     1600  00D7               	movwf	___fladd@a+1
  8996     1601  3000               	movlw	0
  8997     1602  00D6               	movwf	___fladd@a
  8998     1603                     l813:
  8999     1603  0864               	movf	___fladd@bexp,w
  9000     1604  0263               	subwf	___fladd@aexp,w
  9001     1605  1803               	skipnc
  9002     1606  2E08               	goto	u3841
  9003     1607  2E09               	goto	u3840
  9004     1608                     u3841:
  9005     1608  2E2F               	goto	l3005
  9006     1609                     u3840:
  9007     1609                     l2971:
  9008     1609  1F62               	btfss	___fladd@signs,6
  9009     160A  2E0C               	goto	u3851
  9010     160B  2E0D               	goto	u3850
  9011     160C                     u3851:
  9012     160C  2E11               	goto	l2975
  9013     160D                     u3850:
  9014     160D                     l2973:
  9015     160D  3080               	movlw	128
  9016     160E  00DA               	movwf	??___fladd
  9017     160F  085A               	movf	??___fladd,w
  9018     1610  06E2               	xorwf	___fladd@signs,f
  9019     1611                     l2975:
  9020     1611  0864               	movf	___fladd@bexp,w
  9021     1612  00E5               	movwf	___fladd@grs
  9022     1613                     l2977:
  9023     1613  0863               	movf	___fladd@aexp,w
  9024     1614  00E4               	movwf	___fladd@bexp
  9025     1615                     l2979:
  9026     1615  0865               	movf	___fladd@grs,w
  9027     1616  00E3               	movwf	___fladd@aexp
  9028     1617                     l2981:
  9029     1617  0852               	movf	___fladd@b,w
  9030     1618  00E5               	movwf	___fladd@grs
  9031     1619                     l2983:
  9032     1619  0856               	movf	___fladd@a,w
  9033     161A  00D2               	movwf	___fladd@b
  9034     161B                     l2985:
  9035     161B  0865               	movf	___fladd@grs,w
  9036     161C  00D6               	movwf	___fladd@a
  9037     161D                     l2987:
  9038     161D  0853               	movf	___fladd@b+1,w
  9039     161E  00E5               	movwf	___fladd@grs
  9040     161F                     l2989:
  9041     161F  0857               	movf	___fladd@a+1,w
  9042     1620  00D3               	movwf	___fladd@b+1
  9043     1621                     l2991:
  9044     1621  0865               	movf	___fladd@grs,w
  9045     1622  00D7               	movwf	___fladd@a+1
  9046     1623                     l2993:
  9047     1623  0854               	movf	___fladd@b+2,w
  9048     1624  00E5               	movwf	___fladd@grs
  9049     1625                     l2995:
  9050     1625  0858               	movf	___fladd@a+2,w
  9051     1626  00D4               	movwf	___fladd@b+2
  9052     1627                     l2997:
  9053     1627  0865               	movf	___fladd@grs,w
  9054     1628  00D8               	movwf	___fladd@a+2
  9055     1629                     l2999:
  9056     1629  0855               	movf	___fladd@b+3,w
  9057     162A  00E5               	movwf	___fladd@grs
  9058     162B                     l3001:
  9059     162B  0859               	movf	___fladd@a+3,w
  9060     162C  00D5               	movwf	___fladd@b+3
  9061     162D                     l3003:
  9062     162D  0865               	movf	___fladd@grs,w
  9063     162E  00D9               	movwf	___fladd@a+3
  9064     162F                     l3005:
  9065     162F  01E5               	clrf	___fladd@grs
  9066     1630                     l3007:
  9067     1630  0863               	movf	___fladd@aexp,w
  9068     1631  00DA               	movwf	??___fladd
  9069     1632  01DB               	clrf	??___fladd+1
  9070     1633  085B               	movf	??___fladd+1,w
  9071     1634  00DD               	movwf	??___fladd+3
  9072     1635  0864               	movf	___fladd@bexp,w
  9073     1636  025A               	subwf	??___fladd,w
  9074     1637  00DC               	movwf	??___fladd+2
  9075     1638  1C03               	skipc
  9076     1639  03DD               	decf	??___fladd+3,f
  9077     163A  085D               	movf	??___fladd+3,w
  9078     163B  3A80               	xorlw	128
  9079     163C  00FF               	movwf	btemp+1
  9080     163D  3080               	movlw	128
  9081     163E  027F               	subwf	btemp+1,w
  9082     163F  1D03               	skipz
  9083     1640  2E43               	goto	u3865
  9084     1641  301A               	movlw	26
  9085     1642  025C               	subwf	??___fladd+2,w
  9086     1643                     u3865:
  9087     1643  1C03               	skipc
  9088     1644  2E46               	goto	u3861
  9089     1645  2E47               	goto	u3860
  9090     1646                     u3861:
  9091     1646  2E7E               	goto	l3023
  9092     1647                     u3860:
  9093     1647                     l3009:
  9094     1647  1283               	bcf	3,5	;RP0=0, select bank0
  9095     1648  1303               	bcf	3,6	;RP1=0, select bank0
  9096     1649  0855               	movf	___fladd@b+3,w
  9097     164A  0454               	iorwf	___fladd@b+2,w
  9098     164B  0453               	iorwf	___fladd@b+1,w
  9099     164C  0452               	iorwf	___fladd@b,w
  9100     164D  1D03               	skipz
  9101     164E  2E50               	goto	u3871
  9102     164F  2E52               	goto	u3870
  9103     1650                     u3871:
  9104     1650  3001               	movlw	1
  9105     1651  2E53               	goto	u3880
  9106     1652                     u3870:
  9107     1652  3000               	movlw	0
  9108     1653                     u3880:
  9109     1653  00E5               	movwf	___fladd@grs
  9110     1654  3000               	movlw	0
  9111     1655  00D5               	movwf	___fladd@b+3
  9112     1656  3000               	movlw	0
  9113     1657  00D4               	movwf	___fladd@b+2
  9114     1658  3000               	movlw	0
  9115     1659  00D3               	movwf	___fladd@b+1
  9116     165A  3000               	movlw	0
  9117     165B  00D2               	movwf	___fladd@b
  9118     165C  0863               	movf	___fladd@aexp,w
  9119     165D  00E4               	movwf	___fladd@bexp
  9120     165E  2E86               	goto	l817
  9121     165F                     l819:
  9122     165F  1C65               	btfss	___fladd@grs,0
  9123     1660  2E62               	goto	u3891
  9124     1661  2E63               	goto	u3890
  9125     1662                     u3891:
  9126     1662  2E6A               	goto	l3013
  9127     1663                     u3890:
  9128     1663                     l3011:
  9129     1663  0865               	movf	___fladd@grs,w
  9130     1664  00DA               	movwf	??___fladd
  9131     1665  1003               	clrc
  9132     1666  0C5A               	rrf	??___fladd,w
  9133     1667  3801               	iorlw	1
  9134     1668  00E5               	movwf	___fladd@grs
  9135     1669  2E6C               	goto	l3015
  9136     166A                     l3013:
  9137     166A  1003               	clrc
  9138     166B  0CE5               	rrf	___fladd@grs,f
  9139     166C                     l3015:
  9140     166C  1C52               	btfss	___fladd@b,0
  9141     166D  2E6F               	goto	u3901
  9142     166E  2E70               	goto	u3900
  9143     166F                     u3901:
  9144     166F  2E71               	goto	l3019
  9145     1670                     u3900:
  9146     1670                     l3017:
  9147     1670  17E5               	bsf	___fladd@grs,7
  9148     1671                     l3019:
  9149     1671  3001               	movlw	1
  9150     1672  00DA               	movwf	??___fladd
  9151     1673                     u3915:
  9152     1673  0D55               	rlf	___fladd@b+3,w
  9153     1674  0CD5               	rrf	___fladd@b+3,f
  9154     1675  0CD4               	rrf	___fladd@b+2,f
  9155     1676  0CD3               	rrf	___fladd@b+1,f
  9156     1677  0CD2               	rrf	___fladd@b,f
  9157     1678  0BDA               	decfsz	??___fladd& (0+127),f
  9158     1679  2E73               	goto	u3915
  9159     167A                     l3021:
  9160     167A  3001               	movlw	1
  9161     167B  00DA               	movwf	??___fladd
  9162     167C  085A               	movf	??___fladd,w
  9163     167D  07E4               	addwf	___fladd@bexp,f
  9164     167E                     l3023:
  9165     167E  1283               	bcf	3,5	;RP0=0, select bank0
  9166     167F  1303               	bcf	3,6	;RP1=0, select bank0
  9167     1680  0863               	movf	___fladd@aexp,w
  9168     1681  0264               	subwf	___fladd@bexp,w
  9169     1682  1C03               	skipc
  9170     1683  2E85               	goto	u3921
  9171     1684  2E86               	goto	u3920
  9172     1685                     u3921:
  9173     1685  2E5F               	goto	l819
  9174     1686                     u3920:
  9175     1686                     l817:
  9176     1686  1B62               	btfsc	___fladd@signs,6
  9177     1687  2E89               	goto	u3931
  9178     1688  2E8A               	goto	u3930
  9179     1689                     u3931:
  9180     1689  2ED3               	goto	l3049
  9181     168A                     u3930:
  9182     168A                     l3025:
  9183     168A  0864               	movf	___fladd@bexp,w
  9184     168B  1D03               	btfss	3,2
  9185     168C  2E8E               	goto	u3941
  9186     168D  2E8F               	goto	u3940
  9187     168E                     u3941:
  9188     168E  2E98               	goto	l3031
  9189     168F                     u3940:
  9190     168F                     l3027:
  9191     168F  3000               	movlw	0
  9192     1690  00D5               	movwf	?___fladd+3
  9193     1691  3000               	movlw	0
  9194     1692  00D4               	movwf	?___fladd+2
  9195     1693  3000               	movlw	0
  9196     1694  00D3               	movwf	?___fladd+1
  9197     1695  3000               	movlw	0
  9198     1696  00D2               	movwf	?___fladd
  9199     1697  2FFF               	goto	l826
  9200     1698                     l3031:
  9201     1698  0856               	movf	___fladd@a,w
  9202     1699  07D2               	addwf	___fladd@b,f
  9203     169A  0857               	movf	___fladd@a+1,w
  9204     169B  1103               	clrz
  9205     169C  1803               	skipnc
  9206     169D  3E01               	addlw	1
  9207     169E  1903               	skipnz
  9208     169F  2EA1               	goto	u3951
  9209     16A0  07D3               	addwf	___fladd@b+1,f
  9210     16A1                     u3951:
  9211     16A1  0858               	movf	___fladd@a+2,w
  9212     16A2  1103               	clrz
  9213     16A3  1803               	skipnc
  9214     16A4  3E01               	addlw	1
  9215     16A5  1903               	skipnz
  9216     16A6  2EA8               	goto	u3952
  9217     16A7  07D4               	addwf	___fladd@b+2,f
  9218     16A8                     u3952:
  9219     16A8  0859               	movf	___fladd@a+3,w
  9220     16A9  1103               	clrz
  9221     16AA  1803               	skipnc
  9222     16AB  3E01               	addlw	1
  9223     16AC  1903               	skipnz
  9224     16AD  2EAF               	goto	u3953
  9225     16AE  07D5               	addwf	___fladd@b+3,f
  9226     16AF                     u3953:
  9227     16AF                     l3033:
  9228     16AF  1C55               	btfss	___fladd@b+3,0
  9229     16B0  2EB2               	goto	u3961
  9230     16B1  2EB3               	goto	u3960
  9231     16B2                     u3961:
  9232     16B2  2F87               	goto	l3083
  9233     16B3                     u3960:
  9234     16B3                     l3035:
  9235     16B3  1C65               	btfss	___fladd@grs,0
  9236     16B4  2EB6               	goto	u3971
  9237     16B5  2EB7               	goto	u3970
  9238     16B6                     u3971:
  9239     16B6  2EBE               	goto	l3039
  9240     16B7                     u3970:
  9241     16B7                     l3037:
  9242     16B7  0865               	movf	___fladd@grs,w
  9243     16B8  00DA               	movwf	??___fladd
  9244     16B9  1003               	clrc
  9245     16BA  0C5A               	rrf	??___fladd,w
  9246     16BB  3801               	iorlw	1
  9247     16BC  00E5               	movwf	___fladd@grs
  9248     16BD  2EC0               	goto	l3041
  9249     16BE                     l3039:
  9250     16BE  1003               	clrc
  9251     16BF  0CE5               	rrf	___fladd@grs,f
  9252     16C0                     l3041:
  9253     16C0  1C52               	btfss	___fladd@b,0
  9254     16C1  2EC3               	goto	u3981
  9255     16C2  2EC4               	goto	u3980
  9256     16C3                     u3981:
  9257     16C3  2EC5               	goto	l3045
  9258     16C4                     u3980:
  9259     16C4                     l3043:
  9260     16C4  17E5               	bsf	___fladd@grs,7
  9261     16C5                     l3045:
  9262     16C5  3001               	movlw	1
  9263     16C6  00DA               	movwf	??___fladd
  9264     16C7                     u3995:
  9265     16C7  0D55               	rlf	___fladd@b+3,w
  9266     16C8  0CD5               	rrf	___fladd@b+3,f
  9267     16C9  0CD4               	rrf	___fladd@b+2,f
  9268     16CA  0CD3               	rrf	___fladd@b+1,f
  9269     16CB  0CD2               	rrf	___fladd@b,f
  9270     16CC  0BDA               	decfsz	??___fladd& (0+127),f
  9271     16CD  2EC7               	goto	u3995
  9272     16CE                     l3047:
  9273     16CE  3001               	movlw	1
  9274     16CF  00DA               	movwf	??___fladd
  9275     16D0  085A               	movf	??___fladd,w
  9276     16D1  07E4               	addwf	___fladd@bexp,f
  9277     16D2  2F87               	goto	l3083
  9278     16D3                     l3049:
  9279     16D3  0855               	movf	___fladd@b+3,w
  9280     16D4  3A80               	xorlw	128
  9281     16D5  00FF               	movwf	btemp+1
  9282     16D6  0859               	movf	___fladd@a+3,w
  9283     16D7  3A80               	xorlw	128
  9284     16D8  027F               	subwf	btemp+1,w
  9285     16D9  1D03               	skipz
  9286     16DA  2EE5               	goto	u4003
  9287     16DB  0858               	movf	___fladd@a+2,w
  9288     16DC  0254               	subwf	___fladd@b+2,w
  9289     16DD  1D03               	skipz
  9290     16DE  2EE5               	goto	u4003
  9291     16DF  0857               	movf	___fladd@a+1,w
  9292     16E0  0253               	subwf	___fladd@b+1,w
  9293     16E1  1D03               	skipz
  9294     16E2  2EE5               	goto	u4003
  9295     16E3  0856               	movf	___fladd@a,w
  9296     16E4  0252               	subwf	___fladd@b,w
  9297     16E5                     u4003:
  9298     16E5  1803               	skipnc
  9299     16E6  2EE8               	goto	u4001
  9300     16E7  2EE9               	goto	u4000
  9301     16E8                     u4001:
  9302     16E8  2F41               	goto	l3059
  9303     16E9                     u4000:
  9304     16E9                     l3051:
  9305     16E9  30FF               	movlw	255
  9306     16EA  00DA               	movwf	??___fladd
  9307     16EB  30FF               	movlw	255
  9308     16EC  00DB               	movwf	??___fladd+1
  9309     16ED  30FF               	movlw	255
  9310     16EE  00DC               	movwf	??___fladd+2
  9311     16EF  30FF               	movlw	255
  9312     16F0  00DD               	movwf	??___fladd+3
  9313     16F1  0856               	movf	___fladd@a,w
  9314     16F2  00DE               	movwf	??___fladd+4
  9315     16F3  0857               	movf	___fladd@a+1,w
  9316     16F4  00DF               	movwf	??___fladd+5
  9317     16F5  0858               	movf	___fladd@a+2,w
  9318     16F6  00E0               	movwf	??___fladd+6
  9319     16F7  0859               	movf	___fladd@a+3,w
  9320     16F8  00E1               	movwf	??___fladd+7
  9321     16F9  0852               	movf	___fladd@b,w
  9322     16FA  02DE               	subwf	??___fladd+4,f
  9323     16FB  0853               	movf	___fladd@b+1,w
  9324     16FC  1C03               	skipc
  9325     16FD  0F53               	incfsz	___fladd@b+1,w
  9326     16FE  2F00               	goto	u4011
  9327     16FF  2F01               	goto	u4012
  9328     1700                     u4011:
  9329     1700  02DF               	subwf	??___fladd+5,f
  9330     1701                     u4012:
  9331     1701  0854               	movf	___fladd@b+2,w
  9332     1702  1C03               	skipc
  9333     1703  0F54               	incfsz	___fladd@b+2,w
  9334     1704  2F06               	goto	u4013
  9335     1705  2F07               	goto	u4014
  9336     1706                     u4013:
  9337     1706  02E0               	subwf	??___fladd+6,f
  9338     1707                     u4014:
  9339     1707  0855               	movf	___fladd@b+3,w
  9340     1708  1C03               	skipc
  9341     1709  0F55               	incfsz	___fladd@b+3,w
  9342     170A  2F0C               	goto	u4015
  9343     170B  2F0D               	goto	u4016
  9344     170C                     u4015:
  9345     170C  02E1               	subwf	??___fladd+7,f
  9346     170D                     u4016:
  9347     170D  085E               	movf	??___fladd+4,w
  9348     170E  07DA               	addwf	??___fladd,f
  9349     170F  085F               	movf	??___fladd+5,w
  9350     1710  1803               	skipnc
  9351     1711  0F5F               	incfsz	??___fladd+5,w
  9352     1712  2F14               	goto	u4020
  9353     1713  2F15               	goto	u4021
  9354     1714                     u4020:
  9355     1714  07DB               	addwf	??___fladd+1,f
  9356     1715                     u4021:
  9357     1715  0860               	movf	??___fladd+6,w
  9358     1716  1803               	skipnc
  9359     1717  0F60               	incfsz	??___fladd+6,w
  9360     1718  2F1A               	goto	u4022
  9361     1719  2F1B               	goto	u4023
  9362     171A                     u4022:
  9363     171A  07DC               	addwf	??___fladd+2,f
  9364     171B                     u4023:
  9365     171B  0861               	movf	??___fladd+7,w
  9366     171C  1803               	skipnc
  9367     171D  0A61               	incf	??___fladd+7,w
  9368     171E  07DD               	addwf	??___fladd+3,f
  9369     171F  085D               	movf	??___fladd+3,w
  9370     1720  00D5               	movwf	___fladd@b+3
  9371     1721  085C               	movf	??___fladd+2,w
  9372     1722  00D4               	movwf	___fladd@b+2
  9373     1723  085B               	movf	??___fladd+1,w
  9374     1724  00D3               	movwf	___fladd@b+1
  9375     1725  085A               	movf	??___fladd,w
  9376     1726  00D2               	movwf	___fladd@b
  9377     1727                     l3053:
  9378     1727  3080               	movlw	128
  9379     1728  00DA               	movwf	??___fladd
  9380     1729  085A               	movf	??___fladd,w
  9381     172A  06E2               	xorwf	___fladd@signs,f
  9382     172B  09E5               	comf	___fladd@grs,f
  9383     172C  0AE5               	incf	___fladd@grs,f
  9384     172D                     l3055:
  9385     172D  0865               	movf	___fladd@grs,w
  9386     172E  1D03               	btfss	3,2
  9387     172F  2F31               	goto	u4031
  9388     1730  2F32               	goto	u4030
  9389     1731                     u4031:
  9390     1731  2F4F               	goto	l834
  9391     1732                     u4030:
  9392     1732                     l3057:
  9393     1732  3001               	movlw	1
  9394     1733  07D2               	addwf	___fladd@b,f
  9395     1734  3000               	movlw	0
  9396     1735  1803               	skipnc
  9397     1736  3001               	movlw	1
  9398     1737  07D3               	addwf	___fladd@b+1,f
  9399     1738  3000               	movlw	0
  9400     1739  1803               	skipnc
  9401     173A  3001               	movlw	1
  9402     173B  07D4               	addwf	___fladd@b+2,f
  9403     173C  3000               	movlw	0
  9404     173D  1803               	skipnc
  9405     173E  3001               	movlw	1
  9406     173F  07D5               	addwf	___fladd@b+3,f
  9407     1740  2F4F               	goto	l834
  9408     1741                     l3059:
  9409     1741  0856               	movf	___fladd@a,w
  9410     1742  02D2               	subwf	___fladd@b,f
  9411     1743  0857               	movf	___fladd@a+1,w
  9412     1744  1C03               	skipc
  9413     1745  0F57               	incfsz	___fladd@a+1,w
  9414     1746  02D3               	subwf	___fladd@b+1,f
  9415     1747  0858               	movf	___fladd@a+2,w
  9416     1748  1C03               	skipc
  9417     1749  0F58               	incfsz	___fladd@a+2,w
  9418     174A  02D4               	subwf	___fladd@b+2,f
  9419     174B  0859               	movf	___fladd@a+3,w
  9420     174C  1C03               	skipc
  9421     174D  0F59               	incfsz	___fladd@a+3,w
  9422     174E  02D5               	subwf	___fladd@b+3,f
  9423     174F                     l834:
  9424     174F  0855               	movf	___fladd@b+3,w
  9425     1750  0454               	iorwf	___fladd@b+2,w
  9426     1751  0453               	iorwf	___fladd@b+1,w
  9427     1752  0452               	iorwf	___fladd@b,w
  9428     1753  1D03               	skipz
  9429     1754  2F56               	goto	u4041
  9430     1755  2F57               	goto	u4040
  9431     1756                     u4041:
  9432     1756  2F83               	goto	l3081
  9433     1757                     u4040:
  9434     1757                     l3061:
  9435     1757  0865               	movf	___fladd@grs,w
  9436     1758  1D03               	btfss	3,2
  9437     1759  2F5B               	goto	u4051
  9438     175A  2F5C               	goto	u4050
  9439     175B                     u4051:
  9440     175B  2F83               	goto	l3081
  9441     175C                     u4050:
  9442     175C                     l3063:
  9443     175C  3000               	movlw	0
  9444     175D  00D5               	movwf	?___fladd+3
  9445     175E  3000               	movlw	0
  9446     175F  00D4               	movwf	?___fladd+2
  9447     1760  3000               	movlw	0
  9448     1761  00D3               	movwf	?___fladd+1
  9449     1762  3000               	movlw	0
  9450     1763  00D2               	movwf	?___fladd
  9451     1764  2FFF               	goto	l826
  9452     1765                     l3067:
  9453     1765  3001               	movlw	1
  9454     1766  00DA               	movwf	??___fladd
  9455     1767                     u4065:
  9456     1767  1003               	clrc
  9457     1768  0DD2               	rlf	___fladd@b,f
  9458     1769  0DD3               	rlf	___fladd@b+1,f
  9459     176A  0DD4               	rlf	___fladd@b+2,f
  9460     176B  0DD5               	rlf	___fladd@b+3,f
  9461     176C  0BDA               	decfsz	??___fladd,f
  9462     176D  2F67               	goto	u4065
  9463     176E                     l3069:
  9464     176E  1FE5               	btfss	___fladd@grs,7
  9465     176F  2F71               	goto	u4071
  9466     1770  2F72               	goto	u4070
  9467     1771                     u4071:
  9468     1771  2F73               	goto	l838
  9469     1772                     u4070:
  9470     1772                     l3071:
  9471     1772  1452               	bsf	___fladd@b,0
  9472     1773                     l838:
  9473     1773  1C65               	btfss	___fladd@grs,0
  9474     1774  2F76               	goto	u4081
  9475     1775  2F77               	goto	u4080
  9476     1776                     u4081:
  9477     1776  2F7A               	goto	l3075
  9478     1777                     u4080:
  9479     1777                     l3073:
  9480     1777  1403               	setc
  9481     1778  0DE5               	rlf	___fladd@grs,f
  9482     1779  2F7C               	goto	l3077
  9483     177A                     l3075:
  9484     177A  1003               	clrc
  9485     177B  0DE5               	rlf	___fladd@grs,f
  9486     177C                     l3077:
  9487     177C  0864               	movf	___fladd@bexp,w
  9488     177D  1903               	btfsc	3,2
  9489     177E  2F80               	goto	u4091
  9490     177F  2F81               	goto	u4090
  9491     1780                     u4091:
  9492     1780  2F83               	goto	l3081
  9493     1781                     u4090:
  9494     1781                     l3079:
  9495     1781  3001               	movlw	1
  9496     1782  02E4               	subwf	___fladd@bexp,f
  9497     1783                     l3081:
  9498     1783  1FD4               	btfss	___fladd@b+2,7
  9499     1784  2F86               	goto	u4101
  9500     1785  2F87               	goto	u4100
  9501     1786                     u4101:
  9502     1786  2F65               	goto	l3067
  9503     1787                     u4100:
  9504     1787                     l3083:
  9505     1787  01E3               	clrf	___fladd@aexp
  9506     1788                     l3085:
  9507     1788  1FE5               	btfss	___fladd@grs,7
  9508     1789  2F8B               	goto	u4111
  9509     178A  2F8C               	goto	u4110
  9510     178B                     u4111:
  9511     178B  2F9A               	goto	l3093
  9512     178C                     u4110:
  9513     178C                     l3087:
  9514     178C  0865               	movf	___fladd@grs,w
  9515     178D  397F               	andlw	127
  9516     178E  1903               	btfsc	3,2
  9517     178F  2F91               	goto	u4121
  9518     1790  2F92               	goto	u4120
  9519     1791                     u4121:
  9520     1791  2F95               	goto	l844
  9521     1792                     u4120:
  9522     1792                     l3089:
  9523     1792  01E3               	clrf	___fladd@aexp
  9524     1793  0AE3               	incf	___fladd@aexp,f
  9525     1794  2F9A               	goto	l3093
  9526     1795                     l844:
  9527     1795  1C52               	btfss	___fladd@b,0
  9528     1796  2F98               	goto	u4131
  9529     1797  2F99               	goto	u4130
  9530     1798                     u4131:
  9531     1798  2F9A               	goto	l3093
  9532     1799                     u4130:
  9533     1799  2F92               	goto	l3089
  9534     179A                     l3093:
  9535     179A  0863               	movf	___fladd@aexp,w
  9536     179B  1903               	btfsc	3,2
  9537     179C  2F9E               	goto	u4141
  9538     179D  2F9F               	goto	u4140
  9539     179E                     u4141:
  9540     179E  2FD3               	goto	l847
  9541     179F                     u4140:
  9542     179F                     l3095:
  9543     179F  3001               	movlw	1
  9544     17A0  07D2               	addwf	___fladd@b,f
  9545     17A1  3000               	movlw	0
  9546     17A2  1803               	skipnc
  9547     17A3  3001               	movlw	1
  9548     17A4  07D3               	addwf	___fladd@b+1,f
  9549     17A5  3000               	movlw	0
  9550     17A6  1803               	skipnc
  9551     17A7  3001               	movlw	1
  9552     17A8  07D4               	addwf	___fladd@b+2,f
  9553     17A9  3000               	movlw	0
  9554     17AA  1803               	skipnc
  9555     17AB  3001               	movlw	1
  9556     17AC  07D5               	addwf	___fladd@b+3,f
  9557     17AD                     l3097:
  9558     17AD  1C55               	btfss	___fladd@b+3,0
  9559     17AE  2FB0               	goto	u4151
  9560     17AF  2FB1               	goto	u4150
  9561     17B0                     u4151:
  9562     17B0  2FD3               	goto	l847
  9563     17B1                     u4150:
  9564     17B1                     l3099:
  9565     17B1  0852               	movf	___fladd@b,w
  9566     17B2  00DA               	movwf	??___fladd
  9567     17B3  0853               	movf	___fladd@b+1,w
  9568     17B4  00DB               	movwf	??___fladd+1
  9569     17B5  0854               	movf	___fladd@b+2,w
  9570     17B6  00DC               	movwf	??___fladd+2
  9571     17B7  0855               	movf	___fladd@b+3,w
  9572     17B8  00DD               	movwf	??___fladd+3
  9573     17B9  3001               	movlw	1
  9574     17BA  00DE               	movwf	??___fladd+4
  9575     17BB                     u4165:
  9576     17BB  0D5D               	rlf	??___fladd+3,w
  9577     17BC  0CDD               	rrf	??___fladd+3,f
  9578     17BD  0CDC               	rrf	??___fladd+2,f
  9579     17BE  0CDB               	rrf	??___fladd+1,f
  9580     17BF  0CDA               	rrf	??___fladd,f
  9581     17C0                     u4160:
  9582     17C0  0BDE               	decfsz	??___fladd+4,f
  9583     17C1  2FBB               	goto	u4165
  9584     17C2  085D               	movf	??___fladd+3,w
  9585     17C3  00D5               	movwf	___fladd@b+3
  9586     17C4  085C               	movf	??___fladd+2,w
  9587     17C5  00D4               	movwf	___fladd@b+2
  9588     17C6  085B               	movf	??___fladd+1,w
  9589     17C7  00D3               	movwf	___fladd@b+1
  9590     17C8  085A               	movf	??___fladd,w
  9591     17C9  00D2               	movwf	___fladd@b
  9592     17CA  0A64               	incf	___fladd@bexp,w
  9593     17CB  1903               	btfsc	3,2
  9594     17CC  2FCE               	goto	u4171
  9595     17CD  2FCF               	goto	u4170
  9596     17CE                     u4171:
  9597     17CE  2FD3               	goto	l847
  9598     17CF                     u4170:
  9599     17CF                     l3101:
  9600     17CF  3001               	movlw	1
  9601     17D0  00DA               	movwf	??___fladd
  9602     17D1  085A               	movf	??___fladd,w
  9603     17D2  07E4               	addwf	___fladd@bexp,f
  9604     17D3                     l847:
  9605     17D3  0A64               	incf	___fladd@bexp,w
  9606     17D4  1903               	btfsc	3,2
  9607     17D5  2FD7               	goto	u4181
  9608     17D6  2FD8               	goto	u4180
  9609     17D7                     u4181:
  9610     17D7  2FDD               	goto	l3105
  9611     17D8                     u4180:
  9612     17D8                     l3103:
  9613     17D8  0864               	movf	___fladd@bexp,w
  9614     17D9  1D03               	btfss	3,2
  9615     17DA  2FDC               	goto	u4191
  9616     17DB  2FDD               	goto	u4190
  9617     17DC                     u4191:
  9618     17DC  2FEB               	goto	l3111
  9619     17DD                     u4190:
  9620     17DD                     l3105:
  9621     17DD  3000               	movlw	0
  9622     17DE  00D5               	movwf	___fladd@b+3
  9623     17DF  3000               	movlw	0
  9624     17E0  00D4               	movwf	___fladd@b+2
  9625     17E1  3000               	movlw	0
  9626     17E2  00D3               	movwf	___fladd@b+1
  9627     17E3  3000               	movlw	0
  9628     17E4  00D2               	movwf	___fladd@b
  9629     17E5                     l3107:
  9630     17E5  0864               	movf	___fladd@bexp,w
  9631     17E6  1D03               	btfss	3,2
  9632     17E7  2FE9               	goto	u4201
  9633     17E8  2FEA               	goto	u4200
  9634     17E9                     u4201:
  9635     17E9  2FEB               	goto	l3111
  9636     17EA                     u4200:
  9637     17EA                     l3109:
  9638     17EA  01E2               	clrf	___fladd@signs
  9639     17EB                     l3111:
  9640     17EB  1C64               	btfss	___fladd@bexp,0
  9641     17EC  2FEE               	goto	u4211
  9642     17ED  2FEF               	goto	u4210
  9643     17EE                     u4211:
  9644     17EE  2FF1               	goto	l3115
  9645     17EF                     u4210:
  9646     17EF                     l3113:
  9647     17EF  17D4               	bsf	___fladd@b+2,7
  9648     17F0  2FF5               	goto	l855
  9649     17F1                     l3115:
  9650     17F1  307F               	movlw	127
  9651     17F2  00DA               	movwf	??___fladd
  9652     17F3  085A               	movf	??___fladd,w
  9653     17F4  05D4               	andwf	___fladd@b+2,f
  9654     17F5                     l855:
  9655     17F5  0864               	movf	___fladd@bexp,w
  9656     17F6  00DA               	movwf	??___fladd
  9657     17F7  1003               	clrc
  9658     17F8  0C5A               	rrf	??___fladd,w
  9659     17F9  00D5               	movwf	___fladd@b+3
  9660     17FA                     l3117:
  9661     17FA  1FE2               	btfss	___fladd@signs,7
  9662     17FB  2FFD               	goto	u4221
  9663     17FC  2FFE               	goto	u4220
  9664     17FD                     u4221:
  9665     17FD  2FFF               	goto	l856
  9666     17FE                     u4220:
  9667     17FE                     l3119:
  9668     17FE  17D5               	bsf	___fladd@b+3,7
  9669     17FF                     l856:
  9670     17FF                     l826:
  9671     17FF  0008               	return
  9672     1800                     __end_of___fladd:
  9673                           
  9674                           	psect	text20
  9675     1886                     __ptext20:	
  9676 ;; *************** function ___flneg *****************
  9677 ;; Defined at:
  9678 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flneg.c"
  9679 ;; Parameters:    Size  Location     Type
  9680 ;;  f1              4    0[COMMON] unsigned char 
  9681 ;; Auto vars:     Size  Location     Type
  9682 ;;		None
  9683 ;; Return value:  Size  Location     Type
  9684 ;;                  4    0[COMMON] unsigned char 
  9685 ;; Registers used:
  9686 ;;		wreg
  9687 ;; Tracked objects:
  9688 ;;		On entry : 0/0
  9689 ;;		On exit  : 0/0
  9690 ;;		Unchanged: 0/0
  9691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9692 ;;      Params:         4       0       0       0       0
  9693 ;;      Locals:         0       0       0       0       0
  9694 ;;      Temps:          0       0       0       0       0
  9695 ;;      Totals:         4       0       0       0       0
  9696 ;;Total ram usage:        4 bytes
  9697 ;; Hardware stack levels used: 1
  9698 ;; This function calls:
  9699 ;;		Nothing
  9700 ;; This function is called by:
  9701 ;;		_sprintf
  9702 ;; This function uses a non-reentrant model
  9703 ;;
  9704                           
  9705     1886                     ___flneg:	
  9706                           ;psect for function ___flneg
  9707                           
  9708     1886                     l3507:	
  9709                           ;incstack = 0
  9710                           ; Regs used in ___flneg: [wreg]
  9711                           
  9712     1886  0873               	movf	___flneg@f1+3,w
  9713     1887  0472               	iorwf	___flneg@f1+2,w
  9714     1888  0471               	iorwf	___flneg@f1+1,w
  9715     1889  0470               	iorwf	___flneg@f1,w
  9716     188A  1903               	skipnz
  9717     188B  288D               	goto	u5351
  9718     188C  288E               	goto	u5350
  9719     188D                     u5351:
  9720     188D  2890               	goto	l3511
  9721     188E                     u5350:
  9722     188E                     l3509:
  9723     188E  3080               	movlw	128
  9724     188F  06F3               	xorwf	___flneg@f1+3,f
  9725     1890                     l3511:
  9726     1890                     l685:
  9727     1890  0008               	return
  9728     1891                     __end_of___flneg:
  9729                           
  9730                           	psect	text21
  9731     1CD4                     __ptext21:	
  9732 ;; *************** function ___flge *****************
  9733 ;; Defined at:
  9734 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flge.c"
  9735 ;; Parameters:    Size  Location     Type
  9736 ;;  ff1             4    0[COMMON] unsigned char 
  9737 ;;  ff2             4    4[COMMON] unsigned char 
  9738 ;; Auto vars:     Size  Location     Type
  9739 ;;		None
  9740 ;; Return value:  Size  Location     Type
  9741 ;;		None               void
  9742 ;; Registers used:
  9743 ;;		wreg, status,2, status,0
  9744 ;; Tracked objects:
  9745 ;;		On entry : 0/0
  9746 ;;		On exit  : 0/0
  9747 ;;		Unchanged: 0/0
  9748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9749 ;;      Params:         8       0       0       0       0
  9750 ;;      Locals:         0       0       0       0       0
  9751 ;;      Temps:          4       0       0       0       0
  9752 ;;      Totals:        12       0       0       0       0
  9753 ;;Total ram usage:       12 bytes
  9754 ;; Hardware stack levels used: 1
  9755 ;; This function calls:
  9756 ;;		Nothing
  9757 ;; This function is called by:
  9758 ;;		_sprintf
  9759 ;; This function uses a non-reentrant model
  9760 ;;
  9761                           
  9762     1CD4                     ___flge:	
  9763                           ;psect for function ___flge
  9764                           
  9765     1CD4                     l3487:	
  9766                           ;incstack = 0
  9767                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9768                           
  9769     1CD4  3000               	movlw	0
  9770     1CD5  0570               	andwf	___flge@ff1,w
  9771     1CD6  00F8               	movwf	??___flge
  9772     1CD7  3000               	movlw	0
  9773     1CD8  0571               	andwf	___flge@ff1+1,w
  9774     1CD9  00F9               	movwf	??___flge+1
  9775     1CDA  3080               	movlw	128
  9776     1CDB  0572               	andwf	___flge@ff1+2,w
  9777     1CDC  00FA               	movwf	??___flge+2
  9778     1CDD  307F               	movlw	127
  9779     1CDE  0573               	andwf	___flge@ff1+3,w
  9780     1CDF  00FB               	movwf	??___flge+3
  9781     1CE0  087B               	movf	??___flge+3,w
  9782     1CE1  047A               	iorwf	??___flge+2,w
  9783     1CE2  0479               	iorwf	??___flge+1,w
  9784     1CE3  0478               	iorwf	??___flge,w
  9785     1CE4  1D03               	skipz
  9786     1CE5  2CE7               	goto	u5281
  9787     1CE6  2CE8               	goto	u5280
  9788     1CE7                     u5281:
  9789     1CE7  2CF0               	goto	l677
  9790     1CE8                     u5280:
  9791     1CE8                     l3489:
  9792     1CE8  3000               	movlw	0
  9793     1CE9  00F3               	movwf	___flge@ff1+3
  9794     1CEA  3000               	movlw	0
  9795     1CEB  00F2               	movwf	___flge@ff1+2
  9796     1CEC  3000               	movlw	0
  9797     1CED  00F1               	movwf	___flge@ff1+1
  9798     1CEE  3000               	movlw	0
  9799     1CEF  00F0               	movwf	___flge@ff1
  9800     1CF0                     l677:
  9801     1CF0  3000               	movlw	0
  9802     1CF1  0574               	andwf	___flge@ff2,w
  9803     1CF2  00F8               	movwf	??___flge
  9804     1CF3  3000               	movlw	0
  9805     1CF4  0575               	andwf	___flge@ff2+1,w
  9806     1CF5  00F9               	movwf	??___flge+1
  9807     1CF6  3080               	movlw	128
  9808     1CF7  0576               	andwf	___flge@ff2+2,w
  9809     1CF8  00FA               	movwf	??___flge+2
  9810     1CF9  307F               	movlw	127
  9811     1CFA  0577               	andwf	___flge@ff2+3,w
  9812     1CFB  00FB               	movwf	??___flge+3
  9813     1CFC  087B               	movf	??___flge+3,w
  9814     1CFD  047A               	iorwf	??___flge+2,w
  9815     1CFE  0479               	iorwf	??___flge+1,w
  9816     1CFF  0478               	iorwf	??___flge,w
  9817     1D00  1D03               	skipz
  9818     1D01  2D03               	goto	u5291
  9819     1D02  2D04               	goto	u5290
  9820     1D03                     u5291:
  9821     1D03  2D0C               	goto	l3493
  9822     1D04                     u5290:
  9823     1D04                     l3491:
  9824     1D04  3000               	movlw	0
  9825     1D05  00F7               	movwf	___flge@ff2+3
  9826     1D06  3000               	movlw	0
  9827     1D07  00F6               	movwf	___flge@ff2+2
  9828     1D08  3000               	movlw	0
  9829     1D09  00F5               	movwf	___flge@ff2+1
  9830     1D0A  3000               	movlw	0
  9831     1D0B  00F4               	movwf	___flge@ff2
  9832     1D0C                     l3493:
  9833     1D0C  1FF3               	btfss	___flge@ff1+3,7
  9834     1D0D  2D0F               	goto	u5301
  9835     1D0E  2D10               	goto	u5300
  9836     1D0F                     u5301:
  9837     1D0F  2D34               	goto	l3497
  9838     1D10                     u5300:
  9839     1D10                     l3495:
  9840     1D10  3000               	movlw	0
  9841     1D11  00F8               	movwf	??___flge
  9842     1D12  3000               	movlw	0
  9843     1D13  00F9               	movwf	??___flge+1
  9844     1D14  3000               	movlw	0
  9845     1D15  00FA               	movwf	??___flge+2
  9846     1D16  3080               	movlw	128
  9847     1D17  00FB               	movwf	??___flge+3
  9848     1D18  0870               	movf	___flge@ff1,w
  9849     1D19  02F8               	subwf	??___flge,f
  9850     1D1A  0871               	movf	___flge@ff1+1,w
  9851     1D1B  1C03               	skipc
  9852     1D1C  0F71               	incfsz	___flge@ff1+1,w
  9853     1D1D  2D1F               	goto	u5311
  9854     1D1E  2D20               	goto	u5312
  9855     1D1F                     u5311:
  9856     1D1F  02F9               	subwf	??___flge+1,f
  9857     1D20                     u5312:
  9858     1D20  0872               	movf	___flge@ff1+2,w
  9859     1D21  1C03               	skipc
  9860     1D22  0F72               	incfsz	___flge@ff1+2,w
  9861     1D23  2D25               	goto	u5313
  9862     1D24  2D26               	goto	u5314
  9863     1D25                     u5313:
  9864     1D25  02FA               	subwf	??___flge+2,f
  9865     1D26                     u5314:
  9866     1D26  0873               	movf	___flge@ff1+3,w
  9867     1D27  1C03               	skipc
  9868     1D28  0F73               	incfsz	___flge@ff1+3,w
  9869     1D29  2D2B               	goto	u5315
  9870     1D2A  2D2C               	goto	u5316
  9871     1D2B                     u5315:
  9872     1D2B  02FB               	subwf	??___flge+3,f
  9873     1D2C                     u5316:
  9874     1D2C  087B               	movf	??___flge+3,w
  9875     1D2D  00F3               	movwf	___flge@ff1+3
  9876     1D2E  087A               	movf	??___flge+2,w
  9877     1D2F  00F2               	movwf	___flge@ff1+2
  9878     1D30  0879               	movf	??___flge+1,w
  9879     1D31  00F1               	movwf	___flge@ff1+1
  9880     1D32  0878               	movf	??___flge,w
  9881     1D33  00F0               	movwf	___flge@ff1
  9882     1D34                     l3497:
  9883     1D34  1FF7               	btfss	___flge@ff2+3,7
  9884     1D35  2D37               	goto	u5321
  9885     1D36  2D38               	goto	u5320
  9886     1D37                     u5321:
  9887     1D37  2D5C               	goto	l680
  9888     1D38                     u5320:
  9889     1D38                     l3499:
  9890     1D38  3000               	movlw	0
  9891     1D39  00F8               	movwf	??___flge
  9892     1D3A  3000               	movlw	0
  9893     1D3B  00F9               	movwf	??___flge+1
  9894     1D3C  3000               	movlw	0
  9895     1D3D  00FA               	movwf	??___flge+2
  9896     1D3E  3080               	movlw	128
  9897     1D3F  00FB               	movwf	??___flge+3
  9898     1D40  0874               	movf	___flge@ff2,w
  9899     1D41  02F8               	subwf	??___flge,f
  9900     1D42  0875               	movf	___flge@ff2+1,w
  9901     1D43  1C03               	skipc
  9902     1D44  0F75               	incfsz	___flge@ff2+1,w
  9903     1D45  2D47               	goto	u5331
  9904     1D46  2D48               	goto	u5332
  9905     1D47                     u5331:
  9906     1D47  02F9               	subwf	??___flge+1,f
  9907     1D48                     u5332:
  9908     1D48  0876               	movf	___flge@ff2+2,w
  9909     1D49  1C03               	skipc
  9910     1D4A  0F76               	incfsz	___flge@ff2+2,w
  9911     1D4B  2D4D               	goto	u5333
  9912     1D4C  2D4E               	goto	u5334
  9913     1D4D                     u5333:
  9914     1D4D  02FA               	subwf	??___flge+2,f
  9915     1D4E                     u5334:
  9916     1D4E  0877               	movf	___flge@ff2+3,w
  9917     1D4F  1C03               	skipc
  9918     1D50  0F77               	incfsz	___flge@ff2+3,w
  9919     1D51  2D53               	goto	u5335
  9920     1D52  2D54               	goto	u5336
  9921     1D53                     u5335:
  9922     1D53  02FB               	subwf	??___flge+3,f
  9923     1D54                     u5336:
  9924     1D54  087B               	movf	??___flge+3,w
  9925     1D55  00F7               	movwf	___flge@ff2+3
  9926     1D56  087A               	movf	??___flge+2,w
  9927     1D57  00F6               	movwf	___flge@ff2+2
  9928     1D58  0879               	movf	??___flge+1,w
  9929     1D59  00F5               	movwf	___flge@ff2+1
  9930     1D5A  0878               	movf	??___flge,w
  9931     1D5B  00F4               	movwf	___flge@ff2
  9932     1D5C                     l680:
  9933     1D5C  3080               	movlw	128
  9934     1D5D  06F3               	xorwf	___flge@ff1+3,f
  9935     1D5E  3080               	movlw	128
  9936     1D5F  06F7               	xorwf	___flge@ff2+3,f
  9937     1D60  0877               	movf	___flge@ff2+3,w
  9938     1D61  0273               	subwf	___flge@ff1+3,w
  9939     1D62  1D03               	skipz
  9940     1D63  2D6E               	goto	u5345
  9941     1D64  0876               	movf	___flge@ff2+2,w
  9942     1D65  0272               	subwf	___flge@ff1+2,w
  9943     1D66  1D03               	skipz
  9944     1D67  2D6E               	goto	u5345
  9945     1D68  0875               	movf	___flge@ff2+1,w
  9946     1D69  0271               	subwf	___flge@ff1+1,w
  9947     1D6A  1D03               	skipz
  9948     1D6B  2D6E               	goto	u5345
  9949     1D6C  0874               	movf	___flge@ff2,w
  9950     1D6D  0270               	subwf	___flge@ff1,w
  9951     1D6E                     u5345:
  9952     1D6E  1803               	skipnc
  9953     1D6F  2D71               	goto	u5341
  9954     1D70  2D72               	goto	u5340
  9955     1D71                     u5341:
  9956     1D71  2D74               	goto	l3503
  9957     1D72                     u5340:
  9958     1D72                     l3501:
  9959     1D72  1003               	clrc
  9960     1D73  2D75               	goto	l681
  9961     1D74                     l3503:
  9962     1D74  1403               	setc
  9963     1D75                     l681:
  9964     1D75  0008               	return
  9965     1D76                     __end_of___flge:
  9966                           
  9967                           	psect	text22
  9968     1A2C                     __ptext22:	
  9969 ;; *************** function ___fleq *****************
  9970 ;; Defined at:
  9971 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fleq.c"
  9972 ;; Parameters:    Size  Location     Type
  9973 ;;  ff1             4    0[COMMON] unsigned char 
  9974 ;;  ff2             4    4[COMMON] unsigned char 
  9975 ;; Auto vars:     Size  Location     Type
  9976 ;;		None
  9977 ;; Return value:  Size  Location     Type
  9978 ;;		None               void
  9979 ;; Registers used:
  9980 ;;		wreg, status,2, status,0
  9981 ;; Tracked objects:
  9982 ;;		On entry : 0/0
  9983 ;;		On exit  : 0/0
  9984 ;;		Unchanged: 0/0
  9985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9986 ;;      Params:         8       0       0       0       0
  9987 ;;      Locals:         0       0       0       0       0
  9988 ;;      Temps:          4       0       0       0       0
  9989 ;;      Totals:        12       0       0       0       0
  9990 ;;Total ram usage:       12 bytes
  9991 ;; Hardware stack levels used: 1
  9992 ;; This function calls:
  9993 ;;		Nothing
  9994 ;; This function is called by:
  9995 ;;		_sprintf
  9996 ;; This function uses a non-reentrant model
  9997 ;;
  9998                           
  9999     1A2C                     ___fleq:	
 10000                           ;psect for function ___fleq
 10001                           
 10002     1A2C                     l3475:	
 10003                           ;incstack = 0
 10004                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 10005                           
 10006     1A2C  3000               	movlw	0
 10007     1A2D  0570               	andwf	___fleq@ff1,w
 10008     1A2E  00F8               	movwf	??___fleq
 10009     1A2F  3000               	movlw	0
 10010     1A30  0571               	andwf	___fleq@ff1+1,w
 10011     1A31  00F9               	movwf	??___fleq+1
 10012     1A32  3080               	movlw	128
 10013     1A33  0572               	andwf	___fleq@ff1+2,w
 10014     1A34  00FA               	movwf	??___fleq+2
 10015     1A35  307F               	movlw	127
 10016     1A36  0573               	andwf	___fleq@ff1+3,w
 10017     1A37  00FB               	movwf	??___fleq+3
 10018     1A38  087B               	movf	??___fleq+3,w
 10019     1A39  047A               	iorwf	??___fleq+2,w
 10020     1A3A  0479               	iorwf	??___fleq+1,w
 10021     1A3B  0478               	iorwf	??___fleq,w
 10022     1A3C  1D03               	skipz
 10023     1A3D  2A3F               	goto	u5251
 10024     1A3E  2A40               	goto	u5250
 10025     1A3F                     u5251:
 10026     1A3F  2A48               	goto	l672
 10027     1A40                     u5250:
 10028     1A40                     l3477:
 10029     1A40  3000               	movlw	0
 10030     1A41  00F3               	movwf	___fleq@ff1+3
 10031     1A42  3000               	movlw	0
 10032     1A43  00F2               	movwf	___fleq@ff1+2
 10033     1A44  3000               	movlw	0
 10034     1A45  00F1               	movwf	___fleq@ff1+1
 10035     1A46  3000               	movlw	0
 10036     1A47  00F0               	movwf	___fleq@ff1
 10037     1A48                     l672:
 10038     1A48  3000               	movlw	0
 10039     1A49  0574               	andwf	___fleq@ff2,w
 10040     1A4A  00F8               	movwf	??___fleq
 10041     1A4B  3000               	movlw	0
 10042     1A4C  0575               	andwf	___fleq@ff2+1,w
 10043     1A4D  00F9               	movwf	??___fleq+1
 10044     1A4E  3080               	movlw	128
 10045     1A4F  0576               	andwf	___fleq@ff2+2,w
 10046     1A50  00FA               	movwf	??___fleq+2
 10047     1A51  307F               	movlw	127
 10048     1A52  0577               	andwf	___fleq@ff2+3,w
 10049     1A53  00FB               	movwf	??___fleq+3
 10050     1A54  087B               	movf	??___fleq+3,w
 10051     1A55  047A               	iorwf	??___fleq+2,w
 10052     1A56  0479               	iorwf	??___fleq+1,w
 10053     1A57  0478               	iorwf	??___fleq,w
 10054     1A58  1D03               	skipz
 10055     1A59  2A5B               	goto	u5261
 10056     1A5A  2A5C               	goto	u5260
 10057     1A5B                     u5261:
 10058     1A5B  2A64               	goto	l673
 10059     1A5C                     u5260:
 10060     1A5C                     l3479:
 10061     1A5C  3000               	movlw	0
 10062     1A5D  00F7               	movwf	___fleq@ff2+3
 10063     1A5E  3000               	movlw	0
 10064     1A5F  00F6               	movwf	___fleq@ff2+2
 10065     1A60  3000               	movlw	0
 10066     1A61  00F5               	movwf	___fleq@ff2+1
 10067     1A62  3000               	movlw	0
 10068     1A63  00F4               	movwf	___fleq@ff2
 10069     1A64                     l673:
 10070     1A64  0877               	movf	___fleq@ff2+3,w
 10071     1A65  0673               	xorwf	___fleq@ff1+3,w
 10072     1A66  1D03               	skipz
 10073     1A67  2A72               	goto	u5275
 10074     1A68  0876               	movf	___fleq@ff2+2,w
 10075     1A69  0672               	xorwf	___fleq@ff1+2,w
 10076     1A6A  1D03               	skipz
 10077     1A6B  2A72               	goto	u5275
 10078     1A6C  0875               	movf	___fleq@ff2+1,w
 10079     1A6D  0671               	xorwf	___fleq@ff1+1,w
 10080     1A6E  1D03               	skipz
 10081     1A6F  2A72               	goto	u5275
 10082     1A70  0874               	movf	___fleq@ff2,w
 10083     1A71  0670               	xorwf	___fleq@ff1,w
 10084     1A72                     u5275:
 10085     1A72  1903               	skipnz
 10086     1A73  2A75               	goto	u5271
 10087     1A74  2A76               	goto	u5270
 10088     1A75                     u5271:
 10089     1A75  2A78               	goto	l3483
 10090     1A76                     u5270:
 10091     1A76                     l3481:
 10092     1A76  1003               	clrc
 10093     1A77  2A79               	goto	l674
 10094     1A78                     l3483:
 10095     1A78  1403               	setc
 10096     1A79                     l674:
 10097     1A79  0008               	return
 10098     1A7A                     __end_of___fleq:
 10099                           
 10100                           	psect	text23
 10101     18B8                     __ptext23:	
 10102 ;; *************** function _setup *****************
 10103 ;; Defined at:
 10104 ;;		line 163 in file "Proyecto1_Master.c"
 10105 ;; Parameters:    Size  Location     Type
 10106 ;;		None
 10107 ;; Auto vars:     Size  Location     Type
 10108 ;;		None
 10109 ;; Return value:  Size  Location     Type
 10110 ;;                  1    wreg      void 
 10111 ;; Registers used:
 10112 ;;		status,2
 10113 ;; Tracked objects:
 10114 ;;		On entry : 0/0
 10115 ;;		On exit  : 0/0
 10116 ;;		Unchanged: 0/0
 10117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10118 ;;      Params:         0       0       0       0       0
 10119 ;;      Locals:         0       0       0       0       0
 10120 ;;      Temps:          0       0       0       0       0
 10121 ;;      Totals:         0       0       0       0       0
 10122 ;;Total ram usage:        0 bytes
 10123 ;; Hardware stack levels used: 1
 10124 ;; This function calls:
 10125 ;;		Nothing
 10126 ;; This function is called by:
 10127 ;;		_main
 10128 ;; This function uses a non-reentrant model
 10129 ;;
 10130                           
 10131     18B8                     _setup:	
 10132                           ;psect for function _setup
 10133                           
 10134     18B8                     l3621:	
 10135                           ;incstack = 0
 10136                           ; Regs used in _setup: [status,2]
 10137                           
 10138                           
 10139                           ;Proyecto1_Master.c: 164:     ANSEL = 0;
 10140     18B8  1683               	bsf	3,5	;RP0=1, select bank3
 10141     18B9  1703               	bsf	3,6	;RP1=1, select bank3
 10142     18BA  0188               	clrf	8	;volatile
 10143                           
 10144                           ;Proyecto1_Master.c: 165:     ANSELH = 0;
 10145     18BB  0189               	clrf	9	;volatile
 10146                           
 10147                           ;Proyecto1_Master.c: 167:     TRISA = 0;
 10148     18BC  1683               	bsf	3,5	;RP0=1, select bank1
 10149     18BD  1303               	bcf	3,6	;RP1=0, select bank1
 10150     18BE  0185               	clrf	5	;volatile
 10151                           
 10152                           ;Proyecto1_Master.c: 168:     PORTA = 0;
 10153     18BF  1283               	bcf	3,5	;RP0=0, select bank0
 10154     18C0  1303               	bcf	3,6	;RP1=0, select bank0
 10155     18C1  0185               	clrf	5	;volatile
 10156                           
 10157                           ;Proyecto1_Master.c: 170:     TRISE = 0;
 10158     18C2  1683               	bsf	3,5	;RP0=1, select bank1
 10159     18C3  1303               	bcf	3,6	;RP1=0, select bank1
 10160     18C4  0189               	clrf	9	;volatile
 10161                           
 10162                           ;Proyecto1_Master.c: 171:     PORTE = 0;
 10163     18C5  1283               	bcf	3,5	;RP0=0, select bank0
 10164     18C6  1303               	bcf	3,6	;RP1=0, select bank0
 10165     18C7  0189               	clrf	9	;volatile
 10166                           
 10167                           ;Proyecto1_Master.c: 173:     TRISB = 0;
 10168     18C8  1683               	bsf	3,5	;RP0=1, select bank1
 10169     18C9  1303               	bcf	3,6	;RP1=0, select bank1
 10170     18CA  0186               	clrf	6	;volatile
 10171                           
 10172                           ;Proyecto1_Master.c: 174:     TRISD = 0;
 10173     18CB  0188               	clrf	8	;volatile
 10174                           
 10175                           ;Proyecto1_Master.c: 175:     PORTB = 0;
 10176     18CC  1283               	bcf	3,5	;RP0=0, select bank0
 10177     18CD  1303               	bcf	3,6	;RP1=0, select bank0
 10178     18CE  0186               	clrf	6	;volatile
 10179                           
 10180                           ;Proyecto1_Master.c: 176:     PORTD = 0;
 10181     18CF  0188               	clrf	8	;volatile
 10182     18D0                     l129:
 10183     18D0  0008               	return
 10184     18D1                     __end_of_setup:
 10185                           
 10186                           	psect	text24
 10187     1E2D                     __ptext24:	
 10188 ;; *************** function ___fldiv *****************
 10189 ;; Defined at:
 10190 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcdiv.c"
 10191 ;; Parameters:    Size  Location     Type
 10192 ;;  a               4   30[BANK0 ] void 
 10193 ;;  b               4   34[BANK0 ] void 
 10194 ;; Auto vars:     Size  Location     Type
 10195 ;;  grs             4   50[BANK0 ] unsigned long 
 10196 ;;  rem             4   43[BANK0 ] unsigned long 
 10197 ;;  new_exp         2   48[BANK0 ] int 
 10198 ;;  aexp            1   55[BANK0 ] unsigned char 
 10199 ;;  bexp            1   54[BANK0 ] unsigned char 
 10200 ;;  sign            1   47[BANK0 ] unsigned char 
 10201 ;; Return value:  Size  Location     Type
 10202 ;;                  4   30[BANK0 ] unsigned char 
 10203 ;; Registers used:
 10204 ;;		wreg, status,2, status,0, btemp+1
 10205 ;; Tracked objects:
 10206 ;;		On entry : 0/0
 10207 ;;		On exit  : 0/0
 10208 ;;		Unchanged: 0/0
 10209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10210 ;;      Params:         0       8       0       0       0
 10211 ;;      Locals:         0      13       0       0       0
 10212 ;;      Temps:          0       5       0       0       0
 10213 ;;      Totals:         0      26       0       0       0
 10214 ;;Total ram usage:       26 bytes
 10215 ;; Hardware stack levels used: 1
 10216 ;; This function calls:
 10217 ;;		Nothing
 10218 ;; This function is called by:
 10219 ;;		_main
 10220 ;; This function uses a non-reentrant model
 10221 ;;
 10222                           
 10223     1E2D                     ___fldiv:	
 10224                           ;psect for function ___fldiv
 10225                           
 10226     1E2D                     l4015:	
 10227                           ;incstack = 0
 10228                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
 10229                           
 10230     1E2D  1283               	bcf	3,5	;RP0=0, select bank0
 10231     1E2E  1303               	bcf	3,6	;RP1=0, select bank0
 10232     1E2F  0845               	movf	___fldiv@b+3,w
 10233     1E30  3980               	andlw	128
 10234     1E31  00CF               	movwf	___fldiv@sign
 10235     1E32                     l4017:
 10236     1E32  0845               	movf	___fldiv@b+3,w
 10237     1E33  00C6               	movwf	??___fldiv
 10238     1E34  0746               	addwf	??___fldiv,w
 10239     1E35  00D6               	movwf	___fldiv@bexp
 10240     1E36                     l4019:
 10241     1E36  1FC4               	btfss	___fldiv@b+2,7
 10242     1E37  2E39               	goto	u6251
 10243     1E38  2E3A               	goto	u6250
 10244     1E39                     u6251:
 10245     1E39  2E3B               	goto	l4023
 10246     1E3A                     u6250:
 10247     1E3A                     l4021:
 10248     1E3A  1456               	bsf	___fldiv@bexp,0
 10249     1E3B                     l4023:
 10250     1E3B  0856               	movf	___fldiv@bexp,w
 10251     1E3C  1903               	btfsc	3,2
 10252     1E3D  2E3F               	goto	u6261
 10253     1E3E  2E40               	goto	u6260
 10254     1E3F                     u6261:
 10255     1E3F  2E50               	goto	l4033
 10256     1E40                     u6260:
 10257     1E40                     l4025:
 10258     1E40  0A56               	incf	___fldiv@bexp,w
 10259     1E41  1D03               	btfss	3,2
 10260     1E42  2E44               	goto	u6271
 10261     1E43  2E45               	goto	u6270
 10262     1E44                     u6271:
 10263     1E44  2E4D               	goto	l4029
 10264     1E45                     u6270:
 10265     1E45                     l4027:
 10266     1E45  3000               	movlw	0
 10267     1E46  00C5               	movwf	___fldiv@b+3
 10268     1E47  3000               	movlw	0
 10269     1E48  00C4               	movwf	___fldiv@b+2
 10270     1E49  3000               	movlw	0
 10271     1E4A  00C3               	movwf	___fldiv@b+1
 10272     1E4B  3000               	movlw	0
 10273     1E4C  00C2               	movwf	___fldiv@b
 10274     1E4D                     l4029:
 10275     1E4D  17C4               	bsf	___fldiv@b+2,7
 10276     1E4E                     l4031:
 10277     1E4E  01C5               	clrf	___fldiv@b+3
 10278     1E4F  2E58               	goto	l4035
 10279     1E50                     l4033:
 10280     1E50  3000               	movlw	0
 10281     1E51  00C5               	movwf	___fldiv@b+3
 10282     1E52  3000               	movlw	0
 10283     1E53  00C4               	movwf	___fldiv@b+2
 10284     1E54  3000               	movlw	0
 10285     1E55  00C3               	movwf	___fldiv@b+1
 10286     1E56  3000               	movlw	0
 10287     1E57  00C2               	movwf	___fldiv@b
 10288     1E58                     l4035:
 10289     1E58  0841               	movf	___fldiv@a+3,w
 10290     1E59  3980               	andlw	128
 10291     1E5A  00C6               	movwf	??___fldiv
 10292     1E5B  0846               	movf	??___fldiv,w
 10293     1E5C  06CF               	xorwf	___fldiv@sign,f
 10294     1E5D                     l4037:
 10295     1E5D  0841               	movf	___fldiv@a+3,w
 10296     1E5E  00C6               	movwf	??___fldiv
 10297     1E5F  0746               	addwf	??___fldiv,w
 10298     1E60  00D7               	movwf	___fldiv@aexp
 10299     1E61                     l4039:
 10300     1E61  1FC0               	btfss	___fldiv@a+2,7
 10301     1E62  2E64               	goto	u6281
 10302     1E63  2E65               	goto	u6280
 10303     1E64                     u6281:
 10304     1E64  2E66               	goto	l4043
 10305     1E65                     u6280:
 10306     1E65                     l4041:
 10307     1E65  1457               	bsf	___fldiv@aexp,0
 10308     1E66                     l4043:
 10309     1E66  0857               	movf	___fldiv@aexp,w
 10310     1E67  1903               	btfsc	3,2
 10311     1E68  2E6A               	goto	u6291
 10312     1E69  2E6B               	goto	u6290
 10313     1E6A                     u6291:
 10314     1E6A  2E7B               	goto	l4053
 10315     1E6B                     u6290:
 10316     1E6B                     l4045:
 10317     1E6B  0A57               	incf	___fldiv@aexp,w
 10318     1E6C  1D03               	btfss	3,2
 10319     1E6D  2E6F               	goto	u6301
 10320     1E6E  2E70               	goto	u6300
 10321     1E6F                     u6301:
 10322     1E6F  2E78               	goto	l4049
 10323     1E70                     u6300:
 10324     1E70                     l4047:
 10325     1E70  3000               	movlw	0
 10326     1E71  00C1               	movwf	___fldiv@a+3
 10327     1E72  3000               	movlw	0
 10328     1E73  00C0               	movwf	___fldiv@a+2
 10329     1E74  3000               	movlw	0
 10330     1E75  00BF               	movwf	___fldiv@a+1
 10331     1E76  3000               	movlw	0
 10332     1E77  00BE               	movwf	___fldiv@a
 10333     1E78                     l4049:
 10334     1E78  17C0               	bsf	___fldiv@a+2,7
 10335     1E79                     l4051:
 10336     1E79  01C1               	clrf	___fldiv@a+3
 10337     1E7A  2E83               	goto	l869
 10338     1E7B                     l4053:
 10339     1E7B  3000               	movlw	0
 10340     1E7C  00C1               	movwf	___fldiv@a+3
 10341     1E7D  3000               	movlw	0
 10342     1E7E  00C0               	movwf	___fldiv@a+2
 10343     1E7F  3000               	movlw	0
 10344     1E80  00BF               	movwf	___fldiv@a+1
 10345     1E81  3000               	movlw	0
 10346     1E82  00BE               	movwf	___fldiv@a
 10347     1E83                     l869:
 10348     1E83  0841               	movf	___fldiv@a+3,w
 10349     1E84  0440               	iorwf	___fldiv@a+2,w
 10350     1E85  043F               	iorwf	___fldiv@a+1,w
 10351     1E86  043E               	iorwf	___fldiv@a,w
 10352     1E87  1D03               	skipz
 10353     1E88  2E8A               	goto	u6311
 10354     1E89  2E8B               	goto	u6310
 10355     1E8A                     u6311:
 10356     1E8A  2EA4               	goto	l4063
 10357     1E8B                     u6310:
 10358     1E8B                     l4055:
 10359     1E8B  3000               	movlw	0
 10360     1E8C  00C5               	movwf	___fldiv@b+3
 10361     1E8D  3000               	movlw	0
 10362     1E8E  00C4               	movwf	___fldiv@b+2
 10363     1E8F  3000               	movlw	0
 10364     1E90  00C3               	movwf	___fldiv@b+1
 10365     1E91  3000               	movlw	0
 10366     1E92  00C2               	movwf	___fldiv@b
 10367     1E93  3080               	movlw	128
 10368     1E94  04C4               	iorwf	___fldiv@b+2,f
 10369     1E95  307F               	movlw	127
 10370     1E96  04C5               	iorwf	___fldiv@b+3,f
 10371     1E97                     l4057:
 10372     1E97  084F               	movf	___fldiv@sign,w
 10373     1E98  00C6               	movwf	??___fldiv
 10374     1E99  0846               	movf	??___fldiv,w
 10375     1E9A  04C5               	iorwf	___fldiv@b+3,f
 10376     1E9B                     l4059:
 10377     1E9B  0845               	movf	___fldiv@b+3,w
 10378     1E9C  00C1               	movwf	?___fldiv+3
 10379     1E9D  0844               	movf	___fldiv@b+2,w
 10380     1E9E  00C0               	movwf	?___fldiv+2
 10381     1E9F  0843               	movf	___fldiv@b+1,w
 10382     1EA0  00BF               	movwf	?___fldiv+1
 10383     1EA1  0842               	movf	___fldiv@b,w
 10384     1EA2  00BE               	movwf	?___fldiv
 10385     1EA3  2FFF               	goto	l871
 10386     1EA4                     l4063:
 10387     1EA4  0856               	movf	___fldiv@bexp,w
 10388     1EA5  1D03               	btfss	3,2
 10389     1EA6  2EA8               	goto	u6321
 10390     1EA7  2EA9               	goto	u6320
 10391     1EA8                     u6321:
 10392     1EA8  2EB2               	goto	l4069
 10393     1EA9                     u6320:
 10394     1EA9                     l4065:
 10395     1EA9  3000               	movlw	0
 10396     1EAA  00C1               	movwf	?___fldiv+3
 10397     1EAB  3000               	movlw	0
 10398     1EAC  00C0               	movwf	?___fldiv+2
 10399     1EAD  3000               	movlw	0
 10400     1EAE  00BF               	movwf	?___fldiv+1
 10401     1EAF  3000               	movlw	0
 10402     1EB0  00BE               	movwf	?___fldiv
 10403     1EB1  2FFF               	goto	l871
 10404     1EB2                     l4069:
 10405     1EB2  0856               	movf	___fldiv@bexp,w
 10406     1EB3  00C6               	movwf	??___fldiv
 10407     1EB4  01C7               	clrf	??___fldiv+1
 10408     1EB5  0847               	movf	??___fldiv+1,w
 10409     1EB6  00C9               	movwf	??___fldiv+3
 10410     1EB7  0857               	movf	___fldiv@aexp,w
 10411     1EB8  0246               	subwf	??___fldiv,w
 10412     1EB9  00C8               	movwf	??___fldiv+2
 10413     1EBA  1C03               	skipc
 10414     1EBB  03C9               	decf	??___fldiv+3,f
 10415     1EBC  0848               	movf	??___fldiv+2,w
 10416     1EBD  3E7F               	addlw	127
 10417     1EBE  00D0               	movwf	___fldiv@new_exp
 10418     1EBF  0849               	movf	??___fldiv+3,w
 10419     1EC0  1803               	skipnc
 10420     1EC1  3E01               	addlw	1
 10421     1EC2  3E00               	addlw	0
 10422     1EC3  00D1               	movwf	___fldiv@new_exp+1
 10423     1EC4                     l4071:
 10424     1EC4  0845               	movf	___fldiv@b+3,w
 10425     1EC5  00CE               	movwf	___fldiv@rem+3
 10426     1EC6  0844               	movf	___fldiv@b+2,w
 10427     1EC7  00CD               	movwf	___fldiv@rem+2
 10428     1EC8  0843               	movf	___fldiv@b+1,w
 10429     1EC9  00CC               	movwf	___fldiv@rem+1
 10430     1ECA  0842               	movf	___fldiv@b,w
 10431     1ECB  00CB               	movwf	___fldiv@rem
 10432     1ECC                     l4073:
 10433     1ECC  3000               	movlw	0
 10434     1ECD  00C5               	movwf	___fldiv@b+3
 10435     1ECE  3000               	movlw	0
 10436     1ECF  00C4               	movwf	___fldiv@b+2
 10437     1ED0  3000               	movlw	0
 10438     1ED1  00C3               	movwf	___fldiv@b+1
 10439     1ED2  3000               	movlw	0
 10440     1ED3  00C2               	movwf	___fldiv@b
 10441     1ED4                     l4075:
 10442     1ED4  3000               	movlw	0
 10443     1ED5  00D5               	movwf	___fldiv@grs+3
 10444     1ED6  3000               	movlw	0
 10445     1ED7  00D4               	movwf	___fldiv@grs+2
 10446     1ED8  3000               	movlw	0
 10447     1ED9  00D3               	movwf	___fldiv@grs+1
 10448     1EDA  3000               	movlw	0
 10449     1EDB  00D2               	movwf	___fldiv@grs
 10450     1EDC                     l4077:
 10451     1EDC  01D7               	clrf	___fldiv@aexp
 10452     1EDD  2F28               	goto	l4097
 10453     1EDE                     l4079:
 10454     1EDE  0857               	movf	___fldiv@aexp,w
 10455     1EDF  1903               	btfsc	3,2
 10456     1EE0  2EE2               	goto	u6331
 10457     1EE1  2EE3               	goto	u6330
 10458     1EE2                     u6331:
 10459     1EE2  2F03               	goto	l4089
 10460     1EE3                     u6330:
 10461     1EE3                     l4081:
 10462     1EE3  3001               	movlw	1
 10463     1EE4  00C6               	movwf	??___fldiv
 10464     1EE5                     u6345:
 10465     1EE5  1003               	clrc
 10466     1EE6  0DCB               	rlf	___fldiv@rem,f
 10467     1EE7  0DCC               	rlf	___fldiv@rem+1,f
 10468     1EE8  0DCD               	rlf	___fldiv@rem+2,f
 10469     1EE9  0DCE               	rlf	___fldiv@rem+3,f
 10470     1EEA  0BC6               	decfsz	??___fldiv,f
 10471     1EEB  2EE5               	goto	u6345
 10472     1EEC  3001               	movlw	1
 10473     1EED  00C6               	movwf	??___fldiv
 10474     1EEE                     u6355:
 10475     1EEE  1003               	clrc
 10476     1EEF  0DC2               	rlf	___fldiv@b,f
 10477     1EF0  0DC3               	rlf	___fldiv@b+1,f
 10478     1EF1  0DC4               	rlf	___fldiv@b+2,f
 10479     1EF2  0DC5               	rlf	___fldiv@b+3,f
 10480     1EF3  0BC6               	decfsz	??___fldiv,f
 10481     1EF4  2EEE               	goto	u6355
 10482     1EF5                     l4083:
 10483     1EF5  1FD5               	btfss	___fldiv@grs+3,7
 10484     1EF6  2EF8               	goto	u6361
 10485     1EF7  2EF9               	goto	u6360
 10486     1EF8                     u6361:
 10487     1EF8  2EFA               	goto	l4087
 10488     1EF9                     u6360:
 10489     1EF9                     l4085:
 10490     1EF9  1442               	bsf	___fldiv@b,0
 10491     1EFA                     l4087:
 10492     1EFA  3001               	movlw	1
 10493     1EFB  00C6               	movwf	??___fldiv
 10494     1EFC                     u6375:
 10495     1EFC  1003               	clrc
 10496     1EFD  0DD2               	rlf	___fldiv@grs,f
 10497     1EFE  0DD3               	rlf	___fldiv@grs+1,f
 10498     1EFF  0DD4               	rlf	___fldiv@grs+2,f
 10499     1F00  0DD5               	rlf	___fldiv@grs+3,f
 10500     1F01  0BC6               	decfsz	??___fldiv,f
 10501     1F02  2EFC               	goto	u6375
 10502     1F03                     l4089:
 10503     1F03  0841               	movf	___fldiv@a+3,w
 10504     1F04  024E               	subwf	___fldiv@rem+3,w
 10505     1F05  1D03               	skipz
 10506     1F06  2F11               	goto	u6385
 10507     1F07  0840               	movf	___fldiv@a+2,w
 10508     1F08  024D               	subwf	___fldiv@rem+2,w
 10509     1F09  1D03               	skipz
 10510     1F0A  2F11               	goto	u6385
 10511     1F0B  083F               	movf	___fldiv@a+1,w
 10512     1F0C  024C               	subwf	___fldiv@rem+1,w
 10513     1F0D  1D03               	skipz
 10514     1F0E  2F11               	goto	u6385
 10515     1F0F  083E               	movf	___fldiv@a,w
 10516     1F10  024B               	subwf	___fldiv@rem,w
 10517     1F11                     u6385:
 10518     1F11  1C03               	skipc
 10519     1F12  2F14               	goto	u6381
 10520     1F13  2F15               	goto	u6380
 10521     1F14                     u6381:
 10522     1F14  2F24               	goto	l4095
 10523     1F15                     u6380:
 10524     1F15                     l4091:
 10525     1F15  1755               	bsf	___fldiv@grs+3,6
 10526     1F16                     l4093:
 10527     1F16  083E               	movf	___fldiv@a,w
 10528     1F17  02CB               	subwf	___fldiv@rem,f
 10529     1F18  083F               	movf	___fldiv@a+1,w
 10530     1F19  1C03               	skipc
 10531     1F1A  0F3F               	incfsz	___fldiv@a+1,w
 10532     1F1B  02CC               	subwf	___fldiv@rem+1,f
 10533     1F1C  0840               	movf	___fldiv@a+2,w
 10534     1F1D  1C03               	skipc
 10535     1F1E  0F40               	incfsz	___fldiv@a+2,w
 10536     1F1F  02CD               	subwf	___fldiv@rem+2,f
 10537     1F20  0841               	movf	___fldiv@a+3,w
 10538     1F21  1C03               	skipc
 10539     1F22  0F41               	incfsz	___fldiv@a+3,w
 10540     1F23  02CE               	subwf	___fldiv@rem+3,f
 10541     1F24                     l4095:
 10542     1F24  3001               	movlw	1
 10543     1F25  00C6               	movwf	??___fldiv
 10544     1F26  0846               	movf	??___fldiv,w
 10545     1F27  07D7               	addwf	___fldiv@aexp,f
 10546     1F28                     l4097:
 10547     1F28  301A               	movlw	26
 10548     1F29  0257               	subwf	___fldiv@aexp,w
 10549     1F2A  1C03               	skipc
 10550     1F2B  2F2D               	goto	u6391
 10551     1F2C  2F2E               	goto	u6390
 10552     1F2D                     u6391:
 10553     1F2D  2EDE               	goto	l4079
 10554     1F2E                     u6390:
 10555     1F2E                     l4099:
 10556     1F2E  084E               	movf	___fldiv@rem+3,w
 10557     1F2F  044D               	iorwf	___fldiv@rem+2,w
 10558     1F30  044C               	iorwf	___fldiv@rem+1,w
 10559     1F31  044B               	iorwf	___fldiv@rem,w
 10560     1F32  1903               	skipnz
 10561     1F33  2F35               	goto	u6401
 10562     1F34  2F36               	goto	u6400
 10563     1F35                     u6401:
 10564     1F35  2F55               	goto	l4113
 10565     1F36                     u6400:
 10566     1F36                     l4101:
 10567     1F36  1452               	bsf	___fldiv@grs,0
 10568     1F37  2F55               	goto	l4113
 10569     1F38                     l4103:
 10570     1F38  3001               	movlw	1
 10571     1F39  00C6               	movwf	??___fldiv
 10572     1F3A                     u6415:
 10573     1F3A  1003               	clrc
 10574     1F3B  0DC2               	rlf	___fldiv@b,f
 10575     1F3C  0DC3               	rlf	___fldiv@b+1,f
 10576     1F3D  0DC4               	rlf	___fldiv@b+2,f
 10577     1F3E  0DC5               	rlf	___fldiv@b+3,f
 10578     1F3F  0BC6               	decfsz	??___fldiv,f
 10579     1F40  2F3A               	goto	u6415
 10580     1F41                     l4105:
 10581     1F41  1FD5               	btfss	___fldiv@grs+3,7
 10582     1F42  2F44               	goto	u6421
 10583     1F43  2F45               	goto	u6420
 10584     1F44                     u6421:
 10585     1F44  2F46               	goto	l4109
 10586     1F45                     u6420:
 10587     1F45                     l4107:
 10588     1F45  1442               	bsf	___fldiv@b,0
 10589     1F46                     l4109:
 10590     1F46  3001               	movlw	1
 10591     1F47  00C6               	movwf	??___fldiv
 10592     1F48                     u6435:
 10593     1F48  1003               	clrc
 10594     1F49  0DD2               	rlf	___fldiv@grs,f
 10595     1F4A  0DD3               	rlf	___fldiv@grs+1,f
 10596     1F4B  0DD4               	rlf	___fldiv@grs+2,f
 10597     1F4C  0DD5               	rlf	___fldiv@grs+3,f
 10598     1F4D  0BC6               	decfsz	??___fldiv,f
 10599     1F4E  2F48               	goto	u6435
 10600     1F4F                     l4111:
 10601     1F4F  30FF               	movlw	255
 10602     1F50  07D0               	addwf	___fldiv@new_exp,f
 10603     1F51  1803               	skipnc
 10604     1F52  0AD1               	incf	___fldiv@new_exp+1,f
 10605     1F53  30FF               	movlw	255
 10606     1F54  07D1               	addwf	___fldiv@new_exp+1,f
 10607     1F55                     l4113:
 10608     1F55  1FC4               	btfss	___fldiv@b+2,7
 10609     1F56  2F58               	goto	u6441
 10610     1F57  2F59               	goto	u6440
 10611     1F58                     u6441:
 10612     1F58  2F38               	goto	l4103
 10613     1F59                     u6440:
 10614     1F59                     l4115:
 10615     1F59  01D7               	clrf	___fldiv@aexp
 10616     1F5A                     l4117:
 10617     1F5A  1FD5               	btfss	___fldiv@grs+3,7
 10618     1F5B  2F5D               	goto	u6451
 10619     1F5C  2F5E               	goto	u6450
 10620     1F5D                     u6451:
 10621     1F5D  2F7A               	goto	l4125
 10622     1F5E                     u6450:
 10623     1F5E                     l4119:
 10624     1F5E  30FF               	movlw	255
 10625     1F5F  0552               	andwf	___fldiv@grs,w
 10626     1F60  00C6               	movwf	??___fldiv
 10627     1F61  30FF               	movlw	255
 10628     1F62  0553               	andwf	___fldiv@grs+1,w
 10629     1F63  00C7               	movwf	??___fldiv+1
 10630     1F64  30FF               	movlw	255
 10631     1F65  0554               	andwf	___fldiv@grs+2,w
 10632     1F66  00C8               	movwf	??___fldiv+2
 10633     1F67  307F               	movlw	127
 10634     1F68  0555               	andwf	___fldiv@grs+3,w
 10635     1F69  00C9               	movwf	??___fldiv+3
 10636     1F6A  0849               	movf	??___fldiv+3,w
 10637     1F6B  0448               	iorwf	??___fldiv+2,w
 10638     1F6C  0447               	iorwf	??___fldiv+1,w
 10639     1F6D  0446               	iorwf	??___fldiv,w
 10640     1F6E  1903               	skipnz
 10641     1F6F  2F71               	goto	u6461
 10642     1F70  2F72               	goto	u6460
 10643     1F71                     u6461:
 10644     1F71  2F75               	goto	l885
 10645     1F72                     u6460:
 10646     1F72                     l4121:
 10647     1F72  01D7               	clrf	___fldiv@aexp
 10648     1F73  0AD7               	incf	___fldiv@aexp,f
 10649     1F74  2F7A               	goto	l4125
 10650     1F75                     l885:
 10651     1F75  1C42               	btfss	___fldiv@b,0
 10652     1F76  2F78               	goto	u6471
 10653     1F77  2F79               	goto	u6470
 10654     1F78                     u6471:
 10655     1F78  2F7A               	goto	l4125
 10656     1F79                     u6470:
 10657     1F79  2F72               	goto	l4121
 10658     1F7A                     l4125:
 10659     1F7A  0857               	movf	___fldiv@aexp,w
 10660     1F7B  1903               	btfsc	3,2
 10661     1F7C  2F7E               	goto	u6481
 10662     1F7D  2F7F               	goto	u6480
 10663     1F7E                     u6481:
 10664     1F7E  2FB0               	goto	l4135
 10665     1F7F                     u6480:
 10666     1F7F                     l4127:
 10667     1F7F  3001               	movlw	1
 10668     1F80  07C2               	addwf	___fldiv@b,f
 10669     1F81  3000               	movlw	0
 10670     1F82  1803               	skipnc
 10671     1F83  3001               	movlw	1
 10672     1F84  07C3               	addwf	___fldiv@b+1,f
 10673     1F85  3000               	movlw	0
 10674     1F86  1803               	skipnc
 10675     1F87  3001               	movlw	1
 10676     1F88  07C4               	addwf	___fldiv@b+2,f
 10677     1F89  3000               	movlw	0
 10678     1F8A  1803               	skipnc
 10679     1F8B  3001               	movlw	1
 10680     1F8C  07C5               	addwf	___fldiv@b+3,f
 10681     1F8D                     l4129:
 10682     1F8D  1C45               	btfss	___fldiv@b+3,0
 10683     1F8E  2F90               	goto	u6491
 10684     1F8F  2F91               	goto	u6490
 10685     1F90                     u6491:
 10686     1F90  2FB0               	goto	l4135
 10687     1F91                     u6490:
 10688     1F91                     l4131:
 10689     1F91  0842               	movf	___fldiv@b,w
 10690     1F92  00C6               	movwf	??___fldiv
 10691     1F93  0843               	movf	___fldiv@b+1,w
 10692     1F94  00C7               	movwf	??___fldiv+1
 10693     1F95  0844               	movf	___fldiv@b+2,w
 10694     1F96  00C8               	movwf	??___fldiv+2
 10695     1F97  0845               	movf	___fldiv@b+3,w
 10696     1F98  00C9               	movwf	??___fldiv+3
 10697     1F99  3001               	movlw	1
 10698     1F9A  00CA               	movwf	??___fldiv+4
 10699     1F9B                     u6505:
 10700     1F9B  0D49               	rlf	??___fldiv+3,w
 10701     1F9C  0CC9               	rrf	??___fldiv+3,f
 10702     1F9D  0CC8               	rrf	??___fldiv+2,f
 10703     1F9E  0CC7               	rrf	??___fldiv+1,f
 10704     1F9F  0CC6               	rrf	??___fldiv,f
 10705     1FA0                     u6500:
 10706     1FA0  0BCA               	decfsz	??___fldiv+4,f
 10707     1FA1  2F9B               	goto	u6505
 10708     1FA2  0849               	movf	??___fldiv+3,w
 10709     1FA3  00C5               	movwf	___fldiv@b+3
 10710     1FA4  0848               	movf	??___fldiv+2,w
 10711     1FA5  00C4               	movwf	___fldiv@b+2
 10712     1FA6  0847               	movf	??___fldiv+1,w
 10713     1FA7  00C3               	movwf	___fldiv@b+1
 10714     1FA8  0846               	movf	??___fldiv,w
 10715     1FA9  00C2               	movwf	___fldiv@b
 10716     1FAA                     l4133:
 10717     1FAA  3001               	movlw	1
 10718     1FAB  07D0               	addwf	___fldiv@new_exp,f
 10719     1FAC  1803               	skipnc
 10720     1FAD  0AD1               	incf	___fldiv@new_exp+1,f
 10721     1FAE  3000               	movlw	0
 10722     1FAF  07D1               	addwf	___fldiv@new_exp+1,f
 10723     1FB0                     l4135:
 10724     1FB0  0851               	movf	___fldiv@new_exp+1,w
 10725     1FB1  3A80               	xorlw	128
 10726     1FB2  00FF               	movwf	btemp+1
 10727     1FB3  3080               	movlw	128
 10728     1FB4  027F               	subwf	btemp+1,w
 10729     1FB5  1D03               	skipz
 10730     1FB6  2FB9               	goto	u6515
 10731     1FB7  30FF               	movlw	255
 10732     1FB8  0250               	subwf	___fldiv@new_exp,w
 10733     1FB9                     u6515:
 10734     1FB9  1C03               	skipc
 10735     1FBA  2FBC               	goto	u6511
 10736     1FBB  2FBD               	goto	u6510
 10737     1FBC                     u6511:
 10738     1FBC  2FCB               	goto	l4139
 10739     1FBD                     u6510:
 10740     1FBD                     l4137:
 10741     1FBD  30FF               	movlw	255
 10742     1FBE  1283               	bcf	3,5	;RP0=0, select bank0
 10743     1FBF  1303               	bcf	3,6	;RP1=0, select bank0
 10744     1FC0  00D0               	movwf	___fldiv@new_exp
 10745     1FC1  3000               	movlw	0
 10746     1FC2  00D1               	movwf	___fldiv@new_exp+1
 10747     1FC3  3000               	movlw	0
 10748     1FC4  00C5               	movwf	___fldiv@b+3
 10749     1FC5  3000               	movlw	0
 10750     1FC6  00C4               	movwf	___fldiv@b+2
 10751     1FC7  3000               	movlw	0
 10752     1FC8  00C3               	movwf	___fldiv@b+1
 10753     1FC9  3000               	movlw	0
 10754     1FCA  00C2               	movwf	___fldiv@b
 10755     1FCB                     l4139:
 10756     1FCB  1283               	bcf	3,5	;RP0=0, select bank0
 10757     1FCC  1303               	bcf	3,6	;RP1=0, select bank0
 10758     1FCD  0851               	movf	___fldiv@new_exp+1,w
 10759     1FCE  3A80               	xorlw	128
 10760     1FCF  00FF               	movwf	btemp+1
 10761     1FD0  3080               	movlw	128
 10762     1FD1  027F               	subwf	btemp+1,w
 10763     1FD2  1D03               	skipz
 10764     1FD3  2FD6               	goto	u6525
 10765     1FD4  3001               	movlw	1
 10766     1FD5  0250               	subwf	___fldiv@new_exp,w
 10767     1FD6                     u6525:
 10768     1FD6  1803               	skipnc
 10769     1FD7  2FD9               	goto	u6521
 10770     1FD8  2FDA               	goto	u6520
 10771     1FD9                     u6521:
 10772     1FD9  2FE7               	goto	l891
 10773     1FDA                     u6520:
 10774     1FDA                     l4141:
 10775     1FDA  1283               	bcf	3,5	;RP0=0, select bank0
 10776     1FDB  1303               	bcf	3,6	;RP1=0, select bank0
 10777     1FDC  01D0               	clrf	___fldiv@new_exp
 10778     1FDD  01D1               	clrf	___fldiv@new_exp+1
 10779     1FDE                     l4143:
 10780     1FDE  3000               	movlw	0
 10781     1FDF  00C5               	movwf	___fldiv@b+3
 10782     1FE0  3000               	movlw	0
 10783     1FE1  00C4               	movwf	___fldiv@b+2
 10784     1FE2  3000               	movlw	0
 10785     1FE3  00C3               	movwf	___fldiv@b+1
 10786     1FE4  3000               	movlw	0
 10787     1FE5  00C2               	movwf	___fldiv@b
 10788     1FE6                     l4145:
 10789     1FE6  01CF               	clrf	___fldiv@sign
 10790     1FE7                     l891:
 10791     1FE7  1283               	bcf	3,5	;RP0=0, select bank0
 10792     1FE8  1303               	bcf	3,6	;RP1=0, select bank0
 10793     1FE9  0850               	movf	___fldiv@new_exp,w
 10794     1FEA  00D6               	movwf	___fldiv@bexp
 10795     1FEB                     l4147:
 10796     1FEB  1C56               	btfss	___fldiv@bexp,0
 10797     1FEC  2FEE               	goto	u6531
 10798     1FED  2FEF               	goto	u6530
 10799     1FEE                     u6531:
 10800     1FEE  2FF1               	goto	l4151
 10801     1FEF                     u6530:
 10802     1FEF                     l4149:
 10803     1FEF  17C4               	bsf	___fldiv@b+2,7
 10804     1FF0  2FF5               	goto	l893
 10805     1FF1                     l4151:
 10806     1FF1  307F               	movlw	127
 10807     1FF2  00C6               	movwf	??___fldiv
 10808     1FF3  0846               	movf	??___fldiv,w
 10809     1FF4  05C4               	andwf	___fldiv@b+2,f
 10810     1FF5                     l893:
 10811     1FF5  0856               	movf	___fldiv@bexp,w
 10812     1FF6  00C6               	movwf	??___fldiv
 10813     1FF7  1003               	clrc
 10814     1FF8  0C46               	rrf	??___fldiv,w
 10815     1FF9  00C5               	movwf	___fldiv@b+3
 10816     1FFA  084F               	movf	___fldiv@sign,w
 10817     1FFB  00C6               	movwf	??___fldiv
 10818     1FFC  0846               	movf	??___fldiv,w
 10819     1FFD  04C5               	iorwf	___fldiv@b+3,f
 10820     1FFE  2E9B               	goto	l4059
 10821     1FFF                     l871:
 10822     1FFF  0008               	return
 10823     2000                     __end_of___fldiv:
 10824                           
 10825                           	psect	text25
 10826     197B                     __ptext25:	
 10827 ;; *************** function _Lcd_Write_String *****************
 10828 ;; Defined at:
 10829 ;;		line 82 in file "LCDi2c.c"
 10830 ;; Parameters:    Size  Location     Type
 10831 ;;  str             2    9[COMMON] PTR const unsigned char 
 10832 ;;		 -> STR_11(4), STR_10(5), STR_9(4), STR_8(5), 
 10833 ;;		 -> STR_7(4), STR_6(4), STR_5(4), STR_4(4), 
 10834 ;;		 -> STR_3(2), STR_2(5), valor(20), 
 10835 ;; Auto vars:     Size  Location     Type
 10836 ;;		None
 10837 ;; Return value:  Size  Location     Type
 10838 ;;                  1    wreg      void 
 10839 ;; Registers used:
 10840 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10841 ;; Tracked objects:
 10842 ;;		On entry : 0/0
 10843 ;;		On exit  : 0/0
 10844 ;;		Unchanged: 0/0
 10845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10846 ;;      Params:         2       0       0       0       0
 10847 ;;      Locals:         0       0       0       0       0
 10848 ;;      Temps:          0       0       0       0       0
 10849 ;;      Totals:         2       0       0       0       0
 10850 ;;Total ram usage:        2 bytes
 10851 ;; Hardware stack levels used: 1
 10852 ;; Hardware stack levels required when called: 4
 10853 ;; This function calls:
 10854 ;;		_Lcd_Send_Byte
 10855 ;; This function is called by:
 10856 ;;		_main
 10857 ;; This function uses a non-reentrant model
 10858 ;;
 10859                           
 10860     197B                     _Lcd_Write_String:	
 10861                           ;psect for function _Lcd_Write_String
 10862                           
 10863     197B                     l4003:	
 10864                           ;incstack = 0
 10865                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10866                           
 10867                           
 10868                           ;LCDi2c.c: 82: void Lcd_Write_String(const char *str);LCDi2c.c: 83: {;LCDi2c.c: 84:     
      +                          while(*str != '\0')
 10869     197B  2992               	goto	l4009
 10870     197C                     l4005:
 10871                           
 10872                           ;LCDi2c.c: 85:     {;LCDi2c.c: 86:         Lcd_Send_Byte(1, *str++);
 10873     197C  087A               	movf	Lcd_Write_String@str+1,w
 10874     197D  00FF               	movwf	btemp+1
 10875     197E  0879               	movf	Lcd_Write_String@str,w
 10876     197F  0084               	movwf	4
 10877     1980  120A  118A  2003  160A  158A  	fcall	stringtab
 10878     1985  00F6               	movwf	Lcd_Send_Byte@n
 10879     1986  3001               	movlw	1
 10880     1987  160A  158A  20D1  160A  158A  	fcall	_Lcd_Send_Byte
 10881     198C                     l4007:
 10882     198C  3001               	movlw	1
 10883     198D  07F9               	addwf	Lcd_Write_String@str,f
 10884     198E  1803               	skipnc
 10885     198F  0AFA               	incf	Lcd_Write_String@str+1,f
 10886     1990  3000               	movlw	0
 10887     1991  07FA               	addwf	Lcd_Write_String@str+1,f
 10888     1992                     l4009:
 10889                           
 10890                           ;LCDi2c.c: 84:     while(*str != '\0')
 10891     1992  087A               	movf	Lcd_Write_String@str+1,w
 10892     1993  1283               	bcf	3,5	;RP0=0, select bank0
 10893     1994  1303               	bcf	3,6	;RP1=0, select bank0
 10894     1995  00FF               	movwf	btemp+1
 10895     1996  0879               	movf	Lcd_Write_String@str,w
 10896     1997  0084               	movwf	4
 10897     1998  120A  118A  2003  160A  158A  	fcall	stringtab
 10898     199D  3A00               	xorlw	0
 10899     199E  1D03               	skipz
 10900     199F  29A1               	goto	u6241
 10901     19A0  29A2               	goto	u6240
 10902     19A1                     u6241:
 10903     19A1  297C               	goto	l4005
 10904     19A2                     u6240:
 10905     19A2                     l246:
 10906     19A2  0008               	return
 10907     19A3                     __end_of_Lcd_Write_String:
 10908                           
 10909                           	psect	text26
 10910     1871                     __ptext26:	
 10911 ;; *************** function _Lcd_Write_Char *****************
 10912 ;; Defined at:
 10913 ;;		line 77 in file "LCDi2c.c"
 10914 ;; Parameters:    Size  Location     Type
 10915 ;;  c               1    wreg     unsigned char 
 10916 ;; Auto vars:     Size  Location     Type
 10917 ;;  c               1    9[COMMON] unsigned char 
 10918 ;; Return value:  Size  Location     Type
 10919 ;;                  1    wreg      void 
 10920 ;; Registers used:
 10921 ;;		wreg, status,2, status,0, pclath, cstack
 10922 ;; Tracked objects:
 10923 ;;		On entry : 0/0
 10924 ;;		On exit  : 0/0
 10925 ;;		Unchanged: 0/0
 10926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10927 ;;      Params:         0       0       0       0       0
 10928 ;;      Locals:         1       0       0       0       0
 10929 ;;      Temps:          0       0       0       0       0
 10930 ;;      Totals:         1       0       0       0       0
 10931 ;;Total ram usage:        1 bytes
 10932 ;; Hardware stack levels used: 1
 10933 ;; Hardware stack levels required when called: 4
 10934 ;; This function calls:
 10935 ;;		_Lcd_Send_Byte
 10936 ;; This function is called by:
 10937 ;;		_main
 10938 ;; This function uses a non-reentrant model
 10939 ;;
 10940                           
 10941     1871                     _Lcd_Write_Char:	
 10942                           ;psect for function _Lcd_Write_Char
 10943                           
 10944                           
 10945                           ;incstack = 0
 10946                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10947                           ;Lcd_Write_Char@c stored from wreg
 10948     1871  00F9               	movwf	Lcd_Write_Char@c
 10949     1872                     l4011:
 10950                           
 10951                           ;LCDi2c.c: 77: void Lcd_Write_Char(char c);LCDi2c.c: 78: {;LCDi2c.c: 79:     Lcd_Send_By
      +                          te(1, c);
 10952     1872  0879               	movf	Lcd_Write_Char@c,w
 10953     1873  00F6               	movwf	Lcd_Send_Byte@n
 10954     1874  3001               	movlw	1
 10955     1875  160A  158A  20D1  160A  158A  	fcall	_Lcd_Send_Byte
 10956     187A                     l240:
 10957     187A  0008               	return
 10958     187B                     __end_of_Lcd_Write_Char:
 10959                           
 10960                           	psect	text27
 10961     19E7                     __ptext27:	
 10962 ;; *************** function _Lcd_Set_Cursor *****************
 10963 ;; Defined at:
 10964 ;;		line 66 in file "LCDi2c.c"
 10965 ;; Parameters:    Size  Location     Type
 10966 ;;  row             1    wreg     unsigned char 
 10967 ;;  col             1    9[COMMON] unsigned char 
 10968 ;; Auto vars:     Size  Location     Type
 10969 ;;  row             1   12[COMMON] unsigned char 
 10970 ;; Return value:  Size  Location     Type
 10971 ;;                  1    wreg      void 
 10972 ;; Registers used:
 10973 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10974 ;; Tracked objects:
 10975 ;;		On entry : 0/0
 10976 ;;		On exit  : 0/0
 10977 ;;		Unchanged: 0/0
 10978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10979 ;;      Params:         1       0       0       0       0
 10980 ;;      Locals:         1       0       0       0       0
 10981 ;;      Temps:          2       0       0       0       0
 10982 ;;      Totals:         4       0       0       0       0
 10983 ;;Total ram usage:        4 bytes
 10984 ;; Hardware stack levels used: 1
 10985 ;; Hardware stack levels required when called: 4
 10986 ;; This function calls:
 10987 ;;		_Lcd_Send_Byte
 10988 ;; This function is called by:
 10989 ;;		_main
 10990 ;; This function uses a non-reentrant model
 10991 ;;
 10992                           
 10993     19E7                     _Lcd_Set_Cursor:	
 10994                           ;psect for function _Lcd_Set_Cursor
 10995                           
 10996                           
 10997                           ;incstack = 0
 10998                           ; Regs used in _Lcd_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10999                           ;Lcd_Set_Cursor@row stored from wreg
 11000     19E7  00FC               	movwf	Lcd_Set_Cursor@row
 11001     19E8                     l3985:
 11002                           
 11003                           ;LCDi2c.c: 66: void Lcd_Set_Cursor(char row, char col);LCDi2c.c: 67: {;LCDi2c.c: 68:    
      +                           switch(row)
 11004     19E8  2A15               	goto	l3997
 11005     19E9                     l3987:
 11006     19E9  0879               	movf	Lcd_Set_Cursor@col,w
 11007     19EA  3EFF               	addlw	255
 11008     19EB  3880               	iorlw	128
 11009     19EC  00F6               	movwf	Lcd_Send_Byte@n
 11010     19ED  3000               	movlw	0
 11011     19EE  160A  158A  20D1  160A  158A  	fcall	_Lcd_Send_Byte
 11012     19F3  2A2B               	goto	l237
 11013     19F4                     l3989:
 11014     19F4  0879               	movf	Lcd_Set_Cursor@col,w
 11015     19F5  3EFF               	addlw	255
 11016     19F6  38C0               	iorlw	192
 11017     19F7  00F6               	movwf	Lcd_Send_Byte@n
 11018     19F8  3000               	movlw	0
 11019     19F9  160A  158A  20D1  160A  158A  	fcall	_Lcd_Send_Byte
 11020     19FE  2A2B               	goto	l237
 11021     19FF                     l3991:
 11022     19FF  0879               	movf	Lcd_Set_Cursor@col,w
 11023     1A00  3EFF               	addlw	255
 11024     1A01  3894               	iorlw	148
 11025     1A02  00F6               	movwf	Lcd_Send_Byte@n
 11026     1A03  3000               	movlw	0
 11027     1A04  160A  158A  20D1  160A  158A  	fcall	_Lcd_Send_Byte
 11028     1A09  2A2B               	goto	l237
 11029     1A0A                     l3993:
 11030     1A0A  0879               	movf	Lcd_Set_Cursor@col,w
 11031     1A0B  3EFF               	addlw	255
 11032     1A0C  38D4               	iorlw	212
 11033     1A0D  00F6               	movwf	Lcd_Send_Byte@n
 11034     1A0E  3000               	movlw	0
 11035     1A0F  160A  158A  20D1  160A  158A  	fcall	_Lcd_Send_Byte
 11036     1A14  2A2B               	goto	l237
 11037     1A15                     l3997:
 11038     1A15  087C               	movf	Lcd_Set_Cursor@row,w
 11039     1A16  00FA               	movwf	??_Lcd_Set_Cursor
 11040     1A17  01FB               	clrf	??_Lcd_Set_Cursor+1
 11041                           
 11042                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11043                           ; Switch size 1, requested type "simple"
 11044                           ; Number of cases is 1, Range of values is 0 to 0
 11045                           ; switch strategies available:
 11046                           ; Name         Instructions Cycles
 11047                           ; simple_byte            4     3 (average)
 11048                           ; direct_byte           11     8 (fixed)
 11049                           ; jumptable            260     6 (fixed)
 11050                           ;	Chosen strategy is simple_byte
 11051     1A18  087B               	movf	??_Lcd_Set_Cursor+1,w
 11052     1A19  3A00               	xorlw	0	; case 0
 11053     1A1A  1903               	skipnz
 11054     1A1B  2A1D               	goto	l4363
 11055     1A1C  2A2B               	goto	l237
 11056     1A1D                     l4363:
 11057                           
 11058                           ; Switch size 1, requested type "simple"
 11059                           ; Number of cases is 4, Range of values is 1 to 4
 11060                           ; switch strategies available:
 11061                           ; Name         Instructions Cycles
 11062                           ; simple_byte           13     7 (average)
 11063                           ; direct_byte           23    11 (fixed)
 11064                           ; jumptable            263     9 (fixed)
 11065                           ;	Chosen strategy is simple_byte
 11066     1A1D  087A               	movf	??_Lcd_Set_Cursor,w
 11067     1A1E  3A01               	xorlw	1	; case 1
 11068     1A1F  1903               	skipnz
 11069     1A20  29E9               	goto	l3987
 11070     1A21  3A03               	xorlw	3	; case 2
 11071     1A22  1903               	skipnz
 11072     1A23  29F4               	goto	l3989
 11073     1A24  3A01               	xorlw	1	; case 3
 11074     1A25  1903               	skipnz
 11075     1A26  29FF               	goto	l3991
 11076     1A27  3A07               	xorlw	7	; case 4
 11077     1A28  1903               	skipnz
 11078     1A29  2A0A               	goto	l3993
 11079     1A2A  2A2B               	goto	l237
 11080     1A2B                     l237:
 11081     1A2B  0008               	return
 11082     1A2C                     __end_of_Lcd_Set_Cursor:
 11083                           
 11084                           	psect	text28
 11085     1C45                     __ptext28:	
 11086 ;; *************** function _Lcd_Init *****************
 11087 ;; Defined at:
 11088 ;;		line 35 in file "LCDi2c.c"
 11089 ;; Parameters:    Size  Location     Type
 11090 ;;		None
 11091 ;; Auto vars:     Size  Location     Type
 11092 ;;  i               1   11[COMMON] unsigned char 
 11093 ;; Return value:  Size  Location     Type
 11094 ;;                  1    wreg      void 
 11095 ;; Registers used:
 11096 ;;		wreg, status,2, status,0, pclath, cstack
 11097 ;; Tracked objects:
 11098 ;;		On entry : 0/0
 11099 ;;		On exit  : 0/0
 11100 ;;		Unchanged: 0/0
 11101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11102 ;;      Params:         0       0       0       0       0
 11103 ;;      Locals:         1       0       0       0       0
 11104 ;;      Temps:          2       0       0       0       0
 11105 ;;      Totals:         3       0       0       0       0
 11106 ;;Total ram usage:        3 bytes
 11107 ;; Hardware stack levels used: 1
 11108 ;; Hardware stack levels required when called: 4
 11109 ;; This function calls:
 11110 ;;		_I2C_Start
 11111 ;;		_I2C_Stop
 11112 ;;		_I2C_Write
 11113 ;;		_Lcd_Send_Byte
 11114 ;; This function is called by:
 11115 ;;		_main
 11116 ;; This function uses a non-reentrant model
 11117 ;;
 11118                           
 11119     1C45                     _Lcd_Init:	
 11120                           ;psect for function _Lcd_Init
 11121                           
 11122     1C45                     l3637:	
 11123                           ;incstack = 0
 11124                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 11125                           
 11126                           
 11127                           ;LCDi2c.c: 37:     char i;;LCDi2c.c: 38:     I2C_Start();
 11128     1C45  160A  158A  205D  160A  158A  	fcall	_I2C_Start
 11129     1C4A                     l3639:
 11130                           
 11131                           ;LCDi2c.c: 39:     I2C_Write(0x4E);
 11132     1C4A  304E               	movlw	78
 11133     1C4B  160A  158A  2091  160A  158A  	fcall	_I2C_Write
 11134     1C50                     l3641:
 11135                           
 11136                           ;LCDi2c.c: 40:     I2C_Write(0x00);
 11137     1C50  3000               	movlw	0
 11138     1C51  160A  158A  2091  160A  158A  	fcall	_I2C_Write
 11139                           
 11140                           ;LCDi2c.c: 41:     I2C_Stop();
 11141     1C56  160A  158A  2067  160A  158A  	fcall	_I2C_Stop
 11142     1C5B                     l3643:
 11143                           
 11144                           ;LCDi2c.c: 42:     _delay((unsigned long)((15)*(8000000/4000.0)));
 11145     1C5B  3027               	movlw	39
 11146     1C5C  00FA               	movwf	??_Lcd_Init+1
 11147     1C5D  30F5               	movlw	245
 11148     1C5E  00F9               	movwf	??_Lcd_Init
 11149     1C5F                     u6657:
 11150     1C5F  0BF9               	decfsz	??_Lcd_Init,f
 11151     1C60  2C5F               	goto	u6657
 11152     1C61  0BFA               	decfsz	??_Lcd_Init+1,f
 11153     1C62  2C5F               	goto	u6657
 11154     1C63                     l3645:
 11155                           
 11156                           ;LCDi2c.c: 44:     for(i=0 ;i<3; i++)
 11157     1C63  01FB               	clrf	Lcd_Init@i
 11158     1C64                     l3651:
 11159                           
 11160                           ;LCDi2c.c: 45:     {;LCDi2c.c: 46:         Lcd_Send_Byte(0, 0x03);
 11161     1C64  3003               	movlw	3
 11162     1C65  00F6               	movwf	Lcd_Send_Byte@n
 11163     1C66  3000               	movlw	0
 11164     1C67  160A  158A  20D1  160A  158A  	fcall	_Lcd_Send_Byte
 11165     1C6C                     l3653:
 11166                           
 11167                           ;LCDi2c.c: 47:         _delay((unsigned long)((5)*(8000000/4000.0)));
 11168     1C6C  300D               	movlw	13
 11169     1C6D  00FA               	movwf	??_Lcd_Init+1
 11170     1C6E  30FB               	movlw	251
 11171     1C6F  00F9               	movwf	??_Lcd_Init
 11172     1C70                     u6667:
 11173     1C70  0BF9               	decfsz	??_Lcd_Init,f
 11174     1C71  2C70               	goto	u6667
 11175     1C72  0BFA               	decfsz	??_Lcd_Init+1,f
 11176     1C73  2C70               	goto	u6667
 11177     1C74  2C75               	nop2
 11178     1C75                     l3655:
 11179                           
 11180                           ;LCDi2c.c: 48:     }
 11181     1C75  3001               	movlw	1
 11182     1C76  00F9               	movwf	??_Lcd_Init
 11183     1C77  0879               	movf	??_Lcd_Init,w
 11184     1C78  07FB               	addwf	Lcd_Init@i,f
 11185     1C79                     l3657:
 11186     1C79  3003               	movlw	3
 11187     1C7A  027B               	subwf	Lcd_Init@i,w
 11188     1C7B  1C03               	skipc
 11189     1C7C  2C7E               	goto	u5681
 11190     1C7D  2C7F               	goto	u5680
 11191     1C7E                     u5681:
 11192     1C7E  2C64               	goto	l3651
 11193     1C7F                     u5680:
 11194     1C7F                     l3659:
 11195                           
 11196                           ;LCDi2c.c: 49:     Lcd_Send_Byte(0, 0x02);
 11197     1C7F  3002               	movlw	2
 11198     1C80  00F6               	movwf	Lcd_Send_Byte@n
 11199     1C81  3000               	movlw	0
 11200     1C82  160A  158A  20D1  160A  158A  	fcall	_Lcd_Send_Byte
 11201                           
 11202                           ;LCDi2c.c: 50:     Lcd_Send_Byte(0, 0x28);
 11203     1C87  3028               	movlw	40
 11204     1C88  00F6               	movwf	Lcd_Send_Byte@n
 11205     1C89  3000               	movlw	0
 11206     1C8A  160A  158A  20D1  160A  158A  	fcall	_Lcd_Send_Byte
 11207     1C8F                     l3661:
 11208                           
 11209                           ;LCDi2c.c: 51:     _delay((unsigned long)((5)*(8000000/4000.0)));
 11210     1C8F  300D               	movlw	13
 11211     1C90  00FA               	movwf	??_Lcd_Init+1
 11212     1C91  30FB               	movlw	251
 11213     1C92  00F9               	movwf	??_Lcd_Init
 11214     1C93                     u6677:
 11215     1C93  0BF9               	decfsz	??_Lcd_Init,f
 11216     1C94  2C93               	goto	u6677
 11217     1C95  0BFA               	decfsz	??_Lcd_Init+1,f
 11218     1C96  2C93               	goto	u6677
 11219     1C97  2C98               	nop2
 11220     1C98                     l3663:
 11221                           
 11222                           ;LCDi2c.c: 52:     Lcd_Send_Byte(0, 0x08);
 11223     1C98  3008               	movlw	8
 11224     1C99  00F6               	movwf	Lcd_Send_Byte@n
 11225     1C9A  3000               	movlw	0
 11226     1C9B  160A  158A  20D1  160A  158A  	fcall	_Lcd_Send_Byte
 11227                           
 11228                           ;LCDi2c.c: 53:     _delay((unsigned long)((5)*(8000000/4000.0)));
 11229     1CA0  300D               	movlw	13
 11230     1CA1  00FA               	movwf	??_Lcd_Init+1
 11231     1CA2  30FB               	movlw	251
 11232     1CA3  00F9               	movwf	??_Lcd_Init
 11233     1CA4                     u6687:
 11234     1CA4  0BF9               	decfsz	??_Lcd_Init,f
 11235     1CA5  2CA4               	goto	u6687
 11236     1CA6  0BFA               	decfsz	??_Lcd_Init+1,f
 11237     1CA7  2CA4               	goto	u6687
 11238     1CA8  2CA9               	nop2
 11239     1CA9                     l3665:
 11240                           
 11241                           ;LCDi2c.c: 54:     Lcd_Send_Byte(0, 0x01);
 11242     1CA9  01F6               	clrf	Lcd_Send_Byte@n
 11243     1CAA  0AF6               	incf	Lcd_Send_Byte@n,f
 11244     1CAB  3000               	movlw	0
 11245     1CAC  160A  158A  20D1  160A  158A  	fcall	_Lcd_Send_Byte
 11246     1CB1                     l3667:
 11247                           
 11248                           ;LCDi2c.c: 55:     _delay((unsigned long)((5)*(8000000/4000.0)));
 11249     1CB1  300D               	movlw	13
 11250     1CB2  00FA               	movwf	??_Lcd_Init+1
 11251     1CB3  30FB               	movlw	251
 11252     1CB4  00F9               	movwf	??_Lcd_Init
 11253     1CB5                     u6697:
 11254     1CB5  0BF9               	decfsz	??_Lcd_Init,f
 11255     1CB6  2CB5               	goto	u6697
 11256     1CB7  0BFA               	decfsz	??_Lcd_Init+1,f
 11257     1CB8  2CB5               	goto	u6697
 11258     1CB9  2CBA               	nop2
 11259                           
 11260                           ;LCDi2c.c: 56:     Lcd_Send_Byte(0, 0x06);
 11261     1CBA  3006               	movlw	6
 11262     1CBB  00F6               	movwf	Lcd_Send_Byte@n
 11263     1CBC  3000               	movlw	0
 11264     1CBD  160A  158A  20D1  160A  158A  	fcall	_Lcd_Send_Byte
 11265     1CC2                     l3669:
 11266                           
 11267                           ;LCDi2c.c: 57:     _delay((unsigned long)((5)*(8000000/4000.0)));
 11268     1CC2  300D               	movlw	13
 11269     1CC3  00FA               	movwf	??_Lcd_Init+1
 11270     1CC4  30FB               	movlw	251
 11271     1CC5  00F9               	movwf	??_Lcd_Init
 11272     1CC6                     u6707:
 11273     1CC6  0BF9               	decfsz	??_Lcd_Init,f
 11274     1CC7  2CC6               	goto	u6707
 11275     1CC8  0BFA               	decfsz	??_Lcd_Init+1,f
 11276     1CC9  2CC6               	goto	u6707
 11277     1CCA  2CCB               	nop2
 11278     1CCB                     l3671:
 11279                           
 11280                           ;LCDi2c.c: 58:     Lcd_Send_Byte(0, 0x0C);
 11281     1CCB  300C               	movlw	12
 11282     1CCC  00F6               	movwf	Lcd_Send_Byte@n
 11283     1CCD  3000               	movlw	0
 11284     1CCE  160A  158A  20D1  160A  158A  	fcall	_Lcd_Send_Byte
 11285     1CD3                     l225:
 11286     1CD3  0008               	return
 11287     1CD4                     __end_of_Lcd_Init:
 11288                           
 11289                           	psect	text29
 11290     18D1                     __ptext29:	
 11291 ;; *************** function _Lcd_Send_Byte *****************
 11292 ;; Defined at:
 11293 ;;		line 29 in file "LCDi2c.c"
 11294 ;; Parameters:    Size  Location     Type
 11295 ;;  add             1    wreg     unsigned char 
 11296 ;;  n               1    6[COMMON] unsigned char 
 11297 ;; Auto vars:     Size  Location     Type
 11298 ;;  add             1    8[COMMON] unsigned char 
 11299 ;; Return value:  Size  Location     Type
 11300 ;;                  1    wreg      void 
 11301 ;; Registers used:
 11302 ;;		wreg, status,2, status,0, pclath, cstack
 11303 ;; Tracked objects:
 11304 ;;		On entry : 0/0
 11305 ;;		On exit  : 0/0
 11306 ;;		Unchanged: 0/0
 11307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11308 ;;      Params:         1       0       0       0       0
 11309 ;;      Locals:         1       0       0       0       0
 11310 ;;      Temps:          1       0       0       0       0
 11311 ;;      Totals:         3       0       0       0       0
 11312 ;;Total ram usage:        3 bytes
 11313 ;; Hardware stack levels used: 1
 11314 ;; Hardware stack levels required when called: 3
 11315 ;; This function calls:
 11316 ;;		_Lcd_Port
 11317 ;; This function is called by:
 11318 ;;		_Lcd_Init
 11319 ;;		_Lcd_Set_Cursor
 11320 ;;		_Lcd_Write_Char
 11321 ;;		_Lcd_Write_String
 11322 ;;		_Lcd_Cmd
 11323 ;;		_Lcd_Clear
 11324 ;;		_Lcd_CGRAM_WriteChar
 11325 ;;		_Lcd_CGRAM_SetPosition
 11326 ;;		_Lcd_CGRAM_CreateChar
 11327 ;; This function uses a non-reentrant model
 11328 ;;
 11329                           
 11330     18D1                     _Lcd_Send_Byte:	
 11331                           ;psect for function _Lcd_Send_Byte
 11332                           
 11333                           
 11334                           ;incstack = 0
 11335                           ; Regs used in _Lcd_Send_Byte: [wreg+status,2+status,0+pclath+cstack]
 11336                           ;Lcd_Send_Byte@add stored from wreg
 11337     18D1  00F8               	movwf	Lcd_Send_Byte@add
 11338     18D2                     l3261:
 11339                           
 11340                           ;LCDi2c.c: 29: void Lcd_Send_Byte(unsigned char add, unsigned char n);LCDi2c.c: 30: {;LC
      +                          Di2c.c: 31:     Lcd_Port(add, n >> 4);
 11341     18D2  0876               	movf	Lcd_Send_Byte@n,w
 11342     18D3  00F7               	movwf	??_Lcd_Send_Byte
 11343     18D4  3004               	movlw	4
 11344     18D5                     u4605:
 11345     18D5  1003               	clrc
 11346     18D6  0CF7               	rrf	??_Lcd_Send_Byte,f
 11347     18D7  3EFF               	addlw	-1
 11348     18D8  1D03               	skipz
 11349     18D9  28D5               	goto	u4605
 11350     18DA  0877               	movf	??_Lcd_Send_Byte,w
 11351     18DB  00F2               	movwf	Lcd_Port@nibble
 11352     18DC  0878               	movf	Lcd_Send_Byte@add,w
 11353     18DD  160A  158A  227A  160A  158A  	fcall	_Lcd_Port
 11354                           
 11355                           ;LCDi2c.c: 32:     Lcd_Port(add, n & 0x0F);
 11356     18E2  0876               	movf	Lcd_Send_Byte@n,w
 11357     18E3  390F               	andlw	15
 11358     18E4  00F2               	movwf	Lcd_Port@nibble
 11359     18E5  0878               	movf	Lcd_Send_Byte@add,w
 11360     18E6  160A  158A  227A  160A  158A  	fcall	_Lcd_Port
 11361     18EB                     l220:
 11362     18EB  0008               	return
 11363     18EC                     __end_of_Lcd_Send_Byte:
 11364                           
 11365                           	psect	text30
 11366     1A7A                     __ptext30:	
 11367 ;; *************** function _Lcd_Port *****************
 11368 ;; Defined at:
 11369 ;;		line 11 in file "LCDi2c.c"
 11370 ;; Parameters:    Size  Location     Type
 11371 ;;  add             1    wreg     unsigned char 
 11372 ;;  nibble          1    2[COMMON] unsigned char 
 11373 ;; Auto vars:     Size  Location     Type
 11374 ;;  add             1    4[COMMON] unsigned char 
 11375 ;;  datos           1    5[COMMON] unsigned char 
 11376 ;; Return value:  Size  Location     Type
 11377 ;;                  1    wreg      void 
 11378 ;; Registers used:
 11379 ;;		wreg, status,2, status,0, pclath, cstack
 11380 ;; Tracked objects:
 11381 ;;		On entry : 0/0
 11382 ;;		On exit  : 0/0
 11383 ;;		Unchanged: 0/0
 11384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11385 ;;      Params:         1       0       0       0       0
 11386 ;;      Locals:         2       0       0       0       0
 11387 ;;      Temps:          1       0       0       0       0
 11388 ;;      Totals:         4       0       0       0       0
 11389 ;;Total ram usage:        4 bytes
 11390 ;; Hardware stack levels used: 1
 11391 ;; Hardware stack levels required when called: 2
 11392 ;; This function calls:
 11393 ;;		_Lcd_I2C_Write
 11394 ;; This function is called by:
 11395 ;;		_Lcd_Send_Byte
 11396 ;; This function uses a non-reentrant model
 11397 ;;
 11398                           
 11399     1A7A                     _Lcd_Port:	
 11400                           ;psect for function _Lcd_Port
 11401                           
 11402                           
 11403                           ;incstack = 0
 11404                           ; Regs used in _Lcd_Port: [wreg+status,2+status,0+pclath+cstack]
 11405                           ;Lcd_Port@add stored from wreg
 11406     1A7A  00F4               	movwf	Lcd_Port@add
 11407     1A7B                     l2759:
 11408                           
 11409                           ;LCDi2c.c: 11: void Lcd_Port(unsigned char add, unsigned char nibble);LCDi2c.c: 12: {;LC
      +                          Di2c.c: 13:     char datos;;LCDi2c.c: 14:     if((nibble & 1)==1) datos = datos|0x10; el
      +                          se datos = datos&~0x10;
 11410     1A7B  1C72               	btfss	Lcd_Port@nibble,0
 11411     1A7C  2A7E               	goto	u3401
 11412     1A7D  2A7F               	goto	u3400
 11413     1A7E                     u3401:
 11414     1A7E  2A83               	goto	l2763
 11415     1A7F                     u3400:
 11416     1A7F                     l2761:
 11417     1A7F  0875               	movf	Lcd_Port@datos,w
 11418     1A80  3810               	iorlw	16
 11419     1A81  00F5               	movwf	Lcd_Port@datos
 11420     1A82  2A86               	goto	l2765
 11421     1A83                     l2763:
 11422     1A83  0875               	movf	Lcd_Port@datos,w
 11423     1A84  39EF               	andlw	239
 11424     1A85  00F5               	movwf	Lcd_Port@datos
 11425     1A86                     l2765:
 11426                           
 11427                           ;LCDi2c.c: 15:     if((nibble & 2)==2) datos = datos|0x20; else datos = datos&~0x20;
 11428     1A86  1CF2               	btfss	Lcd_Port@nibble,1
 11429     1A87  2A89               	goto	u3411
 11430     1A88  2A8A               	goto	u3410
 11431     1A89                     u3411:
 11432     1A89  2A8E               	goto	l2769
 11433     1A8A                     u3410:
 11434     1A8A                     l2767:
 11435     1A8A  0875               	movf	Lcd_Port@datos,w
 11436     1A8B  3820               	iorlw	32
 11437     1A8C  00F5               	movwf	Lcd_Port@datos
 11438     1A8D  2A91               	goto	l2771
 11439     1A8E                     l2769:
 11440     1A8E  0875               	movf	Lcd_Port@datos,w
 11441     1A8F  39DF               	andlw	223
 11442     1A90  00F5               	movwf	Lcd_Port@datos
 11443     1A91                     l2771:
 11444                           
 11445                           ;LCDi2c.c: 16:     if((nibble & 4)==4) datos = datos|0x40; else datos = datos&~0x40;
 11446     1A91  1D72               	btfss	Lcd_Port@nibble,2
 11447     1A92  2A94               	goto	u3421
 11448     1A93  2A95               	goto	u3420
 11449     1A94                     u3421:
 11450     1A94  2A99               	goto	l2775
 11451     1A95                     u3420:
 11452     1A95                     l2773:
 11453     1A95  0875               	movf	Lcd_Port@datos,w
 11454     1A96  3840               	iorlw	64
 11455     1A97  00F5               	movwf	Lcd_Port@datos
 11456     1A98  2A9C               	goto	l2777
 11457     1A99                     l2775:
 11458     1A99  0875               	movf	Lcd_Port@datos,w
 11459     1A9A  39BF               	andlw	191
 11460     1A9B  00F5               	movwf	Lcd_Port@datos
 11461     1A9C                     l2777:
 11462                           
 11463                           ;LCDi2c.c: 17:     if((nibble & 8)==8) datos = datos|0x80; else datos = datos&~0x80;
 11464     1A9C  1DF2               	btfss	Lcd_Port@nibble,3
 11465     1A9D  2A9F               	goto	u3431
 11466     1A9E  2AA0               	goto	u3430
 11467     1A9F                     u3431:
 11468     1A9F  2AA4               	goto	l2781
 11469     1AA0                     u3430:
 11470     1AA0                     l2779:
 11471     1AA0  0875               	movf	Lcd_Port@datos,w
 11472     1AA1  3880               	iorlw	128
 11473     1AA2  00F5               	movwf	Lcd_Port@datos
 11474     1AA3  2AA7               	goto	l2783
 11475     1AA4                     l2781:
 11476     1AA4  0875               	movf	Lcd_Port@datos,w
 11477     1AA5  397F               	andlw	127
 11478     1AA6  00F5               	movwf	Lcd_Port@datos
 11479     1AA7                     l2783:
 11480                           
 11481                           ;LCDi2c.c: 18:     _delay((unsigned long)((60)*(8000000/4000000.0)));
 11482     1AA7  3027               	movlw	39
 11483     1AA8  00F3               	movwf	??_Lcd_Port
 11484     1AA9                     u6717:
 11485     1AA9  0BF3               	decfsz	??_Lcd_Port,f
 11486     1AAA  2AA9               	goto	u6717
 11487     1AAB  2AAC               	nop2
 11488     1AAC                     l2785:
 11489                           
 11490                           ;LCDi2c.c: 19:     if(add == 1)
 11491     1AAC  0374               	decf	Lcd_Port@add,w
 11492     1AAD  1D03               	btfss	3,2
 11493     1AAE  2AB0               	goto	u3441
 11494     1AAF  2AB1               	goto	u3440
 11495     1AB0                     u3441:
 11496     1AB0  2AB5               	goto	l2789
 11497     1AB1                     u3440:
 11498     1AB1                     l2787:
 11499                           
 11500                           ;LCDi2c.c: 20:         datos = datos|0x01;
 11501     1AB1  0875               	movf	Lcd_Port@datos,w
 11502     1AB2  3801               	iorlw	1
 11503     1AB3  00F5               	movwf	Lcd_Port@datos
 11504     1AB4  2AB8               	goto	l2791
 11505     1AB5                     l2789:
 11506                           
 11507                           ;LCDi2c.c: 22:         datos = datos &~0x01;
 11508     1AB5  0875               	movf	Lcd_Port@datos,w
 11509     1AB6  39FE               	andlw	254
 11510     1AB7  00F5               	movwf	Lcd_Port@datos
 11511     1AB8                     l2791:
 11512                           
 11513                           ;LCDi2c.c: 24:     Lcd_I2C_Write(datos|0x04);
 11514     1AB8  0875               	movf	Lcd_Port@datos,w
 11515     1AB9  3804               	iorlw	4
 11516     1ABA  160A  158A  209F  160A  158A  	fcall	_Lcd_I2C_Write
 11517     1ABF                     l2793:
 11518                           
 11519                           ;LCDi2c.c: 25:     _delay((unsigned long)((2)*(8000000/4000000.0)));
 11520     1ABF  2AC0               	nop2	;2 cycle nop
 11521     1AC0  2AC1               	nop2	;2 cycle nop
 11522     1AC1                     l2795:
 11523                           
 11524                           ;LCDi2c.c: 26:     Lcd_I2C_Write(datos&~0x04);
 11525     1AC1  0875               	movf	Lcd_Port@datos,w
 11526     1AC2  39FB               	andlw	251
 11527     1AC3  160A  158A  209F  160A  158A  	fcall	_Lcd_I2C_Write
 11528     1AC8                     l217:
 11529     1AC8  0008               	return
 11530     1AC9                     __end_of_Lcd_Port:
 11531                           
 11532                           	psect	text31
 11533     189F                     __ptext31:	
 11534 ;; *************** function _Lcd_I2C_Write *****************
 11535 ;; Defined at:
 11536 ;;		line 3 in file "LCDi2c.c"
 11537 ;; Parameters:    Size  Location     Type
 11538 ;;  dato            1    wreg     unsigned char 
 11539 ;; Auto vars:     Size  Location     Type
 11540 ;;  dato            1    1[COMMON] unsigned char 
 11541 ;; Return value:  Size  Location     Type
 11542 ;;                  1    wreg      void 
 11543 ;; Registers used:
 11544 ;;		wreg, status,2, status,0, pclath, cstack
 11545 ;; Tracked objects:
 11546 ;;		On entry : 0/0
 11547 ;;		On exit  : 0/0
 11548 ;;		Unchanged: 0/0
 11549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11550 ;;      Params:         0       0       0       0       0
 11551 ;;      Locals:         1       0       0       0       0
 11552 ;;      Temps:          0       0       0       0       0
 11553 ;;      Totals:         1       0       0       0       0
 11554 ;;Total ram usage:        1 bytes
 11555 ;; Hardware stack levels used: 1
 11556 ;; Hardware stack levels required when called: 1
 11557 ;; This function calls:
 11558 ;;		_I2C_Start
 11559 ;;		_I2C_Stop
 11560 ;;		_I2C_Write
 11561 ;; This function is called by:
 11562 ;;		_Lcd_Port
 11563 ;; This function uses a non-reentrant model
 11564 ;;
 11565                           
 11566     189F                     _Lcd_I2C_Write:	
 11567                           ;psect for function _Lcd_I2C_Write
 11568                           
 11569                           
 11570                           ;incstack = 0
 11571                           ; Regs used in _Lcd_I2C_Write: [wreg+status,2+status,0+pclath+cstack]
 11572                           ;Lcd_I2C_Write@dato stored from wreg
 11573     189F  00F1               	movwf	Lcd_I2C_Write@dato
 11574     18A0                     l2739:
 11575                           
 11576                           ;LCDi2c.c: 3: void Lcd_I2C_Write(unsigned char dato);LCDi2c.c: 4: {;LCDi2c.c: 5:     I2C
      +                          _Start();
 11577     18A0  160A  158A  205D  160A  158A  	fcall	_I2C_Start
 11578     18A5                     l2741:
 11579                           
 11580                           ;LCDi2c.c: 6:     I2C_Write(0x4E);
 11581     18A5  304E               	movlw	78
 11582     18A6  160A  158A  2091  160A  158A  	fcall	_I2C_Write
 11583     18AB                     l2743:
 11584                           
 11585                           ;LCDi2c.c: 7:     I2C_Write(dato|0x08);
 11586     18AB  0871               	movf	Lcd_I2C_Write@dato,w
 11587     18AC  3808               	iorlw	8
 11588     18AD  160A  158A  2091  160A  158A  	fcall	_I2C_Write
 11589                           
 11590                           ;LCDi2c.c: 8:     I2C_Stop();
 11591     18B2  160A  158A  2067  160A  158A  	fcall	_I2C_Stop
 11592     18B7                     l204:
 11593     18B7  0008               	return
 11594     18B8                     __end_of_Lcd_I2C_Write:
 11595                           
 11596                           	psect	text32
 11597     1891                     __ptext32:	
 11598 ;; *************** function _I2C_Write *****************
 11599 ;; Defined at:
 11600 ;;		line 56 in file "i2c.c"
 11601 ;; Parameters:    Size  Location     Type
 11602 ;;  data            1    wreg     unsigned char 
 11603 ;; Auto vars:     Size  Location     Type
 11604 ;;  data            1    0[COMMON] unsigned char 
 11605 ;;  b_ok            2    0        short 
 11606 ;; Return value:  Size  Location     Type
 11607 ;;                  2   44[None  ] short 
 11608 ;; Registers used:
 11609 ;;		wreg
 11610 ;; Tracked objects:
 11611 ;;		On entry : 0/0
 11612 ;;		On exit  : 0/0
 11613 ;;		Unchanged: 0/0
 11614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11615 ;;      Params:         0       0       0       0       0
 11616 ;;      Locals:         1       0       0       0       0
 11617 ;;      Temps:          0       0       0       0       0
 11618 ;;      Totals:         1       0       0       0       0
 11619 ;;Total ram usage:        1 bytes
 11620 ;; Hardware stack levels used: 1
 11621 ;; This function calls:
 11622 ;;		Nothing
 11623 ;; This function is called by:
 11624 ;;		_main
 11625 ;;		_Lcd_I2C_Write
 11626 ;;		_Lcd_Init
 11627 ;; This function uses a non-reentrant model
 11628 ;;
 11629                           
 11630     1891                     _I2C_Write:	
 11631                           ;psect for function _I2C_Write
 11632                           
 11633                           
 11634                           ;incstack = 0
 11635                           ; Regs used in _I2C_Write: [wreg]
 11636                           ;I2C_Write@data stored from wreg
 11637     1891  00F0               	movwf	I2C_Write@data
 11638     1892                     l2731:
 11639                           
 11640                           ;i2c.c: 56: short I2C_Write(char data);i2c.c: 57: {;i2c.c: 58:     SSPBUF = data;
 11641     1892  0870               	movf	I2C_Write@data,w
 11642     1893  1283               	bcf	3,5	;RP0=0, select bank0
 11643     1894  1303               	bcf	3,6	;RP1=0, select bank0
 11644     1895  0093               	movwf	19	;volatile
 11645     1896                     l184:	
 11646                           ;i2c.c: 59:     while(PIR1bits.SSPIF == 0);
 11647                           
 11648     1896  1D8C               	btfss	12,3	;volatile
 11649     1897  2899               	goto	u3351
 11650     1898  289A               	goto	u3350
 11651     1899                     u3351:
 11652     1899  2896               	goto	l184
 11653     189A                     u3350:
 11654     189A                     l186:
 11655                           
 11656                           ;i2c.c: 60:     PIR1bits.SSPIF = 0;
 11657     189A  118C               	bcf	12,3	;volatile
 11658     189B                     l2733:
 11659     189B  1683               	bsf	3,5	;RP0=1, select bank1
 11660     189C  1303               	bcf	3,6	;RP1=0, select bank1
 11661     189D  0811               	movf	17,w	;volatile
 11662     189E                     l187:
 11663     189E  0008               	return
 11664     189F                     __end_of_I2C_Write:
 11665                           
 11666                           	psect	text33
 11667     1867                     __ptext33:	
 11668 ;; *************** function _I2C_Stop *****************
 11669 ;; Defined at:
 11670 ;;		line 26 in file "i2c.c"
 11671 ;; Parameters:    Size  Location     Type
 11672 ;;		None
 11673 ;; Auto vars:     Size  Location     Type
 11674 ;;		None
 11675 ;; Return value:  Size  Location     Type
 11676 ;;                  1    wreg      void 
 11677 ;; Registers used:
 11678 ;;		None
 11679 ;; Tracked objects:
 11680 ;;		On entry : 0/0
 11681 ;;		On exit  : 0/0
 11682 ;;		Unchanged: 0/0
 11683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11684 ;;      Params:         0       0       0       0       0
 11685 ;;      Locals:         0       0       0       0       0
 11686 ;;      Temps:          0       0       0       0       0
 11687 ;;      Totals:         0       0       0       0       0
 11688 ;;Total ram usage:        0 bytes
 11689 ;; Hardware stack levels used: 1
 11690 ;; This function calls:
 11691 ;;		Nothing
 11692 ;; This function is called by:
 11693 ;;		_main
 11694 ;;		_Lcd_I2C_Write
 11695 ;;		_Lcd_Init
 11696 ;; This function uses a non-reentrant model
 11697 ;;
 11698                           
 11699     1867                     _I2C_Stop:	
 11700                           ;psect for function _I2C_Stop
 11701                           
 11702     1867                     l2737:	
 11703                           ;incstack = 0
 11704                           ; Regs used in _I2C_Stop: []
 11705                           
 11706                           
 11707                           ;i2c.c: 28:     SSPCON2bits.PEN = 1;
 11708     1867  1683               	bsf	3,5	;RP0=1, select bank1
 11709     1868  1303               	bcf	3,6	;RP1=0, select bank1
 11710     1869  1511               	bsf	17,2	;volatile
 11711     186A                     l160:	
 11712                           ;i2c.c: 29:     while(PIR1bits.SSPIF == 0);
 11713                           
 11714     186A  1283               	bcf	3,5	;RP0=0, select bank0
 11715     186B  1D8C               	btfss	12,3	;volatile
 11716     186C  286E               	goto	u3361
 11717     186D  286F               	goto	u3360
 11718     186E                     u3361:
 11719     186E  286A               	goto	l160
 11720     186F                     u3360:
 11721     186F                     l162:
 11722                           
 11723                           ;i2c.c: 30:     PIR1bits.SSPIF = 0;
 11724     186F  118C               	bcf	12,3	;volatile
 11725     1870                     l163:
 11726     1870  0008               	return
 11727     1871                     __end_of_I2C_Stop:
 11728                           
 11729                           	psect	text34
 11730     185D                     __ptext34:	
 11731 ;; *************** function _I2C_Start *****************
 11732 ;; Defined at:
 11733 ;;		line 19 in file "i2c.c"
 11734 ;; Parameters:    Size  Location     Type
 11735 ;;		None
 11736 ;; Auto vars:     Size  Location     Type
 11737 ;;		None
 11738 ;; Return value:  Size  Location     Type
 11739 ;;                  1    wreg      void 
 11740 ;; Registers used:
 11741 ;;		None
 11742 ;; Tracked objects:
 11743 ;;		On entry : 0/0
 11744 ;;		On exit  : 0/0
 11745 ;;		Unchanged: 0/0
 11746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11747 ;;      Params:         0       0       0       0       0
 11748 ;;      Locals:         0       0       0       0       0
 11749 ;;      Temps:          0       0       0       0       0
 11750 ;;      Totals:         0       0       0       0       0
 11751 ;;Total ram usage:        0 bytes
 11752 ;; Hardware stack levels used: 1
 11753 ;; This function calls:
 11754 ;;		Nothing
 11755 ;; This function is called by:
 11756 ;;		_main
 11757 ;;		_Lcd_I2C_Write
 11758 ;;		_Lcd_Init
 11759 ;; This function uses a non-reentrant model
 11760 ;;
 11761                           
 11762     185D                     _I2C_Start:	
 11763                           ;psect for function _I2C_Start
 11764                           
 11765     185D                     l2729:	
 11766                           ;incstack = 0
 11767                           ; Regs used in _I2C_Start: []
 11768                           
 11769                           
 11770                           ;i2c.c: 21:     SSPCON2bits.SEN = 1;
 11771     185D  1683               	bsf	3,5	;RP0=1, select bank1
 11772     185E  1303               	bcf	3,6	;RP1=0, select bank1
 11773     185F  1411               	bsf	17,0	;volatile
 11774     1860                     l154:	
 11775                           ;i2c.c: 22:     while(PIR1bits.SSPIF == 0);
 11776                           
 11777     1860  1283               	bcf	3,5	;RP0=0, select bank0
 11778     1861  1D8C               	btfss	12,3	;volatile
 11779     1862  2864               	goto	u3341
 11780     1863  2865               	goto	u3340
 11781     1864                     u3341:
 11782     1864  2860               	goto	l154
 11783     1865                     u3340:
 11784     1865                     l156:
 11785                           
 11786                           ;i2c.c: 23:     PIR1bits.SSPIF = 0;
 11787     1865  118C               	bcf	12,3	;volatile
 11788     1866                     l157:
 11789     1866  0008               	return
 11790     1867                     __end_of_I2C_Start:
 11791                           
 11792                           	psect	text35
 11793     187B                     __ptext35:	
 11794 ;; *************** function _I2C_Read *****************
 11795 ;; Defined at:
 11796 ;;		line 65 in file "i2c.c"
 11797 ;; Parameters:    Size  Location     Type
 11798 ;;		None
 11799 ;; Auto vars:     Size  Location     Type
 11800 ;;		None
 11801 ;; Return value:  Size  Location     Type
 11802 ;;                  1    wreg      unsigned char 
 11803 ;; Registers used:
 11804 ;;		wreg
 11805 ;; Tracked objects:
 11806 ;;		On entry : 0/0
 11807 ;;		On exit  : 0/0
 11808 ;;		Unchanged: 0/0
 11809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11810 ;;      Params:         0       0       0       0       0
 11811 ;;      Locals:         0       0       0       0       0
 11812 ;;      Temps:          0       0       0       0       0
 11813 ;;      Totals:         0       0       0       0       0
 11814 ;;Total ram usage:        0 bytes
 11815 ;; Hardware stack levels used: 1
 11816 ;; This function calls:
 11817 ;;		Nothing
 11818 ;; This function is called by:
 11819 ;;		_main
 11820 ;; This function uses a non-reentrant model
 11821 ;;
 11822                           
 11823     187B                     _I2C_Read:	
 11824                           ;psect for function _I2C_Read
 11825                           
 11826     187B                     l3673:	
 11827                           ;incstack = 0
 11828                           ; Regs used in _I2C_Read: [wreg]
 11829                           
 11830                           
 11831                           ;i2c.c: 67:     SSPCON2bits.RCEN = 1;
 11832     187B  1683               	bsf	3,5	;RP0=1, select bank1
 11833     187C  1303               	bcf	3,6	;RP1=0, select bank1
 11834     187D  1591               	bsf	17,3	;volatile
 11835     187E                     l190:	
 11836                           ;i2c.c: 68:     while(PIR1bits.SSPIF == 0);
 11837                           
 11838     187E  1283               	bcf	3,5	;RP0=0, select bank0
 11839     187F  1D8C               	btfss	12,3	;volatile
 11840     1880  2882               	goto	u5691
 11841     1881  2883               	goto	u5690
 11842     1882                     u5691:
 11843     1882  287E               	goto	l190
 11844     1883                     u5690:
 11845     1883                     l192:
 11846                           
 11847                           ;i2c.c: 69:     PIR1bits.SSPIF = 0;
 11848     1883  118C               	bcf	12,3	;volatile
 11849     1884                     l3675:
 11850                           
 11851                           ;i2c.c: 70:     return SSPBUF;
 11852     1884  0813               	movf	19,w	;volatile
 11853     1885                     l193:
 11854     1885  0008               	return
 11855     1886                     __end_of_I2C_Read:
 11856                           
 11857                           	psect	text36
 11858     18EC                     __ptext36:	
 11859 ;; *************** function _I2C_Init_Master *****************
 11860 ;; Defined at:
 11861 ;;		line 4 in file "i2c.c"
 11862 ;; Parameters:    Size  Location     Type
 11863 ;;  sp_i2c          1    wreg     unsigned char 
 11864 ;; Auto vars:     Size  Location     Type
 11865 ;;  sp_i2c          1    0[COMMON] unsigned char 
 11866 ;; Return value:  Size  Location     Type
 11867 ;;                  1    wreg      void 
 11868 ;; Registers used:
 11869 ;;		wreg, status,2, status,0
 11870 ;; Tracked objects:
 11871 ;;		On entry : 0/0
 11872 ;;		On exit  : 0/0
 11873 ;;		Unchanged: 0/0
 11874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11875 ;;      Params:         0       0       0       0       0
 11876 ;;      Locals:         1       0       0       0       0
 11877 ;;      Temps:          0       0       0       0       0
 11878 ;;      Totals:         1       0       0       0       0
 11879 ;;Total ram usage:        1 bytes
 11880 ;; Hardware stack levels used: 1
 11881 ;; This function calls:
 11882 ;;		Nothing
 11883 ;; This function is called by:
 11884 ;;		_main
 11885 ;; This function uses a non-reentrant model
 11886 ;;
 11887                           
 11888     18EC                     _I2C_Init_Master:	
 11889                           ;psect for function _I2C_Init_Master
 11890                           
 11891                           
 11892                           ;incstack = 0
 11893                           ; Regs used in _I2C_Init_Master: [wreg+status,2+status,0]
 11894                           ;I2C_Init_Master@sp_i2c stored from wreg
 11895     18EC  00F0               	movwf	I2C_Init_Master@sp_i2c
 11896     18ED                     l3623:
 11897                           
 11898                           ;i2c.c: 4: void I2C_Init_Master(unsigned char sp_i2c);i2c.c: 5: {;i2c.c: 6:     TRISCbit
      +                          s.TRISC3 = 1;
 11899     18ED  1683               	bsf	3,5	;RP0=1, select bank1
 11900     18EE  1303               	bcf	3,6	;RP1=0, select bank1
 11901     18EF  1587               	bsf	7,3	;volatile
 11902                           
 11903                           ;i2c.c: 7:     TRISCbits.TRISC4 = 1;
 11904     18F0  1607               	bsf	7,4	;volatile
 11905     18F1                     l3625:
 11906                           
 11907                           ;i2c.c: 8:     SSPSTAT = sp_i2c;
 11908     18F1  0870               	movf	I2C_Init_Master@sp_i2c,w
 11909     18F2  0094               	movwf	20	;volatile
 11910                           
 11911                           ;i2c.c: 9:  SSPCON = 0x28;
 11912     18F3  3028               	movlw	40
 11913     18F4  1283               	bcf	3,5	;RP0=0, select bank0
 11914     18F5  1303               	bcf	3,6	;RP1=0, select bank0
 11915     18F6  0094               	movwf	20	;volatile
 11916     18F7                     l3627:
 11917                           
 11918                           ;i2c.c: 10:     SSPCON2 = 0x00;
 11919     18F7  1683               	bsf	3,5	;RP0=1, select bank1
 11920     18F8  1303               	bcf	3,6	;RP1=0, select bank1
 11921     18F9  0191               	clrf	17	;volatile
 11922     18FA                     l3629:
 11923                           
 11924                           ;i2c.c: 11:     if(sp_i2c == 0x80){
 11925     18FA  3080               	movlw	128
 11926     18FB  0670               	xorwf	I2C_Init_Master@sp_i2c,w
 11927     18FC  1D03               	btfss	3,2
 11928     18FD  28FF               	goto	u5661
 11929     18FE  2900               	goto	u5660
 11930     18FF                     u5661:
 11931     18FF  2903               	goto	l3633
 11932     1900                     u5660:
 11933     1900                     l3631:
 11934                           
 11935                           ;i2c.c: 12:         SSPADD = 119;
 11936     1900  3077               	movlw	119
 11937     1901  0093               	movwf	19	;volatile
 11938                           
 11939                           ;i2c.c: 13:     }
 11940     1902  290A               	goto	l151
 11941     1903                     l3633:
 11942     1903  0870               	movf	I2C_Init_Master@sp_i2c,w
 11943     1904  1D03               	btfss	3,2
 11944     1905  2907               	goto	u5671
 11945     1906  2908               	goto	u5670
 11946     1907                     u5671:
 11947     1907  290A               	goto	l151
 11948     1908                     u5670:
 11949     1908                     l3635:
 11950                           
 11951                           ;i2c.c: 15:         SSPADD = 29;
 11952     1908  301D               	movlw	29
 11953     1909  0093               	movwf	19	;volatile
 11954     190A                     l151:
 11955     190A  0008               	return
 11956     190B                     __end_of_I2C_Init_Master:
 11957     007E                     btemp	set	126	;btemp
 11958     007E                     wtemp0	set	126
 11959                           
 11960                           	psect	idloc
 11961                           
 11962                           ;Config register IDLOC0 @ 0x2000
 11963                           ;	unspecified, using default values
 11964     2000                     	org	8192
 11965     2000  3FFF               	dw	16383
 11966                           
 11967                           ;Config register IDLOC1 @ 0x2001
 11968                           ;	unspecified, using default values
 11969     2001                     	org	8193
 11970     2001  3FFF               	dw	16383
 11971                           
 11972                           ;Config register IDLOC2 @ 0x2002
 11973                           ;	unspecified, using default values
 11974     2002                     	org	8194
 11975     2002  3FFF               	dw	16383
 11976                           
 11977                           ;Config register IDLOC3 @ 0x2003
 11978                           ;	unspecified, using default values
 11979     2003                     	org	8195
 11980     2003  3FFF               	dw	16383
 11981                           
 11982                           	psect	config
 11983                           
 11984                           ;Config register CONFIG1 @ 0x2007
 11985                           ;	Oscillator Selection bits
 11986                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 11987                           ;	Watchdog Timer Enable bit
 11988                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11989                           ;	Power-up Timer Enable bit
 11990                           ;	PWRTE = OFF, PWRT disabled
 11991                           ;	RE3/MCLR pin function select bit
 11992                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11993                           ;	Code Protection bit
 11994                           ;	CP = OFF, Program memory code protection is disabled
 11995                           ;	Data Code Protection bit
 11996                           ;	CPD = OFF, Data memory code protection is disabled
 11997                           ;	Brown Out Reset Selection bits
 11998                           ;	BOREN = OFF, BOR disabled
 11999                           ;	Internal External Switchover bit
 12000                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 12001                           ;	Fail-Safe Clock Monitor Enabled bit
 12002                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 12003                           ;	Low Voltage Programming Enable bit
 12004                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 12005                           ;	In-Circuit Debugger Mode bit
 12006                           ;	DEBUG = 0x1, unprogramme 12007     2007                     	org	8199
 12008     2007  20D4               	dw	8404
 12009                           
 12010                           ;Config register CONFIG2 @ 0x2008
 12011                           ;	Brown-out Reset Selection bit
 12012                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 12013                           ;	Flash Program Memory Self Write Enable bits
 12014                           ;	WRT = OFF, Write protection off
 12015     2008                     	org	8200
 12016     2008  3FFF               	dw	16383

Data Sizes:
    Strings     30
    Constant    144
    Data        0
    BSS         63
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80     41      62
    BANK3            96      0      40
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> valor(BANK3[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@str	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_11(CODE[4]), STR_10(CODE[5]), STR_9(CODE[4]), STR_8(CODE[5]), 
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> STR_3(CODE[2]), STR_2(CODE[5]), valor(BANK3[20]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___flsub->___xxtofl
    ___fldiv->___xxtofl
    _Lcd_Write_String->_Lcd_Send_Byte
    _Lcd_Write_Char->_Lcd_Send_Byte
    _Lcd_Set_Cursor->_Lcd_Send_Byte
    _Lcd_Init->_Lcd_Send_Byte
    _Lcd_Send_Byte->_Lcd_Port
    _Lcd_Port->_Lcd_I2C_Write
    _Lcd_I2C_Write->_I2C_Write

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   48382
                                             37 BANK1      4     4      0
                    _I2C_Init_Master
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___fldiv
                            ___flmul
                           ___xxtofl
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   31899
                                              0 BANK1     37    32      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7560
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6023
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMMON    11     3      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             49 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                             30 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     2     0      2    2924
                                              9 COMMON     2     0      2
                      _Lcd_Send_Byte
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_Char                                       1     1      0    2065
                                              9 COMMON     1     1      0
                      _Lcd_Send_Byte
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1    2989
                                              9 COMMON     4     3      1
                      _Lcd_Send_Byte
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             3     3      0    2118
                                              9 COMMON     3     3      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                      _Lcd_Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Lcd_Send_Byte                                        3     2      1    2043
                                              6 COMMON     3     2      1
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             4     3      1     587
                                              2 COMMON     4     3      1
                      _Lcd_I2C_Write
 ---------------------------------------------------------------------------------
 (4) _Lcd_I2C_Write                                        1     1      0      51
                                              1 COMMON     1     1      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Write                                            3     3      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init_Master                                      1     1      0      66
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init_Master
   _I2C_Read
   _I2C_Start
   _I2C_Stop
   _I2C_Write
   _Lcd_Init
     _I2C_Start
     _I2C_Stop
     _I2C_Write
     _Lcd_Send_Byte
       _Lcd_Port
         _Lcd_I2C_Write
           _I2C_Start
           _I2C_Stop
           _I2C_Write
   _Lcd_Set_Cursor
     _Lcd_Send_Byte
   _Lcd_Write_Char
     _Lcd_Send_Byte
   _Lcd_Write_String
     _Lcd_Send_Byte
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___xxtofl
   _setup
   _sprintf
     ___awdiv
     ___fladd
       _fround (ARG)
         ___flmul
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      C4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     29      3E       7       77.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      28       9       41.7%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      C4      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Aug 22 22:42:28 2023

            ___fldiv@aexp 0057              ___fldiv@bexp 0056                         _a 00D3  
                       _b 00D1                         pc 0002              ___fldiv@sign 004F  
             _SSPSTATbits 0094              ___awdiv@sign 0021                        fsr 0004  
     ___wmul@multiplicand 0072       __Umul8_16@word_mpld 0076                       l113 11BA  
                     l204 18B7                       l220 18EB                       l151 190A  
                     l160 186A                       l240 187A                       l217 1AC8  
                     l225 1CD3                       l129 18D0                       l154 1860  
                     l162 186F                       l163 1870                       l156 1865  
                     l157 1866                       l237 1A2B                       l190 187E  
                     l246 19A2                       l192 1883                       l184 1896  
                     l193 1885                       l409 08F0                       l186 189A  
                     l522 1BDB                       l187 189E                       l381 07E5  
                     l461 0F0D                       l453 0DAC                       l374 15A7  
                     l446 0D6C                       l703 1E2C                       l704 1DA0  
                     l714 1E1F                       l802 1039                       l482 0FFF  
                     l394 0831                       l707 1DEF                       l660 116C  
                     l652 1B75                       l813 1603                       l742 1B1C  
                     l486 193B                       l639 1C44                       l672 1A48  
                     l680 1D5C                       l488 1953                       l656 11A9  
                     l673 1A64                       l681 1D75                       l817 1686  
                     l657 1110                       l921 047A                       l674 1A79  
                     l834 174F                       l826 17FF                       l930 197A  
                     l819 165F                       l667 119C                       l915 03F6  
                     l844 1795                       l677 1CF0                       l685 1890  
                     l909 0486                       l838 1773                       l871 1FFF  
                     l855 17F5                       l847 17D3                       l856 17FF  
                     l696 012C                       l928 1968                       l792 19E6  
                     l689 0141                       l953 105C                       l891 1FE7  
                     l859 192E                       l699 0141                       l955 10F1  
                     l893 1FF5                       l885 1F75                       l869 1E83  
                     l973 0815                       l966 10BB                       l967 10C7  
                     l959 109F                       _led 00D7                       fsr0 0004  
                     indf 0000              ___awmod@sign 0076              ___flmul@aexp 0036  
            ___flmul@bexp 0037              ___flmul@sign 0031              ___flmul@temp 003C  
            ___flmul@prod 0038              ___fltol@exp1 005A                      l3001 162B  
                    l3011 1663                      l3003 162D                      l3101 17CF  
                    l3021 167A                      l3013 166A                      l3005 162F  
                    l3111 17EB                      l3103 17D8                      l3031 1698  
                    l3015 166C                      l3023 167E                      l3007 1630  
                    l3113 17EF                      l3105 17DD                      l3041 16C0  
                    l3033 16AF                      l3025 168A                      l3017 1670  
                    l3009 1647                      l3201 037A                      l3121 0142  
                    l4011 1872                      l4003 197B                      l3115 17F1  
                    l3107 17E5                      l3051 16E9                      l3043 16C4  
                    l3035 16B3                      l3027 168F                      l3019 1671  
                    l3211 03C6                      l3203 03A2                      l3131 0155  
                    l3123 0147                      l4005 197C                      l4101 1F36  
                    l4021 1E3A                      l3117 17FA                      l3109 17EA  
                    l3061 1757                      l3053 1727                      l3045 16C5  
                    l3037 16B7                      l3221 03DB                      l3213 03C7  
                    l3205 03AB                      l3141 0171                      l3133 015A  
                    l3125 014B                      l4007 198C                      l4111 1F4F  
                    l4103 1F38                      l4031 1E4E                      l4023 1E3B  
                    l4015 1E2D                      l3119 17FE                      l3071 1772  
                    l3063 175C                      l3055 172D                      l3047 16CE  
                    l3039 16BE                      l3231 0400                      l3223 03DF  
                    l3215 03D0                      l3207 03B9                      l3151 0184  
                    l3143 0175                      l3135 0162                      l3127 014F  
                    l3311 072A                      l3303 063B                      l4009 1992  
                    l4121 1F72                      l4105 1F41                      l4113 1F55  
                    l4041 1E65                      l4025 1E40                      l4033 1E50  
                    l4017 1E32                      l3073 1777                      l3081 1783  
                    l3057 1732                      l3049 16D3                      l3401 112A  
                    l3241 043E                      l3233 040E                      l3225 03F3  
                    l3209 03C2                      l3217 03D6                      l3161 01A0  
                    l3153 018C                      l3145 0179                      l3137 0164  
                    l3129 0150                      l3321 0805                      l3313 0731  
                    l3305 0642                      l4201 12A3                      l4131 1F91  
                    l4115 1F59                      l4107 1F45                      l4051 1E79  
                    l4043 1E66                      l4035 1E58                      l4027 1E45  
                    l4019 1E36                      l3075 177A                      l3067 1765  
                    l3059 1741                      l3083 1787                      l3411 115C  
                    l3403 112C                      l3251 0470                      l3243 0449  
                    l3235 0412                      l3219 03DA                      l3171 01DF  
                    l3155 018E                      l3147 017A                      l3139 016C  
                    l3323 0806                      l4211 12CB                      l4203 12A8  
                    l3261 18D2                      l4141 1FDA                      l4133 1FAA  
                    l4125 1F7A                      l4117 1F5A                      l4109 1F46  
                    l4045 1E6B                      l4053 1E7B                      l4037 1E5D  
                    l4029 1E4D                      l3501 1D72                      l3093 179A  
                    l3085 1788                      l3077 177C                      l3069 176E  
                    l3413 115D                      l3405 1133                      l3333 1D76  
                    l3253 0474                      l3245 0458                      l3237 042B  
                    l3229 03FB                      l3181 0266                      l3173 01FB  
                    l3165 01A9                      l3157 0196                      l3149 017F  
                    l3325 080C                      l3317 07B9                      l4221 12F3  
                    l4213 12D3                      l4205 12AA                      l4151 1FF1  
                    l4143 1FDE                      l4127 1F7F                      l4135 1FB0  
                    l4119 1F5E                      l4071 1EC4                      l4055 1E8B  
                    l4063 1EA4                      l4047 1E70                      l4039 1E61  
                    l3503 1D74                      l3511 1890                      l3095 179F  
                    l3087 178C                      l3079 1781                      l3431 1191  
                    l3423 1178                      l3415 1166                      l3407 113C  
                    l3351 1DB8                      l3335 1D87                      l3255 0475  
                    l3247 0462                      l3239 0431                      l3191 02D3  
                    l3183 0274                      l3175 0225                      l3167 01B7  
                    l3159 019B                      l3271 14B3                      l3263 13A0  
                    l3327 0812                      l4231 1324                      l4223 12FB  
                    l4215 12DC                      l4207 12BA                      l4145 1FE6  
                    l4137 1FBD                      l4129 1F8D                      l4081 1EE3  
                    l4073 1ECC                      l4065 1EA9                      l4057 1E97  
                    l4049 1E78                      l3097 17AD                      l3089 1792  
                    l3521 00DE                      l3441 1935                      l3601 10A6  
                    l3433 11A1                      l3417 1170                      l3425 118A  
                    l3409 114E                      l3361 1DE1                      l3353 1DBF  
                    l3345 1DA1                      l3257 047E                      l3249 0464  
                    l3193 02F0                      l3185 0291                      l3177 0241  
                    l3169 01C4                      l3273 14B9                      l3265 13A6  
                    l3329 0814                      l2801 1BE3                      l3281 048A  
                    l4241 1356                      l4233 132C                      l4225 1303  
                    l4217 12E4                      l4209 12C2                      l4161 11B5  
                    l2731 1892                      l4147 1FEB                      l4139 1FCB  
                    l4091 1F15                      l4083 1EF5                      l4075 1ED4  
                    l4059 1E9B                      l3507 1886                      l3099 17B1  
                    l3531 0100                      l3523 00F1                      l3515 00CA  
                    l3451 1B76                      l3443 1942                      l3611 10DF  
                    l3603 10B1                      l3371 1DFB                      l3363 1DE9  
                    l3355 1DC8                      l3347 1DA7                      l3339 1D90  
                    l3195 031B                      l3187 029F                      l3179 025D  
                    l2811 1BF7                      l2803 1BE8                      l3283 048E  
                    l4251 1388                      l4243 135F                      l4235 1335  
                    l4227 130C                      l4219 12EA                      l4171 11E1  
                    l4163 11BF                      l2733 189B                      l2741 18A5  
                    l4149 1FEF                      l4093 1F16                      l4085 1EF9  
                    l4077 1EDC                      l4069 1EB2                      l3621 18B8  
                    l3509 188E                      l3525 00F2                      l3517 00D5  
                    l3461 1BA3                      l3453 1B86                      l3445 1949  
                    l3437 192F                      l3613 10E4                      l3605 10B5  
                    l3381 1E24                      l3365 1DF3                      l3373 1E0D  
                    l3357 1DD6                      l3349 1DB6                      l3197 0329  
                    l3189 02BC                      l2901 19E2                      l3277 1564  
                    l2821 1C0D                      l2813 1BF9                      l2805 1BEA  
                    l3293 057F                      l3285 0490                      l3701 0872  
                    l4245 1371                      l4237 1346                      l4229 131E  
                    l4181 11FB                      l4173 11E9                      l4165 11C5  
                    l4157 11AA                      l3631 1900                      l3623 18ED  
                    l2743 18AB                      l4095 1F24                      l4087 1EFA  
                    l4079 1EDE                      l3527 00FA                      l3463 1BB5  
                    l3455 1B89                      l3471 1BD3                      l3551 1AC9  
                    l3447 194F                      l3439 1931                      l3615 10E8  
                    l3607 10BF                      l3391 1106                      l3359 1DE0  
                    l2751 1962                      l3199 0354                      l2911 1010  
                    l2831 1C30                      l2823 1C11                      l2815 1BFF  
                    l2807 1BEE                      l3295 0586                      l3287 0497  
                    l3711 08A8                      l3703 0885                      l4247 1377  
                    l4239 134E                      l4191 1279                      l4183 1203  
                    l4175 11EE                      l4167 11CD                      l4159 11AF  
                    l3633 1903                      l3625 18F1                      l2729 185D  
                    l2737 1867                      l2761 1A7F                      l3641 1C50  
                    l4089 1F03                      l4097 1F28                      l3481 1A76  
                    l3545 0121                      l3537 0108                      l3529 00FC  
                    l3465 1BC3                      l3457 1B96                      l3561 1AF7  
                    l3553 1AD1                      l3617 10E9                      l3609 10C9  
                    l3385 10F2                      l2753 1971                      l2745 1955  
                    l2921 102F                      l2913 1014                      l2905 1000  
                    l2825 1C22                      l2817 1C02                      l2833 1C36  
                    l2809 1BF3                      l2841 1B1D                      l3801 0B9F  
                    l4361 0906                      l3721 08DB                      l3713 08AC  
                    l3705 0889                      l4249 137F                      l4193 127F  
                    l4185 1208                      l4177 11F0                      l4169 11D2  
                    l3635 1908                      l3627 18F7                      l2739 18A0  
                    l2771 1A91                      l2763 1A83                      l3651 1C64  
                    l3643 1C5B                      l4363 1A1D                      l4099 1F2E  
                    l3483 1A78                      l3475 1A2C                      l3491 1D04  
                    l2931 15B1                      l3571 190B                      l3547 0131  
                    l3539 011A                      l3467 1BC4                      l3459 1B9A  
                    l3563 1B05                      l3555 1AD4                      l3387 10FD  
                    l3379 1E14                      l2755 1976                      l2747 1957  
                    l2915 1018                      l2907 1006                      l2923 1035  
                    l2835 1C3B                      l2827 1C28                      l2819 1C09  
                    l2851 1B2D                      l2843 1B1E                      l3299 060E  
                    l3803 0BD4                      l3731 090E                      l3715 08AF  
                    l3723 08EC                      l3707 0899                      l4195 1287  
                    l4187 1217                      l4179 11F5                      l3629 18FA  
                    l2781 1AA4                      l2773 1A95                      l2765 1A86  
                    l3661 1C8F                      l3653 1C6C                      l3645 1C63  
                    l3637 1C45                      l3477 1A40                      l3493 1D0C  
                    l2941 15C8                      l2933 15B5                      l3573 190F  
                    l3549 0136                      l3469 1BCD                      l3565 1B0E  
                    l3557 1AE1                      l3581 1044                      l3397 1111  
                    l2749 195E                      l2917 1022                      l2909 1009  
                    l2837 1C40                      l2829 1C29                      l2861 1B46  
                    l2853 1B32                      l2845 1B22                      l3901 0EEC  
                    l3821 0C81                      l3813 0C25                      l3805 0C21  
                    l3741 0934                      l3733 091A                      l3725 08EE  
                    l3717 08C4                      l3709 08A7                      l4197 128C  
                    l4189 1274                      l2791 1AB8                      l2783 1AA7  
                    l2775 1A99                      l2767 1A8A                      l2759 1A7B  
                    l3671 1CCB                      l3663 1C98                      l3655 1C75  
                    l3639 1C4A                      l3479 1A5C                      l3495 1D10  
                    l3487 1CD4                      l2951 15DC                      l2943 15C9  
                    l2935 15B6                      l2927 15A8                      l3559 1AE5  
                    l3567 1B14                      l3591 1070                      l3583 1054  
                    l3399 1119                      l2919 1028                      l2863 1B4A  
                    l2855 1B38                      l2871 1B67                      l2847 1B27  
                    l3911 0F18                      l3903 0EF2                      l3831 0CA9  
                    l3823 0C87                      l3807 0C23                      l3751 0987  
                    l3743 094D                      l3735 091E                      l3719 08D7  
                    l4359 0844                      l4199 129B                      l3673 187B  
                    l2793 1ABF                      l2785 1AAC                      l2777 1A9C  
                    l2769 1A8E                      l3665 1CA9                      l3657 1C79  
                    l3497 1D34                      l3489 1CE8                      l2961 15EB  
                    l2953 15DD                      l2937 15BB                      l2945 15CB  
                    l2929 15AD                      l3593 107D                      l3585 1064  
                    l3577 103B                      l2881 19A5                      l2873 1B6C  
                    l2865 1B54                      l2857 1B3B                      l2849 1B29  
                    l3921 0F49                      l3913 0F1D                      l3833 0CAE  
                    l3841 0CC4                      l3825 0C93                      l3817 0C5C  
                    l3761 09C2                      l3753 0992                      l3745 0966  
                    l3737 0922                      l3905 0EF9                      l3729 08F2  
                    l3681 081C                      l3675 1884                      l2795 1AC1  
                    l2787 1AB1                      l2779 1AA0                      l3667 1CB1  
                    l3659 1C7F                      l3499 1D38                      l2971 1609  
                    l2963 15F0                      l2955 15E1                      l2947 15D3  
                    l2939 15C0                      l3595 1084                      l3579 1040  
                    l2891 19BD                      l2883 19AB                      l2875 1B71  
                    l2867 1B5A                      l2859 1B42                      l3931 0F6E  
                    l3923 0F4F                      l3915 0F2C                      l3907 0EFF  
                    l3851 0CF0                      l3843 0CD2                      l3835 0CB3  
                    l3827 0C99                      l3819 0C66                      l3771 0A54  
                    l3763 09C8                      l3755 0998                      l3747 096A  
                    l3739 0930                      l3683 0822                      l2789 1AB5  
                    l3669 1CC2                      l2981 1617                      l2973 160D  
                    l2965 15F8                      l2957 15E5                      l2949 15D6  
                    l3597 1088                      l3589 106D                      l2893 19CE  
                    l2885 19AE                      l2797 1BDC                      l2869 1B61  
                    l3941 0F99                      l3933 0F79                      l3925 0F53  
                    l3917 0F35                      l3909 0F07                      l3861 0D62  
                    l3853 0CFE                      l3845 0CD9                      l3837 0CBA  
                    l3829 0C9D                      l3781 0ADC                      l3773 0A6F  
                    l3765 09E7                      l3757 09AB                      l3749 096E  
                    l3693 0836                      l3685 0827                      l2991 1621  
                    l2983 1619                      l2975 1611                      l2967 15F9  
                    l2959 15E6                      l3599 1096                      l2895 19D4  
                    l2887 19B5                      l2879 19A3                      l2799 1BDF  
                    l3951 0FB1                      l3943 0F9E                      l3935 0F85  
                    l3927 0F61                      l3919 0F3D                      l3871 0D94  
                    l3863 0D76                      l3855 0D03                      l3847 0CDD  
                    l3839 0CBE                      l3791 0B51                      l3783 0AF7  
                    l3767 0A32                      l3759 09BE                      l3775 0A77  
                    l3695 0849                      l3687 082C                      l3679 0819  
                    l2993 1623                      l2985 161B                      l2977 1613  
                    l2969 15FB                      l2897 19D5                      l2889 19B9  
                    l3961 0FD9                      l3945 0FA2                      l3953 0FBE  
                    l3937 0F89                      l3929 0F6A                      l3881 0DBF  
                    l3873 0DA3                      l3865 0D7D                      l3857 0D08  
                    l3849 0CE3                      l3793 0B59                      l3785 0B1E  
                    l3777 0A86                      l3769 0A4B                      l3697 0859  
                    l3689 0832                      l2995 1625                      l2987 161D  
                    l2979 1615                      l2899 19DC                      l3963 0FE5  
                    l3955 0FC4                      l3947 0FA8                      l3939 0F8D  
                    l3891 0E96                      l3883 0DC3                      l3875 0DA8  
                    l3867 0D81                      l3859 0D43                      l3795 0B77  
                    l3787 0B2D                      l3779 0ACD                      l3699 085D  
                    l2997 1627                      l2989 161F                      l3957 0FC9  
                    l3949 0FAD                      l3893 0EA0                      l3885 0DE1  
                    l3877 0DB5                      l3869 0D87                      l3789 0B48  
                    l3991 19FF                      l2999 1629                      l3959 0FCD  
                    l3887 0E3C                      l3895 0EDB                      l3879 0DBA  
                    l3799 0B96                      l3967 0FEB                      l3993 1A0A  
                    l3985 19E8                      l3897 0EE3                      l3889 0E77  
                    l3969 0FFB                      l3987 19E9                      l3899 0EE8  
                    l3989 19F4                      l3997 1A15                      STR_1 00A3  
                    STR_2 00A9                      STR_3 00BF                      STR_4 00BB  
                    STR_5 00B7                      STR_6 00BB                      STR_7 00B3  
                    STR_8 00AE                      STR_9 00B7                      u4000 16E9  
                    u4001 16E8                      u4011 1700                      u4003 16E5  
                    u4100 1787                      u4020 1714                      u4012 1701  
                    u4101 1786                      u4021 1715                      u4013 1706  
                    u4110 178C                      u4030 1732                      u4022 171A  
                    u4014 1707                      u4111 178B                      u4031 1731  
                    u4023 171B                      u4015 170C                      u3400 1A7F  
                    u4200 17EA                      u4120 1792                      u4040 1757  
                    u4016 170D                      u5000 1E24                      u3401 1A7E  
                    u4201 17E9                      u4121 1791                      u4041 1756  
                    u5001 1E23                      u3410 1A8A                      u4210 17EF  
                    u4130 1799                      u4050 175C                      u5010 10FD  
                    u3411 1A89                      u4211 17EE                      u4131 1798  
                    u4051 175B                      u5011 10FC                      u3340 1865  
                    u3420 1A95                      u4220 17FE                      u4140 179F  
                    u5100 1189                      u5020 110F                      u4300 01A0  
                    u3341 1864                      u3421 1A94                      u4221 17FD  
                    u4141 179E                      u5101 1188                      u5021 110E  
                    u4301 019F                      u3350 189A                      u3430 1AA0  
                    u4150 17B1                      u4070 1772                      u5110 1190  
                    u4230 014F                      u3510 1C22                      u3351 1899  
                    u3431 1A9F                      u4151 17B0                      u4071 1771  
                    u5111 118F                      u4311 01ED                      u4231 014E  
                    u3511 1C21                      u3360 186F                      u3440 1AB1  
                    u4160 17C0                      u4080 1777                      u5200 1B9A  
                    u5040 114E                      u4312 01F4                      u4240 0155  
                    u3600 1B54                      u6000 0D94                      u3361 186E  
                    u3441 1AB0                      u4081 1776                      u4065 1767  
                    u5201 1B99                      u5041 114D                      u4401 030D  
                    u4321 0209                      u4313 01FB                      u4241 0154  
                    u3505 1C12                      u3601 1B53                      u6001 0D93  
                    u4170 17CF                      u4090 1781                      u5130 11A1  
                    u3370 1962                      u4402 0314                      u4322 0210  
                    u4250 015A                      u3530 1C36                      u3450 1BE3  
                    u6010 0DA3                      u4171 17CE                      u4091 1780  
                    u5131 11A0                      u5035 1135                      u3371 1961  
                    u4411 0338                      u4403 031B                      u4331 0233  
                    u4323 0217                      u4251 0159                      u3531 1C35  
                    u3515 1C1E                      u3451 1BE2                      u6011 0DA2  
                    u5300 1D10                      u4180 17D8                      u5220 1BB5  
                    u5140 1935                      u5060 116C                      u4500 03DA  
                    u4420 0360                      u4412 033F                      u4332 023A  
                    u4260 0179                      u3700 19E2                      u3540 1C3B  
                    u3460 1BEE                      u3620 1B67                      u6100 0F2C  
                    u6020 0DBA                      u5301 1D0F                      u4181 17D7  
                    u4165 17BB                      u5221 1BB4                      u5141 1934  
                    u5125 1193                      u5061 116B                      u5045 114A  
                    u4501 03D9                      u4413 0346                      u4341 024F  
                    u4333 0241                      u4261 0178                      u3701 19E1  
                    u3541 1C3A                      u3525 1C2A                      u3461 1BED  
                    u3621 1B66                      u3605 1B50                      u6101 0F2B  
                    u6021 0DB9                      u6005 0D90                      u4190 17DD  
                    u5070 1170                      u3390 1976                      u4510 03DF  
                    u4342 0256                      u4270 017F                      u3710 1006  
                    u3470 1BFF                      u3630 1B6C                      u3550 1B22  
                    u6110 0F3D                      u5311 1D1F                      u4191 17DC  
                    u5215 1B9C                      u5071 116F                      u5055 115F  
                    u3391 1975                      u4511 03DE                      u4431 036C  
                    u4343 025D                      u4271 017E                      u3711 1005  
                    u3471 1BFE                      u3631 1B6B                      u3615 1B5B  
                    u3551 1B21                      u6111 0F3C                      u6015 0D9F  
                    u5320 1D38                      u5312 1D20                      u3800 15DC  
                    u5240 1BD3                      u5080 1177                      u4520 03F3  
                    u4440 0388                      u4432 0373                      u4280 0184  
                    u3640 19AB                      u3560 1B2D                      u6200 0FC4  
                    u6120 0F49                      u5321 1D37                      u5313 1D25  
                    u3801 15DB                      u5241 1BD2                      u5225 1BB1  
                    u5081 1176                      u3385 1969                      u4521 03F2  
                    u4433 037A                      u4425 035B                      u4361 0283  
                    u4281 0183                      u3641 19AA                      u3561 1B2C  
                    u6201 0FC3                      u6121 0F48                      u6105 0F28  
                    u5250 1A40                      u5314 1D26                      u3810 15E5  
                    u5410 0119                      u5170 194F                      u4530 03FA  
                    u4362 028A                      u4290 019B                      u3730 1018  
                    u4610 13A6                      u3490 1C11                      u3570 1B38  
                    u6210 0FD9                      u6130 0F53                      u6050 0EE2  
                    u5251 1A3F                      u5331 1D47                      u5315 1D2B  
                    u3811 15E4                      u5411 0118                      u5235 1BC5  
                    u5171 194E                      u5155 193C                      u4531 03F9  
                    u4451 0394                      u4371 02AE                      u4363 0291  
                    u4355 025F                      u4291 019A                      u3731 1017  
                    u4611 13A5                      u3491 1C10                      u3571 1B37  
                    u6211 0FD8                      u6131 0F52                      u6051 0EE1  
                    u6035 0E3F                      u6300 1E70                      u5260 1A5C  
                    u5340 1D72                      u5332 1D48                      u5316 1D2C  
                    u3900 1670                      u3820 15EB                      u5420 0120  
                    u5180 1B86                      u4540 0400                      u4452 039B  
                    u4372 02B5                      u3660 19BD                      u3740 1022  
                    u4700 0497                      u6220 0FE5                      u6140 0F61  
                    u6060 0EF8                      u4605 18D5                      u6301 1E6F  
                    u5261 1A5B                      u5341 1D71                      u5333 1D4D  
                    u3901 166F                      u3821 15EA                      u5421 011F  
                    u5405 0109                      u5181 1B85                      u5165 1943  
                    u4541 03FF                      u4453 03A2                      u4445 0383  
                    u4373 02BC                      u3661 19BC                      u3741 1021  
                    u3725 100A                      u3485 1C03                      u4701 0496  
                    u6221 0FE4                      u6141 0F60                      u6061 0EF7  
                    u6045 0EA3                      u6310 1E8B                      u5270 1A76  
                    u5334 1D4E                      u5350 188E                      u3830 15F0  
                    u5510 1B14                      u4550 0412                      u3590 1B4A  
                    u6230 0FFB                      u6150 0F79                      u6070 0EFF  
                    u6311 1E8A                      u5271 1A75                      u5335 1D53  
                    u5351 188D                      u3831 15EF                      u5511 1B13  
                    u5095 1179                      u4551 0411                      u4391 02E2  
                    u3655 19AF                      u3591 1B49                      u6231 0FFA  
                    u6151 0F78                      u6071 0EFE                      u6240 19A2  
                    u6400 1F36                      u6320 1EA9                      u5336 1D54  
                    u5280 1CE8                      u3920 1686                      u3840 1609  
                    u5440 0131                      u5360 00D5                      u5600 10B5  
                    u5520 1040                      u4560 0421                      u4480 03C6  
                    u4392 02E9                      u3680 19CE                      u3760 1035  
                    u6160 0F8D                      u6080 0F07                      u6241 19A1  
                    u6401 1F35                      u6321 1EA8                      u5345 1D6E  
                    u5281 1CE7                      u3921 1685                      u3841 1608  
                    u5441 0130                      u5361 00D4                      u5505 1B06  
                    u5601 10B4                      u5521 103F                      u4481 03C5  
                    u4465 03A4                      u4393 02F0                      u4385 02BE  
                    u3681 19CD                      u3761 1034                      u3745 101E  
                    u4625 13C3                      u3585 1B3C                      u6161 0F8C  
                    u6145 0F5D                      u6081 0F06                      u6330 1EE3  
                    u6250 1E3A                      u5290 1D04                      u3930 168A  
                    u3850 160D                      u3770 15B5                      u5450 0136  
                    u5370 00EC                      u5610 10BB                      u5530 1044  
                    u4570 043E                      u4650 14B9                      u6170 0F99  
                    u6090 0F18                      u6331 1EE2                      u6251 1E39  
                    u5275 1A72                      u5291 1D03                      u3931 1689  
                    u3915 1673                      u3851 160C                      u3771 15B4  
                    u5451 0135                      u5435 0123                      u5195 1B8B  
                    u5611 10BA                      u5531 1043                      u4571 043D  
                    u4475 03BB                      u3675 19BE                      u3755 1029  
                    u4651 14B8                      u4635 141D                      u4715 04B7  
                    u6171 0F98                      u6155 0F75                      u6091 0F17  
                    u6500 1FA0                      u6420 1F45                      u6260 1E40  
                    u3940 168F                      u3860 1647                      u3780 15BB  
                    u5380 0100                      u5460 1AD1                      u5620 10BF  
                    u5540 1064                      u4580 0458                      u4820 0731  
                    u4740 0586                      u6180 0FA8                      u5700 0822  
                    u6421 1F44                      u6261 1E3F                      u3941 168E  
                    u3861 1646                      u3781 15BA                      u5381 00FF  
                    u5461 1AD0                      u5621 10BE                      u5541 1063  
                    u4581 0457                      u4565 041C                      u3685 19CA  
                    u4645 1472                      u4821 0730                      u4805 069E  
                    u4741 0585                      u4725 04F3                      u6181 0FA7  
                    u5701 0821                      u6510 1FBD                      u6270 1E45  
                    u3870 1652                      u3790 15C0                      u5390 0107  
                    u5630 10D4                      u4910 1DD6                      u4590 0474  
                    u6190 0FBD                      u5710 0859                      u6511 1FBC  
                    u6415 1F3A                      u6271 1E44                      u3951 16A1  
                    u3871 1650                      u3791 15BF                      u5391 0106  
                    u5375 00E7                      u4911 1DD5                      u4591 0473  
                    u4575 043A                      u4495 03C9                      u3695 19D6  
                    u4815 06E9                      u4735 053E                      u6191 0FBC  
                    u6095 0F14                      u5711 0858                      u6520 1FDA  
                    u6440 1F59                      u6360 1EF9                      u6280 1E65  
                    u3960 16B3                      u3952 16A8                      u3880 1653  
                    u5480 1AE5                      u5640 10E4                      u5560 1083  
                    u5800 0A4B                      u5720 0899                      u6521 1FD9  
                    u6505 1F9B                      u6441 1F58                      u6361 1EF8  
                    u6345 1EE5                      u6281 1E64                      u3961 16B2  
                    u3953 16AF                      u3865 1643                      u5481 1AE4  
                    u5641 10E3                      u5561 1082                      u4905 1DC1  
                    u4585 0454                      u4665 14D6                      u5801 0A4A  
                    u5721 0898                      u6530 1FEF                      u6450 1F5E  
                    u6290 1E6B                      u3970 16B7                      u3890 1663  
                    u5490 1AF7                      u5650 10E8                      u4930 1DEF  
                    u4690 048E                      u5810 0A6F                      u5730 08A7  
                    u6531 1FEE                      u6515 1FB9                      u6451 1F5D  
                    u6435 1F48                      u6355 1EEE                      u6291 1E6A  
                    u3971 16B6                      u3891 1662                      u5491 1AF6  
                    u5475 1AD6                      u5651 10E7                      u5635 10CF  
                    u5555 1075                      u4931 1DEE                      u4915 1DD2  
                    u4675 1523                      u4835 0744                      u4755 0599  
                    u4691 048D                      u5811 0A6E                      u5731 08A6  
                    u5660 1900                      u6460 1F72                      u6380 1F15  
                    u3980 16C4                      u5580 10A5                      u4940 1DF3  
                    u4860 080C                      u4780 0642                      u5900 0C66  
                    u5820 0A86                      u5740 08EB                      u6540 11E9  
                    u5661 18FF                      u6525 1FD6                      u6461 1F71  
                    u6381 1F14                      u3981 16C3                      u5581 10A4  
                    u4941 1DF2                      u4925 1DE2                      u4685 156F  
                    u4861 080B                      u4845 0780                      u4781 0641  
                    u4765 05D5                      u5901 0C65                      u5821 0A85  
                    u5741 08EA                      u6541 11E8                      u5670 1908  
                    u6470 1F79                      u6390 1F2E                      u4950 1DFA  
                    u4870 0812                      u5910 0C81                      u5830 0ADC  
                    u5750 091A                      u6550 12A3                      u5671 1907  
                    u6471 1F78                      u6391 1F2D                      u6375 1EFC  
                    u5495 1AF3                      u5575 1097                      u4951 1DF9  
                    u4871 0811                      u4855 07BC                      u4775 0611  
                    u5911 0C80                      u5831 0ADB                      u5751 0919  
                    u6551 12A2                      u5680 1C7F                      u6480 1F7F  
                    u4880 1D87                      u5920 0C93                      u5840 0AF7  
                    u5760 091E                      u6560 12FB                      u5681 1C7E  
                    u6481 1F7E                      u6385 1F11                      u4881 1D86  
                    u5921 0C92                      u5841 0AF6                      u5825 0A82  
                    u5761 091D                      u6561 12FA                      u5690 1883  
                    u6490 1F91                      u4970 1E0C                      u4890 1D9F  
                    u5930 0C9D                      u5850 0B1E                      u5770 094D  
                    u6570 1324                      u5691 1882                      u6707 1CC6  
                    u6491 1F90                      u3995 16C7                      u5595 10AA  
                    u4971 1E0B                      u4891 1D9E                      u4795 0662  
                    u5931 0C9C                      u5851 0B1D                      u5835 0AD8  
                    u5771 094C                      u6571 1323                      u6627 11DA  
                    u4980 1E13                      u5940 0CA9                      u5860 0B2D  
                    u5780 0987                      u6580 134E                      u6717 1AA9  
                    u4981 1E12                      u4965 1DFC                      u5941 0CA8  
                    u5861 0B2C                      u5781 0986                      u6581 134D  
                    u6637 1210                      u5950 0CD1                      u5870 0B48  
                    u5790 09C2                      u6590 1377                      u5951 0CD0  
                    u5871 0B47                      u5791 09C1                      u6591 1376  
                    u6647 1294                      u5960 0CF0                      u6657 1C5F  
                    u5961 0CEF                      u5865 0B29                      u5970 0CFE  
                    u5890 0C5B                      u6667 1C70                      u4995 1E16  
                    u5971 0CFD                      u5955 0CCD                      u5891 0C5A  
                    u6677 1C93                      u5965 0CEC                      u5885 0C28  
                    u5990 0D75                      u6687 1CA4                      u5991 0D74  
                    u5895 0C57                      u6697 1CB5                      u5985 0D0B  
     Lcd_Write_String@str 0079         ?_Lcd_Write_String 0079                      _dist 00DB  
                    _main 11AA                      _pot1 00DD                      _pot2 00DC  
                    _temp 00CD          __end_of_I2C_Read 1886                      btemp 007E  
        __end_of_I2C_Stop 1871                      start 0000        ??_Lcd_Write_String 007B  
        ?_I2C_Init_Master 0070           ___fldiv@new_exp 0050              _sprintf$1126 00AA  
           ___fltol@sign1 0059           __end_of___fladd 1800                     ?_main 0070  
         __end_of___fldiv 2000           __end_of___awdiv 1C45           __end_of___flneg 1891  
                   STR_10 00AE                     STR_11 00B3           __end_of___awmod 1B76  
         __end_of___flmul 0487           __end_of___flsub 192F           __end_of___fltol 0142  
                   _ANSEL 0188           __end_of___lldiv 1BDC           ___awdiv@divisor 0077  
         __end_of___llmod 1B1D           __end_of___lwdiv 19E7           __end_of___lwmod 103A  
         ___awdiv@counter 0020                     _PORTA 0005                     _PORTB 0006  
                   _PORTD 0008                     _PORTE 0009                     _TRISA 0085  
                   _TRISB 0086                     _TRISD 0088                     _TRISE 0089  
         __end_of_dpowers 00A3                     _scale 0487           __end_of_isdigit 0816  
                   _valor 01A4                     _motor 00D5                     _setup 18B8  
          Lcd_Send_Byte@n 0076         __end_of_I2C_Start 1867         __end_of_I2C_Write 189F  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __end_of_sprintf 1000          __end_of_Lcd_Init 1CD4          __end_of_Lcd_Port 1AC9  
         __initialization 07E6              __end_of_main 139D                    ??_main 00C5  
   __end_of_Lcd_Send_Byte 18EC          ___llmod@dividend 0074                    ?_scale 003E  
        ___awdiv@dividend 0079                    ?_setup 0070                    _ANSELH 0189  
          Lcd_Port@nibble 0072                    _SSPADD 0093                    _TRISC3 043B  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
        __end_of___xxtofl 10F2          __end_of__powers_ 0047                    ___flge 1CD4  
                  ___fleq 1A2C                 ??___fladd 005A                    ___wmul 192F  
               ??___fldiv 0046                 ??___awdiv 007B                 ??___flneg 0074  
               ??___awmod 0074                 ??___flmul 002C                 ??___flsub 007E  
               ??___fltol 0055                 ??___lldiv 0078                 ??___llmod 0078  
               ??___lwdiv 007A                 ??___lwmod 0074                    _fround 139D  
        ___awdiv@quotient 0022           ___awmod@divisor 0070                    _valor2 0190  
         ___awmod@counter 0075                    _unidad 00DA                 ??_isdigit 0070  
               ?_I2C_Read 0070                 ?_I2C_Stop 0070                 ??_sprintf 00A5  
              ___flge@ff1 0070                ___flge@ff2 0074              ___xxtofl@arg 007A  
            ___xxtofl@exp 0079              ___xxtofl@val 0070                ___fleq@ff1 0070  
              ___fleq@ff2 0074   __end_of__initialization 07FC                ___flneg@f1 0070  
              ___fltol@f1 0051            __pcstackCOMMON 0070             __end_of_scale 07E6  
           __end_of_setup 18D1            _Lcd_Set_Cursor 19E7                __div_to_l_ 10F2  
              ??_I2C_Read 0070                ??_I2C_Stop 0070                 ?_Lcd_Init 0070  
               ?_Lcd_Port 0072           __div_to_l_@exp1 0025           __div_to_l_@cntr 0024  
                 ??_scale 0042           __div_to_l_@quot 0020              sprintf@width 00BB  
                 ??_setup 0070                __pbssBANK0 006E                __pbssBANK1 00C9  
              __pbssBANK3 0190             __div_to_l_@f1 0070             __div_to_l_@f2 0074  
       __end_of__Umul8_16 197B                __pmaintext 11AA                   ?___flge 0070  
                 ?___fleq 0070                   ?___wmul 0070                   ?_fround 003E  
  __end_of_Lcd_Set_Cursor 1A2C                 ?___xxtofl 0070                ??_Lcd_Init 0079  
              ??_Lcd_Port 0073                   _SSPCON2 0091                   _SSPSTAT 0094  
              __stringtab 0003            _Lcd_Write_Char 1871                 _I2C_Start 185D  
               _I2C_Write 1891         __end_of__npowers_ 007B                _scale$1125 004C  
                 ___fladd 15A8                   ___fldiv 1E2D                   ___awdiv 1BDC  
                 ___flneg 1886                   ___awmod 1B1D                   ___flmul 0142  
                 ___flsub 190B                   ___fltol 00CA                   ___lldiv 1B76  
                 ___llmod 1AC9                   ___lwdiv 19A3                   ___lwmod 1000  
                 _decenas 006E           ?_Lcd_Set_Cursor 0079                   __ptext1 0816  
                 __ptext2 0487                   __ptext3 1B1D                   __ptext4 1BDC  
                 __ptext5 0804                   __ptext6 139D                   __ptext7 1000  
                 __ptext8 19A3                   __ptext9 0142               ?__div_to_l_ 0070  
                 _dpowers 007B                   _isdigit 0804                ??___xxtofl 0074  
        ___awmod@dividend 0072          Lcd_Send_Byte@add 0078                   _sprintf 0816  
                 clrloop0 00C3    __end_of_Lcd_Write_Char 187B      end_of_initialization 07FC  
           _Lcd_I2C_Write 189F                ?_I2C_Start 0070                ?_I2C_Write 0070  
         ___lldiv@divisor 0070           ___lldiv@counter 007D                 Lcd_Init@i 007B  
          __tdiv_to_l_@f1 0070            __tdiv_to_l_@f2 0074             ??__tdiv_to_l_ 0078  
             ___fladd@grs 0065             ___xxtofl@sign 0078                 _TRISCbits 0087  
             ___fldiv@grs 0052               ___fldiv@rem 004B           ?_Lcd_Write_Char 0070  
          ?_Lcd_I2C_Write 0070               ___flmul@grs 0032            __end_of___flge 1D76  
          __end_of___fleq 1A7A            __end_of___wmul 1954          _Lcd_Write_String 197B  
          __end_of_fround 15A8       start_initialization 07E6         ??_I2C_Init_Master 0070  
     __end_of__tdiv_to_l_ 1E2D     I2C_Init_Master@sp_i2c 0070             Lcd_Port@datos 0075  
         ___llmod@divisor 0070               ??_I2C_Start 0070           ___llmod@counter 0079  
             ??_I2C_Write 0070                  ??___flge 0078                  ??___fleq 0078  
                ??___wmul 0074                 __Umul8_16 1954           Lcd_Write_Char@c 0079  
                ??_fround 0042             sprintf@tmpval 00B3                 ___fladd@a 0056  
               ___fladd@b 0052                fround@prec 0051                 ___fldiv@a 003E  
               ___fldiv@b 0042                 ___flmul@a 0028                 ___flmul@b 0024  
               ___flsub@a 0066                 ___flsub@b 006A                 ___latbits 0002  
       Lcd_I2C_Write@dato 0071             __pcstackBANK0 0020             __pcstackBANK1 00A0  
         ??_Lcd_I2C_Write 0071             _Lcd_Send_Byte 18D1               sprintf@flag 00B9  
             sprintf@eexp 00B7               sprintf@fval 00BD               sprintf@prec 00C1  
        ___lwdiv@dividend 0078          ??_Lcd_Set_Cursor 007A                  ?___fladd 0052  
                ?___fldiv 003E                  ?___awdiv 0077                  ?___flneg 0070  
                ?___awmod 0070                  ?___flmul 0024                  ?___flsub 0066  
                ?___fltol 0051                  ?___lldiv 0070                  ?___llmod 0070  
               __npowers_ 0047                ?__Umul8_16 0070                  ?___lwdiv 0076  
                ?___lwmod 0070                 __pstrings 0003               __tdiv_to_l_ 1D76  
            ??__div_to_l_ 0078                  ?_isdigit 0070                  _I2C_Read 187B  
                _I2C_Stop 1867          ___lwdiv@quotient 007B            ?_Lcd_Send_Byte 0076  
                ?_sprintf 00A0            ___wmul@product 0074                 clear_ram0 00C2  
               _selection 00D9                  _PIR1bits 000C        __end_of__div_to_l_ 11AA  
             __stringbase 0012         ___wmul@multiplier 0070          ??_Lcd_Write_Char 0079  
                _Lcd_Init 1C45                  _Lcd_Port 1A7A  __end_of_Lcd_Write_String 19A3  
         _I2C_Init_Master 18EC             I2C_Write@data 0070               ??__Umul8_16 0072  
             _fround$1123 004D               _fround$1124 0049        __end_of__stringtab 0013  
             _isdigit$902 0070                sprintf@val 00AF                  ___xxtofl 103A  
         ??_Lcd_Send_Byte 0077           ___lwdiv@divisor 0076                  _centenas 006F  
         ___lwdiv@counter 007D                  __ptext10 1954                  __ptext11 1D76  
                __ptext20 1886                  __ptext12 10F2                  __ptext21 1CD4  
                __ptext13 103A                  __ptext30 1A7A                  __ptext22 1A2C  
                __ptext14 192F                  __ptext31 189F                  __ptext23 18B8  
                __ptext15 1AC9                  __ptext32 1891                  __ptext24 1E2D  
                __ptext16 1B76                  __ptext33 1867                  __ptext25 197B  
                __ptext17 00CA                  __ptext34 185D                  __ptext26 1871  
                __ptext18 190B                  __ptext35 187B                  __ptext27 19E7  
                __ptext19 15A8                  __ptext36 18EC                  __ptext28 1C45  
                __ptext29 18D1                  __powers_ 0013                  _voltaje2 00C9  
             Lcd_Port@add 0074                  isdigit@c 0071                  scale@scl 0050  
               sprintf@ap 00AE          __tdiv_to_l_@exp1 0025          __tdiv_to_l_@cntr 0024  
               sprintf@sp 00C3          __tdiv_to_l_@quot 0020          ___lwmod@dividend 0072  
        ___lldiv@dividend 0074   __end_of_I2C_Init_Master 190B                 stringcode 000D  
            ?__tdiv_to_l_ 0070    __Umul8_16@multiplicand 0070                  sprintf@c 00C4  
                sprintf@f 00A0          ___lldiv@quotient 0079           ___lwmod@divisor 0070  
         ___lwmod@counter 0075                  stringdir 000D                  stringtab 0003  
             _SSPCON2bits 0091         Lcd_Set_Cursor@col 0079         Lcd_Set_Cursor@row 007C  
           ___fladd@signs 0062     __end_of_Lcd_I2C_Write 18B8              ___fladd@aexp 0063  
            ___fladd@bexp 0064      __Umul8_16@multiplier 0078         __Umul8_16@product 0074  
