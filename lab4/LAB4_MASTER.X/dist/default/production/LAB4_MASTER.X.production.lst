

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Aug 09 11:13:09 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    53                           	dabs	1,0x7E,2
    54     0000                     
    55                           ; Generated 22/03/2023 GMT
    56                           ; 
    57                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F887 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89     0000                     	;# 
    90     0001                     	;# 
    91     0002                     	;# 
    92     0003                     	;# 
    93     0004                     	;# 
    94     0005                     	;# 
    95     0006                     	;# 
    96     0007                     	;# 
    97     0008                     	;# 
    98     0009                     	;# 
    99     000A                     	;# 
   100     000B                     	;# 
   101     000C                     	;# 
   102     000D                     	;# 
   103     000E                     	;# 
   104     000E                     	;# 
   105     000F                     	;# 
   106     0010                     	;# 
   107     0011                     	;# 
   108     0012                     	;# 
   109     0013                     	;# 
   110     0014                     	;# 
   111     0015                     	;# 
   112     0015                     	;# 
   113     0016                     	;# 
   114     0017                     	;# 
   115     0018                     	;# 
   116     0019                     	;# 
   117     001A                     	;# 
   118     001B                     	;# 
   119     001B                     	;# 
   120     001C                     	;# 
   121     001D                     	;# 
   122     001E                     	;# 
   123     001F                     	;# 
   124     0081                     	;# 
   125     0085                     	;# 
   126     0086                     	;# 
   127     0087                     	;# 
   128     0088                     	;# 
   129     0089                     	;# 
   130     008C                     	;# 
   131     008D                     	;# 
   132     008E                     	;# 
   133     008F                     	;# 
   134     0090                     	;# 
   135     0091                     	;# 
   136     0092                     	;# 
   137     0093                     	;# 
   138     0093                     	;# 
   139     0093                     	;# 
   140     0094                     	;# 
   141     0095                     	;# 
   142     0096                     	;# 
   143     0097                     	;# 
   144     0098                     	;# 
   145     0099                     	;# 
   146     009A                     	;# 
   147     009B                     	;# 
   148     009C                     	;# 
   149     009D                     	;# 
   150     009E                     	;# 
   151     009F                     	;# 
   152     0105                     	;# 
   153     0107                     	;# 
   154     0108                     	;# 
   155     0109                     	;# 
   156     010C                     	;# 
   157     010C                     	;# 
   158     010D                     	;# 
   159     010E                     	;# 
   160     010F                     	;# 
   161     0185                     	;# 
   162     0187                     	;# 
   163     0188                     	;# 
   164     0189                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167     0000                     	;# 
   168     0001                     	;# 
   169     0002                     	;# 
   170     0003                     	;# 
   171     0004                     	;# 
   172     0005                     	;# 
   173     0006                     	;# 
   174     0007                     	;# 
   175     0008                     	;# 
   176     0009                     	;# 
   177     000A                     	;# 
   178     000B                     	;# 
   179     000C                     	;# 
   180     000D                     	;# 
   181     000E                     	;# 
   182     000E                     	;# 
   183     000F                     	;# 
   184     0010                     	;# 
   185     0011                     	;# 
   186     0012                     	;# 
   187     0013                     	;# 
   188     0014                     	;# 
   189     0015                     	;# 
   190     0015                     	;# 
   191     0016                     	;# 
   192     0017                     	;# 
   193     0018                     	;# 
   194     0019                     	;# 
   195     001A                     	;# 
   196     001B                     	;# 
   197     001B                     	;# 
   198     001C                     	;# 
   199     001D                     	;# 
   200     001E                     	;# 
   201     001F                     	;# 
   202     0081                     	;# 
   203     0085                     	;# 
   204     0086                     	;# 
   205     0087                     	;# 
   206     0088                     	;# 
   207     0089                     	;# 
   208     008C                     	;# 
   209     008D                     	;# 
   210     008E                     	;# 
   211     008F                     	;# 
   212     0090                     	;# 
   213     0091                     	;# 
   214     0092                     	;# 
   215     0093                     	;# 
   216     0093                     	;# 
   217     0093                     	;# 
   218     0094                     	;# 
   219     0095                     	;# 
   220     0096                     	;# 
   221     0097                     	;# 
   222     0098                     	;# 
   223     0099                     	;# 
   224     009A                     	;# 
   225     009B                     	;# 
   226     009C                     	;# 
   227     009D                     	;# 
   228     009E                     	;# 
   229     009F                     	;# 
   230     0105                     	;# 
   231     0107                     	;# 
   232     0108                     	;# 
   233     0109                     	;# 
   234     010C                     	;# 
   235     010C                     	;# 
   236     010D                     	;# 
   237     010E                     	;# 
   238     010F                     	;# 
   239     0185                     	;# 
   240     0187                     	;# 
   241     0188                     	;# 
   242     0189                     	;# 
   243     018C                     	;# 
   244     018D                     	;# 
   245     0000                     	;# 
   246     0001                     	;# 
   247     0002                     	;# 
   248     0003                     	;# 
   249     0004                     	;# 
   250     0005                     	;# 
   251     0006                     	;# 
   252     0007                     	;# 
   253     0008                     	;# 
   254     0009                     	;# 
   255     000A                     	;# 
   256     000B                     	;# 
   257     000C                     	;# 
   258     000D                     	;# 
   259     000E                     	;# 
   260     000E                     	;# 
   261     000F                     	;# 
   262     0010                     	;# 
   263     0011                     	;# 
   264     0012                     	;# 
   265     0013                     	;# 
   266     0014                     	;# 
   267     0015                     	;# 
   268     0015                     	;# 
   269     0016                     	;# 
   270     0017                     	;# 
   271     0018                     	;# 
   272     0019                     	;# 
   273     001A                     	;# 
   274     001B                     	;# 
   275     001B                     	;# 
   276     001C                     	;# 
   277     001D                     	;# 
   278     001E                     	;# 
   279     001F                     	;# 
   280     0081                     	;# 
   281     0085                     	;# 
   282     0086                     	;# 
   283     0087                     	;# 
   284     0088                     	;# 
   285     0089                     	;# 
   286     008C                     	;# 
   287     008D                     	;# 
   288     008E                     	;# 
   289     008F                     	;# 
   290     0090                     	;# 
   291     0091                     	;# 
   292     0092                     	;# 
   293     0093                     	;# 
   294     0093                     	;# 
   295     0093                     	;# 
   296     0094                     	;# 
   297     0095                     	;# 
   298     0096                     	;# 
   299     0097                     	;# 
   300     0098                     	;# 
   301     0099                     	;# 
   302     009A                     	;# 
   303     009B                     	;# 
   304     009C                     	;# 
   305     009D                     	;# 
   306     009E                     	;# 
   307     009F                     	;# 
   308     0105                     	;# 
   309     0107                     	;# 
   310     0108                     	;# 
   311     0109                     	;# 
   312     010C                     	;# 
   313     010C                     	;# 
   314     010D                     	;# 
   315     010E                     	;# 
   316     010F                     	;# 
   317     0185                     	;# 
   318     0187                     	;# 
   319     0188                     	;# 
   320     0189                     	;# 
   321     018C                     	;# 
   322     018D                     	;# 
   323     0000                     	;# 
   324     0001                     	;# 
   325     0002                     	;# 
   326     0003                     	;# 
   327     0004                     	;# 
   328     0005                     	;# 
   329     0006                     	;# 
   330     0007                     	;# 
   331     0008                     	;# 
   332     0009                     	;# 
   333     000A                     	;# 
   334     000B                     	;# 
   335     000C                     	;# 
   336     000D                     	;# 
   337     000E                     	;# 
   338     000E                     	;# 
   339     000F                     	;# 
   340     0010                     	;# 
   341     0011                     	;# 
   342     0012                     	;# 
   343     0013                     	;# 
   344     0014                     	;# 
   345     0015                     	;# 
   346     0015                     	;# 
   347     0016                     	;# 
   348     0017                     	;# 
   349     0018                     	;# 
   350     0019                     	;# 
   351     001A                     	;# 
   352     001B                     	;# 
   353     001B                     	;# 
   354     001C                     	;# 
   355     001D                     	;# 
   356     001E                     	;# 
   357     001F                     	;# 
   358     0081                     	;# 
   359     0085                     	;# 
   360     0086                     	;# 
   361     0087                     	;# 
   362     0088                     	;# 
   363     0089                     	;# 
   364     008C                     	;# 
   365     008D                     	;# 
   366     008E                     	;# 
   367     008F                     	;# 
   368     0090                     	;# 
   369     0091                     	;# 
   370     0092                     	;# 
   371     0093                     	;# 
   372     0093                     	;# 
   373     0093                     	;# 
   374     0094                     	;# 
   375     0095                     	;# 
   376     0096                     	;# 
   377     0097                     	;# 
   378     0098                     	;# 
   379     0099                     	;# 
   380     009A                     	;# 
   381     009B                     	;# 
   382     009C                     	;# 
   383     009D                     	;# 
   384     009E                     	;# 
   385     009F                     	;# 
   386     0105                     	;# 
   387     0107                     	;# 
   388     0108                     	;# 
   389     0109                     	;# 
   390     010C                     	;# 
   391     010C                     	;# 
   392     010D                     	;# 
   393     010E                     	;# 
   394     010F                     	;# 
   395     0185                     	;# 
   396     0187                     	;# 
   397     0188                     	;# 
   398     0189                     	;# 
   399     018C                     	;# 
   400     018D                     	;# 
   401     0000                     	;# 
   402     0001                     	;# 
   403     0002                     	;# 
   404     0003                     	;# 
   405     0004                     	;# 
   406     0005                     	;# 
   407     0006                     	;# 
   408     0007                     	;# 
   409     0008                     	;# 
   410     0009                     	;# 
   411     000A                     	;# 
   412     000B                     	;# 
   413     000C                     	;# 
   414     000D                     	;# 
   415     000E                     	;# 
   416     000E                     	;# 
   417     000F                     	;# 
   418     0010                     	;# 
   419     0011                     	;# 
   420     0012                     	;# 
   421     0013                     	;# 
   422     0014                     	;# 
   423     0015                     	;# 
   424     0015                     	;# 
   425     0016                     	;# 
   426     0017                     	;# 
   427     0018                     	;# 
   428     0019                     	;# 
   429     001A                     	;# 
   430     001B                     	;# 
   431     001B                     	;# 
   432     001C                     	;# 
   433     001D                     	;# 
   434     001E                     	;# 
   435     001F                     	;# 
   436     0081                     	;# 
   437     0085                     	;# 
   438     0086                     	;# 
   439     0087                     	;# 
   440     0088                     	;# 
   441     0089                     	;# 
   442     008C                     	;# 
   443     008D                     	;# 
   444     008E                     	;# 
   445     008F                     	;# 
   446     0090                     	;# 
   447     0091                     	;# 
   448     0092                     	;# 
   449     0093                     	;# 
   450     0093                     	;# 
   451     0093                     	;# 
   452     0094                     	;# 
   453     0095                     	;# 
   454     0096                     	;# 
   455     0097                     	;# 
   456     0098                     	;# 
   457     0099                     	;# 
   458     009A                     	;# 
   459     009B                     	;# 
   460     009C                     	;# 
   461     009D                     	;# 
   462     009E                     	;# 
   463     009F                     	;# 
   464     0105                     	;# 
   465     0107                     	;# 
   466     0108                     	;# 
   467     0109                     	;# 
   468     010C                     	;# 
   469     010C                     	;# 
   470     010D                     	;# 
   471     010E                     	;# 
   472     010F                     	;# 
   473     0185                     	;# 
   474     0187                     	;# 
   475     0188                     	;# 
   476     0189                     	;# 
   477     018C                     	;# 
   478     018D                     	;# 
   479                           
   480                           	psect	idataBANK1
   481     1A09                     __pidataBANK1:
   482                           
   483                           ;initializer for _year
   484     1A09  3413               	retlw	19
   485     1A0A  3400               	retlw	0
   486                           
   487                           ;initializer for _mes
   488     1A0B  3401               	retlw	1
   489     1A0C  3400               	retlw	0
   490                           
   491                           ;initializer for _dia
   492     1A0D  3401               	retlw	1
   493     1A0E  3400               	retlw	0
   494                           
   495                           	psect	strings
   496     1000                     __pstrings:
   497     1000                     stringtab:
   498     1000                     __stringtab:
   499                           
   500                           ;	String table - string pointers are 1 byte each
   501     1000  1BFF               	btfsc	btemp+1,7
   502     1001  280A               	ljmp	stringcode
   503     1002  1383               	bcf	3,7
   504     1003  187F               	btfsc	btemp+1,0
   505     1004  1783               	bsf	3,7
   506     1005  0800               	movf	0,w
   507     1006  0A84               	incf	4,f
   508     1007  1903               	skipnz
   509     1008  0AFF               	incf	btemp+1,f
   510     1009  0008               	return
   511     100A                     stringcode:
   512     100A                     stringdir:
   513     100A  3010               	movlw	high stringdir
   514     100B  008A               	movwf	10
   515     100C  0804               	movf	4,w
   516     100D  0A84               	incf	4,f
   517     100E  0782               	addwf	2,f
   518     100F                     __stringbase:
   519     100F  3400               	retlw	0
   520     1010                     __end_of__stringtab:
   521     1010                     __powers_:
   522     1010  3400               	retlw	0
   523     1011  3400               	retlw	0
   524     1012  3480               	retlw	128
   525     1013  343F               	retlw	63
   526     1014  3400               	retlw	0
   527     1015  3400               	retlw	0
   528     1016  3420               	retlw	32
   529     1017  3441               	retlw	65
   530     1018  3400               	retlw	0
   531     1019  3400               	retlw	0
   532     101A  34C8               	retlw	200
   533     101B  3442               	retlw	66
   534     101C  3400               	retlw	0
   535     101D  3400               	retlw	0
   536     101E  347A               	retlw	122
   537     101F  3444               	retlw	68
   538     1020  3400               	retlw	0
   539     1021  3440               	retlw	64
   540     1022  341C               	retlw	28
   541     1023  3446               	retlw	70
   542     1024  3400               	retlw	0
   543     1025  3450               	retlw	80
   544     1026  34C3               	retlw	195
   545     1027  3447               	retlw	71
   546     1028  3400               	retlw	0
   547     1029  3424               	retlw	36
   548     102A  3474               	retlw	116
   549     102B  3449               	retlw	73
   550     102C  3480               	retlw	128
   551     102D  3496               	retlw	150
   552     102E  3418               	retlw	24
   553     102F  344B               	retlw	75
   554     1030  3420               	retlw	32
   555     1031  34BC               	retlw	188
   556     1032  34BE               	retlw	190
   557     1033  344C               	retlw	76
   558     1034  3428               	retlw	40
   559     1035  346B               	retlw	107
   560     1036  346E               	retlw	110
   561     1037  344E               	retlw	78
   562     1038  34F9               	retlw	249
   563     1039  3402               	retlw	2
   564     103A  3415               	retlw	21
   565     103B  3450               	retlw	80
   566     103C  34EC               	retlw	236
   567     103D  3478               	retlw	120
   568     103E  34AD               	retlw	173
   569     103F  3460               	retlw	96
   570     1040  34CA               	retlw	202
   571     1041  34F2               	retlw	242
   572     1042  3449               	retlw	73
   573     1043  3471               	retlw	113
   574     1044                     __end_of__powers_:
   575     1044                     __npowers_:
   576     1044  3400               	retlw	0
   577     1045  3400               	retlw	0
   578     1046  3480               	retlw	128
   579     1047  343F               	retlw	63
   580     1048  34CD               	retlw	205
   581     1049  34CC               	retlw	204
   582     104A  34CC               	retlw	204
   583     104B  343D               	retlw	61
   584     104C  340A               	retlw	10
   585     104D  34D7               	retlw	215
   586     104E  3423               	retlw	35
   587     104F  343C               	retlw	60
   588     1050  346F               	retlw	111
   589     1051  3412               	retlw	18
   590     1052  3483               	retlw	131
   591     1053  343A               	retlw	58
   592     1054  3417               	retlw	23
   593     1055  34B7               	retlw	183
   594     1056  34D1               	retlw	209
   595     1057  3438               	retlw	56
   596     1058  34AC               	retlw	172
   597     1059  34C5               	retlw	197
   598     105A  3427               	retlw	39
   599     105B  3437               	retlw	55
   600     105C  34BD               	retlw	189
   601     105D  3437               	retlw	55
   602     105E  3486               	retlw	134
   603     105F  3435               	retlw	53
   604     1060  3495               	retlw	149
   605     1061  34BF               	retlw	191
   606     1062  34D6               	retlw	214
   607     1063  3433               	retlw	51
   608     1064  3477               	retlw	119
   609     1065  34CC               	retlw	204
   610     1066  342B               	retlw	43
   611     1067  3432               	retlw	50
   612     1068  345F               	retlw	95
   613     1069  3470               	retlw	112
   614     106A  3489               	retlw	137
   615     106B  3430               	retlw	48
   616     106C  34FF               	retlw	255
   617     106D  34E6               	retlw	230
   618     106E  34DB               	retlw	219
   619     106F  342E               	retlw	46
   620     1070  3408               	retlw	8
   621     1071  34E5               	retlw	229
   622     1072  343C               	retlw	60
   623     1073  341E               	retlw	30
   624     1074  3460               	retlw	96
   625     1075  3442               	retlw	66
   626     1076  34A2               	retlw	162
   627     1077  340D               	retlw	13
   628     1078                     __end_of__npowers_:
   629     1078                     _dpowers:
   630     1078  3401               	retlw	1
   631     1079  3400               	retlw	0
   632     107A  3400               	retlw	0
   633     107B  3400               	retlw	0
   634     107C  340A               	retlw	10
   635     107D  3400               	retlw	0
   636     107E  3400               	retlw	0
   637     107F  3400               	retlw	0
   638     1080  3464               	retlw	100
   639     1081  3400               	retlw	0
   640     1082  3400               	retlw	0
   641     1083  3400               	retlw	0
   642     1084  34E8               	retlw	232
   643     1085  3403               	retlw	3
   644     1086  3400               	retlw	0
   645     1087  3400               	retlw	0
   646     1088  3410               	retlw	16
   647     1089  3427               	retlw	39
   648     108A  3400               	retlw	0
   649     108B  3400               	retlw	0
   650     108C  34A0               	retlw	160
   651     108D  3486               	retlw	134
   652     108E  3401               	retlw	1
   653     108F  3400               	retlw	0
   654     1090  3440               	retlw	64
   655     1091  3442               	retlw	66
   656     1092  340F               	retlw	15
   657     1093  3400               	retlw	0
   658     1094  3480               	retlw	128
   659     1095  3496               	retlw	150
   660     1096  3498               	retlw	152
   661     1097  3400               	retlw	0
   662     1098  3400               	retlw	0
   663     1099  34E1               	retlw	225
   664     109A  34F5               	retlw	245
   665     109B  3405               	retlw	5
   666     109C  3400               	retlw	0
   667     109D  34CA               	retlw	202
   668     109E  349A               	retlw	154
   669     109F  343B               	retlw	59
   670     10A0                     __end_of_dpowers:
   671     0009                     _PORTE	set	9
   672     0006                     _PORTB	set	6
   673     0005                     _PORTA	set	5
   674     0006                     _PORTBbits	set	6
   675     0013                     _SSPBUF	set	19
   676     0014                     _SSPCON	set	20
   677     0008                     _PORTD	set	8
   678     0063                     _SSPIF	set	99
   679     005E                     _PEIE	set	94
   680     005F                     _GIE	set	95
   681     0049                     _RE1	set	73
   682     0048                     _RE0	set	72
   683     0095                     _WPUBbits	set	149
   684     0096                     _IOCBbits	set	150
   685     0081                     _OPTION_REGbits	set	129
   686     0089                     _TRISE	set	137
   687     0088                     _TRISD	set	136
   688     0086                     _TRISB	set	134
   689     0085                     _TRISA	set	133
   690     0091                     _SSPCON2bits	set	145
   691     0087                     _TRISCbits	set	135
   692     0094                     _SSPSTAT	set	148
   693     0093                     _SSPADD	set	147
   694     0091                     _SSPCON2	set	145
   695     0463                     _SSPIE	set	1123
   696     043C                     _TRISC4	set	1084
   697     043B                     _TRISC3	set	1083
   698     0189                     _ANSELH	set	393
   699     0188                     _ANSEL	set	392
   700     10A0                     STR_1:
   701     10A0  3444               	retlw	68	;'D'
   702     10A1  3461               	retlw	97	;'a'
   703     10A2  3474               	retlw	116	;'t'
   704     10A3  3465               	retlw	101	;'e'
   705     10A4  343A               	retlw	58	;':'
   706     10A5  3420               	retlw	32	;' '
   707     10A6  3400               	retlw	0
   708     10A7                     STR_4:
   709     10A7  3454               	retlw	84	;'T'
   710     10A8  3465               	retlw	101	;'e'
   711     10A9  346D               	retlw	109	;'m'
   712     10AA  3470               	retlw	112	;'p'
   713     10AB  343A               	retlw	58	;':'
   714     10AC  3420               	retlw	32	;' '
   715     10AD  3400               	retlw	0
   716     10AE                     STR_5:
   717     10AE  3425               	retlw	37	;'%'
   718     10AF  342E               	retlw	46	;'.'
   719     10B0  3432               	retlw	50	;'2'
   720     10B1  3466               	retlw	102	;'f'
   721     10B2  3400               	retlw	0
   722     10B3                     STR_6:
   723     10B3  3420               	retlw	32	;' '
   724     10B4  3443               	retlw	67	;'C'
   725     10B5  3400               	retlw	0
   726     10B6                     STR_2:
   727     10B6  342F               	retlw	47	;'/'
   728     10B7  3400               	retlw	0
   729     10B6                     
   730                           	psect	cinit
   731     07CD                     start_initialization:	
   732                           ; #config settings
   733                           
   734     07CD                     __initialization:
   735                           
   736                           ; Initialize objects allocated to BANK1
   737     07CD  1683               	bsf	3,5	;RP0=1, select bank1
   738     07CE  1303               	bcf	3,6	;RP1=0, select bank1
   739     07CF  160A  158A  2209  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   740     07D4  00EA               	movwf	__pdataBANK1& (0+127)
   741     07D5  160A  158A  220A  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   742     07DA  00EB               	movwf	(__pdataBANK1+1)& (0+127)
   743     07DB  160A  158A  220B  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   744     07E0  00EC               	movwf	(__pdataBANK1+2)& (0+127)
   745     07E1  160A  158A  220C  120A  118A  	fcall	__pidataBANK1+3	;fetch initializer
   746     07E6  00ED               	movwf	(__pdataBANK1+3)& (0+127)
   747     07E7  160A  158A  220D  120A  118A  	fcall	__pidataBANK1+4	;fetch initializer
   748     07EC  00EE               	movwf	(__pdataBANK1+4)& (0+127)
   749     07ED  160A  158A  220E  120A  118A  	fcall	__pidataBANK1+5	;fetch initializer
   750     07F2  00EF               	movwf	(__pdataBANK1+5)& (0+127)
   751                           
   752                           ; Clear objects allocated to BANK1
   753     07F3  1383               	bcf	3,7	;select IRP bank0
   754     07F4  30C8               	movlw	low __pbssBANK1
   755     07F5  0084               	movwf	4
   756     07F6  30EA               	movlw	low (__pbssBANK1+34)
   757     07F7  160A  158A  220F  120A  118A  	fcall	clear_ram0
   758     07FC                     end_of_initialization:	
   759                           ;End of C runtime variable initialization code
   760                           
   761     07FC                     __end_of__initialization:
   762     07FC  0183               	clrf	3
   763     07FD  160A  118A  2D7E   	ljmp	_main	;jump to C main() function
   764                           
   765                           	psect	bssBANK1
   766     00C8                     __pbssBANK1:
   767     00C8                     _temperatura:
   768     00C8                     	ds	4
   769     00CC                     _pot:
   770     00CC                     	ds	4
   771     00D0                     _hora:
   772     00D0                     	ds	2
   773     00D2                     _min:
   774     00D2                     	ds	2
   775     00D4                     _sec:
   776     00D4                     	ds	2
   777     00D6                     _valor:
   778     00D6                     	ds	20
   779                           
   780                           	psect	dataBANK1
   781     00EA                     __pdataBANK1:
   782     00EA                     _year:
   783     00EA                     	ds	2
   784     00EC                     _mes:
   785     00EC                     	ds	2
   786     00EE                     _dia:
   787     00EE                     	ds	2
   788                           
   789                           	psect	clrtext
   790     1A0F                     clear_ram0:	
   791                           ;	Called with FSR containing the base address, and
   792                           ;	W with the last address+1
   793                           
   794     1A0F  0064               	clrwdt	;clear the watchdog before getting into this loop
   795     1A10                     clrloop0:
   796     1A10  0180               	clrf	0	;clear RAM location pointed to by FSR
   797     1A11  0A84               	incf	4,f	;increment pointer
   798     1A12  0604               	xorwf	4,w	;XOR with final address
   799     1A13  1903               	btfsc	3,2	;have we reached the end yet?
   800     1A14  3400               	retlw	0	;all done for this memory range, return
   801     1A15  0604               	xorwf	4,w	;XOR again to restore value
   802     1A16  2A10               	goto	clrloop0	;do the next byte
   803                           
   804                           	psect	cstackBANK1
   805     00A0                     __pcstackBANK1:
   806     00A0                     ??_sprintf:
   807                           
   808                           ; 1 bytes @ 0x0
   809     00A0                     	ds	5
   810     00A5                     _sprintf$1076:
   811                           
   812                           ; 4 bytes @ 0x5
   813     00A5                     	ds	4
   814     00A9                     sprintf@ap:
   815                           
   816                           ; 1 bytes @ 0x9
   817     00A9                     	ds	1
   818     00AA                     sprintf@flag:
   819                           
   820                           ; 2 bytes @ 0xA
   821     00AA                     	ds	2
   822     00AC                     sprintf@val:
   823                           
   824                           ; 4 bytes @ 0xC
   825     00AC                     	ds	4
   826     00B0                     sprintf@eexp:
   827                           
   828                           ; 2 bytes @ 0x10
   829     00B0                     	ds	2
   830     00B2                     sprintf@tmpval:
   831                           
   832                           ; 4 bytes @ 0x12
   833     00B2                     	ds	4
   834     00B6                     sprintf@sp:
   835                           
   836                           ; 1 bytes @ 0x16
   837     00B6                     	ds	1
   838     00B7                     sprintf@prec:
   839                           
   840                           ; 2 bytes @ 0x17
   841     00B7                     	ds	2
   842     00B9                     sprintf@fval:
   843                           
   844                           ; 4 bytes @ 0x19
   845     00B9                     	ds	4
   846     00BD                     sprintf@c:
   847                           
   848                           ; 1 bytes @ 0x1D
   849     00BD                     	ds	1
   850     00BE                     ??_main:
   851                           
   852                           ; 1 bytes @ 0x1E
   853     00BE                     	ds	4
   854     00C2                     main@dia_0:
   855                           
   856                           ; 1 bytes @ 0x22
   857     00C2                     	ds	1
   858     00C3                     main@dia_1:
   859                           
   860                           ; 1 bytes @ 0x23
   861     00C3                     	ds	1
   862     00C4                     main@mes_0:
   863                           
   864                           ; 1 bytes @ 0x24
   865     00C4                     	ds	1
   866     00C5                     main@mes_1:
   867                           
   868                           ; 1 bytes @ 0x25
   869     00C5                     	ds	1
   870     00C6                     main@year_0:
   871                           
   872                           ; 1 bytes @ 0x26
   873     00C6                     	ds	1
   874     00C7                     main@year_1:
   875                           
   876                           ; 1 bytes @ 0x27
   877     00C7                     	ds	1
   878                           
   879                           	psect	cstackCOMMON
   880     0070                     __pcstackCOMMON:
   881     0070                     ?_isdigit:
   882     0070                     ?___fleq:	
   883                           ; 1 bit 
   884                           
   885     0070                     ?___flge:	
   886                           ; 1 bit 
   887                           
   888     0070                     ?_setup:	
   889                           ; 1 bit 
   890                           
   891     0070                     ?_ioc_init:	
   892                           ; 1 bytes @ 0x0
   893                           
   894     0070                     ??_ioc_init:	
   895                           ; 1 bytes @ 0x0
   896                           
   897     0070                     ?_setear_dia_tiempo:	
   898                           ; 1 bytes @ 0x0
   899                           
   900     0070                     ??_isdigit:	
   901                           ; 1 bytes @ 0x0
   902                           
   903     0070                     ?_Lcd_Port:	
   904                           ; 1 bytes @ 0x0
   905                           
   906     0070                     ??_Lcd_Port:	
   907                           ; 1 bytes @ 0x0
   908                           
   909     0070                     ?_Lcd_Cmd:	
   910                           ; 1 bytes @ 0x0
   911                           
   912     0070                     ?_Lcd_Init:	
   913                           ; 1 bytes @ 0x0
   914                           
   915     0070                     ?_Lcd_Write_Char:	
   916                           ; 1 bytes @ 0x0
   917                           
   918     0070                     ?_I2C_Master_Wait:	
   919                           ; 1 bytes @ 0x0
   920                           
   921     0070                     ??_I2C_Master_Wait:	
   922                           ; 1 bytes @ 0x0
   923                           
   924     0070                     ?_I2C_Master_Start:	
   925                           ; 1 bytes @ 0x0
   926                           
   927     0070                     ??_I2C_Master_Start:	
   928                           ; 1 bytes @ 0x0
   929                           
   930     0070                     ?_I2C_Master_Stop:	
   931                           ; 1 bytes @ 0x0
   932                           
   933     0070                     ??_I2C_Master_Stop:	
   934                           ; 1 bytes @ 0x0
   935                           
   936     0070                     ?_main:	
   937                           ; 1 bytes @ 0x0
   938                           
   939     0070                     ?__Umul8_16:	
   940                           ; 1 bytes @ 0x0
   941                           
   942     0070                     ?_I2C_Master_Read:	
   943                           ; 2 bytes @ 0x0
   944                           
   945     0070                     ?___wmul:	
   946                           ; 2 bytes @ 0x0
   947                           
   948     0070                     ?___awmod:	
   949                           ; 2 bytes @ 0x0
   950                           
   951     0070                     ?___lwmod:	
   952                           ; 2 bytes @ 0x0
   953                           
   954     0070                     ?__tdiv_to_l_:	
   955                           ; 2 bytes @ 0x0
   956                           
   957     0070                     ?__div_to_l_:	
   958                           ; 4 bytes @ 0x0
   959                           
   960     0070                     ?___lldiv:	
   961                           ; 4 bytes @ 0x0
   962                           
   963     0070                     ?___flneg:	
   964                           ; 4 bytes @ 0x0
   965                           
   966     0070                     ?___llmod:	
   967                           ; 4 bytes @ 0x0
   968                           
   969     0070                     Lcd_Port@a:	
   970                           ; 4 bytes @ 0x0
   971                           
   972     0070                     __Umul8_16@multiplicand:	
   973                           ; 1 bytes @ 0x0
   974                           
   975     0070                     _isdigit$863:	
   976                           ; 1 bytes @ 0x0
   977                           
   978     0070                     I2C_Master_Read@a:	
   979                           ; 1 bytes @ 0x0
   980                           
   981     0070                     ___wmul@multiplier:	
   982                           ; 2 bytes @ 0x0
   983                           
   984     0070                     ___awmod@divisor:	
   985                           ; 2 bytes @ 0x0
   986                           
   987     0070                     ___lwmod@divisor:	
   988                           ; 2 bytes @ 0x0
   989                           
   990     0070                     ___lldiv@divisor:	
   991                           ; 2 bytes @ 0x0
   992                           
   993     0070                     __div_to_l_@f1:	
   994                           ; 4 bytes @ 0x0
   995                           
   996     0070                     ___fleq@ff1:	
   997                           ; 4 bytes @ 0x0
   998                           
   999     0070                     ___flge@ff1:	
  1000                           ; 4 bytes @ 0x0
  1001                           
  1002     0070                     ___flneg@f1:	
  1003                           ; 4 bytes @ 0x0
  1004                           
  1005     0070                     __tdiv_to_l_@f1:	
  1006                           ; 4 bytes @ 0x0
  1007                           
  1008     0070                     ___llmod@divisor:	
  1009                           ; 4 bytes @ 0x0
  1010                           
  1011                           
  1012                           ; 4 bytes @ 0x0
  1013     0070                     	ds	1
  1014     0071                     ??_Lcd_Cmd:
  1015     0071                     ??_Lcd_Write_Char:	
  1016                           ; 1 bytes @ 0x1
  1017                           
  1018     0071                     isdigit@c:	
  1019                           ; 1 bytes @ 0x1
  1020                           
  1021                           
  1022                           ; 1 bytes @ 0x1
  1023     0071                     	ds	1
  1024     0072                     ??__Umul8_16:
  1025     0072                     ??_I2C_Master_Read:	
  1026                           ; 1 bytes @ 0x2
  1027                           
  1028     0072                     Lcd_Write_Char@a:	
  1029                           ; 1 bytes @ 0x2
  1030                           
  1031     0072                     ioc_init@pin:	
  1032                           ; 1 bytes @ 0x2
  1033                           
  1034     0072                     ___wmul@multiplicand:	
  1035                           ; 1 bytes @ 0x2
  1036                           
  1037     0072                     ___awmod@dividend:	
  1038                           ; 2 bytes @ 0x2
  1039                           
  1040     0072                     ___lwmod@dividend:	
  1041                           ; 2 bytes @ 0x2
  1042                           
  1043                           
  1044                           ; 2 bytes @ 0x2
  1045     0072                     	ds	1
  1046     0073                     ?_Lcd_Write_String:
  1047     0073                     Lcd_Cmd@a:	
  1048                           ; 1 bytes @ 0x3
  1049                           
  1050     0073                     Lcd_Write_String@a:	
  1051                           ; 1 bytes @ 0x3
  1052                           
  1053                           
  1054                           ; 2 bytes @ 0x3
  1055     0073                     	ds	1
  1056     0074                     ?_Lcd_Set_Cursor:
  1057     0074                     ??_Lcd_Init:	
  1058                           ; 1 bytes @ 0x4
  1059                           
  1060     0074                     ??___wmul:	
  1061                           ; 1 bytes @ 0x4
  1062                           
  1063     0074                     ??___awmod:	
  1064                           ; 1 bytes @ 0x4
  1065                           
  1066     0074                     ??___flneg:	
  1067                           ; 1 bytes @ 0x4
  1068                           
  1069     0074                     ??___lwmod:	
  1070                           ; 1 bytes @ 0x4
  1071                           
  1072     0074                     Lcd_Set_Cursor@b:	
  1073                           ; 1 bytes @ 0x4
  1074                           
  1075     0074                     ___awmod@counter:	
  1076                           ; 1 bytes @ 0x4
  1077                           
  1078     0074                     ___lwmod@counter:	
  1079                           ; 1 bytes @ 0x4
  1080                           
  1081     0074                     I2C_Master_Read@temp:	
  1082                           ; 1 bytes @ 0x4
  1083                           
  1084     0074                     ___wmul@product:	
  1085                           ; 2 bytes @ 0x4
  1086                           
  1087     0074                     __Umul8_16@product:	
  1088                           ; 2 bytes @ 0x4
  1089                           
  1090     0074                     ___lldiv@dividend:	
  1091                           ; 2 bytes @ 0x4
  1092                           
  1093     0074                     __div_to_l_@f2:	
  1094                           ; 4 bytes @ 0x4
  1095                           
  1096     0074                     ___fleq@ff2:	
  1097                           ; 4 bytes @ 0x4
  1098                           
  1099     0074                     ___flge@ff2:	
  1100                           ; 4 bytes @ 0x4
  1101                           
  1102     0074                     __tdiv_to_l_@f2:	
  1103                           ; 4 bytes @ 0x4
  1104                           
  1105     0074                     ___llmod@dividend:	
  1106                           ; 4 bytes @ 0x4
  1107                           
  1108                           
  1109                           ; 4 bytes @ 0x4
  1110     0074                     	ds	1
  1111     0075                     ??_Lcd_Set_Cursor:
  1112     0075                     ??_Lcd_Write_String:	
  1113                           ; 1 bytes @ 0x5
  1114                           
  1115     0075                     ?___lwdiv:	
  1116                           ; 1 bytes @ 0x5
  1117                           
  1118     0075                     Lcd_Set_Cursor@a:	
  1119                           ; 2 bytes @ 0x5
  1120                           
  1121     0075                     ___awmod@sign:	
  1122                           ; 1 bytes @ 0x5
  1123                           
  1124     0075                     ___lwdiv@divisor:	
  1125                           ; 1 bytes @ 0x5
  1126                           
  1127                           
  1128                           ; 2 bytes @ 0x5
  1129     0075                     	ds	1
  1130     0076                     ?___awdiv:
  1131     0076                     ?___xxtofl:	
  1132                           ; 2 bytes @ 0x6
  1133                           
  1134     0076                     ___awdiv@divisor:	
  1135                           ; 4 bytes @ 0x6
  1136                           
  1137     0076                     __Umul8_16@word_mpld:	
  1138                           ; 2 bytes @ 0x6
  1139                           
  1140     0076                     ___xxtofl@val:	
  1141                           ; 2 bytes @ 0x6
  1142                           
  1143                           
  1144                           ; 4 bytes @ 0x6
  1145     0076                     	ds	1
  1146     0077                     ___lwdiv@dividend:
  1147                           
  1148                           ; 2 bytes @ 0x7
  1149     0077                     	ds	1
  1150     0078                     ??__tdiv_to_l_:
  1151     0078                     ??__div_to_l_:	
  1152                           ; 1 bytes @ 0x8
  1153                           
  1154     0078                     ??___lldiv:	
  1155                           ; 1 bytes @ 0x8
  1156                           
  1157     0078                     ??___fleq:	
  1158                           ; 1 bytes @ 0x8
  1159                           
  1160     0078                     ??___flge:	
  1161                           ; 1 bytes @ 0x8
  1162                           
  1163     0078                     ??___llmod:	
  1164                           ; 1 bytes @ 0x8
  1165                           
  1166     0078                     __Umul8_16@multiplier:	
  1167                           ; 1 bytes @ 0x8
  1168                           
  1169     0078                     Lcd_Write_String@i:	
  1170                           ; 1 bytes @ 0x8
  1171                           
  1172     0078                     ___awdiv@dividend:	
  1173                           ; 2 bytes @ 0x8
  1174                           
  1175                           
  1176                           ; 2 bytes @ 0x8
  1177     0078                     	ds	1
  1178     0079                     ??___lwdiv:
  1179     0079                     ___llmod@counter:	
  1180                           ; 1 bytes @ 0x9
  1181                           
  1182     0079                     ___lwdiv@quotient:	
  1183                           ; 1 bytes @ 0x9
  1184                           
  1185     0079                     ___lldiv@quotient:	
  1186                           ; 2 bytes @ 0x9
  1187                           
  1188                           
  1189                           ; 4 bytes @ 0x9
  1190     0079                     	ds	1
  1191     007A                     ??___awdiv:
  1192     007A                     ??___xxtofl:	
  1193                           ; 1 bytes @ 0xA
  1194                           
  1195     007A                     ___awdiv@counter:	
  1196                           ; 1 bytes @ 0xA
  1197                           
  1198                           
  1199                           ; 1 bytes @ 0xA
  1200     007A                     	ds	1
  1201     007B                     ___awdiv@sign:
  1202     007B                     ___lwdiv@counter:	
  1203                           ; 1 bytes @ 0xB
  1204                           
  1205                           
  1206                           ; 1 bytes @ 0xB
  1207     007B                     	ds	1
  1208     007C                     ___awdiv@quotient:
  1209                           
  1210                           ; 2 bytes @ 0xC
  1211     007C                     	ds	1
  1212     007D                     ___lldiv@counter:
  1213                           
  1214                           ; 1 bytes @ 0xD
  1215     007D                     	ds	1
  1216     007E                     ??_setup:
  1217     007E                     ??_setear_dia_tiempo:	
  1218                           ; 1 bytes @ 0xE
  1219                           
  1220     007E                     ??_I2C_Master_Write:	
  1221                           ; 1 bytes @ 0xE
  1222                           
  1223     007E                     ??___flsub:	
  1224                           ; 1 bytes @ 0xE
  1225                           
  1226                           
  1227                           	psect	cstackBANK0
  1228     0020                     __pcstackBANK0:	
  1229                           ; 1 bytes @ 0xE
  1230                           
  1231     0020                     ?_I2C_Master_Init:
  1232     0020                     ?_DEC_A_BCD:	
  1233                           ; 1 bytes @ 0x0
  1234                           
  1235     0020                     ?___flmul:	
  1236                           ; 2 bytes @ 0x0
  1237                           
  1238     0020                     ___xxtofl@sign:	
  1239                           ; 4 bytes @ 0x0
  1240                           
  1241     0020                     DEC_A_BCD@convertir:	
  1242                           ; 1 bytes @ 0x0
  1243                           
  1244     0020                     I2C_Master_Init@c:	
  1245                           ; 2 bytes @ 0x0
  1246                           
  1247     0020                     __div_to_l_@quot:	
  1248                           ; 4 bytes @ 0x0
  1249                           
  1250     0020                     __tdiv_to_l_@quot:	
  1251                           ; 4 bytes @ 0x0
  1252                           
  1253     0020                     ___flmul@b:	
  1254                           ; 4 bytes @ 0x0
  1255                           
  1256                           
  1257                           ; 4 bytes @ 0x0
  1258     0020                     	ds	1
  1259     0021                     ___xxtofl@exp:
  1260                           
  1261                           ; 1 bytes @ 0x1
  1262     0021                     	ds	1
  1263     0022                     ??_DEC_A_BCD:
  1264     0022                     ___xxtofl@arg:	
  1265                           ; 1 bytes @ 0x2
  1266                           
  1267                           
  1268                           ; 4 bytes @ 0x2
  1269     0022                     	ds	2
  1270     0024                     ??_I2C_Master_Init:
  1271     0024                     ?_I2C_Master_Write:	
  1272                           ; 1 bytes @ 0x4
  1273                           
  1274     0024                     __div_to_l_@cntr:	
  1275                           ; 1 bytes @ 0x4
  1276                           
  1277     0024                     __tdiv_to_l_@cntr:	
  1278                           ; 1 bytes @ 0x4
  1279                           
  1280     0024                     I2C_Master_Write@d:	
  1281                           ; 1 bytes @ 0x4
  1282                           
  1283     0024                     ___flmul@a:	
  1284                           ; 2 bytes @ 0x4
  1285                           
  1286                           
  1287                           ; 4 bytes @ 0x4
  1288     0024                     	ds	1
  1289     0025                     __div_to_l_@exp1:
  1290     0025                     __tdiv_to_l_@exp1:	
  1291                           ; 1 bytes @ 0x5
  1292                           
  1293                           
  1294                           ; 1 bytes @ 0x5
  1295     0025                     	ds	3
  1296     0028                     ??___flmul:
  1297                           
  1298                           ; 1 bytes @ 0x8
  1299     0028                     	ds	5
  1300     002D                     ___flmul@sign:
  1301                           
  1302                           ; 1 bytes @ 0xD
  1303     002D                     	ds	1
  1304     002E                     ___flmul@grs:
  1305                           
  1306                           ; 4 bytes @ 0xE
  1307     002E                     	ds	4
  1308     0032                     ___flmul@aexp:
  1309                           
  1310                           ; 1 bytes @ 0x12
  1311     0032                     	ds	1
  1312     0033                     ___flmul@bexp:
  1313                           
  1314                           ; 1 bytes @ 0x13
  1315     0033                     	ds	1
  1316     0034                     ___flmul@prod:
  1317                           
  1318                           ; 4 bytes @ 0x14
  1319     0034                     	ds	4
  1320     0038                     ___flmul@temp:
  1321                           
  1322                           ; 2 bytes @ 0x18
  1323     0038                     	ds	2
  1324     003A                     ?_fround:
  1325     003A                     ?_scale:	
  1326                           ; 4 bytes @ 0x1A
  1327                           
  1328                           
  1329                           ; 4 bytes @ 0x1A
  1330     003A                     	ds	4
  1331     003E                     ??_fround:
  1332     003E                     ??_scale:	
  1333                           ; 1 bytes @ 0x1E
  1334                           
  1335                           
  1336                           ; 1 bytes @ 0x1E
  1337     003E                     	ds	7
  1338     0045                     _fround$1074:
  1339                           
  1340                           ; 4 bytes @ 0x25
  1341     0045                     	ds	3
  1342     0048                     _scale$1075:
  1343                           
  1344                           ; 4 bytes @ 0x28
  1345     0048                     	ds	1
  1346     0049                     _fround$1073:
  1347                           
  1348                           ; 4 bytes @ 0x29
  1349     0049                     	ds	3
  1350     004C                     scale@scl:
  1351                           
  1352                           ; 1 bytes @ 0x2C
  1353     004C                     	ds	1
  1354     004D                     ?___fltol:
  1355     004D                     fround@prec:	
  1356                           ; 4 bytes @ 0x2D
  1357                           
  1358     004D                     ___fltol@f1:	
  1359                           ; 1 bytes @ 0x2D
  1360                           
  1361                           
  1362                           ; 4 bytes @ 0x2D
  1363     004D                     	ds	1
  1364     004E                     ?___fladd:
  1365     004E                     ___fladd@b:	
  1366                           ; 4 bytes @ 0x2E
  1367                           
  1368                           
  1369                           ; 4 bytes @ 0x2E
  1370     004E                     	ds	3
  1371     0051                     ??___fltol:
  1372                           
  1373                           ; 1 bytes @ 0x31
  1374     0051                     	ds	1
  1375     0052                     ___fladd@a:
  1376                           
  1377                           ; 4 bytes @ 0x32
  1378     0052                     	ds	3
  1379     0055                     ___fltol@sign1:
  1380                           
  1381                           ; 1 bytes @ 0x35
  1382     0055                     	ds	1
  1383     0056                     ??___fladd:
  1384     0056                     ___fltol@exp1:	
  1385                           ; 1 bytes @ 0x36
  1386                           
  1387                           
  1388                           ; 1 bytes @ 0x36
  1389     0056                     	ds	8
  1390     005E                     ___fladd@signs:
  1391                           
  1392                           ; 1 bytes @ 0x3E
  1393     005E                     	ds	1
  1394     005F                     ___fladd@aexp:
  1395                           
  1396                           ; 1 bytes @ 0x3F
  1397     005F                     	ds	1
  1398     0060                     ___fladd@bexp:
  1399                           
  1400                           ; 1 bytes @ 0x40
  1401     0060                     	ds	1
  1402     0061                     ___fladd@grs:
  1403                           
  1404                           ; 1 bytes @ 0x41
  1405     0061                     	ds	1
  1406     0062                     ?___flsub:
  1407     0062                     ___flsub@a:	
  1408                           ; 4 bytes @ 0x42
  1409                           
  1410                           
  1411                           ; 4 bytes @ 0x42
  1412     0062                     	ds	4
  1413     0066                     ___flsub@b:
  1414                           
  1415                           ; 4 bytes @ 0x46
  1416     0066                     	ds	4
  1417     006A                     ?_sprintf:
  1418     006A                     sprintf@f:	
  1419                           ; 2 bytes @ 0x4A
  1420                           
  1421                           
  1422                           ; 1 bytes @ 0x4A
  1423     006A                     	ds	5
  1424                           
  1425                           	psect	maintext
  1426     157E                     __pmaintext:	
  1427 ;;
  1428 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1429 ;;
  1430 ;; *************** function _main *****************
  1431 ;; Defined at:
  1432 ;;		line 61 in file "main.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;		None
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;  year_1          1   39[BANK1 ] unsigned char 
  1437 ;;  year_0          1   38[BANK1 ] unsigned char 
  1438 ;;  mes_1           1   37[BANK1 ] unsigned char 
  1439 ;;  mes_0           1   36[BANK1 ] unsigned char 
  1440 ;;  dia_1           1   35[BANK1 ] unsigned char 
  1441 ;;  dia_0           1   34[BANK1 ] unsigned char 
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1    wreg      void 
  1444 ;; Registers used:
  1445 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1446 ;; Tracked objects:
  1447 ;;		On entry : B00/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1451 ;;      Params:         0       0       0       0       0
  1452 ;;      Locals:         0       0       6       0       0
  1453 ;;      Temps:          0       0       4       0       0
  1454 ;;      Totals:         0       0      10       0       0
  1455 ;;Total ram usage:       10 bytes
  1456 ;; Hardware stack levels required when called: 4
  1457 ;; This function calls:
  1458 ;;		_DEC_A_BCD
  1459 ;;		_I2C_Master_Read
  1460 ;;		_I2C_Master_Start
  1461 ;;		_I2C_Master_Stop
  1462 ;;		_I2C_Master_Write
  1463 ;;		_Lcd_Set_Cursor
  1464 ;;		_Lcd_Write_Char
  1465 ;;		_Lcd_Write_String
  1466 ;;		___awdiv
  1467 ;;		___awmod
  1468 ;;		___xxtofl
  1469 ;;		_setup
  1470 ;;		_sprintf
  1471 ;; This function is called by:
  1472 ;;		Startup code after reset
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475                           
  1476     157E                     _main:	
  1477                           ;psect for function _main
  1478                           
  1479     157E                     l3634:	
  1480                           ;incstack = 0
  1481                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1482                           
  1483                           
  1484                           ;main.c: 62:     setup();
  1485     157E  160A  158A  2487  160A  118A  	fcall	_setup
  1486     1583                     l3636:
  1487                           
  1488                           ;main.c: 65:         char dia_0 = dia % 10;
  1489     1583  300A               	movlw	10
  1490     1584  00F0               	movwf	___awmod@divisor
  1491     1585  3000               	movlw	0
  1492     1586  00F1               	movwf	___awmod@divisor+1
  1493     1587  1683               	bsf	3,5	;RP0=1, select bank1
  1494     1588  1303               	bcf	3,6	;RP1=0, select bank1
  1495     1589  086F               	movf	(_dia+1)^(0+128),w
  1496     158A  00F3               	movwf	___awmod@dividend+1
  1497     158B  086E               	movf	_dia^(0+128),w
  1498     158C  00F2               	movwf	___awmod@dividend
  1499     158D  160A  118A  20C2  160A  118A  	fcall	___awmod
  1500     1592  0870               	movf	?___awmod,w
  1501     1593  1683               	bsf	3,5	;RP0=1, select bank1
  1502     1594  1303               	bcf	3,6	;RP1=0, select bank1
  1503     1595  00C2               	movwf	main@dia_0^(0+128)
  1504     1596                     l3638:
  1505                           
  1506                           ;main.c: 66:         char dia_1 = dia / 10;
  1507     1596  300A               	movlw	10
  1508     1597  00F6               	movwf	___awdiv@divisor
  1509     1598  3000               	movlw	0
  1510     1599  00F7               	movwf	___awdiv@divisor+1
  1511     159A  086F               	movf	(_dia+1)^(0+128),w
  1512     159B  00F9               	movwf	___awdiv@dividend+1
  1513     159C  086E               	movf	_dia^(0+128),w
  1514     159D  00F8               	movwf	___awdiv@dividend
  1515     159E  160A  158A  262A  160A  118A  	fcall	___awdiv
  1516     15A3  0876               	movf	?___awdiv,w
  1517     15A4  1683               	bsf	3,5	;RP0=1, select bank1
  1518     15A5  1303               	bcf	3,6	;RP1=0, select bank1
  1519     15A6  00C3               	movwf	main@dia_1^(0+128)
  1520     15A7                     l3640:
  1521                           
  1522                           ;main.c: 67:         char mes_0 = mes % 10;
  1523     15A7  300A               	movlw	10
  1524     15A8  00F0               	movwf	___awmod@divisor
  1525     15A9  3000               	movlw	0
  1526     15AA  00F1               	movwf	___awmod@divisor+1
  1527     15AB  086D               	movf	(_mes+1)^(0+128),w
  1528     15AC  00F3               	movwf	___awmod@dividend+1
  1529     15AD  086C               	movf	_mes^(0+128),w
  1530     15AE  00F2               	movwf	___awmod@dividend
  1531     15AF  160A  118A  20C2  160A  118A  	fcall	___awmod
  1532     15B4  0870               	movf	?___awmod,w
  1533     15B5  1683               	bsf	3,5	;RP0=1, select bank1
  1534     15B6  1303               	bcf	3,6	;RP1=0, select bank1
  1535     15B7  00C4               	movwf	main@mes_0^(0+128)
  1536     15B8                     l3642:
  1537                           
  1538                           ;main.c: 68:         char mes_1 = mes / 10;
  1539     15B8  300A               	movlw	10
  1540     15B9  00F6               	movwf	___awdiv@divisor
  1541     15BA  3000               	movlw	0
  1542     15BB  00F7               	movwf	___awdiv@divisor+1
  1543     15BC  086D               	movf	(_mes+1)^(0+128),w
  1544     15BD  00F9               	movwf	___awdiv@dividend+1
  1545     15BE  086C               	movf	_mes^(0+128),w
  1546     15BF  00F8               	movwf	___awdiv@dividend
  1547     15C0  160A  158A  262A  160A  118A  	fcall	___awdiv
  1548     15C5  0876               	movf	?___awdiv,w
  1549     15C6  1683               	bsf	3,5	;RP0=1, select bank1
  1550     15C7  1303               	bcf	3,6	;RP1=0, select bank1
  1551     15C8  00C5               	movwf	main@mes_1^(0+128)
  1552     15C9                     l3644:
  1553                           
  1554                           ;main.c: 69:         char year_0 = year % 10;
  1555     15C9  300A               	movlw	10
  1556     15CA  00F0               	movwf	___awmod@divisor
  1557     15CB  3000               	movlw	0
  1558     15CC  00F1               	movwf	___awmod@divisor+1
  1559     15CD  086B               	movf	(_year+1)^(0+128),w
  1560     15CE  00F3               	movwf	___awmod@dividend+1
  1561     15CF  086A               	movf	_year^(0+128),w
  1562     15D0  00F2               	movwf	___awmod@dividend
  1563     15D1  160A  118A  20C2  160A  118A  	fcall	___awmod
  1564     15D6  0870               	movf	?___awmod,w
  1565     15D7  1683               	bsf	3,5	;RP0=1, select bank1
  1566     15D8  1303               	bcf	3,6	;RP1=0, select bank1
  1567     15D9  00C6               	movwf	main@year_0^(0+128)
  1568     15DA                     l3646:
  1569                           
  1570                           ;main.c: 70:         char year_1 = year / 10;
  1571     15DA  300A               	movlw	10
  1572     15DB  00F6               	movwf	___awdiv@divisor
  1573     15DC  3000               	movlw	0
  1574     15DD  00F7               	movwf	___awdiv@divisor+1
  1575     15DE  086B               	movf	(_year+1)^(0+128),w
  1576     15DF  00F9               	movwf	___awdiv@dividend+1
  1577     15E0  086A               	movf	_year^(0+128),w
  1578     15E1  00F8               	movwf	___awdiv@dividend
  1579     15E2  160A  158A  262A  160A  118A  	fcall	___awdiv
  1580     15E7  0876               	movf	?___awdiv,w
  1581     15E8  1683               	bsf	3,5	;RP0=1, select bank1
  1582     15E9  1303               	bcf	3,6	;RP1=0, select bank1
  1583     15EA  00C7               	movwf	main@year_1^(0+128)
  1584     15EB                     l3648:
  1585                           
  1586                           ;main.c: 72:         Lcd_Set_Cursor(1,1);
  1587     15EB  01F4               	clrf	Lcd_Set_Cursor@b
  1588     15EC  0AF4               	incf	Lcd_Set_Cursor@b,f
  1589     15ED  3001               	movlw	1
  1590     15EE  160A  158A  2283  160A  118A  	fcall	_Lcd_Set_Cursor
  1591     15F3                     l3650:
  1592                           
  1593                           ;main.c: 73:         Lcd_Write_String("Date: ");
  1594     15F3  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1595     15F4  00F3               	movwf	Lcd_Write_String@a
  1596     15F5  3080               	movlw	128
  1597     15F6  00F4               	movwf	Lcd_Write_String@a+1
  1598     15F7  160A  158A  23BE  160A  118A  	fcall	_Lcd_Write_String
  1599                           
  1600                           ;main.c: 74:         Lcd_Write_Char(dia_1 + '0');
  1601     15FC  1683               	bsf	3,5	;RP0=1, select bank1
  1602     15FD  1303               	bcf	3,6	;RP1=0, select bank1
  1603     15FE  0843               	movf	main@dia_1^(0+128),w
  1604     15FF  3E30               	addlw	48
  1605     1600  160A  158A  2253  160A  118A  	fcall	_Lcd_Write_Char
  1606                           
  1607                           ;main.c: 75:         Lcd_Write_Char(dia_0 + '0');
  1608     1605  1683               	bsf	3,5	;RP0=1, select bank1
  1609     1606  1303               	bcf	3,6	;RP1=0, select bank1
  1610     1607  0842               	movf	main@dia_0^(0+128),w
  1611     1608  3E30               	addlw	48
  1612     1609  160A  158A  2253  160A  118A  	fcall	_Lcd_Write_Char
  1613     160E                     l3652:
  1614                           
  1615                           ;main.c: 76:         Lcd_Write_String("/");
  1616     160E  30A7               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1617     160F  00F3               	movwf	Lcd_Write_String@a
  1618     1610  3080               	movlw	128
  1619     1611  00F4               	movwf	Lcd_Write_String@a+1
  1620     1612  160A  158A  23BE  160A  118A  	fcall	_Lcd_Write_String
  1621     1617                     l3654:
  1622                           
  1623                           ;main.c: 77:         Lcd_Write_Char(mes_1 + '0');
  1624     1617  1683               	bsf	3,5	;RP0=1, select bank1
  1625     1618  1303               	bcf	3,6	;RP1=0, select bank1
  1626     1619  0845               	movf	main@mes_1^(0+128),w
  1627     161A  3E30               	addlw	48
  1628     161B  160A  158A  2253  160A  118A  	fcall	_Lcd_Write_Char
  1629     1620                     l3656:
  1630                           
  1631                           ;main.c: 78:         Lcd_Write_Char(mes_0 + '0');
  1632     1620  1683               	bsf	3,5	;RP0=1, select bank1
  1633     1621  1303               	bcf	3,6	;RP1=0, select bank1
  1634     1622  0844               	movf	main@mes_0^(0+128),w
  1635     1623  3E30               	addlw	48
  1636     1624  160A  158A  2253  160A  118A  	fcall	_Lcd_Write_Char
  1637     1629                     l3658:
  1638                           
  1639                           ;main.c: 79:         Lcd_Write_String("/");
  1640     1629  30A7               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1641     162A  00F3               	movwf	Lcd_Write_String@a
  1642     162B  3080               	movlw	128
  1643     162C  00F4               	movwf	Lcd_Write_String@a+1
  1644     162D  160A  158A  23BE  160A  118A  	fcall	_Lcd_Write_String
  1645                           
  1646                           ;main.c: 80:         Lcd_Write_Char(year_1 + '0');
  1647     1632  1683               	bsf	3,5	;RP0=1, select bank1
  1648     1633  1303               	bcf	3,6	;RP1=0, select bank1
  1649     1634  0847               	movf	main@year_1^(0+128),w
  1650     1635  3E30               	addlw	48
  1651     1636  160A  158A  2253  160A  118A  	fcall	_Lcd_Write_Char
  1652                           
  1653                           ;main.c: 81:         Lcd_Write_Char(year_0 + '0');
  1654     163B  1683               	bsf	3,5	;RP0=1, select bank1
  1655     163C  1303               	bcf	3,6	;RP1=0, select bank1
  1656     163D  0846               	movf	main@year_0^(0+128),w
  1657     163E  3E30               	addlw	48
  1658     163F  160A  158A  2253  160A  118A  	fcall	_Lcd_Write_Char
  1659                           
  1660                           ;main.c: 83:         Lcd_Set_Cursor(2,1);
  1661     1644  01F4               	clrf	Lcd_Set_Cursor@b
  1662     1645  0AF4               	incf	Lcd_Set_Cursor@b,f
  1663     1646  3002               	movlw	2
  1664     1647  160A  158A  2283  160A  118A  	fcall	_Lcd_Set_Cursor
  1665     164C                     l3660:
  1666                           
  1667                           ;main.c: 84:         Lcd_Write_String("Temp: ");
  1668     164C  3098               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1669     164D  00F3               	movwf	Lcd_Write_String@a
  1670     164E  3080               	movlw	128
  1671     164F  00F4               	movwf	Lcd_Write_String@a+1
  1672     1650  160A  158A  23BE  160A  118A  	fcall	_Lcd_Write_String
  1673     1655                     l3662:
  1674                           
  1675                           ;main.c: 85:         sprintf(valor, "%.2f", pot);
  1676     1655  309F               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1677     1656  1283               	bcf	3,5	;RP0=0, select bank0
  1678     1657  1303               	bcf	3,6	;RP1=0, select bank0
  1679     1658  00EA               	movwf	sprintf@f
  1680     1659  1683               	bsf	3,5	;RP0=1, select bank1
  1681     165A  1303               	bcf	3,6	;RP1=0, select bank1
  1682     165B  084F               	movf	(_pot+3)^(0+128),w
  1683     165C  1283               	bcf	3,5	;RP0=0, select bank0
  1684     165D  1303               	bcf	3,6	;RP1=0, select bank0
  1685     165E  00EE               	movwf	?_sprintf+4
  1686     165F  1683               	bsf	3,5	;RP0=1, select bank1
  1687     1660  1303               	bcf	3,6	;RP1=0, select bank1
  1688     1661  084E               	movf	(_pot+2)^(0+128),w
  1689     1662  1283               	bcf	3,5	;RP0=0, select bank0
  1690     1663  1303               	bcf	3,6	;RP1=0, select bank0
  1691     1664  00ED               	movwf	?_sprintf+3
  1692     1665  1683               	bsf	3,5	;RP0=1, select bank1
  1693     1666  1303               	bcf	3,6	;RP1=0, select bank1
  1694     1667  084D               	movf	(_pot+1)^(0+128),w
  1695     1668  1283               	bcf	3,5	;RP0=0, select bank0
  1696     1669  1303               	bcf	3,6	;RP1=0, select bank0
  1697     166A  00EC               	movwf	?_sprintf+2
  1698     166B  1683               	bsf	3,5	;RP0=1, select bank1
  1699     166C  1303               	bcf	3,6	;RP1=0, select bank1
  1700     166D  084C               	movf	_pot^(0+128),w
  1701     166E  1283               	bcf	3,5	;RP0=0, select bank0
  1702     166F  1303               	bcf	3,6	;RP1=0, select bank0
  1703     1670  00EB               	movwf	?_sprintf+1
  1704     1671  30D6               	movlw	(low (_valor| 0))& (0+255)
  1705     1672  120A  118A  2179  160A  118A  	fcall	_sprintf
  1706     1677                     l3664:
  1707                           
  1708                           ;main.c: 86:         Lcd_Write_String(valor);
  1709     1677  30D6               	movlw	(low (_valor| 0))& (0+255)
  1710     1678  00F3               	movwf	Lcd_Write_String@a
  1711     1679  3000               	movlw	0
  1712     167A  00F4               	movwf	Lcd_Write_String@a+1
  1713     167B  160A  158A  23BE  160A  118A  	fcall	_Lcd_Write_String
  1714     1680                     l3666:
  1715                           
  1716                           ;main.c: 87:         Lcd_Set_Cursor(2,14);
  1717     1680  300E               	movlw	14
  1718     1681  00F4               	movwf	Lcd_Set_Cursor@b
  1719     1682  3002               	movlw	2
  1720     1683  160A  158A  2283  160A  118A  	fcall	_Lcd_Set_Cursor
  1721                           
  1722                           ;main.c: 88:         Lcd_Write_String(" C");
  1723     1688  30A4               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1724     1689  00F3               	movwf	Lcd_Write_String@a
  1725     168A  3080               	movlw	128
  1726     168B  00F4               	movwf	Lcd_Write_String@a+1
  1727     168C  160A  158A  23BE  160A  118A  	fcall	_Lcd_Write_String
  1728     1691                     l3668:
  1729                           
  1730                           ;main.c: 90:         if (PORTBbits.RB0 == 0){
  1731     1691  1283               	bcf	3,5	;RP0=0, select bank0
  1732     1692  1303               	bcf	3,6	;RP1=0, select bank0
  1733     1693  1806               	btfsc	6,0	;volatile
  1734     1694  2E96               	goto	u5441
  1735     1695  2E97               	goto	u5440
  1736     1696                     u5441:
  1737     1696  2EF0               	goto	l3688
  1738     1697                     u5440:
  1739     1697                     l173:
  1740     1697  1C06               	btfss	6,0	;volatile
  1741     1698  2E9A               	goto	u5451
  1742     1699  2E9B               	goto	u5450
  1743     169A                     u5451:
  1744     169A  2E97               	goto	l173
  1745     169B                     u5450:
  1746     169B                     l3672:
  1747                           
  1748                           ;main.c: 92:             dia++;
  1749     169B  3001               	movlw	1
  1750     169C  1683               	bsf	3,5	;RP0=1, select bank1
  1751     169D  1303               	bcf	3,6	;RP1=0, select bank1
  1752     169E  07EE               	addwf	_dia^(0+128),f
  1753     169F  1803               	skipnc
  1754     16A0  0AEF               	incf	(_dia+1)^(0+128),f
  1755     16A1  3000               	movlw	0
  1756     16A2  07EF               	addwf	(_dia+1)^(0+128),f
  1757     16A3                     l3674:
  1758                           
  1759                           ;main.c: 93:             if (dia > 31) dia = 0;
  1760     16A3  086F               	movf	(_dia+1)^(0+128),w
  1761     16A4  3A80               	xorlw	128
  1762     16A5  00FF               	movwf	btemp+1
  1763     16A6  3080               	movlw	128
  1764     16A7  027F               	subwf	btemp+1,w
  1765     16A8  1D03               	skipz
  1766     16A9  2EAC               	goto	u5465
  1767     16AA  3020               	movlw	32
  1768     16AB  026E               	subwf	_dia^(0+128),w
  1769     16AC                     u5465:
  1770     16AC  1C03               	skipc
  1771     16AD  2EAF               	goto	u5461
  1772     16AE  2EB0               	goto	u5460
  1773     16AF                     u5461:
  1774     16AF  2EB4               	goto	l3678
  1775     16B0                     u5460:
  1776     16B0                     l3676:
  1777     16B0  1683               	bsf	3,5	;RP0=1, select bank1
  1778     16B1  1303               	bcf	3,6	;RP1=0, select bank1
  1779     16B2  01EE               	clrf	_dia^(0+128)
  1780     16B3  01EF               	clrf	(_dia+1)^(0+128)
  1781     16B4                     l3678:
  1782                           
  1783                           ;main.c: 94:             I2C_Master_Start();
  1784     16B4  160A  158A  2217  160A  118A  	fcall	_I2C_Master_Start
  1785     16B9                     l3680:
  1786                           
  1787                           ;main.c: 95:             I2C_Master_Write(0xD0);
  1788     16B9  30D0               	movlw	208
  1789     16BA  1283               	bcf	3,5	;RP0=0, select bank0
  1790     16BB  1303               	bcf	3,6	;RP1=0, select bank0
  1791     16BC  00A4               	movwf	I2C_Master_Write@d
  1792     16BD  3000               	movlw	0
  1793     16BE  00A5               	movwf	I2C_Master_Write@d+1
  1794     16BF  160A  118A  20B8  160A  118A  	fcall	_I2C_Master_Write
  1795     16C4                     l3682:
  1796                           
  1797                           ;main.c: 96:             I2C_Master_Write(4);
  1798     16C4  3004               	movlw	4
  1799     16C5  1283               	bcf	3,5	;RP0=0, select bank0
  1800     16C6  1303               	bcf	3,6	;RP1=0, select bank0
  1801     16C7  00A4               	movwf	I2C_Master_Write@d
  1802     16C8  3000               	movlw	0
  1803     16C9  00A5               	movwf	I2C_Master_Write@d+1
  1804     16CA  160A  118A  20B8  160A  118A  	fcall	_I2C_Master_Write
  1805     16CF                     l3684:
  1806                           
  1807                           ;main.c: 97:             I2C_Master_Write(DEC_A_BCD(dia));
  1808     16CF  1683               	bsf	3,5	;RP0=1, select bank1
  1809     16D0  1303               	bcf	3,6	;RP1=0, select bank1
  1810     16D1  086F               	movf	(_dia+1)^(0+128),w
  1811     16D2  1283               	bcf	3,5	;RP0=0, select bank0
  1812     16D3  1303               	bcf	3,6	;RP1=0, select bank0
  1813     16D4  00A1               	movwf	DEC_A_BCD@convertir+1
  1814     16D5  1683               	bsf	3,5	;RP0=1, select bank1
  1815     16D6  1303               	bcf	3,6	;RP1=0, select bank1
  1816     16D7  086E               	movf	_dia^(0+128),w
  1817     16D8  1283               	bcf	3,5	;RP0=0, select bank0
  1818     16D9  1303               	bcf	3,6	;RP1=0, select bank0
  1819     16DA  00A0               	movwf	DEC_A_BCD@convertir
  1820     16DB  160A  158A  2316  160A  118A  	fcall	_DEC_A_BCD
  1821     16E0  1283               	bcf	3,5	;RP0=0, select bank0
  1822     16E1  1303               	bcf	3,6	;RP1=0, select bank0
  1823     16E2  0821               	movf	?_DEC_A_BCD+1,w
  1824     16E3  00A5               	movwf	I2C_Master_Write@d+1
  1825     16E4  0820               	movf	?_DEC_A_BCD,w
  1826     16E5  00A4               	movwf	I2C_Master_Write@d
  1827     16E6  160A  118A  20B8  160A  118A  	fcall	_I2C_Master_Write
  1828     16EB                     l3686:
  1829                           
  1830                           ;main.c: 98:             I2C_Master_Stop();
  1831     16EB  160A  158A  2220  160A  118A  	fcall	_I2C_Master_Stop
  1832     16F0                     l3688:
  1833                           
  1834                           ;main.c: 101:         if (PORTBbits.RB1 == 0){
  1835     16F0  1283               	bcf	3,5	;RP0=0, select bank0
  1836     16F1  1303               	bcf	3,6	;RP1=0, select bank0
  1837     16F2  1886               	btfsc	6,1	;volatile
  1838     16F3  2EF5               	goto	u5471
  1839     16F4  2EF6               	goto	u5470
  1840     16F5                     u5471:
  1841     16F5  2F51               	goto	l3708
  1842     16F6                     u5470:
  1843     16F6                     l178:
  1844     16F6  1C86               	btfss	6,1	;volatile
  1845     16F7  2EF9               	goto	u5481
  1846     16F8  2EFA               	goto	u5480
  1847     16F9                     u5481:
  1848     16F9  2EF6               	goto	l178
  1849     16FA                     u5480:
  1850     16FA                     l3692:
  1851                           
  1852                           ;main.c: 103:             mes++;
  1853     16FA  3001               	movlw	1
  1854     16FB  1683               	bsf	3,5	;RP0=1, select bank1
  1855     16FC  1303               	bcf	3,6	;RP1=0, select bank1
  1856     16FD  07EC               	addwf	_mes^(0+128),f
  1857     16FE  1803               	skipnc
  1858     16FF  0AED               	incf	(_mes+1)^(0+128),f
  1859     1700  3000               	movlw	0
  1860     1701  07ED               	addwf	(_mes+1)^(0+128),f
  1861     1702                     l3694:
  1862                           
  1863                           ;main.c: 104:             if (mes > 12) mes = 1;
  1864     1702  086D               	movf	(_mes+1)^(0+128),w
  1865     1703  3A80               	xorlw	128
  1866     1704  00FF               	movwf	btemp+1
  1867     1705  3080               	movlw	128
  1868     1706  027F               	subwf	btemp+1,w
  1869     1707  1D03               	skipz
  1870     1708  2F0B               	goto	u5495
  1871     1709  300D               	movlw	13
  1872     170A  026C               	subwf	_mes^(0+128),w
  1873     170B                     u5495:
  1874     170B  1C03               	skipc
  1875     170C  2F0E               	goto	u5491
  1876     170D  2F0F               	goto	u5490
  1877     170E                     u5491:
  1878     170E  2F15               	goto	l3698
  1879     170F                     u5490:
  1880     170F                     l3696:
  1881     170F  3001               	movlw	1
  1882     1710  1683               	bsf	3,5	;RP0=1, select bank1
  1883     1711  1303               	bcf	3,6	;RP1=0, select bank1
  1884     1712  00EC               	movwf	_mes^(0+128)
  1885     1713  3000               	movlw	0
  1886     1714  00ED               	movwf	(_mes^(0+128)+1)
  1887     1715                     l3698:
  1888                           
  1889                           ;main.c: 105:             I2C_Master_Start();
  1890     1715  160A  158A  2217  160A  118A  	fcall	_I2C_Master_Start
  1891     171A                     l3700:
  1892                           
  1893                           ;main.c: 106:             I2C_Master_Write(0xD0);
  1894     171A  30D0               	movlw	208
  1895     171B  1283               	bcf	3,5	;RP0=0, select bank0
  1896     171C  1303               	bcf	3,6	;RP1=0, select bank0
  1897     171D  00A4               	movwf	I2C_Master_Write@d
  1898     171E  3000               	movlw	0
  1899     171F  00A5               	movwf	I2C_Master_Write@d+1
  1900     1720  160A  118A  20B8  160A  118A  	fcall	_I2C_Master_Write
  1901     1725                     l3702:
  1902                           
  1903                           ;main.c: 107:             I2C_Master_Write(5);
  1904     1725  3005               	movlw	5
  1905     1726  1283               	bcf	3,5	;RP0=0, select bank0
  1906     1727  1303               	bcf	3,6	;RP1=0, select bank0
  1907     1728  00A4               	movwf	I2C_Master_Write@d
  1908     1729  3000               	movlw	0
  1909     172A  00A5               	movwf	I2C_Master_Write@d+1
  1910     172B  160A  118A  20B8  160A  118A  	fcall	_I2C_Master_Write
  1911     1730                     l3704:
  1912                           
  1913                           ;main.c: 108:             I2C_Master_Write(DEC_A_BCD(mes));
  1914     1730  1683               	bsf	3,5	;RP0=1, select bank1
  1915     1731  1303               	bcf	3,6	;RP1=0, select bank1
  1916     1732  086D               	movf	(_mes+1)^(0+128),w
  1917     1733  1283               	bcf	3,5	;RP0=0, select bank0
  1918     1734  1303               	bcf	3,6	;RP1=0, select bank0
  1919     1735  00A1               	movwf	DEC_A_BCD@convertir+1
  1920     1736  1683               	bsf	3,5	;RP0=1, select bank1
  1921     1737  1303               	bcf	3,6	;RP1=0, select bank1
  1922     1738  086C               	movf	_mes^(0+128),w
  1923     1739  1283               	bcf	3,5	;RP0=0, select bank0
  1924     173A  1303               	bcf	3,6	;RP1=0, select bank0
  1925     173B  00A0               	movwf	DEC_A_BCD@convertir
  1926     173C  160A  158A  2316  160A  118A  	fcall	_DEC_A_BCD
  1927     1741  1283               	bcf	3,5	;RP0=0, select bank0
  1928     1742  1303               	bcf	3,6	;RP1=0, select bank0
  1929     1743  0821               	movf	?_DEC_A_BCD+1,w
  1930     1744  00A5               	movwf	I2C_Master_Write@d+1
  1931     1745  0820               	movf	?_DEC_A_BCD,w
  1932     1746  00A4               	movwf	I2C_Master_Write@d
  1933     1747  160A  118A  20B8  160A  118A  	fcall	_I2C_Master_Write
  1934     174C                     l3706:
  1935                           
  1936                           ;main.c: 109:             I2C_Master_Stop();
  1937     174C  160A  158A  2220  160A  118A  	fcall	_I2C_Master_Stop
  1938     1751                     l3708:
  1939                           
  1940                           ;main.c: 112:         if (PORTBbits.RB2 == 0){
  1941     1751  1283               	bcf	3,5	;RP0=0, select bank0
  1942     1752  1303               	bcf	3,6	;RP1=0, select bank0
  1943     1753  1906               	btfsc	6,2	;volatile
  1944     1754  2F56               	goto	u5501
  1945     1755  2F57               	goto	u5500
  1946     1756                     u5501:
  1947     1756  2FB0               	goto	l3728
  1948     1757                     u5500:
  1949     1757                     l183:
  1950     1757  1D06               	btfss	6,2	;volatile
  1951     1758  2F5A               	goto	u5511
  1952     1759  2F5B               	goto	u5510
  1953     175A                     u5511:
  1954     175A  2F57               	goto	l183
  1955     175B                     u5510:
  1956     175B                     l3712:
  1957                           
  1958                           ;main.c: 114:             year++;
  1959     175B  3001               	movlw	1
  1960     175C  1683               	bsf	3,5	;RP0=1, select bank1
  1961     175D  1303               	bcf	3,6	;RP1=0, select bank1
  1962     175E  07EA               	addwf	_year^(0+128),f
  1963     175F  1803               	skipnc
  1964     1760  0AEB               	incf	(_year+1)^(0+128),f
  1965     1761  3000               	movlw	0
  1966     1762  07EB               	addwf	(_year+1)^(0+128),f
  1967     1763                     l3714:
  1968                           
  1969                           ;main.c: 115:             if (year > 30) year = 0;
  1970     1763  086B               	movf	(_year+1)^(0+128),w
  1971     1764  3A80               	xorlw	128
  1972     1765  00FF               	movwf	btemp+1
  1973     1766  3080               	movlw	128
  1974     1767  027F               	subwf	btemp+1,w
  1975     1768  1D03               	skipz
  1976     1769  2F6C               	goto	u5525
  1977     176A  301F               	movlw	31
  1978     176B  026A               	subwf	_year^(0+128),w
  1979     176C                     u5525:
  1980     176C  1C03               	skipc
  1981     176D  2F6F               	goto	u5521
  1982     176E  2F70               	goto	u5520
  1983     176F                     u5521:
  1984     176F  2F74               	goto	l3718
  1985     1770                     u5520:
  1986     1770                     l3716:
  1987     1770  1683               	bsf	3,5	;RP0=1, select bank1
  1988     1771  1303               	bcf	3,6	;RP1=0, select bank1
  1989     1772  01EA               	clrf	_year^(0+128)
  1990     1773  01EB               	clrf	(_year+1)^(0+128)
  1991     1774                     l3718:
  1992                           
  1993                           ;main.c: 116:             I2C_Master_Start();
  1994     1774  160A  158A  2217  160A  118A  	fcall	_I2C_Master_Start
  1995     1779                     l3720:
  1996                           
  1997                           ;main.c: 117:             I2C_Master_Write(0xD0);
  1998     1779  30D0               	movlw	208
  1999     177A  1283               	bcf	3,5	;RP0=0, select bank0
  2000     177B  1303               	bcf	3,6	;RP1=0, select bank0
  2001     177C  00A4               	movwf	I2C_Master_Write@d
  2002     177D  3000               	movlw	0
  2003     177E  00A5               	movwf	I2C_Master_Write@d+1
  2004     177F  160A  118A  20B8  160A  118A  	fcall	_I2C_Master_Write
  2005     1784                     l3722:
  2006                           
  2007                           ;main.c: 118:             I2C_Master_Write(6);
  2008     1784  3006               	movlw	6
  2009     1785  1283               	bcf	3,5	;RP0=0, select bank0
  2010     1786  1303               	bcf	3,6	;RP1=0, select bank0
  2011     1787  00A4               	movwf	I2C_Master_Write@d
  2012     1788  3000               	movlw	0
  2013     1789  00A5               	movwf	I2C_Master_Write@d+1
  2014     178A  160A  118A  20B8  160A  118A  	fcall	_I2C_Master_Write
  2015     178F                     l3724:
  2016                           
  2017                           ;main.c: 119:             I2C_Master_Write(DEC_A_BCD(year));
  2018     178F  1683               	bsf	3,5	;RP0=1, select bank1
  2019     1790  1303               	bcf	3,6	;RP1=0, select bank1
  2020     1791  086B               	movf	(_year+1)^(0+128),w
  2021     1792  1283               	bcf	3,5	;RP0=0, select bank0
  2022     1793  1303               	bcf	3,6	;RP1=0, select bank0
  2023     1794  00A1               	movwf	DEC_A_BCD@convertir+1
  2024     1795  1683               	bsf	3,5	;RP0=1, select bank1
  2025     1796  1303               	bcf	3,6	;RP1=0, select bank1
  2026     1797  086A               	movf	_year^(0+128),w
  2027     1798  1283               	bcf	3,5	;RP0=0, select bank0
  2028     1799  1303               	bcf	3,6	;RP1=0, select bank0
  2029     179A  00A0               	movwf	DEC_A_BCD@convertir
  2030     179B  160A  158A  2316  160A  118A  	fcall	_DEC_A_BCD
  2031     17A0  1283               	bcf	3,5	;RP0=0, select bank0
  2032     17A1  1303               	bcf	3,6	;RP1=0, select bank0
  2033     17A2  0821               	movf	?_DEC_A_BCD+1,w
  2034     17A3  00A5               	movwf	I2C_Master_Write@d+1
  2035     17A4  0820               	movf	?_DEC_A_BCD,w
  2036     17A5  00A4               	movwf	I2C_Master_Write@d
  2037     17A6  160A  118A  20B8  160A  118A  	fcall	_I2C_Master_Write
  2038     17AB                     l3726:
  2039                           
  2040                           ;main.c: 120:             I2C_Master_Stop();
  2041     17AB  160A  158A  2220  160A  118A  	fcall	_I2C_Master_Stop
  2042     17B0                     l3728:
  2043                           
  2044                           ;main.c: 126:         I2C_Master_Start();
  2045     17B0  160A  158A  2217  160A  118A  	fcall	_I2C_Master_Start
  2046     17B5                     l3730:
  2047                           
  2048                           ;main.c: 127:         I2C_Master_Write(0x51);
  2049     17B5  3051               	movlw	81
  2050     17B6  1283               	bcf	3,5	;RP0=0, select bank0
  2051     17B7  1303               	bcf	3,6	;RP1=0, select bank0
  2052     17B8  00A4               	movwf	I2C_Master_Write@d
  2053     17B9  3000               	movlw	0
  2054     17BA  00A5               	movwf	I2C_Master_Write@d+1
  2055     17BB  160A  118A  20B8  160A  118A  	fcall	_I2C_Master_Write
  2056     17C0                     l3732:
  2057                           
  2058                           ;main.c: 128:         pot = I2C_Master_Read(0);
  2059     17C0  3000               	movlw	0
  2060     17C1  00F0               	movwf	I2C_Master_Read@a
  2061     17C2  00F1               	movwf	I2C_Master_Read@a+1
  2062     17C3  160A  158A  22E8  160A  118A  	fcall	_I2C_Master_Read
  2063     17C8  0870               	movf	?_I2C_Master_Read,w
  2064     17C9  1683               	bsf	3,5	;RP0=1, select bank1
  2065     17CA  1303               	bcf	3,6	;RP1=0, select bank1
  2066     17CB  00BE               	movwf	??_main^(0+128)
  2067     17CC  0871               	movf	?_I2C_Master_Read+1,w
  2068     17CD  00BF               	movwf	(??_main^(0+128)+1)
  2069     17CE  01C0               	clrf	(??_main^(0+128)+2)
  2070     17CF  01C1               	clrf	(??_main^(0+128)+3)
  2071     17D0  0841               	movf	(??_main+3)^(0+128),w
  2072     17D1  00F9               	movwf	___xxtofl@val+3
  2073     17D2  0840               	movf	(??_main+2)^(0+128),w
  2074     17D3  00F8               	movwf	___xxtofl@val+2
  2075     17D4  083F               	movf	(??_main+1)^(0+128),w
  2076     17D5  00F7               	movwf	___xxtofl@val+1
  2077     17D6  083E               	movf	??_main^(0+128),w
  2078     17D7  00F6               	movwf	___xxtofl@val
  2079     17D8  3000               	movlw	0
  2080     17D9  120A  158A  20A2  160A  118A  	fcall	___xxtofl
  2081     17DE  0879               	movf	?___xxtofl+3,w
  2082     17DF  1683               	bsf	3,5	;RP0=1, select bank1
  2083     17E0  1303               	bcf	3,6	;RP1=0, select bank1
  2084     17E1  00CF               	movwf	(_pot+3)^(0+128)
  2085     17E2  0878               	movf	?___xxtofl+2,w
  2086     17E3  00CE               	movwf	(_pot+2)^(0+128)
  2087     17E4  0877               	movf	?___xxtofl+1,w
  2088     17E5  00CD               	movwf	(_pot+1)^(0+128)
  2089     17E6  0876               	movf	?___xxtofl,w
  2090     17E7  00CC               	movwf	_pot^(0+128)
  2091     17E8                     l3734:
  2092                           
  2093                           ;main.c: 129:         I2C_Master_Stop();
  2094     17E8  160A  158A  2220  160A  118A  	fcall	_I2C_Master_Stop
  2095     17ED                     l3736:
  2096                           
  2097                           ;main.c: 130:         _delay((unsigned long)((200)*(8000000/4000.0)));
  2098     17ED  3003               	movlw	3
  2099     17EE  1683               	bsf	3,5	;RP0=1, select bank1
  2100     17EF  1303               	bcf	3,6	;RP1=0, select bank1
  2101     17F0  00C0               	movwf	(??_main^(0+128)+2)
  2102     17F1  3008               	movlw	8
  2103     17F2  00BF               	movwf	(??_main^(0+128)+1)
  2104     17F3  3076               	movlw	118
  2105     17F4  00BE               	movwf	??_main^(0+128)
  2106     17F5                     u5537:
  2107     17F5  0BBE               	decfsz	??_main^(0+128),f
  2108     17F6  2FF5               	goto	u5537
  2109     17F7  0BBF               	decfsz	(??_main^(0+128)+1),f
  2110     17F8  2FF5               	goto	u5537
  2111     17F9  0BC0               	decfsz	(??_main^(0+128)+2),f
  2112     17FA  2FF5               	goto	u5537
  2113     17FB  0000               	nop
  2114     17FC  2D83               	goto	l3636
  2115     17FD  120A  118A  2800   	ljmp	start
  2116     1800                     __end_of_main:
  2117                           
  2118                           	psect	text1
  2119     0179                     __ptext1:	
  2120 ;; *************** function _sprintf *****************
  2121 ;; Defined at:
  2122 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;  sp              1    wreg     PTR unsigned char 
  2125 ;;		 -> valor(20), 
  2126 ;;  f               1   74[BANK0 ] PTR const unsigned char 
  2127 ;;		 -> STR_5(5), 
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;  sp              1   22[BANK1 ] PTR unsigned char 
  2130 ;;		 -> valor(20), 
  2131 ;;  fval            4   25[BANK1 ] PTR unsigned char 
  2132 ;;  tmpval          4   18[BANK1 ] struct .
  2133 ;;  val             4   12[BANK1 ] unsigned long 
  2134 ;;  prec            2   23[BANK1 ] int 
  2135 ;;  eexp            2   16[BANK1 ] int 
  2136 ;;  flag            2   10[BANK1 ] unsigned short 
  2137 ;;  cp              2    0        PTR const unsigned char 
  2138 ;;  len             2    0        unsigned int 
  2139 ;;  width           2    0        int 
  2140 ;;  c               1   29[BANK1 ] unsigned char 
  2141 ;;  ap              1    9[BANK1 ] PTR void [1]
  2142 ;;		 -> ?_sprintf(2), 
  2143 ;;  d               1    0        unsigned char 
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  2   74[BANK0 ] int 
  2146 ;; Registers used:
  2147 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2153 ;;      Params:         0       5       0       0       0
  2154 ;;      Locals:         0       0      25       0       0
  2155 ;;      Temps:          0       0       5       0       0
  2156 ;;      Totals:         0       5      30       0       0
  2157 ;;Total ram usage:       35 bytes
  2158 ;; Hardware stack levels used: 1
  2159 ;; Hardware stack levels required when called: 3
  2160 ;; This function calls:
  2161 ;;		___awdiv
  2162 ;;		___fladd
  2163 ;;		___fleq
  2164 ;;		___flge
  2165 ;;		___flmul
  2166 ;;		___flneg
  2167 ;;		___flsub
  2168 ;;		___fltol
  2169 ;;		___lldiv
  2170 ;;		___llmod
  2171 ;;		___wmul
  2172 ;;		___xxtofl
  2173 ;;		__div_to_l_
  2174 ;;		__tdiv_to_l_
  2175 ;;		_fround
  2176 ;;		_isdigit
  2177 ;;		_scale
  2178 ;; This function is called by:
  2179 ;;		_main
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183     0179                     _sprintf:	
  2184                           ;psect for function _sprintf
  2185                           
  2186                           
  2187                           ;incstack = 0
  2188                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2189                           ;sprintf@sp stored from wreg
  2190     0179  1683               	bsf	3,5	;RP0=1, select bank1
  2191     017A  1303               	bcf	3,6	;RP1=0, select bank1
  2192     017B  00B6               	movwf	sprintf@sp^(0+128)
  2193     017C                     l3408:
  2194                           
  2195                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2196     017C  306B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2197     017D  00A9               	movwf	sprintf@ap^(0+128)
  2198                           
  2199                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2200     017E  2FB4               	goto	l3608
  2201     017F                     l3410:
  2202                           
  2203                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2204     017F  3025               	movlw	37
  2205     0180  063D               	xorwf	sprintf@c^(0+128),w
  2206     0181  1903               	btfsc	3,2
  2207     0182  2984               	goto	u5091
  2208     0183  2985               	goto	u5090
  2209     0184                     u5091:
  2210     0184  298F               	goto	l3416
  2211     0185                     u5090:
  2212     0185                     l3412:
  2213                           
  2214                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2215     0185  0836               	movf	sprintf@sp^(0+128),w
  2216     0186  0084               	movwf	4
  2217     0187  083D               	movf	sprintf@c^(0+128),w
  2218     0188  1383               	bcf	3,7	;select IRP bank0
  2219     0189  0080               	movwf	0
  2220     018A                     l3414:
  2221     018A  3001               	movlw	1
  2222     018B  00FF               	movwf	btemp+1
  2223     018C  087F               	movf	btemp+1,w
  2224     018D  07B6               	addwf	sprintf@sp^(0+128),f
  2225                           
  2226                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  2227     018E  2FB4               	goto	l3608
  2228     018F                     l3416:
  2229                           
  2230                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2231     018F  01AA               	clrf	sprintf@flag^(0+128)
  2232     0190  01AB               	clrf	(sprintf@flag+1)^(0+128)
  2233     0191                     l3418:
  2234                           
  2235                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2236     0191  1283               	bcf	3,5	;RP0=0, select bank0
  2237     0192  1303               	bcf	3,6	;RP1=0, select bank0
  2238     0193  086A               	movf	sprintf@f,w
  2239     0194  0084               	movwf	4
  2240     0195  160A  118A  200A  120A  118A  	fcall	stringdir
  2241     019A  3A2E               	xorlw	46
  2242     019B  1D03               	skipz
  2243     019C  299E               	goto	u5101
  2244     019D  299F               	goto	u5100
  2245     019E                     u5101:
  2246     019E  29F1               	goto	l3434
  2247     019F                     u5100:
  2248     019F                     l3420:
  2249                           
  2250                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2251     019F  1683               	bsf	3,5	;RP0=1, select bank1
  2252     01A0  1303               	bcf	3,6	;RP1=0, select bank1
  2253     01A1  172B               	bsf	(sprintf@flag^(0+128)+1),6
  2254     01A2                     l3422:
  2255                           
  2256                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 630:    f++;
  2257     01A2  3001               	movlw	1
  2258     01A3  00FF               	movwf	btemp+1
  2259     01A4  087F               	movf	btemp+1,w
  2260     01A5  1283               	bcf	3,5	;RP0=0, select bank0
  2261     01A6  1303               	bcf	3,6	;RP1=0, select bank0
  2262     01A7  07EA               	addwf	sprintf@f,f
  2263     01A8                     l3424:
  2264                           
  2265                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2266     01A8  1683               	bsf	3,5	;RP0=1, select bank1
  2267     01A9  1303               	bcf	3,6	;RP1=0, select bank1
  2268     01AA  01B7               	clrf	sprintf@prec^(0+128)
  2269     01AB  01B8               	clrf	(sprintf@prec+1)^(0+128)
  2270                           
  2271                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2272     01AC  29DF               	goto	l3432
  2273     01AD                     l3426:
  2274                           
  2275                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2276     01AD  300A               	movlw	10
  2277     01AE  00F0               	movwf	___wmul@multiplier
  2278     01AF  3000               	movlw	0
  2279     01B0  00F1               	movwf	___wmul@multiplier+1
  2280     01B1  1683               	bsf	3,5	;RP0=1, select bank1
  2281     01B2  1303               	bcf	3,6	;RP1=0, select bank1
  2282     01B3  0838               	movf	(sprintf@prec+1)^(0+128),w
  2283     01B4  00F3               	movwf	___wmul@multiplicand+1
  2284     01B5  0837               	movf	sprintf@prec^(0+128),w
  2285     01B6  00F2               	movwf	___wmul@multiplicand
  2286     01B7  160A  158A  22C3  120A  118A  	fcall	___wmul
  2287     01BC  0871               	movf	?___wmul+1,w
  2288     01BD  1683               	bsf	3,5	;RP0=1, select bank1
  2289     01BE  1303               	bcf	3,6	;RP1=0, select bank1
  2290     01BF  00B8               	movwf	(sprintf@prec+1)^(0+128)
  2291     01C0  0870               	movf	?___wmul,w
  2292     01C1  00B7               	movwf	sprintf@prec^(0+128)
  2293     01C2                     l3428:
  2294                           
  2295                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2296     01C2  1283               	bcf	3,5	;RP0=0, select bank0
  2297     01C3  1303               	bcf	3,6	;RP1=0, select bank0
  2298     01C4  086A               	movf	sprintf@f,w
  2299     01C5  0084               	movwf	4
  2300     01C6  160A  118A  200A  120A  118A  	fcall	stringdir
  2301     01CB  3ED0               	addlw	208
  2302     01CC  1683               	bsf	3,5	;RP0=1, select bank1
  2303     01CD  1303               	bcf	3,6	;RP1=0, select bank1
  2304     01CE  00A0               	movwf	??_sprintf^(0+128)
  2305     01CF  30FF               	movlw	255
  2306     01D0  1803               	skipnc
  2307     01D1  3000               	movlw	0
  2308     01D2  00A1               	movwf	(??_sprintf^(0+128)+1)
  2309     01D3  0820               	movf	??_sprintf^(0+128),w
  2310     01D4  07B7               	addwf	sprintf@prec^(0+128),f
  2311     01D5  1803               	skipnc
  2312     01D6  0AB8               	incf	(sprintf@prec+1)^(0+128),f
  2313     01D7  0821               	movf	(??_sprintf+1)^(0+128),w
  2314     01D8  07B8               	addwf	(sprintf@prec+1)^(0+128),f
  2315     01D9                     l3430:
  2316     01D9  3001               	movlw	1
  2317     01DA  00FF               	movwf	btemp+1
  2318     01DB  087F               	movf	btemp+1,w
  2319     01DC  1283               	bcf	3,5	;RP0=0, select bank0
  2320     01DD  1303               	bcf	3,6	;RP1=0, select bank0
  2321     01DE  07EA               	addwf	sprintf@f,f
  2322     01DF                     l3432:
  2323                           
  2324                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2325     01DF  1283               	bcf	3,5	;RP0=0, select bank0
  2326     01E0  086A               	movf	sprintf@f,w
  2327     01E1  0084               	movwf	4
  2328     01E2  160A  118A  200A  120A  118A  	fcall	stringdir
  2329     01E7  160A  158A  2241  120A  118A  	fcall	_isdigit
  2330     01EC  1803               	btfsc	3,0
  2331     01ED  29EF               	goto	u5111
  2332     01EE  29F0               	goto	u5110
  2333     01EF                     u5111:
  2334     01EF  29AD               	goto	l3426
  2335     01F0                     u5110:
  2336     01F0  29F9               	goto	l3440
  2337     01F1                     l3434:
  2338                           
  2339                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2340     01F1  1683               	bsf	3,5	;RP0=1, select bank1
  2341     01F2  1303               	bcf	3,6	;RP1=0, select bank1
  2342     01F3  01B7               	clrf	sprintf@prec^(0+128)
  2343     01F4  01B8               	clrf	(sprintf@prec+1)^(0+128)
  2344     01F5                     l3436:
  2345                           
  2346                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2347     01F5  162B               	bsf	(sprintf@flag^(0+128)+1),4
  2348     01F6  29F9               	goto	l3440
  2349     01F7                     l352:	
  2350                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2351                           
  2352                           
  2353                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2354     01F7  152B               	bsf	(sprintf@flag^(0+128)+1),2
  2355                           
  2356                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 690:    break;
  2357     01F8  2A17               	goto	l3442
  2358     01F9                     l3440:
  2359     01F9  3001               	movlw	1
  2360     01FA  1283               	bcf	3,5	;RP0=0, select bank0
  2361     01FB  1303               	bcf	3,6	;RP1=0, select bank0
  2362     01FC  07EA               	addwf	sprintf@f,f
  2363     01FD  30FF               	movlw	-1
  2364     01FE  076A               	addwf	sprintf@f,w
  2365     01FF  0084               	movwf	4
  2366     0200  160A  118A  200A  120A  118A  	fcall	stringdir
  2367     0205  1683               	bsf	3,5	;RP0=1, select bank1
  2368     0206  1303               	bcf	3,6	;RP1=0, select bank1
  2369     0207  00BD               	movwf	sprintf@c^(0+128)
  2370     0208  00A0               	movwf	??_sprintf^(0+128)
  2371     0209  01A1               	clrf	(??_sprintf^(0+128)+1)
  2372                           
  2373                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2374                           ; Switch size 1, requested type "simple"
  2375                           ; Number of cases is 1, Range of values is 0 to 0
  2376                           ; switch strategies available:
  2377                           ; Name         Instructions Cycles
  2378                           ; simple_byte            4     3 (average)
  2379                           ; direct_byte           11     8 (fixed)
  2380                           ; jumptable            260     6 (fixed)
  2381                           ;	Chosen strategy is simple_byte
  2382     020A  0821               	movf	(??_sprintf+1)^(0+128),w
  2383     020B  3A00               	xorlw	0	; case 0
  2384     020C  1903               	skipnz
  2385     020D  2A0F               	goto	l3790
  2386     020E  2FB4               	goto	l3608
  2387     020F                     l3790:
  2388                           
  2389                           ; Switch size 1, requested type "simple"
  2390                           ; Number of cases is 2, Range of values is 0 to 102
  2391                           ; switch strategies available:
  2392                           ; Name         Instructions Cycles
  2393                           ; simple_byte            7     4 (average)
  2394                           ; jumptable            260     6 (fixed)
  2395                           ;	Chosen strategy is simple_byte
  2396     020F  0820               	movf	??_sprintf^(0+128),w
  2397     0210  3A00               	xorlw	0	; case 0
  2398     0211  1903               	skipnz
  2399     0212  2FC8               	goto	l3610
  2400     0213  3A66               	xorlw	102	; case 102
  2401     0214  1903               	skipnz
  2402     0215  29F7               	goto	l352
  2403     0216  2FB4               	goto	l3608
  2404     0217                     l3442:
  2405                           
  2406                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2407     0217  3000               	movlw	0
  2408     0218  052A               	andwf	sprintf@flag^(0+128),w
  2409     0219  00A0               	movwf	??_sprintf^(0+128)
  2410     021A  3007               	movlw	7
  2411     021B  052B               	andwf	(sprintf@flag+1)^(0+128),w
  2412     021C  00A1               	movwf	(??_sprintf+1)^(0+128)
  2413     021D  0820               	movf	??_sprintf^(0+128),w
  2414     021E  0421               	iorwf	(??_sprintf^(0+128)+1),w
  2415     021F  1903               	btfsc	3,2
  2416     0220  2A22               	goto	u5121
  2417     0221  2A23               	goto	u5120
  2418     0222                     u5121:
  2419     0222  2F71               	goto	l3590
  2420     0223                     u5120:
  2421     0223                     l3444:
  2422                           
  2423                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2424     0223  1E2B               	btfss	(sprintf@flag+1)^(0+128),4
  2425     0224  2A26               	goto	u5131
  2426     0225  2A27               	goto	u5130
  2427     0226                     u5131:
  2428     0226  2A2B               	goto	l3448
  2429     0227                     u5130:
  2430     0227                     l3446:
  2431                           
  2432                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2433     0227  3006               	movlw	6
  2434     0228  00B7               	movwf	sprintf@prec^(0+128)
  2435     0229  3000               	movlw	0
  2436     022A  00B8               	movwf	(sprintf@prec^(0+128)+1)
  2437     022B                     l3448:
  2438                           
  2439                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2440     022B  0829               	movf	sprintf@ap^(0+128),w
  2441     022C  0084               	movwf	4
  2442     022D  1383               	bcf	3,7	;select IRP bank0
  2443     022E  0800               	movf	0,w
  2444     022F  00B9               	movwf	sprintf@fval^(0+128)
  2445     0230  0A84               	incf	4,f
  2446     0231  0800               	movf	0,w
  2447     0232  00BA               	movwf	(sprintf@fval+1)^(0+128)
  2448     0233  0A84               	incf	4,f
  2449     0234  0800               	movf	0,w
  2450     0235  00BB               	movwf	(sprintf@fval+2)^(0+128)
  2451     0236  0A84               	incf	4,f
  2452     0237  0800               	movf	0,w
  2453     0238  00BC               	movwf	(sprintf@fval+3)^(0+128)
  2454     0239                     l3450:
  2455     0239  3004               	movlw	4
  2456     023A  00FF               	movwf	btemp+1
  2457     023B  087F               	movf	btemp+1,w
  2458     023C  07A9               	addwf	sprintf@ap^(0+128),f
  2459     023D                     l3452:
  2460                           
  2461                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2462     023D  083C               	movf	(sprintf@fval+3)^(0+128),w
  2463     023E  00F3               	movwf	___flge@ff1+3
  2464     023F  083B               	movf	(sprintf@fval+2)^(0+128),w
  2465     0240  00F2               	movwf	___flge@ff1+2
  2466     0241  083A               	movf	(sprintf@fval+1)^(0+128),w
  2467     0242  00F1               	movwf	___flge@ff1+1
  2468     0243  0839               	movf	sprintf@fval^(0+128),w
  2469     0244  00F0               	movwf	___flge@ff1
  2470     0245  3000               	movlw	0
  2471     0246  00F7               	movwf	___flge@ff2+3
  2472     0247  3000               	movlw	0
  2473     0248  00F6               	movwf	___flge@ff2+2
  2474     0249  3000               	movlw	0
  2475     024A  00F5               	movwf	___flge@ff2+1
  2476     024B  3000               	movlw	0
  2477     024C  00F4               	movwf	___flge@ff2
  2478     024D  120A  118A  2004  120A  118A  	fcall	___flge
  2479     0252  1803               	btfsc	3,0
  2480     0253  2A55               	goto	u5141
  2481     0254  2A56               	goto	u5140
  2482     0255                     u5141:
  2483     0255  2A73               	goto	l3458
  2484     0256                     u5140:
  2485     0256                     l3454:
  2486                           
  2487                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2488     0256  1683               	bsf	3,5	;RP0=1, select bank1
  2489     0257  1303               	bcf	3,6	;RP1=0, select bank1
  2490     0258  083C               	movf	(sprintf@fval+3)^(0+128),w
  2491     0259  00F3               	movwf	___flneg@f1+3
  2492     025A  083B               	movf	(sprintf@fval+2)^(0+128),w
  2493     025B  00F2               	movwf	___flneg@f1+2
  2494     025C  083A               	movf	(sprintf@fval+1)^(0+128),w
  2495     025D  00F1               	movwf	___flneg@f1+1
  2496     025E  0839               	movf	sprintf@fval^(0+128),w
  2497     025F  00F0               	movwf	___flneg@f1
  2498     0260  160A  158A  2229  120A  118A  	fcall	___flneg
  2499     0265  0873               	movf	?___flneg+3,w
  2500     0266  1683               	bsf	3,5	;RP0=1, select bank1
  2501     0267  1303               	bcf	3,6	;RP1=0, select bank1
  2502     0268  00BC               	movwf	(sprintf@fval+3)^(0+128)
  2503     0269  0872               	movf	?___flneg+2,w
  2504     026A  00BB               	movwf	(sprintf@fval+2)^(0+128)
  2505     026B  0871               	movf	?___flneg+1,w
  2506     026C  00BA               	movwf	(sprintf@fval+1)^(0+128)
  2507     026D  0870               	movf	?___flneg,w
  2508     026E  00B9               	movwf	sprintf@fval^(0+128)
  2509     026F                     l3456:
  2510                           
  2511                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2512     026F  3003               	movlw	3
  2513     0270  04AA               	iorwf	sprintf@flag^(0+128),f
  2514     0271  3000               	movlw	0
  2515     0272  04AB               	iorwf	(sprintf@flag+1)^(0+128),f
  2516     0273                     l3458:
  2517                           
  2518                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2519     0273  1683               	bsf	3,5	;RP0=1, select bank1
  2520     0274  1303               	bcf	3,6	;RP1=0, select bank1
  2521     0275  01B0               	clrf	sprintf@eexp^(0+128)
  2522     0276  01B1               	clrf	(sprintf@eexp+1)^(0+128)
  2523     0277                     l3460:
  2524                           
  2525                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2526     0277  083C               	movf	(sprintf@fval+3)^(0+128),w
  2527     0278  00F3               	movwf	___fleq@ff1+3
  2528     0279  083B               	movf	(sprintf@fval+2)^(0+128),w
  2529     027A  00F2               	movwf	___fleq@ff1+2
  2530     027B  083A               	movf	(sprintf@fval+1)^(0+128),w
  2531     027C  00F1               	movwf	___fleq@ff1+1
  2532     027D  0839               	movf	sprintf@fval^(0+128),w
  2533     027E  00F0               	movwf	___fleq@ff1
  2534     027F  3000               	movlw	0
  2535     0280  00F7               	movwf	___fleq@ff2+3
  2536     0281  3000               	movlw	0
  2537     0282  00F6               	movwf	___fleq@ff2+2
  2538     0283  3000               	movlw	0
  2539     0284  00F5               	movwf	___fleq@ff2+1
  2540     0285  3000               	movlw	0
  2541     0286  00F4               	movwf	___fleq@ff2
  2542     0287  160A  158A  24CC  120A  118A  	fcall	___fleq
  2543     028C  1803               	btfsc	3,0
  2544     028D  2A8F               	goto	u5151
  2545     028E  2A90               	goto	u5150
  2546     028F                     u5151:
  2547     028F  2B80               	goto	l3486
  2548     0290                     u5150:
  2549     0290                     l3462:
  2550                           
  2551                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2552     0290  1003               	clrc
  2553     0291  1683               	bsf	3,5	;RP0=1, select bank1
  2554     0292  1303               	bcf	3,6	;RP1=0, select bank1
  2555     0293  0D3B               	rlf	(sprintf@fval+2)^(0+128),w
  2556     0294  0D3C               	rlf	(sprintf@fval+3)^(0+128),w
  2557     0295  3E82               	addlw	130
  2558     0296  00B0               	movwf	sprintf@eexp^(0+128)
  2559     0297  30FF               	movlw	255
  2560     0298  1803               	skipnc
  2561     0299  3000               	movlw	0
  2562     029A  00B1               	movwf	(sprintf@eexp^(0+128)+1)
  2563     029B                     l3464:
  2564                           
  2565                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2566     029B  30FF               	movlw	255
  2567     029C  07B0               	addwf	sprintf@eexp^(0+128),f
  2568     029D  1803               	skipnc
  2569     029E  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  2570     029F  30FF               	movlw	255
  2571     02A0  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  2572     02A1                     l3466:
  2573                           
  2574                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2575     02A1  3003               	movlw	3
  2576     02A2  00F0               	movwf	___wmul@multiplier
  2577     02A3  3000               	movlw	0
  2578     02A4  00F1               	movwf	___wmul@multiplier+1
  2579     02A5  0831               	movf	(sprintf@eexp+1)^(0+128),w
  2580     02A6  00F3               	movwf	___wmul@multiplicand+1
  2581     02A7  0830               	movf	sprintf@eexp^(0+128),w
  2582     02A8  00F2               	movwf	___wmul@multiplicand
  2583     02A9  160A  158A  22C3  120A  118A  	fcall	___wmul
  2584     02AE  0871               	movf	?___wmul+1,w
  2585     02AF  1683               	bsf	3,5	;RP0=1, select bank1
  2586     02B0  1303               	bcf	3,6	;RP1=0, select bank1
  2587     02B1  00B1               	movwf	(sprintf@eexp+1)^(0+128)
  2588     02B2  0870               	movf	?___wmul,w
  2589     02B3  00B0               	movwf	sprintf@eexp^(0+128)
  2590     02B4                     l3468:
  2591                           
  2592                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2593     02B4  300A               	movlw	10
  2594     02B5  00F6               	movwf	___awdiv@divisor
  2595     02B6  3000               	movlw	0
  2596     02B7  00F7               	movwf	___awdiv@divisor+1
  2597     02B8  0831               	movf	(sprintf@eexp+1)^(0+128),w
  2598     02B9  00F9               	movwf	___awdiv@dividend+1
  2599     02BA  0830               	movf	sprintf@eexp^(0+128),w
  2600     02BB  00F8               	movwf	___awdiv@dividend
  2601     02BC  160A  158A  262A  120A  118A  	fcall	___awdiv
  2602     02C1  0877               	movf	?___awdiv+1,w
  2603     02C2  1683               	bsf	3,5	;RP0=1, select bank1
  2604     02C3  1303               	bcf	3,6	;RP1=0, select bank1
  2605     02C4  00B1               	movwf	(sprintf@eexp+1)^(0+128)
  2606     02C5  0876               	movf	?___awdiv,w
  2607     02C6  00B0               	movwf	sprintf@eexp^(0+128)
  2608     02C7                     l3470:
  2609                           
  2610                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2611     02C7  1FB1               	btfss	(sprintf@eexp+1)^(0+128),7
  2612     02C8  2ACA               	goto	u5161
  2613     02C9  2ACB               	goto	u5160
  2614     02CA                     u5161:
  2615     02CA  2AD1               	goto	l3474
  2616     02CB                     u5160:
  2617     02CB                     l3472:
  2618                           
  2619                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2620     02CB  30FF               	movlw	255
  2621     02CC  07B0               	addwf	sprintf@eexp^(0+128),f
  2622     02CD  1803               	skipnc
  2623     02CE  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  2624     02CF  30FF               	movlw	255
  2625     02D0  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  2626     02D1                     l3474:
  2627                           
  2628                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2629     02D1  0330               	decf	sprintf@eexp^(0+128),w
  2630     02D2  3AFF               	xorlw	255
  2631     02D3  120A  158A  24A1  120A  118A  	fcall	_scale
  2632     02D8  1283               	bcf	3,5	;RP0=0, select bank0
  2633     02D9  1303               	bcf	3,6	;RP1=0, select bank0
  2634     02DA  083D               	movf	?_scale+3,w
  2635     02DB  1683               	bsf	3,5	;RP0=1, select bank1
  2636     02DC  1303               	bcf	3,6	;RP1=0, select bank1
  2637     02DD  00B5               	movwf	(sprintf@tmpval+3)^(0+128)
  2638     02DE  1283               	bcf	3,5	;RP0=0, select bank0
  2639     02DF  1303               	bcf	3,6	;RP1=0, select bank0
  2640     02E0  083C               	movf	?_scale+2,w
  2641     02E1  1683               	bsf	3,5	;RP0=1, select bank1
  2642     02E2  1303               	bcf	3,6	;RP1=0, select bank1
  2643     02E3  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
  2644     02E4  1283               	bcf	3,5	;RP0=0, select bank0
  2645     02E5  1303               	bcf	3,6	;RP1=0, select bank0
  2646     02E6  083B               	movf	?_scale+1,w
  2647     02E7  1683               	bsf	3,5	;RP0=1, select bank1
  2648     02E8  1303               	bcf	3,6	;RP1=0, select bank1
  2649     02E9  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
  2650     02EA  1283               	bcf	3,5	;RP0=0, select bank0
  2651     02EB  1303               	bcf	3,6	;RP1=0, select bank0
  2652     02EC  083A               	movf	?_scale,w
  2653     02ED  1683               	bsf	3,5	;RP0=1, select bank1
  2654     02EE  1303               	bcf	3,6	;RP1=0, select bank1
  2655     02EF  00B2               	movwf	sprintf@tmpval^(0+128)
  2656     02F0                     l3476:
  2657                           
  2658                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2659     02F0  083C               	movf	(sprintf@fval+3)^(0+128),w
  2660     02F1  1283               	bcf	3,5	;RP0=0, select bank0
  2661     02F2  1303               	bcf	3,6	;RP1=0, select bank0
  2662     02F3  00A3               	movwf	___flmul@b+3
  2663     02F4  1683               	bsf	3,5	;RP0=1, select bank1
  2664     02F5  1303               	bcf	3,6	;RP1=0, select bank1
  2665     02F6  083B               	movf	(sprintf@fval+2)^(0+128),w
  2666     02F7  1283               	bcf	3,5	;RP0=0, select bank0
  2667     02F8  1303               	bcf	3,6	;RP1=0, select bank0
  2668     02F9  00A2               	movwf	___flmul@b+2
  2669     02FA  1683               	bsf	3,5	;RP0=1, select bank1
  2670     02FB  1303               	bcf	3,6	;RP1=0, select bank1
  2671     02FC  083A               	movf	(sprintf@fval+1)^(0+128),w
  2672     02FD  1283               	bcf	3,5	;RP0=0, select bank0
  2673     02FE  1303               	bcf	3,6	;RP1=0, select bank0
  2674     02FF  00A1               	movwf	___flmul@b+1
  2675     0300  1683               	bsf	3,5	;RP0=1, select bank1
  2676     0301  1303               	bcf	3,6	;RP1=0, select bank1
  2677     0302  0839               	movf	sprintf@fval^(0+128),w
  2678     0303  1283               	bcf	3,5	;RP0=0, select bank0
  2679     0304  1303               	bcf	3,6	;RP1=0, select bank0
  2680     0305  00A0               	movwf	___flmul@b
  2681     0306  1683               	bsf	3,5	;RP0=1, select bank1
  2682     0307  1303               	bcf	3,6	;RP1=0, select bank1
  2683     0308  0835               	movf	(sprintf@tmpval+3)^(0+128),w
  2684     0309  1283               	bcf	3,5	;RP0=0, select bank0
  2685     030A  1303               	bcf	3,6	;RP1=0, select bank0
  2686     030B  00A7               	movwf	___flmul@a+3
  2687     030C  1683               	bsf	3,5	;RP0=1, select bank1
  2688     030D  1303               	bcf	3,6	;RP1=0, select bank1
  2689     030E  0834               	movf	(sprintf@tmpval+2)^(0+128),w
  2690     030F  1283               	bcf	3,5	;RP0=0, select bank0
  2691     0310  1303               	bcf	3,6	;RP1=0, select bank0
  2692     0311  00A6               	movwf	___flmul@a+2
  2693     0312  1683               	bsf	3,5	;RP0=1, select bank1
  2694     0313  1303               	bcf	3,6	;RP1=0, select bank1
  2695     0314  0833               	movf	(sprintf@tmpval+1)^(0+128),w
  2696     0315  1283               	bcf	3,5	;RP0=0, select bank0
  2697     0316  1303               	bcf	3,6	;RP1=0, select bank0
  2698     0317  00A5               	movwf	___flmul@a+1
  2699     0318  1683               	bsf	3,5	;RP0=1, select bank1
  2700     0319  1303               	bcf	3,6	;RP1=0, select bank1
  2701     031A  0832               	movf	sprintf@tmpval^(0+128),w
  2702     031B  1283               	bcf	3,5	;RP0=0, select bank0
  2703     031C  1303               	bcf	3,6	;RP1=0, select bank0
  2704     031D  00A4               	movwf	___flmul@a
  2705     031E  120A  158A  215C  120A  118A  	fcall	___flmul
  2706     0323  1283               	bcf	3,5	;RP0=0, select bank0
  2707     0324  1303               	bcf	3,6	;RP1=0, select bank0
  2708     0325  0823               	movf	?___flmul+3,w
  2709     0326  1683               	bsf	3,5	;RP0=1, select bank1
  2710     0327  1303               	bcf	3,6	;RP1=0, select bank1
  2711     0328  00B5               	movwf	(sprintf@tmpval+3)^(0+128)
  2712     0329  1283               	bcf	3,5	;RP0=0, select bank0
  2713     032A  1303               	bcf	3,6	;RP1=0, select bank0
  2714     032B  0822               	movf	?___flmul+2,w
  2715     032C  1683               	bsf	3,5	;RP0=1, select bank1
  2716     032D  1303               	bcf	3,6	;RP1=0, select bank1
  2717     032E  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
  2718     032F  1283               	bcf	3,5	;RP0=0, select bank0
  2719     0330  1303               	bcf	3,6	;RP1=0, select bank0
  2720     0331  0821               	movf	?___flmul+1,w
  2721     0332  1683               	bsf	3,5	;RP0=1, select bank1
  2722     0333  1303               	bcf	3,6	;RP1=0, select bank1
  2723     0334  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
  2724     0335  1283               	bcf	3,5	;RP0=0, select bank0
  2725     0336  1303               	bcf	3,6	;RP1=0, select bank0
  2726     0337  0820               	movf	?___flmul,w
  2727     0338  1683               	bsf	3,5	;RP0=1, select bank1
  2728     0339  1303               	bcf	3,6	;RP1=0, select bank1
  2729     033A  00B2               	movwf	sprintf@tmpval^(0+128)
  2730     033B                     l3478:
  2731                           
  2732                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2733     033B  0835               	movf	(sprintf@tmpval+3)^(0+128),w
  2734     033C  00F3               	movwf	___flge@ff1+3
  2735     033D  0834               	movf	(sprintf@tmpval+2)^(0+128),w
  2736     033E  00F2               	movwf	___flge@ff1+2
  2737     033F  0833               	movf	(sprintf@tmpval+1)^(0+128),w
  2738     0340  00F1               	movwf	___flge@ff1+1
  2739     0341  0832               	movf	sprintf@tmpval^(0+128),w
  2740     0342  00F0               	movwf	___flge@ff1
  2741     0343  303F               	movlw	63
  2742     0344  00F7               	movwf	___flge@ff2+3
  2743     0345  3080               	movlw	128
  2744     0346  00F6               	movwf	___flge@ff2+2
  2745     0347  3000               	movlw	0
  2746     0348  00F5               	movwf	___flge@ff2+1
  2747     0349  3000               	movlw	0
  2748     034A  00F4               	movwf	___flge@ff2
  2749     034B  120A  118A  2004  120A  118A  	fcall	___flge
  2750     0350  1803               	btfsc	3,0
  2751     0351  2B53               	goto	u5171
  2752     0352  2B54               	goto	u5170
  2753     0353                     u5171:
  2754     0353  2B5D               	goto	l3482
  2755     0354                     u5170:
  2756     0354                     l3480:
  2757                           
  2758                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2759     0354  30FF               	movlw	255
  2760     0355  1683               	bsf	3,5	;RP0=1, select bank1
  2761     0356  1303               	bcf	3,6	;RP1=0, select bank1
  2762     0357  07B0               	addwf	sprintf@eexp^(0+128),f
  2763     0358  1803               	skipnc
  2764     0359  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  2765     035A  30FF               	movlw	255
  2766     035B  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  2767     035C  2B80               	goto	l3486
  2768     035D                     l3482:
  2769     035D  1683               	bsf	3,5	;RP0=1, select bank1
  2770     035E  1303               	bcf	3,6	;RP1=0, select bank1
  2771     035F  0835               	movf	(sprintf@tmpval+3)^(0+128),w
  2772     0360  00F3               	movwf	___flge@ff1+3
  2773     0361  0834               	movf	(sprintf@tmpval+2)^(0+128),w
  2774     0362  00F2               	movwf	___flge@ff1+2
  2775     0363  0833               	movf	(sprintf@tmpval+1)^(0+128),w
  2776     0364  00F1               	movwf	___flge@ff1+1
  2777     0365  0832               	movf	sprintf@tmpval^(0+128),w
  2778     0366  00F0               	movwf	___flge@ff1
  2779     0367  3041               	movlw	65
  2780     0368  00F7               	movwf	___flge@ff2+3
  2781     0369  3020               	movlw	32
  2782     036A  00F6               	movwf	___flge@ff2+2
  2783     036B  3000               	movlw	0
  2784     036C  00F5               	movwf	___flge@ff2+1
  2785     036D  3000               	movlw	0
  2786     036E  00F4               	movwf	___flge@ff2
  2787     036F  120A  118A  2004  120A  118A  	fcall	___flge
  2788     0374  1C03               	btfss	3,0
  2789     0375  2B77               	goto	u5181
  2790     0376  2B78               	goto	u5180
  2791     0377                     u5181:
  2792     0377  2B80               	goto	l3486
  2793     0378                     u5180:
  2794     0378                     l3484:
  2795                           
  2796                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2797     0378  3001               	movlw	1
  2798     0379  1683               	bsf	3,5	;RP0=1, select bank1
  2799     037A  1303               	bcf	3,6	;RP1=0, select bank1
  2800     037B  07B0               	addwf	sprintf@eexp^(0+128),f
  2801     037C  1803               	skipnc
  2802     037D  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  2803     037E  3000               	movlw	0
  2804     037F  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  2805     0380                     l3486:
  2806                           
  2807                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2808     0380  1683               	bsf	3,5	;RP0=1, select bank1
  2809     0381  1303               	bcf	3,6	;RP1=0, select bank1
  2810     0382  0838               	movf	(sprintf@prec+1)^(0+128),w
  2811     0383  3A80               	xorlw	128
  2812     0384  00FF               	movwf	btemp+1
  2813     0385  3080               	movlw	128
  2814     0386  027F               	subwf	btemp+1,w
  2815     0387  1D03               	skipz
  2816     0388  2B8B               	goto	u5195
  2817     0389  300D               	movlw	13
  2818     038A  0237               	subwf	sprintf@prec^(0+128),w
  2819     038B                     u5195:
  2820     038B  1803               	skipnc
  2821     038C  2B8E               	goto	u5191
  2822     038D  2B8F               	goto	u5190
  2823     038E                     u5191:
  2824     038E  2BD6               	goto	l3490
  2825     038F                     u5190:
  2826     038F                     l3488:
  2827                           
  2828                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2829     038F  1683               	bsf	3,5	;RP0=1, select bank1
  2830     0390  1303               	bcf	3,6	;RP1=0, select bank1
  2831     0391  0837               	movf	sprintf@prec^(0+128),w
  2832     0392  160A  118A  211B  120A  118A  	fcall	_fround
  2833     0397  1283               	bcf	3,5	;RP0=0, select bank0
  2834     0398  1303               	bcf	3,6	;RP1=0, select bank0
  2835     0399  083D               	movf	?_fround+3,w
  2836     039A  00D1               	movwf	___fladd@b+3
  2837     039B  083C               	movf	?_fround+2,w
  2838     039C  00D0               	movwf	___fladd@b+2
  2839     039D  083B               	movf	?_fround+1,w
  2840     039E  00CF               	movwf	___fladd@b+1
  2841     039F  083A               	movf	?_fround,w
  2842     03A0  00CE               	movwf	___fladd@b
  2843     03A1  1683               	bsf	3,5	;RP0=1, select bank1
  2844     03A2  1303               	bcf	3,6	;RP1=0, select bank1
  2845     03A3  083C               	movf	(sprintf@fval+3)^(0+128),w
  2846     03A4  1283               	bcf	3,5	;RP0=0, select bank0
  2847     03A5  1303               	bcf	3,6	;RP1=0, select bank0
  2848     03A6  00D5               	movwf	___fladd@a+3
  2849     03A7  1683               	bsf	3,5	;RP0=1, select bank1
  2850     03A8  1303               	bcf	3,6	;RP1=0, select bank1
  2851     03A9  083B               	movf	(sprintf@fval+2)^(0+128),w
  2852     03AA  1283               	bcf	3,5	;RP0=0, select bank0
  2853     03AB  1303               	bcf	3,6	;RP1=0, select bank0
  2854     03AC  00D4               	movwf	___fladd@a+2
  2855     03AD  1683               	bsf	3,5	;RP0=1, select bank1
  2856     03AE  1303               	bcf	3,6	;RP1=0, select bank1
  2857     03AF  083A               	movf	(sprintf@fval+1)^(0+128),w
  2858     03B0  1283               	bcf	3,5	;RP0=0, select bank0
  2859     03B1  1303               	bcf	3,6	;RP1=0, select bank0
  2860     03B2  00D3               	movwf	___fladd@a+1
  2861     03B3  1683               	bsf	3,5	;RP0=1, select bank1
  2862     03B4  1303               	bcf	3,6	;RP1=0, select bank1
  2863     03B5  0839               	movf	sprintf@fval^(0+128),w
  2864     03B6  1283               	bcf	3,5	;RP0=0, select bank0
  2865     03B7  1303               	bcf	3,6	;RP1=0, select bank0
  2866     03B8  00D2               	movwf	___fladd@a
  2867     03B9  160A  118A  2326  120A  118A  	fcall	___fladd
  2868     03BE  1283               	bcf	3,5	;RP0=0, select bank0
  2869     03BF  1303               	bcf	3,6	;RP1=0, select bank0
  2870     03C0  0851               	movf	?___fladd+3,w
  2871     03C1  1683               	bsf	3,5	;RP0=1, select bank1
  2872     03C2  1303               	bcf	3,6	;RP1=0, select bank1
  2873     03C3  00BC               	movwf	(sprintf@fval+3)^(0+128)
  2874     03C4  1283               	bcf	3,5	;RP0=0, select bank0
  2875     03C5  1303               	bcf	3,6	;RP1=0, select bank0
  2876     03C6  0850               	movf	?___fladd+2,w
  2877     03C7  1683               	bsf	3,5	;RP0=1, select bank1
  2878     03C8  1303               	bcf	3,6	;RP1=0, select bank1
  2879     03C9  00BB               	movwf	(sprintf@fval+2)^(0+128)
  2880     03CA  1283               	bcf	3,5	;RP0=0, select bank0
  2881     03CB  1303               	bcf	3,6	;RP1=0, select bank0
  2882     03CC  084F               	movf	?___fladd+1,w
  2883     03CD  1683               	bsf	3,5	;RP0=1, select bank1
  2884     03CE  1303               	bcf	3,6	;RP1=0, select bank1
  2885     03CF  00BA               	movwf	(sprintf@fval+1)^(0+128)
  2886     03D0  1283               	bcf	3,5	;RP0=0, select bank0
  2887     03D1  1303               	bcf	3,6	;RP1=0, select bank0
  2888     03D2  084E               	movf	?___fladd,w
  2889     03D3  1683               	bsf	3,5	;RP0=1, select bank1
  2890     03D4  1303               	bcf	3,6	;RP1=0, select bank1
  2891     03D5  00B9               	movwf	sprintf@fval^(0+128)
  2892     03D6                     l3490:
  2893                           
  2894                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2895     03D6  1683               	bsf	3,5	;RP0=1, select bank1
  2896     03D7  1303               	bcf	3,6	;RP1=0, select bank1
  2897     03D8  0831               	movf	(sprintf@eexp+1)^(0+128),w
  2898     03D9  3A80               	xorlw	128
  2899     03DA  00FF               	movwf	btemp+1
  2900     03DB  3080               	movlw	128
  2901     03DC  027F               	subwf	btemp+1,w
  2902     03DD  1D03               	skipz
  2903     03DE  2BE1               	goto	u5205
  2904     03DF  300A               	movlw	10
  2905     03E0  0230               	subwf	sprintf@eexp^(0+128),w
  2906     03E1                     u5205:
  2907     03E1  1803               	skipnc
  2908     03E2  2BE4               	goto	u5201
  2909     03E3  2BE5               	goto	u5200
  2910     03E4                     u5201:
  2911     03E4  2C36               	goto	l3498
  2912     03E5                     u5200:
  2913     03E5                     l3492:
  2914     03E5  1683               	bsf	3,5	;RP0=1, select bank1
  2915     03E6  1303               	bcf	3,6	;RP1=0, select bank1
  2916     03E7  083C               	movf	(sprintf@fval+3)^(0+128),w
  2917     03E8  00F3               	movwf	___fleq@ff1+3
  2918     03E9  083B               	movf	(sprintf@fval+2)^(0+128),w
  2919     03EA  00F2               	movwf	___fleq@ff1+2
  2920     03EB  083A               	movf	(sprintf@fval+1)^(0+128),w
  2921     03EC  00F1               	movwf	___fleq@ff1+1
  2922     03ED  0839               	movf	sprintf@fval^(0+128),w
  2923     03EE  00F0               	movwf	___fleq@ff1
  2924     03EF  3000               	movlw	0
  2925     03F0  00F7               	movwf	___fleq@ff2+3
  2926     03F1  3000               	movlw	0
  2927     03F2  00F6               	movwf	___fleq@ff2+2
  2928     03F3  3000               	movlw	0
  2929     03F4  00F5               	movwf	___fleq@ff2+1
  2930     03F5  3000               	movlw	0
  2931     03F6  00F4               	movwf	___fleq@ff2
  2932     03F7  160A  158A  24CC  120A  118A  	fcall	___fleq
  2933     03FC  1803               	btfsc	3,0
  2934     03FD  2BFF               	goto	u5211
  2935     03FE  2C00               	goto	u5210
  2936     03FF                     u5211:
  2937     03FF  2CA8               	goto	l3512
  2938     0400                     u5210:
  2939     0400                     l3494:
  2940     0400  1683               	bsf	3,5	;RP0=1, select bank1
  2941     0401  1303               	bcf	3,6	;RP1=0, select bank1
  2942     0402  083C               	movf	(sprintf@fval+3)^(0+128),w
  2943     0403  1283               	bcf	3,5	;RP0=0, select bank0
  2944     0404  1303               	bcf	3,6	;RP1=0, select bank0
  2945     0405  00D0               	movwf	___fltol@f1+3
  2946     0406  1683               	bsf	3,5	;RP0=1, select bank1
  2947     0407  1303               	bcf	3,6	;RP1=0, select bank1
  2948     0408  083B               	movf	(sprintf@fval+2)^(0+128),w
  2949     0409  1283               	bcf	3,5	;RP0=0, select bank0
  2950     040A  1303               	bcf	3,6	;RP1=0, select bank0
  2951     040B  00CF               	movwf	___fltol@f1+2
  2952     040C  1683               	bsf	3,5	;RP0=1, select bank1
  2953     040D  1303               	bcf	3,6	;RP1=0, select bank1
  2954     040E  083A               	movf	(sprintf@fval+1)^(0+128),w
  2955     040F  1283               	bcf	3,5	;RP0=0, select bank0
  2956     0410  1303               	bcf	3,6	;RP1=0, select bank0
  2957     0411  00CE               	movwf	___fltol@f1+1
  2958     0412  1683               	bsf	3,5	;RP0=1, select bank1
  2959     0413  1303               	bcf	3,6	;RP1=0, select bank1
  2960     0414  0839               	movf	sprintf@fval^(0+128),w
  2961     0415  1283               	bcf	3,5	;RP0=0, select bank0
  2962     0416  1303               	bcf	3,6	;RP1=0, select bank0
  2963     0417  00CD               	movwf	___fltol@f1
  2964     0418  120A  158A  202A  120A  118A  	fcall	___fltol
  2965     041D  1283               	bcf	3,5	;RP0=0, select bank0
  2966     041E  1303               	bcf	3,6	;RP1=0, select bank0
  2967     041F  0850               	movf	?___fltol+3,w
  2968     0420  044F               	iorwf	?___fltol+2,w
  2969     0421  044E               	iorwf	?___fltol+1,w
  2970     0422  044D               	iorwf	?___fltol,w
  2971     0423  1D03               	skipz
  2972     0424  2C26               	goto	u5221
  2973     0425  2C27               	goto	u5220
  2974     0426                     u5221:
  2975     0426  2CA8               	goto	l3512
  2976     0427                     u5220:
  2977     0427                     l3496:
  2978     0427  1683               	bsf	3,5	;RP0=1, select bank1
  2979     0428  1303               	bcf	3,6	;RP1=0, select bank1
  2980     0429  0831               	movf	(sprintf@eexp+1)^(0+128),w
  2981     042A  3A80               	xorlw	128
  2982     042B  00FF               	movwf	btemp+1
  2983     042C  3080               	movlw	128
  2984     042D  027F               	subwf	btemp+1,w
  2985     042E  1D03               	skipz
  2986     042F  2C32               	goto	u5235
  2987     0430  3002               	movlw	2
  2988     0431  0230               	subwf	sprintf@eexp^(0+128),w
  2989     0432                     u5235:
  2990     0432  1C03               	skipc
  2991     0433  2C35               	goto	u5231
  2992     0434  2C36               	goto	u5230
  2993     0435                     u5231:
  2994     0435  2CA8               	goto	l3512
  2995     0436                     u5230:
  2996     0436                     l3498:
  2997                           
  2998                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2999     0436  1683               	bsf	3,5	;RP0=1, select bank1
  3000     0437  1303               	bcf	3,6	;RP1=0, select bank1
  3001     0438  0835               	movf	(sprintf@tmpval+3)^(0+128),w
  3002     0439  00F3               	movwf	___flge@ff1+3
  3003     043A  0834               	movf	(sprintf@tmpval+2)^(0+128),w
  3004     043B  00F2               	movwf	___flge@ff1+2
  3005     043C  0833               	movf	(sprintf@tmpval+1)^(0+128),w
  3006     043D  00F1               	movwf	___flge@ff1+1
  3007     043E  0832               	movf	sprintf@tmpval^(0+128),w
  3008     043F  00F0               	movwf	___flge@ff1
  3009     0440  3040               	movlw	64
  3010     0441  00F7               	movwf	___flge@ff2+3
  3011     0442  3089               	movlw	137
  3012     0443  00F6               	movwf	___flge@ff2+2
  3013     0444  3070               	movlw	112
  3014     0445  00F5               	movwf	___flge@ff2+1
  3015     0446  305F               	movlw	95
  3016     0447  00F4               	movwf	___flge@ff2
  3017     0448  120A  118A  2004  120A  118A  	fcall	___flge
  3018     044D  1803               	btfsc	3,0
  3019     044E  2C50               	goto	u5241
  3020     044F  2C51               	goto	u5240
  3021     0450                     u5241:
  3022     0450  2C5A               	goto	l3502
  3023     0451                     u5240:
  3024     0451                     l3500:
  3025                           
  3026                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  3027     0451  30F7               	movlw	247
  3028     0452  1683               	bsf	3,5	;RP0=1, select bank1
  3029     0453  1303               	bcf	3,6	;RP1=0, select bank1
  3030     0454  07B0               	addwf	sprintf@eexp^(0+128),f
  3031     0455  1803               	skipnc
  3032     0456  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  3033     0457  30FF               	movlw	255
  3034     0458  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  3035                           
  3036                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1148:      }else{
  3037     0459  2C62               	goto	l3504
  3038     045A                     l3502:
  3039                           
  3040                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  3041     045A  30F8               	movlw	248
  3042     045B  1683               	bsf	3,5	;RP0=1, select bank1
  3043     045C  1303               	bcf	3,6	;RP1=0, select bank1
  3044     045D  07B0               	addwf	sprintf@eexp^(0+128),f
  3045     045E  1803               	skipnc
  3046     045F  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  3047     0460  30FF               	movlw	255
  3048     0461  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  3049     0462                     l3504:
  3050                           
  3051                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  3052     0462  0830               	movf	sprintf@eexp^(0+128),w
  3053     0463  120A  158A  24A1  120A  118A  	fcall	_scale
  3054     0468  1283               	bcf	3,5	;RP0=0, select bank0
  3055     0469  1303               	bcf	3,6	;RP1=0, select bank0
  3056     046A  083D               	movf	?_scale+3,w
  3057     046B  1683               	bsf	3,5	;RP0=1, select bank1
  3058     046C  1303               	bcf	3,6	;RP1=0, select bank1
  3059     046D  00B5               	movwf	(sprintf@tmpval+3)^(0+128)
  3060     046E  1283               	bcf	3,5	;RP0=0, select bank0
  3061     046F  1303               	bcf	3,6	;RP1=0, select bank0
  3062     0470  083C               	movf	?_scale+2,w
  3063     0471  1683               	bsf	3,5	;RP0=1, select bank1
  3064     0472  1303               	bcf	3,6	;RP1=0, select bank1
  3065     0473  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
  3066     0474  1283               	bcf	3,5	;RP0=0, select bank0
  3067     0475  1303               	bcf	3,6	;RP1=0, select bank0
  3068     0476  083B               	movf	?_scale+1,w
  3069     0477  1683               	bsf	3,5	;RP0=1, select bank1
  3070     0478  1303               	bcf	3,6	;RP1=0, select bank1
  3071     0479  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
  3072     047A  1283               	bcf	3,5	;RP0=0, select bank0
  3073     047B  1303               	bcf	3,6	;RP1=0, select bank0
  3074     047C  083A               	movf	?_scale,w
  3075     047D  1683               	bsf	3,5	;RP0=1, select bank1
  3076     047E  1303               	bcf	3,6	;RP1=0, select bank1
  3077     047F  00B2               	movwf	sprintf@tmpval^(0+128)
  3078     0480                     l3506:
  3079     0480  083C               	movf	(sprintf@fval+3)^(0+128),w
  3080     0481  00F3               	movwf	__div_to_l_@f1+3
  3081     0482  083B               	movf	(sprintf@fval+2)^(0+128),w
  3082     0483  00F2               	movwf	__div_to_l_@f1+2
  3083     0484  083A               	movf	(sprintf@fval+1)^(0+128),w
  3084     0485  00F1               	movwf	__div_to_l_@f1+1
  3085     0486  0839               	movf	sprintf@fval^(0+128),w
  3086     0487  00F0               	movwf	__div_to_l_@f1
  3087     0488  0835               	movf	(sprintf@tmpval+3)^(0+128),w
  3088     0489  00F7               	movwf	__div_to_l_@f2+3
  3089     048A  0834               	movf	(sprintf@tmpval+2)^(0+128),w
  3090     048B  00F6               	movwf	__div_to_l_@f2+2
  3091     048C  0833               	movf	(sprintf@tmpval+1)^(0+128),w
  3092     048D  00F5               	movwf	__div_to_l_@f2+1
  3093     048E  0832               	movf	sprintf@tmpval^(0+128),w
  3094     048F  00F4               	movwf	__div_to_l_@f2
  3095     0490  160A  158A  2748  120A  118A  	fcall	__div_to_l_
  3096     0495  0873               	movf	?__div_to_l_+3,w
  3097     0496  1683               	bsf	3,5	;RP0=1, select bank1
  3098     0497  1303               	bcf	3,6	;RP1=0, select bank1
  3099     0498  00AF               	movwf	(sprintf@val+3)^(0+128)
  3100     0499  0872               	movf	?__div_to_l_+2,w
  3101     049A  00AE               	movwf	(sprintf@val+2)^(0+128)
  3102     049B  0871               	movf	?__div_to_l_+1,w
  3103     049C  00AD               	movwf	(sprintf@val+1)^(0+128)
  3104     049D  0870               	movf	?__div_to_l_,w
  3105     049E  00AC               	movwf	sprintf@val^(0+128)
  3106     049F                     l3510:
  3107                           
  3108                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  3109     049F  3000               	movlw	0
  3110     04A0  00BC               	movwf	(sprintf@fval+3)^(0+128)
  3111     04A1  3000               	movlw	0
  3112     04A2  00BB               	movwf	(sprintf@fval+2)^(0+128)
  3113     04A3  3000               	movlw	0
  3114     04A4  00BA               	movwf	(sprintf@fval+1)^(0+128)
  3115     04A5  3000               	movlw	0
  3116     04A6  00B9               	movwf	sprintf@fval^(0+128)
  3117                           
  3118                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  3119     04A7  2D2C               	goto	l3516
  3120     04A8                     l3512:
  3121                           
  3122                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  3123     04A8  1683               	bsf	3,5	;RP0=1, select bank1
  3124     04A9  1303               	bcf	3,6	;RP1=0, select bank1
  3125     04AA  083C               	movf	(sprintf@fval+3)^(0+128),w
  3126     04AB  1283               	bcf	3,5	;RP0=0, select bank0
  3127     04AC  1303               	bcf	3,6	;RP1=0, select bank0
  3128     04AD  00D0               	movwf	___fltol@f1+3
  3129     04AE  1683               	bsf	3,5	;RP0=1, select bank1
  3130     04AF  1303               	bcf	3,6	;RP1=0, select bank1
  3131     04B0  083B               	movf	(sprintf@fval+2)^(0+128),w
  3132     04B1  1283               	bcf	3,5	;RP0=0, select bank0
  3133     04B2  1303               	bcf	3,6	;RP1=0, select bank0
  3134     04B3  00CF               	movwf	___fltol@f1+2
  3135     04B4  1683               	bsf	3,5	;RP0=1, select bank1
  3136     04B5  1303               	bcf	3,6	;RP1=0, select bank1
  3137     04B6  083A               	movf	(sprintf@fval+1)^(0+128),w
  3138     04B7  1283               	bcf	3,5	;RP0=0, select bank0
  3139     04B8  1303               	bcf	3,6	;RP1=0, select bank0
  3140     04B9  00CE               	movwf	___fltol@f1+1
  3141     04BA  1683               	bsf	3,5	;RP0=1, select bank1
  3142     04BB  1303               	bcf	3,6	;RP1=0, select bank1
  3143     04BC  0839               	movf	sprintf@fval^(0+128),w
  3144     04BD  1283               	bcf	3,5	;RP0=0, select bank0
  3145     04BE  1303               	bcf	3,6	;RP1=0, select bank0
  3146     04BF  00CD               	movwf	___fltol@f1
  3147     04C0  120A  158A  202A  120A  118A  	fcall	___fltol
  3148     04C5  1283               	bcf	3,5	;RP0=0, select bank0
  3149     04C6  1303               	bcf	3,6	;RP1=0, select bank0
  3150     04C7  0850               	movf	?___fltol+3,w
  3151     04C8  1683               	bsf	3,5	;RP0=1, select bank1
  3152     04C9  1303               	bcf	3,6	;RP1=0, select bank1
  3153     04CA  00AF               	movwf	(sprintf@val+3)^(0+128)
  3154     04CB  1283               	bcf	3,5	;RP0=0, select bank0
  3155     04CC  1303               	bcf	3,6	;RP1=0, select bank0
  3156     04CD  084F               	movf	?___fltol+2,w
  3157     04CE  1683               	bsf	3,5	;RP0=1, select bank1
  3158     04CF  1303               	bcf	3,6	;RP1=0, select bank1
  3159     04D0  00AE               	movwf	(sprintf@val+2)^(0+128)
  3160     04D1  1283               	bcf	3,5	;RP0=0, select bank0
  3161     04D2  1303               	bcf	3,6	;RP1=0, select bank0
  3162     04D3  084E               	movf	?___fltol+1,w
  3163     04D4  1683               	bsf	3,5	;RP0=1, select bank1
  3164     04D5  1303               	bcf	3,6	;RP1=0, select bank1
  3165     04D6  00AD               	movwf	(sprintf@val+1)^(0+128)
  3166     04D7  1283               	bcf	3,5	;RP0=0, select bank0
  3167     04D8  1303               	bcf	3,6	;RP1=0, select bank0
  3168     04D9  084D               	movf	?___fltol,w
  3169     04DA  1683               	bsf	3,5	;RP0=1, select bank1
  3170     04DB  1303               	bcf	3,6	;RP1=0, select bank1
  3171     04DC  00AC               	movwf	sprintf@val^(0+128)
  3172                           
  3173                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  3174     04DD  082F               	movf	(sprintf@val+3)^(0+128),w
  3175     04DE  00F9               	movwf	___xxtofl@val+3
  3176     04DF  082E               	movf	(sprintf@val+2)^(0+128),w
  3177     04E0  00F8               	movwf	___xxtofl@val+2
  3178     04E1  082D               	movf	(sprintf@val+1)^(0+128),w
  3179     04E2  00F7               	movwf	___xxtofl@val+1
  3180     04E3  082C               	movf	sprintf@val^(0+128),w
  3181     04E4  00F6               	movwf	___xxtofl@val
  3182     04E5  3000               	movlw	0
  3183     04E6  120A  158A  20A2  120A  118A  	fcall	___xxtofl
  3184     04EB  0879               	movf	?___xxtofl+3,w
  3185     04EC  1283               	bcf	3,5	;RP0=0, select bank0
  3186     04ED  1303               	bcf	3,6	;RP1=0, select bank0
  3187     04EE  00E5               	movwf	___flsub@a+3
  3188     04EF  0878               	movf	?___xxtofl+2,w
  3189     04F0  00E4               	movwf	___flsub@a+2
  3190     04F1  0877               	movf	?___xxtofl+1,w
  3191     04F2  00E3               	movwf	___flsub@a+1
  3192     04F3  0876               	movf	?___xxtofl,w
  3193     04F4  00E2               	movwf	___flsub@a
  3194     04F5  1683               	bsf	3,5	;RP0=1, select bank1
  3195     04F6  1303               	bcf	3,6	;RP1=0, select bank1
  3196     04F7  083C               	movf	(sprintf@fval+3)^(0+128),w
  3197     04F8  1283               	bcf	3,5	;RP0=0, select bank0
  3198     04F9  1303               	bcf	3,6	;RP1=0, select bank0
  3199     04FA  00E9               	movwf	___flsub@b+3
  3200     04FB  1683               	bsf	3,5	;RP0=1, select bank1
  3201     04FC  1303               	bcf	3,6	;RP1=0, select bank1
  3202     04FD  083B               	movf	(sprintf@fval+2)^(0+128),w
  3203     04FE  1283               	bcf	3,5	;RP0=0, select bank0
  3204     04FF  1303               	bcf	3,6	;RP1=0, select bank0
  3205     0500  00E8               	movwf	___flsub@b+2
  3206     0501  1683               	bsf	3,5	;RP0=1, select bank1
  3207     0502  1303               	bcf	3,6	;RP1=0, select bank1
  3208     0503  083A               	movf	(sprintf@fval+1)^(0+128),w
  3209     0504  1283               	bcf	3,5	;RP0=0, select bank0
  3210     0505  1303               	bcf	3,6	;RP1=0, select bank0
  3211     0506  00E7               	movwf	___flsub@b+1
  3212     0507  1683               	bsf	3,5	;RP0=1, select bank1
  3213     0508  1303               	bcf	3,6	;RP1=0, select bank1
  3214     0509  0839               	movf	sprintf@fval^(0+128),w
  3215     050A  1283               	bcf	3,5	;RP0=0, select bank0
  3216     050B  1303               	bcf	3,6	;RP1=0, select bank0
  3217     050C  00E6               	movwf	___flsub@b
  3218     050D  160A  158A  229F  120A  118A  	fcall	___flsub
  3219     0512  1283               	bcf	3,5	;RP0=0, select bank0
  3220     0513  1303               	bcf	3,6	;RP1=0, select bank0
  3221     0514  0865               	movf	?___flsub+3,w
  3222     0515  1683               	bsf	3,5	;RP0=1, select bank1
  3223     0516  1303               	bcf	3,6	;RP1=0, select bank1
  3224     0517  00BC               	movwf	(sprintf@fval+3)^(0+128)
  3225     0518  1283               	bcf	3,5	;RP0=0, select bank0
  3226     0519  1303               	bcf	3,6	;RP1=0, select bank0
  3227     051A  0864               	movf	?___flsub+2,w
  3228     051B  1683               	bsf	3,5	;RP0=1, select bank1
  3229     051C  1303               	bcf	3,6	;RP1=0, select bank1
  3230     051D  00BB               	movwf	(sprintf@fval+2)^(0+128)
  3231     051E  1283               	bcf	3,5	;RP0=0, select bank0
  3232     051F  1303               	bcf	3,6	;RP1=0, select bank0
  3233     0520  0863               	movf	?___flsub+1,w
  3234     0521  1683               	bsf	3,5	;RP0=1, select bank1
  3235     0522  1303               	bcf	3,6	;RP1=0, select bank1
  3236     0523  00BA               	movwf	(sprintf@fval+1)^(0+128)
  3237     0524  1283               	bcf	3,5	;RP0=0, select bank0
  3238     0525  1303               	bcf	3,6	;RP1=0, select bank0
  3239     0526  0862               	movf	?___flsub,w
  3240     0527  1683               	bsf	3,5	;RP0=1, select bank1
  3241     0528  1303               	bcf	3,6	;RP1=0, select bank1
  3242     0529  00B9               	movwf	sprintf@fval^(0+128)
  3243     052A                     l3514:
  3244                           
  3245                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  3246     052A  01B0               	clrf	sprintf@eexp^(0+128)
  3247     052B  01B1               	clrf	(sprintf@eexp+1)^(0+128)
  3248     052C                     l3516:
  3249                           
  3250                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3251     052C  01BD               	clrf	sprintf@c^(0+128)
  3252     052D  0ABD               	incf	sprintf@c^(0+128),f
  3253     052E                     l3522:
  3254                           
  3255                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  3256     052E  083D               	movf	sprintf@c^(0+128),w
  3257     052F  00A0               	movwf	??_sprintf^(0+128)
  3258     0530  3001               	movlw	1
  3259     0531                     u5255:
  3260     0531  1003               	clrc
  3261     0532  0DA0               	rlf	??_sprintf^(0+128),f
  3262     0533  3EFF               	addlw	-1
  3263     0534  1D03               	skipz
  3264     0535  2D31               	goto	u5255
  3265     0536  1003               	clrc
  3266     0537  0D20               	rlf	??_sprintf^(0+128),w
  3267     0538  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3268     0539  0084               	movwf	4
  3269     053A  160A  118A  200A  120A  118A  	fcall	stringdir
  3270     053F  00A1               	movwf	(??_sprintf+1)^(0+128)
  3271     0540  160A  118A  200A  120A  118A  	fcall	stringdir
  3272     0545  00A2               	movwf	((??_sprintf+1)^(0+128)+1)
  3273     0546  160A  118A  200A  120A  118A  	fcall	stringdir
  3274     054B  00A3               	movwf	((??_sprintf+1)^(0+128)+2)
  3275     054C  160A  118A  200A  120A  118A  	fcall	stringdir
  3276     0551  00A4               	movwf	((??_sprintf+1)^(0+128)+3)
  3277     0552  0824               	movf	(??_sprintf+4)^(0+128),w
  3278     0553  022F               	subwf	(sprintf@val+3)^(0+128),w
  3279     0554  1D03               	skipz
  3280     0555  2D60               	goto	u5265
  3281     0556  0823               	movf	(??_sprintf+3)^(0+128),w
  3282     0557  022E               	subwf	(sprintf@val+2)^(0+128),w
  3283     0558  1D03               	skipz
  3284     0559  2D60               	goto	u5265
  3285     055A  0822               	movf	(??_sprintf+2)^(0+128),w
  3286     055B  022D               	subwf	(sprintf@val+1)^(0+128),w
  3287     055C  1D03               	skipz
  3288     055D  2D60               	goto	u5265
  3289     055E  0821               	movf	(??_sprintf+1)^(0+128),w
  3290     055F  022C               	subwf	sprintf@val^(0+128),w
  3291     0560                     u5265:
  3292     0560  1803               	skipnc
  3293     0561  2D63               	goto	u5261
  3294     0562  2D64               	goto	u5260
  3295     0563                     u5261:
  3296     0563  2D65               	goto	l3526
  3297     0564                     u5260:
  3298     0564  2D6F               	goto	l3530
  3299     0565                     l3526:
  3300     0565  3001               	movlw	1
  3301     0566  00FF               	movwf	btemp+1
  3302     0567  087F               	movf	btemp+1,w
  3303     0568  07BD               	addwf	sprintf@c^(0+128),f
  3304     0569                     l3528:
  3305     0569  300A               	movlw	10
  3306     056A  063D               	xorwf	sprintf@c^(0+128),w
  3307     056B  1D03               	btfss	3,2
  3308     056C  2D6E               	goto	u5271
  3309     056D  2D6F               	goto	u5270
  3310     056E                     u5271:
  3311     056E  2D2E               	goto	l3522
  3312     056F                     u5270:
  3313     056F                     l3530:
  3314                           
  3315                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  3316     056F  3003               	movlw	3
  3317     0570  052A               	andwf	sprintf@flag^(0+128),w
  3318     0571  00A0               	movwf	??_sprintf^(0+128)
  3319     0572  3000               	movlw	0
  3320     0573  052B               	andwf	(sprintf@flag+1)^(0+128),w
  3321     0574  00A1               	movwf	(??_sprintf+1)^(0+128)
  3322     0575  0820               	movf	??_sprintf^(0+128),w
  3323     0576  0421               	iorwf	(??_sprintf^(0+128)+1),w
  3324     0577  1903               	btfsc	3,2
  3325     0578  2D7A               	goto	u5281
  3326     0579  2D7B               	goto	u5280
  3327     057A                     u5281:
  3328     057A  2DE6               	goto	l3544
  3329     057B                     u5280:
  3330     057B                     l3532:
  3331                           
  3332                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3333     057B  0836               	movf	sprintf@sp^(0+128),w
  3334     057C  0084               	movwf	4
  3335     057D  302D               	movlw	45
  3336     057E  1383               	bcf	3,7	;select IRP bank0
  3337     057F  0080               	movwf	0
  3338     0580                     l3534:
  3339     0580  3001               	movlw	1
  3340     0581  00FF               	movwf	btemp+1
  3341     0582  087F               	movf	btemp+1,w
  3342     0583  07B6               	addwf	sprintf@sp^(0+128),f
  3343     0584  2DE6               	goto	l3544
  3344     0585                     l3536:
  3345                           
  3346                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3347     0585  083D               	movf	sprintf@c^(0+128),w
  3348     0586  00A0               	movwf	??_sprintf^(0+128)
  3349     0587  3001               	movlw	1
  3350     0588                     u5295:
  3351     0588  1003               	clrc
  3352     0589  0DA0               	rlf	??_sprintf^(0+128),f
  3353     058A  3EFF               	addlw	-1
  3354     058B  1D03               	skipz
  3355     058C  2D88               	goto	u5295
  3356     058D  1003               	clrc
  3357     058E  0D20               	rlf	??_sprintf^(0+128),w
  3358     058F  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3359     0590  0084               	movwf	4
  3360     0591  160A  118A  200A  120A  118A  	fcall	stringdir
  3361     0596  00F0               	movwf	___lldiv@divisor
  3362     0597  160A  118A  200A  120A  118A  	fcall	stringdir
  3363     059C  00F1               	movwf	___lldiv@divisor+1
  3364     059D  160A  118A  200A  120A  118A  	fcall	stringdir
  3365     05A2  00F2               	movwf	___lldiv@divisor+2
  3366     05A3  160A  118A  200A  120A  118A  	fcall	stringdir
  3367     05A8  00F3               	movwf	___lldiv@divisor+3
  3368     05A9  082F               	movf	(sprintf@val+3)^(0+128),w
  3369     05AA  00F7               	movwf	___lldiv@dividend+3
  3370     05AB  082E               	movf	(sprintf@val+2)^(0+128),w
  3371     05AC  00F6               	movwf	___lldiv@dividend+2
  3372     05AD  082D               	movf	(sprintf@val+1)^(0+128),w
  3373     05AE  00F5               	movwf	___lldiv@dividend+1
  3374     05AF  082C               	movf	sprintf@val^(0+128),w
  3375     05B0  00F4               	movwf	___lldiv@dividend
  3376     05B1  160A  158A  25C4  120A  118A  	fcall	___lldiv
  3377     05B6  0873               	movf	?___lldiv+3,w
  3378     05B7  1683               	bsf	3,5	;RP0=1, select bank1
  3379     05B8  1303               	bcf	3,6	;RP1=0, select bank1
  3380     05B9  00B5               	movwf	(sprintf@tmpval+3)^(0+128)
  3381     05BA  0872               	movf	?___lldiv+2,w
  3382     05BB  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
  3383     05BC  0871               	movf	?___lldiv+1,w
  3384     05BD  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
  3385     05BE  0870               	movf	?___lldiv,w
  3386     05BF  00B2               	movwf	sprintf@tmpval^(0+128)
  3387     05C0                     l3538:
  3388                           
  3389                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3390     05C0  3000               	movlw	0
  3391     05C1  00F3               	movwf	___llmod@divisor+3
  3392     05C2  3000               	movlw	0
  3393     05C3  00F2               	movwf	___llmod@divisor+2
  3394     05C4  3000               	movlw	0
  3395     05C5  00F1               	movwf	___llmod@divisor+1
  3396     05C6  300A               	movlw	10
  3397     05C7  00F0               	movwf	___llmod@divisor
  3398     05C8  0835               	movf	(sprintf@tmpval+3)^(0+128),w
  3399     05C9  00F7               	movwf	___llmod@dividend+3
  3400     05CA  0834               	movf	(sprintf@tmpval+2)^(0+128),w
  3401     05CB  00F6               	movwf	___llmod@dividend+2
  3402     05CC  0833               	movf	(sprintf@tmpval+1)^(0+128),w
  3403     05CD  00F5               	movwf	___llmod@dividend+1
  3404     05CE  0832               	movf	sprintf@tmpval^(0+128),w
  3405     05CF  00F4               	movwf	___llmod@dividend
  3406     05D0  160A  158A  251A  120A  118A  	fcall	___llmod
  3407     05D5  0873               	movf	?___llmod+3,w
  3408     05D6  1683               	bsf	3,5	;RP0=1, select bank1
  3409     05D7  1303               	bcf	3,6	;RP1=0, select bank1
  3410     05D8  00B5               	movwf	(sprintf@tmpval+3)^(0+128)
  3411     05D9  0872               	movf	?___llmod+2,w
  3412     05DA  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
  3413     05DB  0871               	movf	?___llmod+1,w
  3414     05DC  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
  3415     05DD  0870               	movf	?___llmod,w
  3416     05DE  00B2               	movwf	sprintf@tmpval^(0+128)
  3417     05DF                     l3540:
  3418                           
  3419                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3420     05DF  0836               	movf	sprintf@sp^(0+128),w
  3421     05E0  0084               	movwf	4
  3422     05E1  0832               	movf	sprintf@tmpval^(0+128),w
  3423     05E2  3E30               	addlw	48
  3424     05E3  1383               	bcf	3,7	;select IRP bank0
  3425     05E4  0080               	movwf	0
  3426     05E5  2D80               	goto	l3534
  3427     05E6                     l3544:
  3428                           
  3429                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3430     05E6  3001               	movlw	1
  3431     05E7  02BD               	subwf	sprintf@c^(0+128),f
  3432     05E8  0A3D               	incf	sprintf@c^(0+128),w
  3433     05E9  1D03               	btfss	3,2
  3434     05EA  2DEC               	goto	u5301
  3435     05EB  2DED               	goto	u5300
  3436     05EC                     u5301:
  3437     05EC  2D85               	goto	l3536
  3438     05ED                     u5300:
  3439     05ED  2DFF               	goto	l3552
  3440     05EE                     l3546:
  3441                           
  3442                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3443     05EE  1683               	bsf	3,5	;RP0=1, select bank1
  3444     05EF  1303               	bcf	3,6	;RP1=0, select bank1
  3445     05F0  0836               	movf	sprintf@sp^(0+128),w
  3446     05F1  0084               	movwf	4
  3447     05F2  3030               	movlw	48
  3448     05F3  1383               	bcf	3,7	;select IRP bank0
  3449     05F4  0080               	movwf	0
  3450     05F5                     l3548:
  3451     05F5  3001               	movlw	1
  3452     05F6  00FF               	movwf	btemp+1
  3453     05F7  087F               	movf	btemp+1,w
  3454     05F8  07B6               	addwf	sprintf@sp^(0+128),f
  3455     05F9                     l3550:
  3456                           
  3457                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3458     05F9  30FF               	movlw	255
  3459     05FA  07B0               	addwf	sprintf@eexp^(0+128),f
  3460     05FB  1803               	skipnc
  3461     05FC  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  3462     05FD  30FF               	movlw	255
  3463     05FE  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  3464     05FF                     l3552:
  3465                           
  3466                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3467     05FF  0831               	movf	(sprintf@eexp+1)^(0+128),w
  3468     0600  3A80               	xorlw	128
  3469     0601  00FF               	movwf	btemp+1
  3470     0602  3080               	movlw	128
  3471     0603  027F               	subwf	btemp+1,w
  3472     0604  1D03               	skipz
  3473     0605  2E08               	goto	u5315
  3474     0606  3001               	movlw	1
  3475     0607  0230               	subwf	sprintf@eexp^(0+128),w
  3476     0608                     u5315:
  3477     0608  1803               	skipnc
  3478     0609  2E0B               	goto	u5311
  3479     060A  2E0C               	goto	u5310
  3480     060B                     u5311:
  3481     060B  2DEE               	goto	l3546
  3482     060C                     u5310:
  3483     060C                     l3554:
  3484                           
  3485                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3486     060C  1683               	bsf	3,5	;RP0=1, select bank1
  3487     060D  1303               	bcf	3,6	;RP1=0, select bank1
  3488     060E  0838               	movf	(sprintf@prec+1)^(0+128),w
  3489     060F  3A80               	xorlw	128
  3490     0610  00FF               	movwf	btemp+1
  3491     0611  3080               	movlw	128
  3492     0612  027F               	subwf	btemp+1,w
  3493     0613  1D03               	skipz
  3494     0614  2E17               	goto	u5325
  3495     0615  3009               	movlw	9
  3496     0616  0237               	subwf	sprintf@prec^(0+128),w
  3497     0617                     u5325:
  3498     0617  1C03               	skipc
  3499     0618  2E1A               	goto	u5321
  3500     0619  2E1B               	goto	u5320
  3501     061A                     u5321:
  3502     061A  2E20               	goto	l3558
  3503     061B                     u5320:
  3504     061B                     l3556:
  3505                           
  3506                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3507     061B  3008               	movlw	8
  3508     061C  1683               	bsf	3,5	;RP0=1, select bank1
  3509     061D  1303               	bcf	3,6	;RP1=0, select bank1
  3510     061E  00BD               	movwf	sprintf@c^(0+128)
  3511     061F  2E24               	goto	l385
  3512     0620                     l3558:
  3513                           
  3514                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3515     0620  1683               	bsf	3,5	;RP0=1, select bank1
  3516     0621  1303               	bcf	3,6	;RP1=0, select bank1
  3517     0622  0837               	movf	sprintf@prec^(0+128),w
  3518     0623  00BD               	movwf	sprintf@c^(0+128)
  3519     0624                     l385:
  3520                           
  3521                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3522     0624  083D               	movf	sprintf@c^(0+128),w
  3523     0625  00A0               	movwf	??_sprintf^(0+128)
  3524     0626  01A1               	clrf	(??_sprintf^(0+128)+1)
  3525     0627  0820               	movf	??_sprintf^(0+128),w
  3526     0628  02B7               	subwf	sprintf@prec^(0+128),f
  3527     0629  0821               	movf	(??_sprintf+1)^(0+128),w
  3528     062A  1C03               	skipc
  3529     062B  03B8               	decf	(sprintf@prec+1)^(0+128),f
  3530     062C  02B8               	subwf	(sprintf@prec+1)^(0+128),f
  3531     062D                     l3560:
  3532                           
  3533                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3534     062D  083D               	movf	sprintf@c^(0+128),w
  3535     062E  1903               	btfsc	3,2
  3536     062F  2E31               	goto	u5331
  3537     0630  2E32               	goto	u5330
  3538     0631                     u5331:
  3539     0631  2E3B               	goto	l3566
  3540     0632                     u5330:
  3541     0632                     l3562:
  3542                           
  3543                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3544     0632  0836               	movf	sprintf@sp^(0+128),w
  3545     0633  0084               	movwf	4
  3546     0634  302E               	movlw	46
  3547     0635  1383               	bcf	3,7	;select IRP bank0
  3548     0636  0080               	movwf	0
  3549     0637                     l3564:
  3550     0637  3001               	movlw	1
  3551     0638  00FF               	movwf	btemp+1
  3552     0639  087F               	movf	btemp+1,w
  3553     063A  07B6               	addwf	sprintf@sp^(0+128),f
  3554     063B                     l3566:
  3555                           
  3556                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3557     063B  083D               	movf	sprintf@c^(0+128),w
  3558     063C  120A  158A  24A1  120A  118A  	fcall	_scale
  3559     0641  1283               	bcf	3,5	;RP0=0, select bank0
  3560     0642  1303               	bcf	3,6	;RP1=0, select bank0
  3561     0643  083D               	movf	?_scale+3,w
  3562     0644  1683               	bsf	3,5	;RP0=1, select bank1
  3563     0645  1303               	bcf	3,6	;RP1=0, select bank1
  3564     0646  00A8               	movwf	(_sprintf$1076+3)^(0+128)
  3565     0647  1283               	bcf	3,5	;RP0=0, select bank0
  3566     0648  1303               	bcf	3,6	;RP1=0, select bank0
  3567     0649  083C               	movf	?_scale+2,w
  3568     064A  1683               	bsf	3,5	;RP0=1, select bank1
  3569     064B  1303               	bcf	3,6	;RP1=0, select bank1
  3570     064C  00A7               	movwf	(_sprintf$1076+2)^(0+128)
  3571     064D  1283               	bcf	3,5	;RP0=0, select bank0
  3572     064E  1303               	bcf	3,6	;RP1=0, select bank0
  3573     064F  083B               	movf	?_scale+1,w
  3574     0650  1683               	bsf	3,5	;RP0=1, select bank1
  3575     0651  1303               	bcf	3,6	;RP1=0, select bank1
  3576     0652  00A6               	movwf	(_sprintf$1076+1)^(0+128)
  3577     0653  1283               	bcf	3,5	;RP0=0, select bank0
  3578     0654  1303               	bcf	3,6	;RP1=0, select bank0
  3579     0655  083A               	movf	?_scale,w
  3580     0656  1683               	bsf	3,5	;RP0=1, select bank1
  3581     0657  1303               	bcf	3,6	;RP1=0, select bank1
  3582     0658  00A5               	movwf	_sprintf$1076^(0+128)
  3583     0659                     l3568:
  3584                           
  3585                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3586     0659  0828               	movf	(_sprintf$1076+3)^(0+128),w
  3587     065A  1283               	bcf	3,5	;RP0=0, select bank0
  3588     065B  1303               	bcf	3,6	;RP1=0, select bank0
  3589     065C  00A7               	movwf	___flmul@a+3
  3590     065D  1683               	bsf	3,5	;RP0=1, select bank1
  3591     065E  1303               	bcf	3,6	;RP1=0, select bank1
  3592     065F  0827               	movf	(_sprintf$1076+2)^(0+128),w
  3593     0660  1283               	bcf	3,5	;RP0=0, select bank0
  3594     0661  1303               	bcf	3,6	;RP1=0, select bank0
  3595     0662  00A6               	movwf	___flmul@a+2
  3596     0663  1683               	bsf	3,5	;RP0=1, select bank1
  3597     0664  1303               	bcf	3,6	;RP1=0, select bank1
  3598     0665  0826               	movf	(_sprintf$1076+1)^(0+128),w
  3599     0666  1283               	bcf	3,5	;RP0=0, select bank0
  3600     0667  1303               	bcf	3,6	;RP1=0, select bank0
  3601     0668  00A5               	movwf	___flmul@a+1
  3602     0669  1683               	bsf	3,5	;RP0=1, select bank1
  3603     066A  1303               	bcf	3,6	;RP1=0, select bank1
  3604     066B  0825               	movf	_sprintf$1076^(0+128),w
  3605     066C  1283               	bcf	3,5	;RP0=0, select bank0
  3606     066D  1303               	bcf	3,6	;RP1=0, select bank0
  3607     066E  00A4               	movwf	___flmul@a
  3608     066F  1683               	bsf	3,5	;RP0=1, select bank1
  3609     0670  1303               	bcf	3,6	;RP1=0, select bank1
  3610     0671  083C               	movf	(sprintf@fval+3)^(0+128),w
  3611     0672  1283               	bcf	3,5	;RP0=0, select bank0
  3612     0673  1303               	bcf	3,6	;RP1=0, select bank0
  3613     0674  00A3               	movwf	___flmul@b+3
  3614     0675  1683               	bsf	3,5	;RP0=1, select bank1
  3615     0676  1303               	bcf	3,6	;RP1=0, select bank1
  3616     0677  083B               	movf	(sprintf@fval+2)^(0+128),w
  3617     0678  1283               	bcf	3,5	;RP0=0, select bank0
  3618     0679  1303               	bcf	3,6	;RP1=0, select bank0
  3619     067A  00A2               	movwf	___flmul@b+2
  3620     067B  1683               	bsf	3,5	;RP0=1, select bank1
  3621     067C  1303               	bcf	3,6	;RP1=0, select bank1
  3622     067D  083A               	movf	(sprintf@fval+1)^(0+128),w
  3623     067E  1283               	bcf	3,5	;RP0=0, select bank0
  3624     067F  1303               	bcf	3,6	;RP1=0, select bank0
  3625     0680  00A1               	movwf	___flmul@b+1
  3626     0681  1683               	bsf	3,5	;RP0=1, select bank1
  3627     0682  1303               	bcf	3,6	;RP1=0, select bank1
  3628     0683  0839               	movf	sprintf@fval^(0+128),w
  3629     0684  1283               	bcf	3,5	;RP0=0, select bank0
  3630     0685  1303               	bcf	3,6	;RP1=0, select bank0
  3631     0686  00A0               	movwf	___flmul@b
  3632     0687  120A  158A  215C  120A  118A  	fcall	___flmul
  3633     068C  1283               	bcf	3,5	;RP0=0, select bank0
  3634     068D  1303               	bcf	3,6	;RP1=0, select bank0
  3635     068E  0823               	movf	?___flmul+3,w
  3636     068F  00D0               	movwf	___fltol@f1+3
  3637     0690  0822               	movf	?___flmul+2,w
  3638     0691  00CF               	movwf	___fltol@f1+2
  3639     0692  0821               	movf	?___flmul+1,w
  3640     0693  00CE               	movwf	___fltol@f1+1
  3641     0694  0820               	movf	?___flmul,w
  3642     0695  00CD               	movwf	___fltol@f1
  3643     0696  120A  158A  202A  120A  118A  	fcall	___fltol
  3644     069B  1283               	bcf	3,5	;RP0=0, select bank0
  3645     069C  1303               	bcf	3,6	;RP1=0, select bank0
  3646     069D  0850               	movf	?___fltol+3,w
  3647     069E  1683               	bsf	3,5	;RP0=1, select bank1
  3648     069F  1303               	bcf	3,6	;RP1=0, select bank1
  3649     06A0  00AF               	movwf	(sprintf@val+3)^(0+128)
  3650     06A1  1283               	bcf	3,5	;RP0=0, select bank0
  3651     06A2  1303               	bcf	3,6	;RP1=0, select bank0
  3652     06A3  084F               	movf	?___fltol+2,w
  3653     06A4  1683               	bsf	3,5	;RP0=1, select bank1
  3654     06A5  1303               	bcf	3,6	;RP1=0, select bank1
  3655     06A6  00AE               	movwf	(sprintf@val+2)^(0+128)
  3656     06A7  1283               	bcf	3,5	;RP0=0, select bank0
  3657     06A8  1303               	bcf	3,6	;RP1=0, select bank0
  3658     06A9  084E               	movf	?___fltol+1,w
  3659     06AA  1683               	bsf	3,5	;RP0=1, select bank1
  3660     06AB  1303               	bcf	3,6	;RP1=0, select bank1
  3661     06AC  00AD               	movwf	(sprintf@val+1)^(0+128)
  3662     06AD  1283               	bcf	3,5	;RP0=0, select bank0
  3663     06AE  1303               	bcf	3,6	;RP1=0, select bank0
  3664     06AF  084D               	movf	?___fltol,w
  3665     06B0  1683               	bsf	3,5	;RP0=1, select bank1
  3666     06B1  1303               	bcf	3,6	;RP1=0, select bank1
  3667     06B2  00AC               	movwf	sprintf@val^(0+128)
  3668                           
  3669                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3670     06B3  2F53               	goto	l3580
  3671     06B4                     l3570:
  3672                           
  3673                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3674     06B4  083D               	movf	sprintf@c^(0+128),w
  3675     06B5  00A0               	movwf	??_sprintf^(0+128)
  3676     06B6  3001               	movlw	1
  3677     06B7                     u5345:
  3678     06B7  1003               	clrc
  3679     06B8  0DA0               	rlf	??_sprintf^(0+128),f
  3680     06B9  3EFF               	addlw	-1
  3681     06BA  1D03               	skipz
  3682     06BB  2EB7               	goto	u5345
  3683     06BC  1003               	clrc
  3684     06BD  0D20               	rlf	??_sprintf^(0+128),w
  3685     06BE  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3686     06BF  0084               	movwf	4
  3687     06C0  160A  118A  200A  120A  118A  	fcall	stringdir
  3688     06C5  00F0               	movwf	___lldiv@divisor
  3689     06C6  160A  118A  200A  120A  118A  	fcall	stringdir
  3690     06CB  00F1               	movwf	___lldiv@divisor+1
  3691     06CC  160A  118A  200A  120A  118A  	fcall	stringdir
  3692     06D1  00F2               	movwf	___lldiv@divisor+2
  3693     06D2  160A  118A  200A  120A  118A  	fcall	stringdir
  3694     06D7  00F3               	movwf	___lldiv@divisor+3
  3695     06D8  082F               	movf	(sprintf@val+3)^(0+128),w
  3696     06D9  00F7               	movwf	___lldiv@dividend+3
  3697     06DA  082E               	movf	(sprintf@val+2)^(0+128),w
  3698     06DB  00F6               	movwf	___lldiv@dividend+2
  3699     06DC  082D               	movf	(sprintf@val+1)^(0+128),w
  3700     06DD  00F5               	movwf	___lldiv@dividend+1
  3701     06DE  082C               	movf	sprintf@val^(0+128),w
  3702     06DF  00F4               	movwf	___lldiv@dividend
  3703     06E0  160A  158A  25C4  120A  118A  	fcall	___lldiv
  3704     06E5  0873               	movf	?___lldiv+3,w
  3705     06E6  1683               	bsf	3,5	;RP0=1, select bank1
  3706     06E7  1303               	bcf	3,6	;RP1=0, select bank1
  3707     06E8  00B5               	movwf	(sprintf@tmpval+3)^(0+128)
  3708     06E9  0872               	movf	?___lldiv+2,w
  3709     06EA  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
  3710     06EB  0871               	movf	?___lldiv+1,w
  3711     06EC  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
  3712     06ED  0870               	movf	?___lldiv,w
  3713     06EE  00B2               	movwf	sprintf@tmpval^(0+128)
  3714     06EF                     l3572:
  3715                           
  3716                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3717     06EF  3000               	movlw	0
  3718     06F0  00F3               	movwf	___llmod@divisor+3
  3719     06F1  3000               	movlw	0
  3720     06F2  00F2               	movwf	___llmod@divisor+2
  3721     06F3  3000               	movlw	0
  3722     06F4  00F1               	movwf	___llmod@divisor+1
  3723     06F5  300A               	movlw	10
  3724     06F6  00F0               	movwf	___llmod@divisor
  3725     06F7  0835               	movf	(sprintf@tmpval+3)^(0+128),w
  3726     06F8  00F7               	movwf	___llmod@dividend+3
  3727     06F9  0834               	movf	(sprintf@tmpval+2)^(0+128),w
  3728     06FA  00F6               	movwf	___llmod@dividend+2
  3729     06FB  0833               	movf	(sprintf@tmpval+1)^(0+128),w
  3730     06FC  00F5               	movwf	___llmod@dividend+1
  3731     06FD  0832               	movf	sprintf@tmpval^(0+128),w
  3732     06FE  00F4               	movwf	___llmod@dividend
  3733     06FF  160A  158A  251A  120A  118A  	fcall	___llmod
  3734     0704  0873               	movf	?___llmod+3,w
  3735     0705  1683               	bsf	3,5	;RP0=1, select bank1
  3736     0706  1303               	bcf	3,6	;RP1=0, select bank1
  3737     0707  00B5               	movwf	(sprintf@tmpval+3)^(0+128)
  3738     0708  0872               	movf	?___llmod+2,w
  3739     0709  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
  3740     070A  0871               	movf	?___llmod+1,w
  3741     070B  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
  3742     070C  0870               	movf	?___llmod,w
  3743     070D  00B2               	movwf	sprintf@tmpval^(0+128)
  3744     070E                     l3574:
  3745                           
  3746                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3747     070E  0836               	movf	sprintf@sp^(0+128),w
  3748     070F  0084               	movwf	4
  3749     0710  0832               	movf	sprintf@tmpval^(0+128),w
  3750     0711  3E30               	addlw	48
  3751     0712  1383               	bcf	3,7	;select IRP bank0
  3752     0713  0080               	movwf	0
  3753     0714                     l3576:
  3754     0714  3001               	movlw	1
  3755     0715  00FF               	movwf	btemp+1
  3756     0716  087F               	movf	btemp+1,w
  3757     0717  07B6               	addwf	sprintf@sp^(0+128),f
  3758     0718                     l3578:
  3759                           
  3760                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3761     0718  083D               	movf	sprintf@c^(0+128),w
  3762     0719  00A0               	movwf	??_sprintf^(0+128)
  3763     071A  3001               	movlw	1
  3764     071B                     u5355:
  3765     071B  1003               	clrc
  3766     071C  0DA0               	rlf	??_sprintf^(0+128),f
  3767     071D  3EFF               	addlw	-1
  3768     071E  1D03               	skipz
  3769     071F  2F1B               	goto	u5355
  3770     0720  1003               	clrc
  3771     0721  0D20               	rlf	??_sprintf^(0+128),w
  3772     0722  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3773     0723  0084               	movwf	4
  3774     0724  160A  118A  200A  120A  118A  	fcall	stringdir
  3775     0729  00F0               	movwf	___llmod@divisor
  3776     072A  160A  118A  200A  120A  118A  	fcall	stringdir
  3777     072F  00F1               	movwf	___llmod@divisor+1
  3778     0730  160A  118A  200A  120A  118A  	fcall	stringdir
  3779     0735  00F2               	movwf	___llmod@divisor+2
  3780     0736  160A  118A  200A  120A  118A  	fcall	stringdir
  3781     073B  00F3               	movwf	___llmod@divisor+3
  3782     073C  082F               	movf	(sprintf@val+3)^(0+128),w
  3783     073D  00F7               	movwf	___llmod@dividend+3
  3784     073E  082E               	movf	(sprintf@val+2)^(0+128),w
  3785     073F  00F6               	movwf	___llmod@dividend+2
  3786     0740  082D               	movf	(sprintf@val+1)^(0+128),w
  3787     0741  00F5               	movwf	___llmod@dividend+1
  3788     0742  082C               	movf	sprintf@val^(0+128),w
  3789     0743  00F4               	movwf	___llmod@dividend
  3790     0744  160A  158A  251A  120A  118A  	fcall	___llmod
  3791     0749  0873               	movf	?___llmod+3,w
  3792     074A  1683               	bsf	3,5	;RP0=1, select bank1
  3793     074B  1303               	bcf	3,6	;RP1=0, select bank1
  3794     074C  00AF               	movwf	(sprintf@val+3)^(0+128)
  3795     074D  0872               	movf	?___llmod+2,w
  3796     074E  00AE               	movwf	(sprintf@val+2)^(0+128)
  3797     074F  0871               	movf	?___llmod+1,w
  3798     0750  00AD               	movwf	(sprintf@val+1)^(0+128)
  3799     0751  0870               	movf	?___llmod,w
  3800     0752  00AC               	movwf	sprintf@val^(0+128)
  3801     0753                     l3580:
  3802                           
  3803                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3804     0753  3001               	movlw	1
  3805     0754  02BD               	subwf	sprintf@c^(0+128),f
  3806     0755  0A3D               	incf	sprintf@c^(0+128),w
  3807     0756  1D03               	btfss	3,2
  3808     0757  2F59               	goto	u5361
  3809     0758  2F5A               	goto	u5360
  3810     0759                     u5361:
  3811     0759  2EB4               	goto	l3570
  3812     075A                     u5360:
  3813     075A  2F6A               	goto	l3588
  3814     075B                     l3582:
  3815                           
  3816                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3817     075B  0836               	movf	sprintf@sp^(0+128),w
  3818     075C  0084               	movwf	4
  3819     075D  3030               	movlw	48
  3820     075E  1383               	bcf	3,7	;select IRP bank0
  3821     075F  0080               	movwf	0
  3822     0760                     l3584:
  3823     0760  3001               	movlw	1
  3824     0761  00FF               	movwf	btemp+1
  3825     0762  087F               	movf	btemp+1,w
  3826     0763  07B6               	addwf	sprintf@sp^(0+128),f
  3827     0764                     l3586:
  3828                           
  3829                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3830     0764  30FF               	movlw	255
  3831     0765  07B7               	addwf	sprintf@prec^(0+128),f
  3832     0766  1803               	skipnc
  3833     0767  0AB8               	incf	(sprintf@prec+1)^(0+128),f
  3834     0768  30FF               	movlw	255
  3835     0769  07B8               	addwf	(sprintf@prec+1)^(0+128),f
  3836     076A                     l3588:
  3837                           
  3838                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3839     076A  0837               	movf	sprintf@prec^(0+128),w
  3840     076B  0438               	iorwf	(sprintf@prec+1)^(0+128),w
  3841     076C  1D03               	btfss	3,2
  3842     076D  2F6F               	goto	u5371
  3843     076E  2F70               	goto	u5370
  3844     076F                     u5371:
  3845     076F  2F5B               	goto	l3582
  3846     0770                     u5370:
  3847     0770  2FB4               	goto	l3608
  3848     0771                     l3590:
  3849                           
  3850                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3851     0771  0837               	movf	sprintf@prec^(0+128),w
  3852     0772  0438               	iorwf	(sprintf@prec+1)^(0+128),w
  3853     0773  1D03               	btfss	3,2
  3854     0774  2F76               	goto	u5381
  3855     0775  2F77               	goto	u5380
  3856     0776                     u5381:
  3857     0776  2F85               	goto	l393
  3858     0777                     u5380:
  3859     0777                     l3592:
  3860     0777  082F               	movf	(sprintf@val+3)^(0+128),w
  3861     0778  042E               	iorwf	(sprintf@val+2)^(0+128),w
  3862     0779  042D               	iorwf	(sprintf@val+1)^(0+128),w
  3863     077A  042C               	iorwf	sprintf@val^(0+128),w
  3864     077B  1D03               	skipz
  3865     077C  2F7E               	goto	u5391
  3866     077D  2F7F               	goto	u5390
  3867     077E                     u5391:
  3868     077E  2F85               	goto	l393
  3869     077F                     u5390:
  3870     077F                     l3594:
  3871                           
  3872                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3873     077F  3001               	movlw	1
  3874     0780  07B7               	addwf	sprintf@prec^(0+128),f
  3875     0781  1803               	skipnc
  3876     0782  0AB8               	incf	(sprintf@prec+1)^(0+128),f
  3877     0783  3000               	movlw	0
  3878     0784  07B8               	addwf	(sprintf@prec+1)^(0+128),f
  3879     0785                     l393:
  3880                           
  3881                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3882     0785  0838               	movf	(sprintf@prec+1)^(0+128),w
  3883     0786  3A80               	xorlw	128
  3884     0787  3C80               	sublw	128
  3885     0788  1D03               	skipz
  3886     0789  2F8C               	goto	u5405
  3887     078A  0837               	movf	sprintf@prec^(0+128),w
  3888     078B  023D               	subwf	sprintf@c^(0+128),w
  3889     078C                     u5405:
  3890     078C  1803               	skipnc
  3891     078D  2F8F               	goto	u5401
  3892     078E  2F90               	goto	u5400
  3893     078F                     u5401:
  3894     078F  2F91               	goto	l3598
  3895     0790                     u5400:
  3896     0790                     l3596:
  3897     0790  2FA0               	goto	l3602
  3898     0791                     l3598:
  3899     0791  1683               	bsf	3,5	;RP0=1, select bank1
  3900     0792  1303               	bcf	3,6	;RP1=0, select bank1
  3901     0793  0838               	movf	(sprintf@prec+1)^(0+128),w
  3902     0794  3A80               	xorlw	128
  3903     0795  00A0               	movwf	??_sprintf^(0+128)
  3904     0796  3080               	movlw	128
  3905     0797  0220               	subwf	??_sprintf^(0+128),w
  3906     0798  1D03               	skipz
  3907     0799  2F9C               	goto	u5415
  3908     079A  083D               	movf	sprintf@c^(0+128),w
  3909     079B  0237               	subwf	sprintf@prec^(0+128),w
  3910     079C                     u5415:
  3911     079C  1803               	skipnc
  3912     079D  2F9F               	goto	u5411
  3913     079E  2FA0               	goto	u5410
  3914     079F                     u5411:
  3915     079F  2FA0               	goto	l3602
  3916     07A0                     u5410:
  3917     07A0                     l3600:
  3918     07A0                     l3602:
  3919                           
  3920                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3921     07A0  3003               	movlw	3
  3922     07A1  1683               	bsf	3,5	;RP0=1, select bank1
  3923     07A2  1303               	bcf	3,6	;RP1=0, select bank1
  3924     07A3  052A               	andwf	sprintf@flag^(0+128),w
  3925     07A4  00A0               	movwf	??_sprintf^(0+128)
  3926     07A5  3000               	movlw	0
  3927     07A6  052B               	andwf	(sprintf@flag+1)^(0+128),w
  3928     07A7  00A1               	movwf	(??_sprintf+1)^(0+128)
  3929     07A8  0820               	movf	??_sprintf^(0+128),w
  3930     07A9  0421               	iorwf	(??_sprintf^(0+128)+1),w
  3931     07AA  1903               	btfsc	3,2
  3932     07AB  2FAD               	goto	u5421
  3933     07AC  2FAE               	goto	u5420
  3934     07AD                     u5421:
  3935     07AD  2FB4               	goto	l3608
  3936     07AE                     u5420:
  3937     07AE                     l3604:
  3938                           
  3939                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3940     07AE  0836               	movf	sprintf@sp^(0+128),w
  3941     07AF  0084               	movwf	4
  3942     07B0  302D               	movlw	45
  3943     07B1  1383               	bcf	3,7	;select IRP bank0
  3944     07B2  0080               	movwf	0
  3945     07B3  298A               	goto	l3414
  3946     07B4                     l3608:
  3947                           
  3948                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3949     07B4  3001               	movlw	1
  3950     07B5  1283               	bcf	3,5	;RP0=0, select bank0
  3951     07B6  1303               	bcf	3,6	;RP1=0, select bank0
  3952     07B7  07EA               	addwf	sprintf@f,f
  3953     07B8  30FF               	movlw	-1
  3954     07B9  076A               	addwf	sprintf@f,w
  3955     07BA  0084               	movwf	4
  3956     07BB  160A  118A  200A  120A  118A  	fcall	stringdir
  3957     07C0  1683               	bsf	3,5	;RP0=1, select bank1
  3958     07C1  1303               	bcf	3,6	;RP1=0, select bank1
  3959     07C2  00BD               	movwf	sprintf@c^(0+128)
  3960     07C3  083D               	movf	sprintf@c^(0+128),w
  3961     07C4  1D03               	btfss	3,2
  3962     07C5  2FC7               	goto	u5431
  3963     07C6  2FC8               	goto	u5430
  3964     07C7                     u5431:
  3965     07C7  297F               	goto	l3410
  3966     07C8                     u5430:
  3967     07C8                     l3610:
  3968                           
  3969                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3970     07C8  0836               	movf	sprintf@sp^(0+128),w
  3971     07C9  0084               	movwf	4
  3972     07CA  1383               	bcf	3,7	;select IRP bank0
  3973     07CB  0180               	clrf	0
  3974     07CC                     l399:
  3975     07CC  0008               	return
  3976     07CD                     __end_of_sprintf:
  3977                           
  3978                           	psect	text2
  3979     0CA1                     __ptext2:	
  3980 ;; *************** function _scale *****************
  3981 ;; Defined at:
  3982 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  3983 ;; Parameters:    Size  Location     Type
  3984 ;;  scl             1    wreg     char 
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;  scl             1   44[BANK0 ] char 
  3987 ;; Return value:  Size  Location     Type
  3988 ;;                  4   26[BANK0 ] char 
  3989 ;; Registers used:
  3990 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3996 ;;      Params:         0       4       0       0       0
  3997 ;;      Locals:         0       5       0       0       0
  3998 ;;      Temps:          0      10       0       0       0
  3999 ;;      Totals:         0      19       0       0       0
  4000 ;;Total ram usage:       19 bytes
  4001 ;; Hardware stack levels used: 1
  4002 ;; Hardware stack levels required when called: 2
  4003 ;; This function calls:
  4004 ;;		___awdiv
  4005 ;;		___awmod
  4006 ;;		___flmul
  4007 ;; This function is called by:
  4008 ;;		_sprintf
  4009 ;; This function uses a non-reentrant model
  4010 ;;
  4011                           
  4012     0CA1                     _scale:	
  4013                           ;psect for function _scale
  4014                           
  4015                           
  4016                           ;incstack = 0
  4017                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4018                           ;scale@scl stored from wreg
  4019     0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  4020     0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  4021     0CA3  00CC               	movwf	scale@scl
  4022     0CA4                     l3022:
  4023                           
  4024                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  4025     0CA4  1FCC               	btfss	scale@scl,7
  4026     0CA5  2CA7               	goto	u4131
  4027     0CA6  2CA8               	goto	u4130
  4028     0CA7                     u4131:
  4029     0CA7  2E55               	goto	l3044
  4030     0CA8                     u4130:
  4031     0CA8                     l3024:
  4032                           
  4033                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  4034     0CA8  09CC               	comf	scale@scl,f
  4035     0CA9  0ACC               	incf	scale@scl,f
  4036     0CAA                     l3026:
  4037                           
  4038                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  4039     0CAA  084C               	movf	scale@scl,w
  4040     0CAB  3A80               	xorlw	128
  4041     0CAC  3E12               	addlw	-238
  4042     0CAD  1C03               	skipc
  4043     0CAE  2CB0               	goto	u4141
  4044     0CAF  2CB1               	goto	u4140
  4045     0CB0                     u4141:
  4046     0CB0  2D99               	goto	l3034
  4047     0CB1                     u4140:
  4048     0CB1                     l3028:
  4049                           
  4050                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4051     0CB1  300A               	movlw	10
  4052     0CB2  00F6               	movwf	___awdiv@divisor
  4053     0CB3  3000               	movlw	0
  4054     0CB4  00F7               	movwf	___awdiv@divisor+1
  4055     0CB5  084C               	movf	scale@scl,w
  4056     0CB6  00F2               	movwf	___awmod@dividend
  4057     0CB7  01F3               	clrf	___awmod@dividend+1
  4058     0CB8  1BF2               	btfsc	___awmod@dividend,7
  4059     0CB9  03F3               	decf	___awmod@dividend+1,f
  4060     0CBA  3064               	movlw	100
  4061     0CBB  00F0               	movwf	___awmod@divisor
  4062     0CBC  3000               	movlw	0
  4063     0CBD  00F1               	movwf	___awmod@divisor+1
  4064     0CBE  160A  118A  20C2  120A  158A  	fcall	___awmod
  4065     0CC3  0871               	movf	?___awmod+1,w
  4066     0CC4  00F9               	movwf	___awdiv@dividend+1
  4067     0CC5  0870               	movf	?___awmod,w
  4068     0CC6  00F8               	movwf	___awdiv@dividend
  4069     0CC7  160A  158A  262A  120A  158A  	fcall	___awdiv
  4070     0CCC  0876               	movf	?___awdiv,w
  4071     0CCD  1283               	bcf	3,5	;RP0=0, select bank0
  4072     0CCE  1303               	bcf	3,6	;RP1=0, select bank0
  4073     0CCF  00BE               	movwf	??_scale
  4074     0CD0  3001               	movlw	1
  4075     0CD1                     u4155:
  4076     0CD1  1003               	clrc
  4077     0CD2  0DBE               	rlf	??_scale,f
  4078     0CD3  3EFF               	addlw	-1
  4079     0CD4  1D03               	skipz
  4080     0CD5  2CD1               	goto	u4155
  4081     0CD6  1003               	clrc
  4082     0CD7  0D3E               	rlf	??_scale,w
  4083     0CD8  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4084     0CD9  0084               	movwf	4
  4085     0CDA  160A  118A  200A  120A  158A  	fcall	stringdir
  4086     0CDF  00BF               	movwf	??_scale+1
  4087     0CE0  160A  118A  200A  120A  158A  	fcall	stringdir
  4088     0CE5  00C0               	movwf	??_scale+2
  4089     0CE6  160A  118A  200A  120A  158A  	fcall	stringdir
  4090     0CEB  00C1               	movwf	??_scale+3
  4091     0CEC  160A  118A  200A  120A  158A  	fcall	stringdir
  4092     0CF1  00C2               	movwf	??_scale+4
  4093     0CF2  0842               	movf	??_scale+4,w
  4094     0CF3  00A3               	movwf	___flmul@b+3
  4095     0CF4  0841               	movf	??_scale+3,w
  4096     0CF5  00A2               	movwf	___flmul@b+2
  4097     0CF6  0840               	movf	??_scale+2,w
  4098     0CF7  00A1               	movwf	___flmul@b+1
  4099     0CF8  083F               	movf	??_scale+1,w
  4100     0CF9  00A0               	movwf	___flmul@b
  4101     0CFA  3064               	movlw	100
  4102     0CFB  00F6               	movwf	___awdiv@divisor
  4103     0CFC  3000               	movlw	0
  4104     0CFD  00F7               	movwf	___awdiv@divisor+1
  4105     0CFE  084C               	movf	scale@scl,w
  4106     0CFF  00F8               	movwf	___awdiv@dividend
  4107     0D00  01F9               	clrf	___awdiv@dividend+1
  4108     0D01  1BF8               	btfsc	___awdiv@dividend,7
  4109     0D02  03F9               	decf	___awdiv@dividend+1,f
  4110     0D03  160A  158A  262A  120A  158A  	fcall	___awdiv
  4111     0D08  0876               	movf	?___awdiv,w
  4112     0D09  1283               	bcf	3,5	;RP0=0, select bank0
  4113     0D0A  1303               	bcf	3,6	;RP1=0, select bank0
  4114     0D0B  00C3               	movwf	??_scale+5
  4115     0D0C  3001               	movlw	1
  4116     0D0D                     u4165:
  4117     0D0D  1003               	clrc
  4118     0D0E  0DC3               	rlf	??_scale+5,f
  4119     0D0F  3EFF               	addlw	-1
  4120     0D10  1D03               	skipz
  4121     0D11  2D0D               	goto	u4165
  4122     0D12  1003               	clrc
  4123     0D13  0D43               	rlf	??_scale+5,w
  4124     0D14  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4125     0D15  0084               	movwf	4
  4126     0D16  160A  118A  200A  120A  158A  	fcall	stringdir
  4127     0D1B  00C4               	movwf	??_scale+6
  4128     0D1C  160A  118A  200A  120A  158A  	fcall	stringdir
  4129     0D21  00C5               	movwf	??_scale+7
  4130     0D22  160A  118A  200A  120A  158A  	fcall	stringdir
  4131     0D27  00C6               	movwf	??_scale+8
  4132     0D28  160A  118A  200A  120A  158A  	fcall	stringdir
  4133     0D2D  00C7               	movwf	??_scale+9
  4134     0D2E  0847               	movf	??_scale+9,w
  4135     0D2F  00A7               	movwf	___flmul@a+3
  4136     0D30  0846               	movf	??_scale+8,w
  4137     0D31  00A6               	movwf	___flmul@a+2
  4138     0D32  0845               	movf	??_scale+7,w
  4139     0D33  00A5               	movwf	___flmul@a+1
  4140     0D34  0844               	movf	??_scale+6,w
  4141     0D35  00A4               	movwf	___flmul@a
  4142     0D36  120A  158A  215C  120A  158A  	fcall	___flmul
  4143     0D3B  1283               	bcf	3,5	;RP0=0, select bank0
  4144     0D3C  1303               	bcf	3,6	;RP1=0, select bank0
  4145     0D3D  0823               	movf	?___flmul+3,w
  4146     0D3E  00CB               	movwf	_scale$1075+3
  4147     0D3F  0822               	movf	?___flmul+2,w
  4148     0D40  00CA               	movwf	_scale$1075+2
  4149     0D41  0821               	movf	?___flmul+1,w
  4150     0D42  00C9               	movwf	_scale$1075+1
  4151     0D43  0820               	movf	?___flmul,w
  4152     0D44  00C8               	movwf	_scale$1075
  4153                           
  4154                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4155     0D45  300A               	movlw	10
  4156     0D46  00F0               	movwf	___awmod@divisor
  4157     0D47  3000               	movlw	0
  4158     0D48  00F1               	movwf	___awmod@divisor+1
  4159     0D49  084C               	movf	scale@scl,w
  4160     0D4A  00F2               	movwf	___awmod@dividend
  4161     0D4B  01F3               	clrf	___awmod@dividend+1
  4162     0D4C  1BF2               	btfsc	___awmod@dividend,7
  4163     0D4D  03F3               	decf	___awmod@dividend+1,f
  4164     0D4E  160A  118A  20C2  120A  158A  	fcall	___awmod
  4165     0D53  0870               	movf	?___awmod,w
  4166     0D54  1283               	bcf	3,5	;RP0=0, select bank0
  4167     0D55  1303               	bcf	3,6	;RP1=0, select bank0
  4168     0D56  00BE               	movwf	??_scale
  4169     0D57  3001               	movlw	1
  4170     0D58                     u4175:
  4171     0D58  1003               	clrc
  4172     0D59  0DBE               	rlf	??_scale,f
  4173     0D5A  3EFF               	addlw	-1
  4174     0D5B  1D03               	skipz
  4175     0D5C  2D58               	goto	u4175
  4176     0D5D  1003               	clrc
  4177     0D5E  0D3E               	rlf	??_scale,w
  4178     0D5F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4179     0D60  0084               	movwf	4
  4180     0D61  160A  118A  200A  120A  158A  	fcall	stringdir
  4181     0D66  00BF               	movwf	??_scale+1
  4182     0D67  160A  118A  200A  120A  158A  	fcall	stringdir
  4183     0D6C  00C0               	movwf	??_scale+2
  4184     0D6D  160A  118A  200A  120A  158A  	fcall	stringdir
  4185     0D72  00C1               	movwf	??_scale+3
  4186     0D73  160A  118A  200A  120A  158A  	fcall	stringdir
  4187     0D78  00C2               	movwf	??_scale+4
  4188     0D79  0842               	movf	??_scale+4,w
  4189     0D7A  00A3               	movwf	___flmul@b+3
  4190     0D7B  0841               	movf	??_scale+3,w
  4191     0D7C  00A2               	movwf	___flmul@b+2
  4192     0D7D  0840               	movf	??_scale+2,w
  4193     0D7E  00A1               	movwf	___flmul@b+1
  4194     0D7F  083F               	movf	??_scale+1,w
  4195     0D80  00A0               	movwf	___flmul@b
  4196     0D81  084B               	movf	_scale$1075+3,w
  4197     0D82  00A7               	movwf	___flmul@a+3
  4198     0D83  084A               	movf	_scale$1075+2,w
  4199     0D84  00A6               	movwf	___flmul@a+2
  4200     0D85  0849               	movf	_scale$1075+1,w
  4201     0D86  00A5               	movwf	___flmul@a+1
  4202     0D87  0848               	movf	_scale$1075,w
  4203     0D88  00A4               	movwf	___flmul@a
  4204     0D89  120A  158A  215C  120A  158A  	fcall	___flmul
  4205     0D8E  1283               	bcf	3,5	;RP0=0, select bank0
  4206     0D8F  1303               	bcf	3,6	;RP1=0, select bank0
  4207     0D90  0823               	movf	?___flmul+3,w
  4208     0D91  00BD               	movwf	?_scale+3
  4209     0D92  0822               	movf	?___flmul+2,w
  4210     0D93  00BC               	movwf	?_scale+2
  4211     0D94  0821               	movf	?___flmul+1,w
  4212     0D95  00BB               	movwf	?_scale+1
  4213     0D96  0820               	movf	?___flmul,w
  4214     0D97  00BA               	movwf	?_scale
  4215     0D98  2FFF               	goto	l333
  4216     0D99                     l3034:
  4217     0D99  084C               	movf	scale@scl,w
  4218     0D9A  3A80               	xorlw	128
  4219     0D9B  3E75               	addlw	-139
  4220     0D9C  1C03               	skipc
  4221     0D9D  2D9F               	goto	u4181
  4222     0D9E  2DA0               	goto	u4180
  4223     0D9F                     u4181:
  4224     0D9F  2E28               	goto	l3040
  4225     0DA0                     u4180:
  4226     0DA0                     l3036:
  4227                           
  4228                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4229     0DA0  300A               	movlw	10
  4230     0DA1  00F0               	movwf	___awmod@divisor
  4231     0DA2  3000               	movlw	0
  4232     0DA3  00F1               	movwf	___awmod@divisor+1
  4233     0DA4  084C               	movf	scale@scl,w
  4234     0DA5  00F2               	movwf	___awmod@dividend
  4235     0DA6  01F3               	clrf	___awmod@dividend+1
  4236     0DA7  1BF2               	btfsc	___awmod@dividend,7
  4237     0DA8  03F3               	decf	___awmod@dividend+1,f
  4238     0DA9  160A  118A  20C2  120A  158A  	fcall	___awmod
  4239     0DAE  0870               	movf	?___awmod,w
  4240     0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  4241     0DB0  1303               	bcf	3,6	;RP1=0, select bank0
  4242     0DB1  00BE               	movwf	??_scale
  4243     0DB2  3001               	movlw	1
  4244     0DB3                     u4195:
  4245     0DB3  1003               	clrc
  4246     0DB4  0DBE               	rlf	??_scale,f
  4247     0DB5  3EFF               	addlw	-1
  4248     0DB6  1D03               	skipz
  4249     0DB7  2DB3               	goto	u4195
  4250     0DB8  1003               	clrc
  4251     0DB9  0D3E               	rlf	??_scale,w
  4252     0DBA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4253     0DBB  0084               	movwf	4
  4254     0DBC  160A  118A  200A  120A  158A  	fcall	stringdir
  4255     0DC1  00BF               	movwf	??_scale+1
  4256     0DC2  160A  118A  200A  120A  158A  	fcall	stringdir
  4257     0DC7  00C0               	movwf	??_scale+2
  4258     0DC8  160A  118A  200A  120A  158A  	fcall	stringdir
  4259     0DCD  00C1               	movwf	??_scale+3
  4260     0DCE  160A  118A  200A  120A  158A  	fcall	stringdir
  4261     0DD3  00C2               	movwf	??_scale+4
  4262     0DD4  0842               	movf	??_scale+4,w
  4263     0DD5  00A3               	movwf	___flmul@b+3
  4264     0DD6  0841               	movf	??_scale+3,w
  4265     0DD7  00A2               	movwf	___flmul@b+2
  4266     0DD8  0840               	movf	??_scale+2,w
  4267     0DD9  00A1               	movwf	___flmul@b+1
  4268     0DDA  083F               	movf	??_scale+1,w
  4269     0DDB  00A0               	movwf	___flmul@b
  4270     0DDC  300A               	movlw	10
  4271     0DDD  00F6               	movwf	___awdiv@divisor
  4272     0DDE  3000               	movlw	0
  4273     0DDF  00F7               	movwf	___awdiv@divisor+1
  4274     0DE0  084C               	movf	scale@scl,w
  4275     0DE1  00F8               	movwf	___awdiv@dividend
  4276     0DE2  01F9               	clrf	___awdiv@dividend+1
  4277     0DE3  1BF8               	btfsc	___awdiv@dividend,7
  4278     0DE4  03F9               	decf	___awdiv@dividend+1,f
  4279     0DE5  160A  158A  262A  120A  158A  	fcall	___awdiv
  4280     0DEA  0876               	movf	?___awdiv,w
  4281     0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  4282     0DEC  1303               	bcf	3,6	;RP1=0, select bank0
  4283     0DED  00C3               	movwf	??_scale+5
  4284     0DEE  3001               	movlw	1
  4285     0DEF                     u4205:
  4286     0DEF  1003               	clrc
  4287     0DF0  0DC3               	rlf	??_scale+5,f
  4288     0DF1  3EFF               	addlw	-1
  4289     0DF2  1D03               	skipz
  4290     0DF3  2DEF               	goto	u4205
  4291     0DF4  1003               	clrc
  4292     0DF5  0D43               	rlf	??_scale+5,w
  4293     0DF6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4294     0DF7  0084               	movwf	4
  4295     0DF8  160A  118A  200A  120A  158A  	fcall	stringdir
  4296     0DFD  00C4               	movwf	??_scale+6
  4297     0DFE  160A  118A  200A  120A  158A  	fcall	stringdir
  4298     0E03  00C5               	movwf	??_scale+7
  4299     0E04  160A  118A  200A  120A  158A  	fcall	stringdir
  4300     0E09  00C6               	movwf	??_scale+8
  4301     0E0A  160A  118A  200A  120A  158A  	fcall	stringdir
  4302     0E0F  00C7               	movwf	??_scale+9
  4303     0E10  0847               	movf	??_scale+9,w
  4304     0E11  00A7               	movwf	___flmul@a+3
  4305     0E12  0846               	movf	??_scale+8,w
  4306     0E13  00A6               	movwf	___flmul@a+2
  4307     0E14  0845               	movf	??_scale+7,w
  4308     0E15  00A5               	movwf	___flmul@a+1
  4309     0E16  0844               	movf	??_scale+6,w
  4310     0E17  00A4               	movwf	___flmul@a
  4311     0E18  120A  158A  215C  120A  158A  	fcall	___flmul
  4312     0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  4313     0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  4314     0E1F  0823               	movf	?___flmul+3,w
  4315     0E20  00BD               	movwf	?_scale+3
  4316     0E21  0822               	movf	?___flmul+2,w
  4317     0E22  00BC               	movwf	?_scale+2
  4318     0E23  0821               	movf	?___flmul+1,w
  4319     0E24  00BB               	movwf	?_scale+1
  4320     0E25  0820               	movf	?___flmul,w
  4321     0E26  00BA               	movwf	?_scale
  4322     0E27  2FFF               	goto	l333
  4323     0E28                     l3040:
  4324                           
  4325                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4326     0E28  084C               	movf	scale@scl,w
  4327     0E29  00BE               	movwf	??_scale
  4328     0E2A  3001               	movlw	1
  4329     0E2B                     u4215:
  4330     0E2B  1003               	clrc
  4331     0E2C  0DBE               	rlf	??_scale,f
  4332     0E2D  3EFF               	addlw	-1
  4333     0E2E  1D03               	skipz
  4334     0E2F  2E2B               	goto	u4215
  4335     0E30  1003               	clrc
  4336     0E31  0D3E               	rlf	??_scale,w
  4337     0E32  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4338     0E33  0084               	movwf	4
  4339     0E34  160A  118A  200A  120A  158A  	fcall	stringdir
  4340     0E39  00BF               	movwf	??_scale+1
  4341     0E3A  160A  118A  200A  120A  158A  	fcall	stringdir
  4342     0E3F  00C0               	movwf	??_scale+2
  4343     0E40  160A  118A  200A  120A  158A  	fcall	stringdir
  4344     0E45  00C1               	movwf	??_scale+3
  4345     0E46  160A  118A  200A  120A  158A  	fcall	stringdir
  4346     0E4B  00C2               	movwf	??_scale+4
  4347     0E4C  0842               	movf	??_scale+4,w
  4348     0E4D  00BD               	movwf	?_scale+3
  4349     0E4E  0841               	movf	??_scale+3,w
  4350     0E4F  00BC               	movwf	?_scale+2
  4351     0E50  0840               	movf	??_scale+2,w
  4352     0E51  00BB               	movwf	?_scale+1
  4353     0E52  083F               	movf	??_scale+1,w
  4354     0E53  00BA               	movwf	?_scale
  4355     0E54  2FFF               	goto	l333
  4356     0E55                     l3044:
  4357                           
  4358                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4359     0E55  084C               	movf	scale@scl,w
  4360     0E56  3A80               	xorlw	128
  4361     0E57  3E12               	addlw	-238
  4362     0E58  1C03               	skipc
  4363     0E59  2E5B               	goto	u4221
  4364     0E5A  2E5C               	goto	u4220
  4365     0E5B                     u4221:
  4366     0E5B  2F44               	goto	l3052
  4367     0E5C                     u4220:
  4368     0E5C                     l3046:
  4369                           
  4370                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4371     0E5C  300A               	movlw	10
  4372     0E5D  00F6               	movwf	___awdiv@divisor
  4373     0E5E  3000               	movlw	0
  4374     0E5F  00F7               	movwf	___awdiv@divisor+1
  4375     0E60  084C               	movf	scale@scl,w
  4376     0E61  00F2               	movwf	___awmod@dividend
  4377     0E62  01F3               	clrf	___awmod@dividend+1
  4378     0E63  1BF2               	btfsc	___awmod@dividend,7
  4379     0E64  03F3               	decf	___awmod@dividend+1,f
  4380     0E65  3064               	movlw	100
  4381     0E66  00F0               	movwf	___awmod@divisor
  4382     0E67  3000               	movlw	0
  4383     0E68  00F1               	movwf	___awmod@divisor+1
  4384     0E69  160A  118A  20C2  120A  158A  	fcall	___awmod
  4385     0E6E  0871               	movf	?___awmod+1,w
  4386     0E6F  00F9               	movwf	___awdiv@dividend+1
  4387     0E70  0870               	movf	?___awmod,w
  4388     0E71  00F8               	movwf	___awdiv@dividend
  4389     0E72  160A  158A  262A  120A  158A  	fcall	___awdiv
  4390     0E77  0876               	movf	?___awdiv,w
  4391     0E78  1283               	bcf	3,5	;RP0=0, select bank0
  4392     0E79  1303               	bcf	3,6	;RP1=0, select bank0
  4393     0E7A  00BE               	movwf	??_scale
  4394     0E7B  3001               	movlw	1
  4395     0E7C                     u4235:
  4396     0E7C  1003               	clrc
  4397     0E7D  0DBE               	rlf	??_scale,f
  4398     0E7E  3EFF               	addlw	-1
  4399     0E7F  1D03               	skipz
  4400     0E80  2E7C               	goto	u4235
  4401     0E81  1003               	clrc
  4402     0E82  0D3E               	rlf	??_scale,w
  4403     0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4404     0E84  0084               	movwf	4
  4405     0E85  160A  118A  200A  120A  158A  	fcall	stringdir
  4406     0E8A  00BF               	movwf	??_scale+1
  4407     0E8B  160A  118A  200A  120A  158A  	fcall	stringdir
  4408     0E90  00C0               	movwf	??_scale+2
  4409     0E91  160A  118A  200A  120A  158A  	fcall	stringdir
  4410     0E96  00C1               	movwf	??_scale+3
  4411     0E97  160A  118A  200A  120A  158A  	fcall	stringdir
  4412     0E9C  00C2               	movwf	??_scale+4
  4413     0E9D  0842               	movf	??_scale+4,w
  4414     0E9E  00A3               	movwf	___flmul@b+3
  4415     0E9F  0841               	movf	??_scale+3,w
  4416     0EA0  00A2               	movwf	___flmul@b+2
  4417     0EA1  0840               	movf	??_scale+2,w
  4418     0EA2  00A1               	movwf	___flmul@b+1
  4419     0EA3  083F               	movf	??_scale+1,w
  4420     0EA4  00A0               	movwf	___flmul@b
  4421     0EA5  3064               	movlw	100
  4422     0EA6  00F6               	movwf	___awdiv@divisor
  4423     0EA7  3000               	movlw	0
  4424     0EA8  00F7               	movwf	___awdiv@divisor+1
  4425     0EA9  084C               	movf	scale@scl,w
  4426     0EAA  00F8               	movwf	___awdiv@dividend
  4427     0EAB  01F9               	clrf	___awdiv@dividend+1
  4428     0EAC  1BF8               	btfsc	___awdiv@dividend,7
  4429     0EAD  03F9               	decf	___awdiv@dividend+1,f
  4430     0EAE  160A  158A  262A  120A  158A  	fcall	___awdiv
  4431     0EB3  0876               	movf	?___awdiv,w
  4432     0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  4433     0EB5  1303               	bcf	3,6	;RP1=0, select bank0
  4434     0EB6  00C3               	movwf	??_scale+5
  4435     0EB7  3001               	movlw	1
  4436     0EB8                     u4245:
  4437     0EB8  1003               	clrc
  4438     0EB9  0DC3               	rlf	??_scale+5,f
  4439     0EBA  3EFF               	addlw	-1
  4440     0EBB  1D03               	skipz
  4441     0EBC  2EB8               	goto	u4245
  4442     0EBD  1003               	clrc
  4443     0EBE  0D43               	rlf	??_scale+5,w
  4444     0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4445     0EC0  0084               	movwf	4
  4446     0EC1  160A  118A  200A  120A  158A  	fcall	stringdir
  4447     0EC6  00C4               	movwf	??_scale+6
  4448     0EC7  160A  118A  200A  120A  158A  	fcall	stringdir
  4449     0ECC  00C5               	movwf	??_scale+7
  4450     0ECD  160A  118A  200A  120A  158A  	fcall	stringdir
  4451     0ED2  00C6               	movwf	??_scale+8
  4452     0ED3  160A  118A  200A  120A  158A  	fcall	stringdir
  4453     0ED8  00C7               	movwf	??_scale+9
  4454     0ED9  0847               	movf	??_scale+9,w
  4455     0EDA  00A7               	movwf	___flmul@a+3
  4456     0EDB  0846               	movf	??_scale+8,w
  4457     0EDC  00A6               	movwf	___flmul@a+2
  4458     0EDD  0845               	movf	??_scale+7,w
  4459     0EDE  00A5               	movwf	___flmul@a+1
  4460     0EDF  0844               	movf	??_scale+6,w
  4461     0EE0  00A4               	movwf	___flmul@a
  4462     0EE1  120A  158A  215C  120A  158A  	fcall	___flmul
  4463     0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  4464     0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  4465     0EE8  0823               	movf	?___flmul+3,w
  4466     0EE9  00CB               	movwf	_scale$1075+3
  4467     0EEA  0822               	movf	?___flmul+2,w
  4468     0EEB  00CA               	movwf	_scale$1075+2
  4469     0EEC  0821               	movf	?___flmul+1,w
  4470     0EED  00C9               	movwf	_scale$1075+1
  4471     0EEE  0820               	movf	?___flmul,w
  4472     0EEF  00C8               	movwf	_scale$1075
  4473                           
  4474                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4475     0EF0  300A               	movlw	10
  4476     0EF1  00F0               	movwf	___awmod@divisor
  4477     0EF2  3000               	movlw	0
  4478     0EF3  00F1               	movwf	___awmod@divisor+1
  4479     0EF4  084C               	movf	scale@scl,w
  4480     0EF5  00F2               	movwf	___awmod@dividend
  4481     0EF6  01F3               	clrf	___awmod@dividend+1
  4482     0EF7  1BF2               	btfsc	___awmod@dividend,7
  4483     0EF8  03F3               	decf	___awmod@dividend+1,f
  4484     0EF9  160A  118A  20C2  120A  158A  	fcall	___awmod
  4485     0EFE  0870               	movf	?___awmod,w
  4486     0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4487     0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4488     0F01  00BE               	movwf	??_scale
  4489     0F02  3001               	movlw	1
  4490     0F03                     u4255:
  4491     0F03  1003               	clrc
  4492     0F04  0DBE               	rlf	??_scale,f
  4493     0F05  3EFF               	addlw	-1
  4494     0F06  1D03               	skipz
  4495     0F07  2F03               	goto	u4255
  4496     0F08  1003               	clrc
  4497     0F09  0D3E               	rlf	??_scale,w
  4498     0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4499     0F0B  0084               	movwf	4
  4500     0F0C  160A  118A  200A  120A  158A  	fcall	stringdir
  4501     0F11  00BF               	movwf	??_scale+1
  4502     0F12  160A  118A  200A  120A  158A  	fcall	stringdir
  4503     0F17  00C0               	movwf	??_scale+2
  4504     0F18  160A  118A  200A  120A  158A  	fcall	stringdir
  4505     0F1D  00C1               	movwf	??_scale+3
  4506     0F1E  160A  118A  200A  120A  158A  	fcall	stringdir
  4507     0F23  00C2               	movwf	??_scale+4
  4508     0F24  0842               	movf	??_scale+4,w
  4509     0F25  00A3               	movwf	___flmul@b+3
  4510     0F26  0841               	movf	??_scale+3,w
  4511     0F27  00A2               	movwf	___flmul@b+2
  4512     0F28  0840               	movf	??_scale+2,w
  4513     0F29  00A1               	movwf	___flmul@b+1
  4514     0F2A  083F               	movf	??_scale+1,w
  4515     0F2B  00A0               	movwf	___flmul@b
  4516     0F2C  084B               	movf	_scale$1075+3,w
  4517     0F2D  00A7               	movwf	___flmul@a+3
  4518     0F2E  084A               	movf	_scale$1075+2,w
  4519     0F2F  00A6               	movwf	___flmul@a+2
  4520     0F30  0849               	movf	_scale$1075+1,w
  4521     0F31  00A5               	movwf	___flmul@a+1
  4522     0F32  0848               	movf	_scale$1075,w
  4523     0F33  00A4               	movwf	___flmul@a
  4524     0F34  120A  158A  215C  120A  158A  	fcall	___flmul
  4525     0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4526     0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4527     0F3B  0823               	movf	?___flmul+3,w
  4528     0F3C  00BD               	movwf	?_scale+3
  4529     0F3D  0822               	movf	?___flmul+2,w
  4530     0F3E  00BC               	movwf	?_scale+2
  4531     0F3F  0821               	movf	?___flmul+1,w
  4532     0F40  00BB               	movwf	?_scale+1
  4533     0F41  0820               	movf	?___flmul,w
  4534     0F42  00BA               	movwf	?_scale
  4535     0F43  2FFF               	goto	l333
  4536     0F44                     l3052:
  4537     0F44  084C               	movf	scale@scl,w
  4538     0F45  3A80               	xorlw	128
  4539     0F46  3E75               	addlw	-139
  4540     0F47  1C03               	skipc
  4541     0F48  2F4A               	goto	u4261
  4542     0F49  2F4B               	goto	u4260
  4543     0F4A                     u4261:
  4544     0F4A  2FD3               	goto	l3058
  4545     0F4B                     u4260:
  4546     0F4B                     l3054:
  4547                           
  4548                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4549     0F4B  300A               	movlw	10
  4550     0F4C  00F0               	movwf	___awmod@divisor
  4551     0F4D  3000               	movlw	0
  4552     0F4E  00F1               	movwf	___awmod@divisor+1
  4553     0F4F  084C               	movf	scale@scl,w
  4554     0F50  00F2               	movwf	___awmod@dividend
  4555     0F51  01F3               	clrf	___awmod@dividend+1
  4556     0F52  1BF2               	btfsc	___awmod@dividend,7
  4557     0F53  03F3               	decf	___awmod@dividend+1,f
  4558     0F54  160A  118A  20C2  120A  158A  	fcall	___awmod
  4559     0F59  0870               	movf	?___awmod,w
  4560     0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4561     0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  4562     0F5C  00BE               	movwf	??_scale
  4563     0F5D  3001               	movlw	1
  4564     0F5E                     u4275:
  4565     0F5E  1003               	clrc
  4566     0F5F  0DBE               	rlf	??_scale,f
  4567     0F60  3EFF               	addlw	-1
  4568     0F61  1D03               	skipz
  4569     0F62  2F5E               	goto	u4275
  4570     0F63  1003               	clrc
  4571     0F64  0D3E               	rlf	??_scale,w
  4572     0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4573     0F66  0084               	movwf	4
  4574     0F67  160A  118A  200A  120A  158A  	fcall	stringdir
  4575     0F6C  00BF               	movwf	??_scale+1
  4576     0F6D  160A  118A  200A  120A  158A  	fcall	stringdir
  4577     0F72  00C0               	movwf	??_scale+2
  4578     0F73  160A  118A  200A  120A  158A  	fcall	stringdir
  4579     0F78  00C1               	movwf	??_scale+3
  4580     0F79  160A  118A  200A  120A  158A  	fcall	stringdir
  4581     0F7E  00C2               	movwf	??_scale+4
  4582     0F7F  0842               	movf	??_scale+4,w
  4583     0F80  00A3               	movwf	___flmul@b+3
  4584     0F81  0841               	movf	??_scale+3,w
  4585     0F82  00A2               	movwf	___flmul@b+2
  4586     0F83  0840               	movf	??_scale+2,w
  4587     0F84  00A1               	movwf	___flmul@b+1
  4588     0F85  083F               	movf	??_scale+1,w
  4589     0F86  00A0               	movwf	___flmul@b
  4590     0F87  300A               	movlw	10
  4591     0F88  00F6               	movwf	___awdiv@divisor
  4592     0F89  3000               	movlw	0
  4593     0F8A  00F7               	movwf	___awdiv@divisor+1
  4594     0F8B  084C               	movf	scale@scl,w
  4595     0F8C  00F8               	movwf	___awdiv@dividend
  4596     0F8D  01F9               	clrf	___awdiv@dividend+1
  4597     0F8E  1BF8               	btfsc	___awdiv@dividend,7
  4598     0F8F  03F9               	decf	___awdiv@dividend+1,f
  4599     0F90  160A  158A  262A  120A  158A  	fcall	___awdiv
  4600     0F95  0876               	movf	?___awdiv,w
  4601     0F96  1283               	bcf	3,5	;RP0=0, select bank0
  4602     0F97  1303               	bcf	3,6	;RP1=0, select bank0
  4603     0F98  00C3               	movwf	??_scale+5
  4604     0F99  3001               	movlw	1
  4605     0F9A                     u4285:
  4606     0F9A  1003               	clrc
  4607     0F9B  0DC3               	rlf	??_scale+5,f
  4608     0F9C  3EFF               	addlw	-1
  4609     0F9D  1D03               	skipz
  4610     0F9E  2F9A               	goto	u4285
  4611     0F9F  1003               	clrc
  4612     0FA0  0D43               	rlf	??_scale+5,w
  4613     0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4614     0FA2  0084               	movwf	4
  4615     0FA3  160A  118A  200A  120A  158A  	fcall	stringdir
  4616     0FA8  00C4               	movwf	??_scale+6
  4617     0FA9  160A  118A  200A  120A  158A  	fcall	stringdir
  4618     0FAE  00C5               	movwf	??_scale+7
  4619     0FAF  160A  118A  200A  120A  158A  	fcall	stringdir
  4620     0FB4  00C6               	movwf	??_scale+8
  4621     0FB5  160A  118A  200A  120A  158A  	fcall	stringdir
  4622     0FBA  00C7               	movwf	??_scale+9
  4623     0FBB  0847               	movf	??_scale+9,w
  4624     0FBC  00A7               	movwf	___flmul@a+3
  4625     0FBD  0846               	movf	??_scale+8,w
  4626     0FBE  00A6               	movwf	___flmul@a+2
  4627     0FBF  0845               	movf	??_scale+7,w
  4628     0FC0  00A5               	movwf	___flmul@a+1
  4629     0FC1  0844               	movf	??_scale+6,w
  4630     0FC2  00A4               	movwf	___flmul@a
  4631     0FC3  120A  158A  215C  120A  158A  	fcall	___flmul
  4632     0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4633     0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4634     0FCA  0823               	movf	?___flmul+3,w
  4635     0FCB  00BD               	movwf	?_scale+3
  4636     0FCC  0822               	movf	?___flmul+2,w
  4637     0FCD  00BC               	movwf	?_scale+2
  4638     0FCE  0821               	movf	?___flmul+1,w
  4639     0FCF  00BB               	movwf	?_scale+1
  4640     0FD0  0820               	movf	?___flmul,w
  4641     0FD1  00BA               	movwf	?_scale
  4642     0FD2  2FFF               	goto	l333
  4643     0FD3                     l3058:
  4644                           
  4645                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4646     0FD3  084C               	movf	scale@scl,w
  4647     0FD4  00BE               	movwf	??_scale
  4648     0FD5  3001               	movlw	1
  4649     0FD6                     u4295:
  4650     0FD6  1003               	clrc
  4651     0FD7  0DBE               	rlf	??_scale,f
  4652     0FD8  3EFF               	addlw	-1
  4653     0FD9  1D03               	skipz
  4654     0FDA  2FD6               	goto	u4295
  4655     0FDB  1003               	clrc
  4656     0FDC  0D3E               	rlf	??_scale,w
  4657     0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4658     0FDE  0084               	movwf	4
  4659     0FDF  160A  118A  200A  120A  158A  	fcall	stringdir
  4660     0FE4  00BF               	movwf	??_scale+1
  4661     0FE5  160A  118A  200A  120A  158A  	fcall	stringdir
  4662     0FEA  00C0               	movwf	??_scale+2
  4663     0FEB  160A  118A  200A  120A  158A  	fcall	stringdir
  4664     0FF0  00C1               	movwf	??_scale+3
  4665     0FF1  160A  118A  200A  120A  158A  	fcall	stringdir
  4666     0FF6  00C2               	movwf	??_scale+4
  4667     0FF7  0842               	movf	??_scale+4,w
  4668     0FF8  00BD               	movwf	?_scale+3
  4669     0FF9  0841               	movf	??_scale+3,w
  4670     0FFA  00BC               	movwf	?_scale+2
  4671     0FFB  0840               	movf	??_scale+2,w
  4672     0FFC  00BB               	movwf	?_scale+1
  4673     0FFD  083F               	movf	??_scale+1,w
  4674     0FFE  00BA               	movwf	?_scale
  4675     0FFF                     l333:
  4676     0FFF  0008               	return
  4677     1000                     __end_of_scale:
  4678                           
  4679                           	psect	text3
  4680     1A41                     __ptext3:	
  4681 ;; *************** function _isdigit *****************
  4682 ;; Defined at:
  4683 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;  c               1    wreg     unsigned char 
  4686 ;; Auto vars:     Size  Location     Type
  4687 ;;  c               1    1[COMMON] unsigned char 
  4688 ;; Return value:  Size  Location     Type
  4689 ;;		None               void
  4690 ;; Registers used:
  4691 ;;		wreg, status,2, status,0
  4692 ;; Tracked objects:
  4693 ;;		On entry : 0/0
  4694 ;;		On exit  : 0/0
  4695 ;;		Unchanged: 0/0
  4696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4697 ;;      Params:         0       0       0       0       0
  4698 ;;      Locals:         2       0       0       0       0
  4699 ;;      Temps:          0       0       0       0       0
  4700 ;;      Totals:         2       0       0       0       0
  4701 ;;Total ram usage:        2 bytes
  4702 ;; Hardware stack levels used: 1
  4703 ;; This function calls:
  4704 ;;		Nothing
  4705 ;; This function is called by:
  4706 ;;		_sprintf
  4707 ;; This function uses a non-reentrant model
  4708 ;;
  4709                           
  4710     1A41                     _isdigit:	
  4711                           ;psect for function _isdigit
  4712                           
  4713                           
  4714                           ;incstack = 0
  4715                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4716                           ;isdigit@c stored from wreg
  4717     1A41  00F1               	movwf	isdigit@c
  4718     1A42                     l3062:
  4719     1A42  01F0               	clrf	_isdigit$863
  4720     1A43                     l3064:
  4721     1A43  303A               	movlw	58
  4722     1A44  0271               	subwf	isdigit@c,w
  4723     1A45  1803               	skipnc
  4724     1A46  2A48               	goto	u4301
  4725     1A47  2A49               	goto	u4300
  4726     1A48                     u4301:
  4727     1A48  2A51               	goto	l3070
  4728     1A49                     u4300:
  4729     1A49                     l3066:
  4730     1A49  3030               	movlw	48
  4731     1A4A  0271               	subwf	isdigit@c,w
  4732     1A4B  1C03               	skipc
  4733     1A4C  2A4E               	goto	u4311
  4734     1A4D  2A4F               	goto	u4310
  4735     1A4E                     u4311:
  4736     1A4E  2A51               	goto	l3070
  4737     1A4F                     u4310:
  4738     1A4F                     l3068:
  4739     1A4F  01F0               	clrf	_isdigit$863
  4740     1A50  0AF0               	incf	_isdigit$863,f
  4741     1A51                     l3070:
  4742     1A51  0C70               	rrf	_isdigit$863,w
  4743     1A52                     l890:
  4744     1A52  0008               	return
  4745     1A53                     __end_of_isdigit:
  4746                           
  4747                           	psect	text4
  4748     111B                     __ptext4:	
  4749 ;; *************** function _fround *****************
  4750 ;; Defined at:
  4751 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;  prec            1    wreg     unsigned char 
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;  prec            1   45[BANK0 ] unsigned char 
  4756 ;; Return value:  Size  Location     Type
  4757 ;;                  4   26[BANK0 ] unsigned char 
  4758 ;; Registers used:
  4759 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4760 ;; Tracked objects:
  4761 ;;		On entry : 0/0
  4762 ;;		On exit  : 0/0
  4763 ;;		Unchanged: 0/0
  4764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4765 ;;      Params:         0       4       0       0       0
  4766 ;;      Locals:         0       9       0       0       0
  4767 ;;      Temps:          0       7       0       0       0
  4768 ;;      Totals:         0      20       0       0       0
  4769 ;;Total ram usage:       20 bytes
  4770 ;; Hardware stack levels used: 1
  4771 ;; Hardware stack levels required when called: 2
  4772 ;; This function calls:
  4773 ;;		___flmul
  4774 ;;		___lwdiv
  4775 ;;		___lwmod
  4776 ;; This function is called by:
  4777 ;;		_sprintf
  4778 ;; This function uses a non-reentrant model
  4779 ;;
  4780                           
  4781     111B                     _fround:	
  4782                           ;psect for function _fround
  4783                           
  4784                           
  4785                           ;incstack = 0
  4786                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4787                           ;fround@prec stored from wreg
  4788     111B  1283               	bcf	3,5	;RP0=0, select bank0
  4789     111C  1303               	bcf	3,6	;RP1=0, select bank0
  4790     111D  00CD               	movwf	fround@prec
  4791     111E                     l3004:
  4792                           
  4793                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4794     111E  306E               	movlw	110
  4795     111F  024D               	subwf	fround@prec,w
  4796     1120  1C03               	skipc
  4797     1121  2923               	goto	u4051
  4798     1122  2924               	goto	u4050
  4799     1123                     u4051:
  4800     1123  2A31               	goto	l3012
  4801     1124                     u4050:
  4802     1124                     l3006:
  4803                           
  4804                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4805     1124  303F               	movlw	63
  4806     1125  00A3               	movwf	___flmul@b+3
  4807     1126  3000               	movlw	0
  4808     1127  00A2               	movwf	___flmul@b+2
  4809     1128  3000               	movlw	0
  4810     1129  00A1               	movwf	___flmul@b+1
  4811     112A  3000               	movlw	0
  4812     112B  00A0               	movwf	___flmul@b
  4813     112C  3064               	movlw	100
  4814     112D  00F5               	movwf	___lwdiv@divisor
  4815     112E  3000               	movlw	0
  4816     112F  00F6               	movwf	___lwdiv@divisor+1
  4817     1130  084D               	movf	fround@prec,w
  4818     1131  00BE               	movwf	??_fround
  4819     1132  01BF               	clrf	??_fround+1
  4820     1133  083E               	movf	??_fround,w
  4821     1134  00F7               	movwf	___lwdiv@dividend
  4822     1135  083F               	movf	??_fround+1,w
  4823     1136  00F8               	movwf	___lwdiv@dividend+1
  4824     1137  160A  158A  2443  160A  118A  	fcall	___lwdiv
  4825     113C  0875               	movf	?___lwdiv,w
  4826     113D  1283               	bcf	3,5	;RP0=0, select bank0
  4827     113E  1303               	bcf	3,6	;RP1=0, select bank0
  4828     113F  00C0               	movwf	??_fround+2
  4829     1140  3001               	movlw	1
  4830     1141                     u4065:
  4831     1141  1003               	clrc
  4832     1142  0DC0               	rlf	??_fround+2,f
  4833     1143  3EFF               	addlw	-1
  4834     1144  1D03               	skipz
  4835     1145  2941               	goto	u4065
  4836     1146  1003               	clrc
  4837     1147  0D40               	rlf	??_fround+2,w
  4838     1148  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4839     1149  0084               	movwf	4
  4840     114A  160A  118A  200A  160A  118A  	fcall	stringdir
  4841     114F  00C1               	movwf	??_fround+3
  4842     1150  160A  118A  200A  160A  118A  	fcall	stringdir
  4843     1155  00C2               	movwf	??_fround+4
  4844     1156  160A  118A  200A  160A  118A  	fcall	stringdir
  4845     115B  00C3               	movwf	??_fround+5
  4846     115C  160A  118A  200A  160A  118A  	fcall	stringdir
  4847     1161  00C4               	movwf	??_fround+6
  4848     1162  0844               	movf	??_fround+6,w
  4849     1163  00A7               	movwf	___flmul@a+3
  4850     1164  0843               	movf	??_fround+5,w
  4851     1165  00A6               	movwf	___flmul@a+2
  4852     1166  0842               	movf	??_fround+4,w
  4853     1167  00A5               	movwf	___flmul@a+1
  4854     1168  0841               	movf	??_fround+3,w
  4855     1169  00A4               	movwf	___flmul@a
  4856     116A  120A  158A  215C  160A  118A  	fcall	___flmul
  4857     116F  1283               	bcf	3,5	;RP0=0, select bank0
  4858     1170  1303               	bcf	3,6	;RP1=0, select bank0
  4859     1171  0823               	movf	?___flmul+3,w
  4860     1172  00CC               	movwf	_fround$1073+3
  4861     1173  0822               	movf	?___flmul+2,w
  4862     1174  00CB               	movwf	_fround$1073+2
  4863     1175  0821               	movf	?___flmul+1,w
  4864     1176  00CA               	movwf	_fround$1073+1
  4865     1177  0820               	movf	?___flmul,w
  4866     1178  00C9               	movwf	_fround$1073
  4867                           
  4868                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4869     1179  300A               	movlw	10
  4870     117A  00F5               	movwf	___lwdiv@divisor
  4871     117B  3000               	movlw	0
  4872     117C  00F6               	movwf	___lwdiv@divisor+1
  4873     117D  084D               	movf	fround@prec,w
  4874     117E  00BE               	movwf	??_fround
  4875     117F  01BF               	clrf	??_fround+1
  4876     1180  083E               	movf	??_fround,w
  4877     1181  00F2               	movwf	___lwmod@dividend
  4878     1182  083F               	movf	??_fround+1,w
  4879     1183  00F3               	movwf	___lwmod@dividend+1
  4880     1184  3064               	movlw	100
  4881     1185  00F0               	movwf	___lwmod@divisor
  4882     1186  3000               	movlw	0
  4883     1187  00F1               	movwf	___lwmod@divisor+1
  4884     1188  160A  158A  2384  160A  118A  	fcall	___lwmod
  4885     118D  0871               	movf	?___lwmod+1,w
  4886     118E  00F8               	movwf	___lwdiv@dividend+1
  4887     118F  0870               	movf	?___lwmod,w
  4888     1190  00F7               	movwf	___lwdiv@dividend
  4889     1191  160A  158A  2443  160A  118A  	fcall	___lwdiv
  4890     1196  0875               	movf	?___lwdiv,w
  4891     1197  1283               	bcf	3,5	;RP0=0, select bank0
  4892     1198  1303               	bcf	3,6	;RP1=0, select bank0
  4893     1199  00C0               	movwf	??_fround+2
  4894     119A  3001               	movlw	1
  4895     119B                     u4075:
  4896     119B  1003               	clrc
  4897     119C  0DC0               	rlf	??_fround+2,f
  4898     119D  3EFF               	addlw	-1
  4899     119E  1D03               	skipz
  4900     119F  299B               	goto	u4075
  4901     11A0  1003               	clrc
  4902     11A1  0D40               	rlf	??_fround+2,w
  4903     11A2  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4904     11A3  0084               	movwf	4
  4905     11A4  160A  118A  200A  160A  118A  	fcall	stringdir
  4906     11A9  00C1               	movwf	??_fround+3
  4907     11AA  160A  118A  200A  160A  118A  	fcall	stringdir
  4908     11AF  00C2               	movwf	??_fround+4
  4909     11B0  160A  118A  200A  160A  118A  	fcall	stringdir
  4910     11B5  00C3               	movwf	??_fround+5
  4911     11B6  160A  118A  200A  160A  118A  	fcall	stringdir
  4912     11BB  00C4               	movwf	??_fround+6
  4913     11BC  0844               	movf	??_fround+6,w
  4914     11BD  00A3               	movwf	___flmul@b+3
  4915     11BE  0843               	movf	??_fround+5,w
  4916     11BF  00A2               	movwf	___flmul@b+2
  4917     11C0  0842               	movf	??_fround+4,w
  4918     11C1  00A1               	movwf	___flmul@b+1
  4919     11C2  0841               	movf	??_fround+3,w
  4920     11C3  00A0               	movwf	___flmul@b
  4921     11C4  084C               	movf	_fround$1073+3,w
  4922     11C5  00A7               	movwf	___flmul@a+3
  4923     11C6  084B               	movf	_fround$1073+2,w
  4924     11C7  00A6               	movwf	___flmul@a+2
  4925     11C8  084A               	movf	_fround$1073+1,w
  4926     11C9  00A5               	movwf	___flmul@a+1
  4927     11CA  0849               	movf	_fround$1073,w
  4928     11CB  00A4               	movwf	___flmul@a
  4929     11CC  120A  158A  215C  160A  118A  	fcall	___flmul
  4930     11D1  1283               	bcf	3,5	;RP0=0, select bank0
  4931     11D2  1303               	bcf	3,6	;RP1=0, select bank0
  4932     11D3  0823               	movf	?___flmul+3,w
  4933     11D4  00C8               	movwf	_fround$1074+3
  4934     11D5  0822               	movf	?___flmul+2,w
  4935     11D6  00C7               	movwf	_fround$1074+2
  4936     11D7  0821               	movf	?___flmul+1,w
  4937     11D8  00C6               	movwf	_fround$1074+1
  4938     11D9  0820               	movf	?___flmul,w
  4939     11DA  00C5               	movwf	_fround$1074
  4940                           
  4941                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4942     11DB  300A               	movlw	10
  4943     11DC  00F0               	movwf	___lwmod@divisor
  4944     11DD  3000               	movlw	0
  4945     11DE  00F1               	movwf	___lwmod@divisor+1
  4946     11DF  084D               	movf	fround@prec,w
  4947     11E0  00BE               	movwf	??_fround
  4948     11E1  01BF               	clrf	??_fround+1
  4949     11E2  083E               	movf	??_fround,w
  4950     11E3  00F2               	movwf	___lwmod@dividend
  4951     11E4  083F               	movf	??_fround+1,w
  4952     11E5  00F3               	movwf	___lwmod@dividend+1
  4953     11E6  160A  158A  2384  160A  118A  	fcall	___lwmod
  4954     11EB  0870               	movf	?___lwmod,w
  4955     11EC  1283               	bcf	3,5	;RP0=0, select bank0
  4956     11ED  1303               	bcf	3,6	;RP1=0, select bank0
  4957     11EE  00C0               	movwf	??_fround+2
  4958     11EF  3001               	movlw	1
  4959     11F0                     u4085:
  4960     11F0  1003               	clrc
  4961     11F1  0DC0               	rlf	??_fround+2,f
  4962     11F2  3EFF               	addlw	-1
  4963     11F3  1D03               	skipz
  4964     11F4  29F0               	goto	u4085
  4965     11F5  1003               	clrc
  4966     11F6  0D40               	rlf	??_fround+2,w
  4967     11F7  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4968     11F8  0084               	movwf	4
  4969     11F9  160A  118A  200A  160A  118A  	fcall	stringdir
  4970     11FE  00C1               	movwf	??_fround+3
  4971     11FF  160A  118A  200A  160A  118A  	fcall	stringdir
  4972     1204  00C2               	movwf	??_fround+4
  4973     1205  160A  118A  200A  160A  118A  	fcall	stringdir
  4974     120A  00C3               	movwf	??_fround+5
  4975     120B  160A  118A  200A  160A  118A  	fcall	stringdir
  4976     1210  00C4               	movwf	??_fround+6
  4977     1211  0844               	movf	??_fround+6,w
  4978     1212  00A3               	movwf	___flmul@b+3
  4979     1213  0843               	movf	??_fround+5,w
  4980     1214  00A2               	movwf	___flmul@b+2
  4981     1215  0842               	movf	??_fround+4,w
  4982     1216  00A1               	movwf	___flmul@b+1
  4983     1217  0841               	movf	??_fround+3,w
  4984     1218  00A0               	movwf	___flmul@b
  4985     1219  0848               	movf	_fround$1074+3,w
  4986     121A  00A7               	movwf	___flmul@a+3
  4987     121B  0847               	movf	_fround$1074+2,w
  4988     121C  00A6               	movwf	___flmul@a+2
  4989     121D  0846               	movf	_fround$1074+1,w
  4990     121E  00A5               	movwf	___flmul@a+1
  4991     121F  0845               	movf	_fround$1074,w
  4992     1220  00A4               	movwf	___flmul@a
  4993     1221  120A  158A  215C  160A  118A  	fcall	___flmul
  4994     1226  1283               	bcf	3,5	;RP0=0, select bank0
  4995     1227  1303               	bcf	3,6	;RP1=0, select bank0
  4996     1228  0823               	movf	?___flmul+3,w
  4997     1229  00BD               	movwf	?_fround+3
  4998     122A  0822               	movf	?___flmul+2,w
  4999     122B  00BC               	movwf	?_fround+2
  5000     122C  0821               	movf	?___flmul+1,w
  5001     122D  00BB               	movwf	?_fround+1
  5002     122E  0820               	movf	?___flmul,w
  5003     122F  00BA               	movwf	?_fround
  5004     1230  2B25               	goto	l326
  5005     1231                     l3012:
  5006     1231  300B               	movlw	11
  5007     1232  024D               	subwf	fround@prec,w
  5008     1233  1C03               	skipc
  5009     1234  2A36               	goto	u4091
  5010     1235  2A37               	goto	u4090
  5011     1236                     u4091:
  5012     1236  2AE2               	goto	l3018
  5013     1237                     u4090:
  5014     1237                     l3014:
  5015                           
  5016                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5017     1237  303F               	movlw	63
  5018     1238  00A3               	movwf	___flmul@b+3
  5019     1239  3000               	movlw	0
  5020     123A  00A2               	movwf	___flmul@b+2
  5021     123B  3000               	movlw	0
  5022     123C  00A1               	movwf	___flmul@b+1
  5023     123D  3000               	movlw	0
  5024     123E  00A0               	movwf	___flmul@b
  5025     123F  300A               	movlw	10
  5026     1240  00F5               	movwf	___lwdiv@divisor
  5027     1241  3000               	movlw	0
  5028     1242  00F6               	movwf	___lwdiv@divisor+1
  5029     1243  084D               	movf	fround@prec,w
  5030     1244  00BE               	movwf	??_fround
  5031     1245  01BF               	clrf	??_fround+1
  5032     1246  083E               	movf	??_fround,w
  5033     1247  00F7               	movwf	___lwdiv@dividend
  5034     1248  083F               	movf	??_fround+1,w
  5035     1249  00F8               	movwf	___lwdiv@dividend+1
  5036     124A  160A  158A  2443  160A  118A  	fcall	___lwdiv
  5037     124F  0875               	movf	?___lwdiv,w
  5038     1250  1283               	bcf	3,5	;RP0=0, select bank0
  5039     1251  1303               	bcf	3,6	;RP1=0, select bank0
  5040     1252  00C0               	movwf	??_fround+2
  5041     1253  3001               	movlw	1
  5042     1254                     u4105:
  5043     1254  1003               	clrc
  5044     1255  0DC0               	rlf	??_fround+2,f
  5045     1256  3EFF               	addlw	-1
  5046     1257  1D03               	skipz
  5047     1258  2A54               	goto	u4105
  5048     1259  1003               	clrc
  5049     125A  0D40               	rlf	??_fround+2,w
  5050     125B  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5051     125C  0084               	movwf	4
  5052     125D  160A  118A  200A  160A  118A  	fcall	stringdir
  5053     1262  00C1               	movwf	??_fround+3
  5054     1263  160A  118A  200A  160A  118A  	fcall	stringdir
  5055     1268  00C2               	movwf	??_fround+4
  5056     1269  160A  118A  200A  160A  118A  	fcall	stringdir
  5057     126E  00C3               	movwf	??_fround+5
  5058     126F  160A  118A  200A  160A  118A  	fcall	stringdir
  5059     1274  00C4               	movwf	??_fround+6
  5060     1275  0844               	movf	??_fround+6,w
  5061     1276  00A7               	movwf	___flmul@a+3
  5062     1277  0843               	movf	??_fround+5,w
  5063     1278  00A6               	movwf	___flmul@a+2
  5064     1279  0842               	movf	??_fround+4,w
  5065     127A  00A5               	movwf	___flmul@a+1
  5066     127B  0841               	movf	??_fround+3,w
  5067     127C  00A4               	movwf	___flmul@a
  5068     127D  120A  158A  215C  160A  118A  	fcall	___flmul
  5069     1282  1283               	bcf	3,5	;RP0=0, select bank0
  5070     1283  1303               	bcf	3,6	;RP1=0, select bank0
  5071     1284  0823               	movf	?___flmul+3,w
  5072     1285  00CC               	movwf	_fround$1073+3
  5073     1286  0822               	movf	?___flmul+2,w
  5074     1287  00CB               	movwf	_fround$1073+2
  5075     1288  0821               	movf	?___flmul+1,w
  5076     1289  00CA               	movwf	_fround$1073+1
  5077     128A  0820               	movf	?___flmul,w
  5078     128B  00C9               	movwf	_fround$1073
  5079                           
  5080                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5081     128C  300A               	movlw	10
  5082     128D  00F0               	movwf	___lwmod@divisor
  5083     128E  3000               	movlw	0
  5084     128F  00F1               	movwf	___lwmod@divisor+1
  5085     1290  084D               	movf	fround@prec,w
  5086     1291  00BE               	movwf	??_fround
  5087     1292  01BF               	clrf	??_fround+1
  5088     1293  083E               	movf	??_fround,w
  5089     1294  00F2               	movwf	___lwmod@dividend
  5090     1295  083F               	movf	??_fround+1,w
  5091     1296  00F3               	movwf	___lwmod@dividend+1
  5092     1297  160A  158A  2384  160A  118A  	fcall	___lwmod
  5093     129C  0870               	movf	?___lwmod,w
  5094     129D  1283               	bcf	3,5	;RP0=0, select bank0
  5095     129E  1303               	bcf	3,6	;RP1=0, select bank0
  5096     129F  00C0               	movwf	??_fround+2
  5097     12A0  3001               	movlw	1
  5098     12A1                     u4115:
  5099     12A1  1003               	clrc
  5100     12A2  0DC0               	rlf	??_fround+2,f
  5101     12A3  3EFF               	addlw	-1
  5102     12A4  1D03               	skipz
  5103     12A5  2AA1               	goto	u4115
  5104     12A6  1003               	clrc
  5105     12A7  0D40               	rlf	??_fround+2,w
  5106     12A8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5107     12A9  0084               	movwf	4
  5108     12AA  160A  118A  200A  160A  118A  	fcall	stringdir
  5109     12AF  00C1               	movwf	??_fround+3
  5110     12B0  160A  118A  200A  160A  118A  	fcall	stringdir
  5111     12B5  00C2               	movwf	??_fround+4
  5112     12B6  160A  118A  200A  160A  118A  	fcall	stringdir
  5113     12BB  00C3               	movwf	??_fround+5
  5114     12BC  160A  118A  200A  160A  118A  	fcall	stringdir
  5115     12C1  00C4               	movwf	??_fround+6
  5116     12C2  0844               	movf	??_fround+6,w
  5117     12C3  00A3               	movwf	___flmul@b+3
  5118     12C4  0843               	movf	??_fround+5,w
  5119     12C5  00A2               	movwf	___flmul@b+2
  5120     12C6  0842               	movf	??_fround+4,w
  5121     12C7  00A1               	movwf	___flmul@b+1
  5122     12C8  0841               	movf	??_fround+3,w
  5123     12C9  00A0               	movwf	___flmul@b
  5124     12CA  084C               	movf	_fround$1073+3,w
  5125     12CB  00A7               	movwf	___flmul@a+3
  5126     12CC  084B               	movf	_fround$1073+2,w
  5127     12CD  00A6               	movwf	___flmul@a+2
  5128     12CE  084A               	movf	_fround$1073+1,w
  5129     12CF  00A5               	movwf	___flmul@a+1
  5130     12D0  0849               	movf	_fround$1073,w
  5131     12D1  00A4               	movwf	___flmul@a
  5132     12D2  120A  158A  215C  160A  118A  	fcall	___flmul
  5133     12D7  1283               	bcf	3,5	;RP0=0, select bank0
  5134     12D8  1303               	bcf	3,6	;RP1=0, select bank0
  5135     12D9  0823               	movf	?___flmul+3,w
  5136     12DA  00BD               	movwf	?_fround+3
  5137     12DB  0822               	movf	?___flmul+2,w
  5138     12DC  00BC               	movwf	?_fround+2
  5139     12DD  0821               	movf	?___flmul+1,w
  5140     12DE  00BB               	movwf	?_fround+1
  5141     12DF  0820               	movf	?___flmul,w
  5142     12E0  00BA               	movwf	?_fround
  5143     12E1  2B25               	goto	l326
  5144     12E2                     l3018:
  5145                           
  5146                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5147     12E2  303F               	movlw	63
  5148     12E3  00A3               	movwf	___flmul@b+3
  5149     12E4  3000               	movlw	0
  5150     12E5  00A2               	movwf	___flmul@b+2
  5151     12E6  3000               	movlw	0
  5152     12E7  00A1               	movwf	___flmul@b+1
  5153     12E8  3000               	movlw	0
  5154     12E9  00A0               	movwf	___flmul@b
  5155     12EA  084D               	movf	fround@prec,w
  5156     12EB  00BE               	movwf	??_fround
  5157     12EC  3001               	movlw	1
  5158     12ED                     u4125:
  5159     12ED  1003               	clrc
  5160     12EE  0DBE               	rlf	??_fround,f
  5161     12EF  3EFF               	addlw	-1
  5162     12F0  1D03               	skipz
  5163     12F1  2AED               	goto	u4125
  5164     12F2  1003               	clrc
  5165     12F3  0D3E               	rlf	??_fround,w
  5166     12F4  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5167     12F5  0084               	movwf	4
  5168     12F6  160A  118A  200A  160A  118A  	fcall	stringdir
  5169     12FB  00BF               	movwf	??_fround+1
  5170     12FC  160A  118A  200A  160A  118A  	fcall	stringdir
  5171     1301  00C0               	movwf	??_fround+2
  5172     1302  160A  118A  200A  160A  118A  	fcall	stringdir
  5173     1307  00C1               	movwf	??_fround+3
  5174     1308  160A  118A  200A  160A  118A  	fcall	stringdir
  5175     130D  00C2               	movwf	??_fround+4
  5176     130E  0842               	movf	??_fround+4,w
  5177     130F  00A7               	movwf	___flmul@a+3
  5178     1310  0841               	movf	??_fround+3,w
  5179     1311  00A6               	movwf	___flmul@a+2
  5180     1312  0840               	movf	??_fround+2,w
  5181     1313  00A5               	movwf	___flmul@a+1
  5182     1314  083F               	movf	??_fround+1,w
  5183     1315  00A4               	movwf	___flmul@a
  5184     1316  120A  158A  215C  160A  118A  	fcall	___flmul
  5185     131B  1283               	bcf	3,5	;RP0=0, select bank0
  5186     131C  1303               	bcf	3,6	;RP1=0, select bank0
  5187     131D  0823               	movf	?___flmul+3,w
  5188     131E  00BD               	movwf	?_fround+3
  5189     131F  0822               	movf	?___flmul+2,w
  5190     1320  00BC               	movwf	?_fround+2
  5191     1321  0821               	movf	?___flmul+1,w
  5192     1322  00BB               	movwf	?_fround+1
  5193     1323  0820               	movf	?___flmul,w
  5194     1324  00BA               	movwf	?_fround
  5195     1325                     l326:
  5196     1325  0008               	return
  5197     1326                     __end_of_fround:
  5198                           
  5199                           	psect	text5
  5200     1B84                     __ptext5:	
  5201 ;; *************** function ___lwmod *****************
  5202 ;; Defined at:
  5203 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  5204 ;; Parameters:    Size  Location     Type
  5205 ;;  divisor         2    0[COMMON] unsigned int 
  5206 ;;  dividend        2    2[COMMON] unsigned int 
  5207 ;; Auto vars:     Size  Location     Type
  5208 ;;  counter         1    4[COMMON] unsigned char 
  5209 ;; Return value:  Size  Location     Type
  5210 ;;                  2    0[COMMON] unsigned int 
  5211 ;; Registers used:
  5212 ;;		wreg, status,2, status,0, btemp+1
  5213 ;; Tracked objects:
  5214 ;;		On entry : 0/0
  5215 ;;		On exit  : 0/0
  5216 ;;		Unchanged: 0/0
  5217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5218 ;;      Params:         4       0       0       0       0
  5219 ;;      Locals:         1       0       0       0       0
  5220 ;;      Temps:          0       0       0       0       0
  5221 ;;      Totals:         5       0       0       0       0
  5222 ;;Total ram usage:        5 bytes
  5223 ;; Hardware stack levels used: 1
  5224 ;; This function calls:
  5225 ;;		Nothing
  5226 ;; This function is called by:
  5227 ;;		_fround
  5228 ;; This function uses a non-reentrant model
  5229 ;;
  5230                           
  5231     1B84                     ___lwmod:	
  5232                           ;psect for function ___lwmod
  5233                           
  5234     1B84                     l2574:	
  5235                           ;incstack = 0
  5236                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  5237                           
  5238     1B84  0870               	movf	___lwmod@divisor,w
  5239     1B85  0471               	iorwf	___lwmod@divisor+1,w
  5240     1B86  1903               	btfsc	3,2
  5241     1B87  2B89               	goto	u3151
  5242     1B88  2B8A               	goto	u3150
  5243     1B89                     u3151:
  5244     1B89  2BB9               	goto	l2592
  5245     1B8A                     u3150:
  5246     1B8A                     l2576:
  5247     1B8A  01F4               	clrf	___lwmod@counter
  5248     1B8B  0AF4               	incf	___lwmod@counter,f
  5249     1B8C  2B98               	goto	l2582
  5250     1B8D                     l2578:
  5251     1B8D  3001               	movlw	1
  5252     1B8E                     u3165:
  5253     1B8E  1003               	clrc
  5254     1B8F  0DF0               	rlf	___lwmod@divisor,f
  5255     1B90  0DF1               	rlf	___lwmod@divisor+1,f
  5256     1B91  3EFF               	addlw	-1
  5257     1B92  1D03               	skipz
  5258     1B93  2B8E               	goto	u3165
  5259     1B94                     l2580:
  5260     1B94  3001               	movlw	1
  5261     1B95  00FF               	movwf	btemp+1
  5262     1B96  087F               	movf	btemp+1,w
  5263     1B97  07F4               	addwf	___lwmod@counter,f
  5264     1B98                     l2582:
  5265     1B98  1FF1               	btfss	___lwmod@divisor+1,7
  5266     1B99  2B9B               	goto	u3171
  5267     1B9A  2B9C               	goto	u3170
  5268     1B9B                     u3171:
  5269     1B9B  2B8D               	goto	l2578
  5270     1B9C                     u3170:
  5271     1B9C                     l2584:
  5272     1B9C  0871               	movf	___lwmod@divisor+1,w
  5273     1B9D  0273               	subwf	___lwmod@dividend+1,w
  5274     1B9E  1D03               	skipz
  5275     1B9F  2BA2               	goto	u3185
  5276     1BA0  0870               	movf	___lwmod@divisor,w
  5277     1BA1  0272               	subwf	___lwmod@dividend,w
  5278     1BA2                     u3185:
  5279     1BA2  1C03               	skipc
  5280     1BA3  2BA5               	goto	u3181
  5281     1BA4  2BA6               	goto	u3180
  5282     1BA5                     u3181:
  5283     1BA5  2BAC               	goto	l2588
  5284     1BA6                     u3180:
  5285     1BA6                     l2586:
  5286     1BA6  0870               	movf	___lwmod@divisor,w
  5287     1BA7  02F2               	subwf	___lwmod@dividend,f
  5288     1BA8  0871               	movf	___lwmod@divisor+1,w
  5289     1BA9  1C03               	skipc
  5290     1BAA  03F3               	decf	___lwmod@dividend+1,f
  5291     1BAB  02F3               	subwf	___lwmod@dividend+1,f
  5292     1BAC                     l2588:
  5293     1BAC  3001               	movlw	1
  5294     1BAD                     u3195:
  5295     1BAD  1003               	clrc
  5296     1BAE  0CF1               	rrf	___lwmod@divisor+1,f
  5297     1BAF  0CF0               	rrf	___lwmod@divisor,f
  5298     1BB0  3EFF               	addlw	-1
  5299     1BB1  1D03               	skipz
  5300     1BB2  2BAD               	goto	u3195
  5301     1BB3                     l2590:
  5302     1BB3  3001               	movlw	1
  5303     1BB4  02F4               	subwf	___lwmod@counter,f
  5304     1BB5  1D03               	btfss	3,2
  5305     1BB6  2BB8               	goto	u3201
  5306     1BB7  2BB9               	goto	u3200
  5307     1BB8                     u3201:
  5308     1BB8  2B9C               	goto	l2584
  5309     1BB9                     u3200:
  5310     1BB9                     l2592:
  5311     1BB9  0873               	movf	___lwmod@dividend+1,w
  5312     1BBA  00F1               	movwf	?___lwmod+1
  5313     1BBB  0872               	movf	___lwmod@dividend,w
  5314     1BBC  00F0               	movwf	?___lwmod
  5315     1BBD                     l719:
  5316     1BBD  0008               	return
  5317     1BBE                     __end_of___lwmod:
  5318                           
  5319                           	psect	text6
  5320     1C43                     __ptext6:	
  5321 ;; *************** function ___lwdiv *****************
  5322 ;; Defined at:
  5323 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  5324 ;; Parameters:    Size  Location     Type
  5325 ;;  divisor         2    5[COMMON] unsigned int 
  5326 ;;  dividend        2    7[COMMON] unsigned int 
  5327 ;; Auto vars:     Size  Location     Type
  5328 ;;  quotient        2    9[COMMON] unsigned int 
  5329 ;;  counter         1   11[COMMON] unsigned char 
  5330 ;; Return value:  Size  Location     Type
  5331 ;;                  2    5[COMMON] unsigned int 
  5332 ;; Registers used:
  5333 ;;		wreg, status,2, status,0, btemp+1
  5334 ;; Tracked objects:
  5335 ;;		On entry : 0/0
  5336 ;;		On exit  : 0/0
  5337 ;;		Unchanged: 0/0
  5338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5339 ;;      Params:         4       0       0       0       0
  5340 ;;      Locals:         3       0       0       0       0
  5341 ;;      Temps:          0       0       0       0       0
  5342 ;;      Totals:         7       0       0       0       0
  5343 ;;Total ram usage:        7 bytes
  5344 ;; Hardware stack levels used: 1
  5345 ;; This function calls:
  5346 ;;		Nothing
  5347 ;; This function is called by:
  5348 ;;		_fround
  5349 ;; This function uses a non-reentrant model
  5350 ;;
  5351                           
  5352     1C43                     ___lwdiv:	
  5353                           ;psect for function ___lwdiv
  5354                           
  5355     1C43                     l2548:	
  5356                           ;incstack = 0
  5357                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  5358                           
  5359     1C43  01F9               	clrf	___lwdiv@quotient
  5360     1C44  01FA               	clrf	___lwdiv@quotient+1
  5361     1C45                     l2550:
  5362     1C45  0875               	movf	___lwdiv@divisor,w
  5363     1C46  0476               	iorwf	___lwdiv@divisor+1,w
  5364     1C47  1903               	btfsc	3,2
  5365     1C48  2C4A               	goto	u3081
  5366     1C49  2C4B               	goto	u3080
  5367     1C4A                     u3081:
  5368     1C4A  2C82               	goto	l2570
  5369     1C4B                     u3080:
  5370     1C4B                     l2552:
  5371     1C4B  01FB               	clrf	___lwdiv@counter
  5372     1C4C  0AFB               	incf	___lwdiv@counter,f
  5373     1C4D  2C59               	goto	l2558
  5374     1C4E                     l2554:
  5375     1C4E  3001               	movlw	1
  5376     1C4F                     u3095:
  5377     1C4F  1003               	clrc
  5378     1C50  0DF5               	rlf	___lwdiv@divisor,f
  5379     1C51  0DF6               	rlf	___lwdiv@divisor+1,f
  5380     1C52  3EFF               	addlw	-1
  5381     1C53  1D03               	skipz
  5382     1C54  2C4F               	goto	u3095
  5383     1C55                     l2556:
  5384     1C55  3001               	movlw	1
  5385     1C56  00FF               	movwf	btemp+1
  5386     1C57  087F               	movf	btemp+1,w
  5387     1C58  07FB               	addwf	___lwdiv@counter,f
  5388     1C59                     l2558:
  5389     1C59  1FF6               	btfss	___lwdiv@divisor+1,7
  5390     1C5A  2C5C               	goto	u3101
  5391     1C5B  2C5D               	goto	u3100
  5392     1C5C                     u3101:
  5393     1C5C  2C4E               	goto	l2554
  5394     1C5D                     u3100:
  5395     1C5D                     l2560:
  5396     1C5D  3001               	movlw	1
  5397     1C5E                     u3115:
  5398     1C5E  1003               	clrc
  5399     1C5F  0DF9               	rlf	___lwdiv@quotient,f
  5400     1C60  0DFA               	rlf	___lwdiv@quotient+1,f
  5401     1C61  3EFF               	addlw	-1
  5402     1C62  1D03               	skipz
  5403     1C63  2C5E               	goto	u3115
  5404     1C64  0876               	movf	___lwdiv@divisor+1,w
  5405     1C65  0278               	subwf	___lwdiv@dividend+1,w
  5406     1C66  1D03               	skipz
  5407     1C67  2C6A               	goto	u3125
  5408     1C68  0875               	movf	___lwdiv@divisor,w
  5409     1C69  0277               	subwf	___lwdiv@dividend,w
  5410     1C6A                     u3125:
  5411     1C6A  1C03               	skipc
  5412     1C6B  2C6D               	goto	u3121
  5413     1C6C  2C6E               	goto	u3120
  5414     1C6D                     u3121:
  5415     1C6D  2C75               	goto	l2566
  5416     1C6E                     u3120:
  5417     1C6E                     l2562:
  5418     1C6E  0875               	movf	___lwdiv@divisor,w
  5419     1C6F  02F7               	subwf	___lwdiv@dividend,f
  5420     1C70  0876               	movf	___lwdiv@divisor+1,w
  5421     1C71  1C03               	skipc
  5422     1C72  03F8               	decf	___lwdiv@dividend+1,f
  5423     1C73  02F8               	subwf	___lwdiv@dividend+1,f
  5424     1C74                     l2564:
  5425     1C74  1479               	bsf	___lwdiv@quotient,0
  5426     1C75                     l2566:
  5427     1C75  3001               	movlw	1
  5428     1C76                     u3135:
  5429     1C76  1003               	clrc
  5430     1C77  0CF6               	rrf	___lwdiv@divisor+1,f
  5431     1C78  0CF5               	rrf	___lwdiv@divisor,f
  5432     1C79  3EFF               	addlw	-1
  5433     1C7A  1D03               	skipz
  5434     1C7B  2C76               	goto	u3135
  5435     1C7C                     l2568:
  5436     1C7C  3001               	movlw	1
  5437     1C7D  02FB               	subwf	___lwdiv@counter,f
  5438     1C7E  1D03               	btfss	3,2
  5439     1C7F  2C81               	goto	u3141
  5440     1C80  2C82               	goto	u3140
  5441     1C81                     u3141:
  5442     1C81  2C5D               	goto	l2560
  5443     1C82                     u3140:
  5444     1C82                     l2570:
  5445     1C82  087A               	movf	___lwdiv@quotient+1,w
  5446     1C83  00F6               	movwf	?___lwdiv+1
  5447     1C84  0879               	movf	___lwdiv@quotient,w
  5448     1C85  00F5               	movwf	?___lwdiv
  5449     1C86                     l709:
  5450     1C86  0008               	return
  5451     1C87                     __end_of___lwdiv:
  5452                           
  5453                           	psect	text7
  5454     095C                     __ptext7:	
  5455 ;; *************** function ___flmul *****************
  5456 ;; Defined at:
  5457 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcmul.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;  b               4    0[BANK0 ] unsigned int 
  5460 ;;  a               4    4[BANK0 ] unsigned int 
  5461 ;; Auto vars:     Size  Location     Type
  5462 ;;  prod            4   20[BANK0 ] struct .
  5463 ;;  grs             4   14[BANK0 ] unsigned long 
  5464 ;;  temp            2   24[BANK0 ] struct .
  5465 ;;  bexp            1   19[BANK0 ] unsigned char 
  5466 ;;  aexp            1   18[BANK0 ] unsigned char 
  5467 ;;  sign            1   13[BANK0 ] unsigned char 
  5468 ;; Return value:  Size  Location     Type
  5469 ;;                  4    0[BANK0 ] unsigned char 
  5470 ;; Registers used:
  5471 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5472 ;; Tracked objects:
  5473 ;;		On entry : 0/0
  5474 ;;		On exit  : 0/0
  5475 ;;		Unchanged: 0/0
  5476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5477 ;;      Params:         0       8       0       0       0
  5478 ;;      Locals:         0      13       0       0       0
  5479 ;;      Temps:          0       5       0       0       0
  5480 ;;      Totals:         0      26       0       0       0
  5481 ;;Total ram usage:       26 bytes
  5482 ;; Hardware stack levels used: 1
  5483 ;; Hardware stack levels required when called: 1
  5484 ;; This function calls:
  5485 ;;		__Umul8_16
  5486 ;; This function is called by:
  5487 ;;		_fround
  5488 ;;		_scale
  5489 ;;		_sprintf
  5490 ;; This function uses a non-reentrant model
  5491 ;;
  5492                           
  5493     095C                     ___flmul:	
  5494                           ;psect for function ___flmul
  5495                           
  5496     095C                     l2796:	
  5497                           ;incstack = 0
  5498                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5499                           
  5500     095C  1283               	bcf	3,5	;RP0=0, select bank0
  5501     095D  1303               	bcf	3,6	;RP1=0, select bank0
  5502     095E  0823               	movf	___flmul@b+3,w
  5503     095F  3980               	andlw	128
  5504     0960  00AD               	movwf	___flmul@sign
  5505     0961                     l2798:
  5506     0961  0823               	movf	___flmul@b+3,w
  5507     0962  00A8               	movwf	??___flmul
  5508     0963  0728               	addwf	??___flmul,w
  5509     0964  00B3               	movwf	___flmul@bexp
  5510     0965                     l2800:
  5511     0965  1FA2               	btfss	___flmul@b+2,7
  5512     0966  2968               	goto	u3671
  5513     0967  2969               	goto	u3670
  5514     0968                     u3671:
  5515     0968  296A               	goto	l2804
  5516     0969                     u3670:
  5517     0969                     l2802:
  5518     0969  1433               	bsf	___flmul@bexp,0
  5519     096A                     l2804:
  5520     096A  0833               	movf	___flmul@bexp,w
  5521     096B  1903               	btfsc	3,2
  5522     096C  296E               	goto	u3681
  5523     096D  296F               	goto	u3680
  5524     096E                     u3681:
  5525     096E  297E               	goto	l2812
  5526     096F                     u3680:
  5527     096F                     l2806:
  5528     096F  0A33               	incf	___flmul@bexp,w
  5529     0970  1D03               	btfss	3,2
  5530     0971  2973               	goto	u3691
  5531     0972  2974               	goto	u3690
  5532     0973                     u3691:
  5533     0973  297C               	goto	l2810
  5534     0974                     u3690:
  5535     0974                     l2808:
  5536     0974  3000               	movlw	0
  5537     0975  00A3               	movwf	___flmul@b+3
  5538     0976  3000               	movlw	0
  5539     0977  00A2               	movwf	___flmul@b+2
  5540     0978  3000               	movlw	0
  5541     0979  00A1               	movwf	___flmul@b+1
  5542     097A  3000               	movlw	0
  5543     097B  00A0               	movwf	___flmul@b
  5544     097C                     l2810:
  5545     097C  17A2               	bsf	___flmul@b+2,7
  5546     097D  2986               	goto	l2814
  5547     097E                     l2812:
  5548     097E  3000               	movlw	0
  5549     097F  00A3               	movwf	___flmul@b+3
  5550     0980  3000               	movlw	0
  5551     0981  00A2               	movwf	___flmul@b+2
  5552     0982  3000               	movlw	0
  5553     0983  00A1               	movwf	___flmul@b+1
  5554     0984  3000               	movlw	0
  5555     0985  00A0               	movwf	___flmul@b
  5556     0986                     l2814:
  5557     0986  0827               	movf	___flmul@a+3,w
  5558     0987  3980               	andlw	128
  5559     0988  00FF               	movwf	btemp+1
  5560     0989  087F               	movf	btemp+1,w
  5561     098A  06AD               	xorwf	___flmul@sign,f
  5562     098B                     l2816:
  5563     098B  0827               	movf	___flmul@a+3,w
  5564     098C  00A8               	movwf	??___flmul
  5565     098D  0728               	addwf	??___flmul,w
  5566     098E  00B2               	movwf	___flmul@aexp
  5567     098F                     l2818:
  5568     098F  1FA6               	btfss	___flmul@a+2,7
  5569     0990  2992               	goto	u3701
  5570     0991  2993               	goto	u3700
  5571     0992                     u3701:
  5572     0992  2994               	goto	l2822
  5573     0993                     u3700:
  5574     0993                     l2820:
  5575     0993  1432               	bsf	___flmul@aexp,0
  5576     0994                     l2822:
  5577     0994  0832               	movf	___flmul@aexp,w
  5578     0995  1903               	btfsc	3,2
  5579     0996  2998               	goto	u3711
  5580     0997  2999               	goto	u3710
  5581     0998                     u3711:
  5582     0998  29A8               	goto	l2830
  5583     0999                     u3710:
  5584     0999                     l2824:
  5585     0999  0A32               	incf	___flmul@aexp,w
  5586     099A  1D03               	btfss	3,2
  5587     099B  299D               	goto	u3721
  5588     099C  299E               	goto	u3720
  5589     099D                     u3721:
  5590     099D  29A6               	goto	l2828
  5591     099E                     u3720:
  5592     099E                     l2826:
  5593     099E  3000               	movlw	0
  5594     099F  00A7               	movwf	___flmul@a+3
  5595     09A0  3000               	movlw	0
  5596     09A1  00A6               	movwf	___flmul@a+2
  5597     09A2  3000               	movlw	0
  5598     09A3  00A5               	movwf	___flmul@a+1
  5599     09A4  3000               	movlw	0
  5600     09A5  00A4               	movwf	___flmul@a
  5601     09A6                     l2828:
  5602     09A6  17A6               	bsf	___flmul@a+2,7
  5603     09A7  29B0               	goto	l2832
  5604     09A8                     l2830:
  5605     09A8  3000               	movlw	0
  5606     09A9  00A7               	movwf	___flmul@a+3
  5607     09AA  3000               	movlw	0
  5608     09AB  00A6               	movwf	___flmul@a+2
  5609     09AC  3000               	movlw	0
  5610     09AD  00A5               	movwf	___flmul@a+1
  5611     09AE  3000               	movlw	0
  5612     09AF  00A4               	movwf	___flmul@a
  5613     09B0                     l2832:
  5614     09B0  0832               	movf	___flmul@aexp,w
  5615     09B1  1903               	btfsc	3,2
  5616     09B2  29B4               	goto	u3731
  5617     09B3  29B5               	goto	u3730
  5618     09B4                     u3731:
  5619     09B4  29BA               	goto	l2836
  5620     09B5                     u3730:
  5621     09B5                     l2834:
  5622     09B5  0833               	movf	___flmul@bexp,w
  5623     09B6  1D03               	btfss	3,2
  5624     09B7  29B9               	goto	u3741
  5625     09B8  29BA               	goto	u3740
  5626     09B9                     u3741:
  5627     09B9  29C3               	goto	l2840
  5628     09BA                     u3740:
  5629     09BA                     l2836:
  5630     09BA  3000               	movlw	0
  5631     09BB  00A3               	movwf	?___flmul+3
  5632     09BC  3000               	movlw	0
  5633     09BD  00A2               	movwf	?___flmul+2
  5634     09BE  3000               	movlw	0
  5635     09BF  00A1               	movwf	?___flmul+1
  5636     09C0  3000               	movlw	0
  5637     09C1  00A0               	movwf	?___flmul
  5638     09C2  2CA0               	goto	l826
  5639     09C3                     l2840:
  5640     09C3  0820               	movf	___flmul@b,w
  5641     09C4  00F0               	movwf	__Umul8_16@multiplicand
  5642     09C5  0826               	movf	___flmul@a+2,w
  5643     09C6  120A  158A  2003  120A  158A  	fcall	__Umul8_16
  5644     09CB  0871               	movf	?__Umul8_16+1,w
  5645     09CC  1283               	bcf	3,5	;RP0=0, select bank0
  5646     09CD  1303               	bcf	3,6	;RP1=0, select bank0
  5647     09CE  00B9               	movwf	___flmul@temp+1
  5648     09CF  0870               	movf	?__Umul8_16,w
  5649     09D0  00B8               	movwf	___flmul@temp
  5650     09D1                     l2842:
  5651     09D1  0838               	movf	___flmul@temp,w
  5652     09D2  00A8               	movwf	??___flmul
  5653     09D3  01A9               	clrf	??___flmul+1
  5654     09D4  01AA               	clrf	??___flmul+2
  5655     09D5  01AB               	clrf	??___flmul+3
  5656     09D6  082B               	movf	??___flmul+3,w
  5657     09D7  00B1               	movwf	___flmul@grs+3
  5658     09D8  082A               	movf	??___flmul+2,w
  5659     09D9  00B0               	movwf	___flmul@grs+2
  5660     09DA  0829               	movf	??___flmul+1,w
  5661     09DB  00AF               	movwf	___flmul@grs+1
  5662     09DC  0828               	movf	??___flmul,w
  5663     09DD  00AE               	movwf	___flmul@grs
  5664     09DE                     l2844:
  5665     09DE  0839               	movf	___flmul@temp+1,w
  5666     09DF  00A8               	movwf	??___flmul
  5667     09E0  01A9               	clrf	??___flmul+1
  5668     09E1  01AA               	clrf	??___flmul+2
  5669     09E2  01AB               	clrf	??___flmul+3
  5670     09E3  082B               	movf	??___flmul+3,w
  5671     09E4  00B7               	movwf	___flmul@prod+3
  5672     09E5  082A               	movf	??___flmul+2,w
  5673     09E6  00B6               	movwf	___flmul@prod+2
  5674     09E7  0829               	movf	??___flmul+1,w
  5675     09E8  00B5               	movwf	___flmul@prod+1
  5676     09E9  0828               	movf	??___flmul,w
  5677     09EA  00B4               	movwf	___flmul@prod
  5678     09EB  0821               	movf	___flmul@b+1,w
  5679     09EC  00F0               	movwf	__Umul8_16@multiplicand
  5680     09ED  0825               	movf	___flmul@a+1,w
  5681     09EE  120A  158A  2003  120A  158A  	fcall	__Umul8_16
  5682     09F3  0871               	movf	?__Umul8_16+1,w
  5683     09F4  1283               	bcf	3,5	;RP0=0, select bank0
  5684     09F5  1303               	bcf	3,6	;RP1=0, select bank0
  5685     09F6  00B9               	movwf	___flmul@temp+1
  5686     09F7  0870               	movf	?__Umul8_16,w
  5687     09F8  00B8               	movwf	___flmul@temp
  5688     09F9                     l2846:
  5689     09F9  0838               	movf	___flmul@temp,w
  5690     09FA  00A8               	movwf	??___flmul
  5691     09FB  01A9               	clrf	??___flmul+1
  5692     09FC  01AA               	clrf	??___flmul+2
  5693     09FD  01AB               	clrf	??___flmul+3
  5694     09FE  0828               	movf	??___flmul,w
  5695     09FF  07AE               	addwf	___flmul@grs,f
  5696     0A00  0829               	movf	??___flmul+1,w
  5697     0A01  1103               	clrz
  5698     0A02  1803               	skipnc
  5699     0A03  3E01               	addlw	1
  5700     0A04  1903               	skipnz
  5701     0A05  2A07               	goto	u3751
  5702     0A06  07AF               	addwf	___flmul@grs+1,f
  5703     0A07                     u3751:
  5704     0A07  082A               	movf	??___flmul+2,w
  5705     0A08  1103               	clrz
  5706     0A09  1803               	skipnc
  5707     0A0A  3E01               	addlw	1
  5708     0A0B  1903               	skipnz
  5709     0A0C  2A0E               	goto	u3752
  5710     0A0D  07B0               	addwf	___flmul@grs+2,f
  5711     0A0E                     u3752:
  5712     0A0E  082B               	movf	??___flmul+3,w
  5713     0A0F  1103               	clrz
  5714     0A10  1803               	skipnc
  5715     0A11  3E01               	addlw	1
  5716     0A12  1903               	skipnz
  5717     0A13  2A15               	goto	u3753
  5718     0A14  07B1               	addwf	___flmul@grs+3,f
  5719     0A15                     u3753:
  5720     0A15                     l2848:
  5721     0A15  0839               	movf	___flmul@temp+1,w
  5722     0A16  00A8               	movwf	??___flmul
  5723     0A17  01A9               	clrf	??___flmul+1
  5724     0A18  01AA               	clrf	??___flmul+2
  5725     0A19  01AB               	clrf	??___flmul+3
  5726     0A1A  0828               	movf	??___flmul,w
  5727     0A1B  07B4               	addwf	___flmul@prod,f
  5728     0A1C  0829               	movf	??___flmul+1,w
  5729     0A1D  1103               	clrz
  5730     0A1E  1803               	skipnc
  5731     0A1F  3E01               	addlw	1
  5732     0A20  1903               	skipnz
  5733     0A21  2A23               	goto	u3761
  5734     0A22  07B5               	addwf	___flmul@prod+1,f
  5735     0A23                     u3761:
  5736     0A23  082A               	movf	??___flmul+2,w
  5737     0A24  1103               	clrz
  5738     0A25  1803               	skipnc
  5739     0A26  3E01               	addlw	1
  5740     0A27  1903               	skipnz
  5741     0A28  2A2A               	goto	u3762
  5742     0A29  07B6               	addwf	___flmul@prod+2,f
  5743     0A2A                     u3762:
  5744     0A2A  082B               	movf	??___flmul+3,w
  5745     0A2B  1103               	clrz
  5746     0A2C  1803               	skipnc
  5747     0A2D  3E01               	addlw	1
  5748     0A2E  1903               	skipnz
  5749     0A2F  2A31               	goto	u3763
  5750     0A30  07B7               	addwf	___flmul@prod+3,f
  5751     0A31                     u3763:
  5752     0A31  0822               	movf	___flmul@b+2,w
  5753     0A32  00F0               	movwf	__Umul8_16@multiplicand
  5754     0A33  0824               	movf	___flmul@a,w
  5755     0A34  120A  158A  2003  120A  158A  	fcall	__Umul8_16
  5756     0A39  0871               	movf	?__Umul8_16+1,w
  5757     0A3A  1283               	bcf	3,5	;RP0=0, select bank0
  5758     0A3B  1303               	bcf	3,6	;RP1=0, select bank0
  5759     0A3C  00B9               	movwf	___flmul@temp+1
  5760     0A3D  0870               	movf	?__Umul8_16,w
  5761     0A3E  00B8               	movwf	___flmul@temp
  5762     0A3F                     l2850:
  5763     0A3F  0838               	movf	___flmul@temp,w
  5764     0A40  00A8               	movwf	??___flmul
  5765     0A41  01A9               	clrf	??___flmul+1
  5766     0A42  01AA               	clrf	??___flmul+2
  5767     0A43  01AB               	clrf	??___flmul+3
  5768     0A44  0828               	movf	??___flmul,w
  5769     0A45  07AE               	addwf	___flmul@grs,f
  5770     0A46  0829               	movf	??___flmul+1,w
  5771     0A47  1103               	clrz
  5772     0A48  1803               	skipnc
  5773     0A49  3E01               	addlw	1
  5774     0A4A  1903               	skipnz
  5775     0A4B  2A4D               	goto	u3771
  5776     0A4C  07AF               	addwf	___flmul@grs+1,f
  5777     0A4D                     u3771:
  5778     0A4D  082A               	movf	??___flmul+2,w
  5779     0A4E  1103               	clrz
  5780     0A4F  1803               	skipnc
  5781     0A50  3E01               	addlw	1
  5782     0A51  1903               	skipnz
  5783     0A52  2A54               	goto	u3772
  5784     0A53  07B0               	addwf	___flmul@grs+2,f
  5785     0A54                     u3772:
  5786     0A54  082B               	movf	??___flmul+3,w
  5787     0A55  1103               	clrz
  5788     0A56  1803               	skipnc
  5789     0A57  3E01               	addlw	1
  5790     0A58  1903               	skipnz
  5791     0A59  2A5B               	goto	u3773
  5792     0A5A  07B1               	addwf	___flmul@grs+3,f
  5793     0A5B                     u3773:
  5794     0A5B                     l2852:
  5795     0A5B  0839               	movf	___flmul@temp+1,w
  5796     0A5C  00A8               	movwf	??___flmul
  5797     0A5D  01A9               	clrf	??___flmul+1
  5798     0A5E  01AA               	clrf	??___flmul+2
  5799     0A5F  01AB               	clrf	??___flmul+3
  5800     0A60  0828               	movf	??___flmul,w
  5801     0A61  07B4               	addwf	___flmul@prod,f
  5802     0A62  0829               	movf	??___flmul+1,w
  5803     0A63  1103               	clrz
  5804     0A64  1803               	skipnc
  5805     0A65  3E01               	addlw	1
  5806     0A66  1903               	skipnz
  5807     0A67  2A69               	goto	u3781
  5808     0A68  07B5               	addwf	___flmul@prod+1,f
  5809     0A69                     u3781:
  5810     0A69  082A               	movf	??___flmul+2,w
  5811     0A6A  1103               	clrz
  5812     0A6B  1803               	skipnc
  5813     0A6C  3E01               	addlw	1
  5814     0A6D  1903               	skipnz
  5815     0A6E  2A70               	goto	u3782
  5816     0A6F  07B6               	addwf	___flmul@prod+2,f
  5817     0A70                     u3782:
  5818     0A70  082B               	movf	??___flmul+3,w
  5819     0A71  1103               	clrz
  5820     0A72  1803               	skipnc
  5821     0A73  3E01               	addlw	1
  5822     0A74  1903               	skipnz
  5823     0A75  2A77               	goto	u3783
  5824     0A76  07B7               	addwf	___flmul@prod+3,f
  5825     0A77                     u3783:
  5826     0A77                     l2854:
  5827     0A77  3008               	movlw	8
  5828     0A78  00A8               	movwf	??___flmul
  5829     0A79                     u3795:
  5830     0A79  1003               	clrc
  5831     0A7A  0DAE               	rlf	___flmul@grs,f
  5832     0A7B  0DAF               	rlf	___flmul@grs+1,f
  5833     0A7C  0DB0               	rlf	___flmul@grs+2,f
  5834     0A7D  0DB1               	rlf	___flmul@grs+3,f
  5835     0A7E  0BA8               	decfsz	??___flmul,f
  5836     0A7F  2A79               	goto	u3795
  5837     0A80                     l2856:
  5838     0A80  0821               	movf	___flmul@b+1,w
  5839     0A81  00F0               	movwf	__Umul8_16@multiplicand
  5840     0A82  0824               	movf	___flmul@a,w
  5841     0A83  120A  158A  2003  120A  158A  	fcall	__Umul8_16
  5842     0A88  0871               	movf	?__Umul8_16+1,w
  5843     0A89  1283               	bcf	3,5	;RP0=0, select bank0
  5844     0A8A  1303               	bcf	3,6	;RP1=0, select bank0
  5845     0A8B  00B9               	movwf	___flmul@temp+1
  5846     0A8C  0870               	movf	?__Umul8_16,w
  5847     0A8D  00B8               	movwf	___flmul@temp
  5848     0A8E                     l2858:
  5849     0A8E  0838               	movf	___flmul@temp,w
  5850     0A8F  00A8               	movwf	??___flmul
  5851     0A90  0839               	movf	___flmul@temp+1,w
  5852     0A91  00A9               	movwf	??___flmul+1
  5853     0A92  01AA               	clrf	??___flmul+2
  5854     0A93  01AB               	clrf	??___flmul+3
  5855     0A94  0828               	movf	??___flmul,w
  5856     0A95  07AE               	addwf	___flmul@grs,f
  5857     0A96  0829               	movf	??___flmul+1,w
  5858     0A97  1103               	clrz
  5859     0A98  1803               	skipnc
  5860     0A99  3E01               	addlw	1
  5861     0A9A  1903               	skipnz
  5862     0A9B  2A9D               	goto	u3801
  5863     0A9C  07AF               	addwf	___flmul@grs+1,f
  5864     0A9D                     u3801:
  5865     0A9D  082A               	movf	??___flmul+2,w
  5866     0A9E  1103               	clrz
  5867     0A9F  1803               	skipnc
  5868     0AA0  3E01               	addlw	1
  5869     0AA1  1903               	skipnz
  5870     0AA2  2AA4               	goto	u3802
  5871     0AA3  07B0               	addwf	___flmul@grs+2,f
  5872     0AA4                     u3802:
  5873     0AA4  082B               	movf	??___flmul+3,w
  5874     0AA5  1103               	clrz
  5875     0AA6  1803               	skipnc
  5876     0AA7  3E01               	addlw	1
  5877     0AA8  1903               	skipnz
  5878     0AA9  2AAB               	goto	u3803
  5879     0AAA  07B1               	addwf	___flmul@grs+3,f
  5880     0AAB                     u3803:
  5881     0AAB                     l2860:
  5882     0AAB  0820               	movf	___flmul@b,w
  5883     0AAC  00F0               	movwf	__Umul8_16@multiplicand
  5884     0AAD  0825               	movf	___flmul@a+1,w
  5885     0AAE  120A  158A  2003  120A  158A  	fcall	__Umul8_16
  5886     0AB3  0871               	movf	?__Umul8_16+1,w
  5887     0AB4  1283               	bcf	3,5	;RP0=0, select bank0
  5888     0AB5  1303               	bcf	3,6	;RP1=0, select bank0
  5889     0AB6  00B9               	movwf	___flmul@temp+1
  5890     0AB7  0870               	movf	?__Umul8_16,w
  5891     0AB8  00B8               	movwf	___flmul@temp
  5892     0AB9                     l2862:
  5893     0AB9  0838               	movf	___flmul@temp,w
  5894     0ABA  00A8               	movwf	??___flmul
  5895     0ABB  0839               	movf	___flmul@temp+1,w
  5896     0ABC  00A9               	movwf	??___flmul+1
  5897     0ABD  01AA               	clrf	??___flmul+2
  5898     0ABE  01AB               	clrf	??___flmul+3
  5899     0ABF  0828               	movf	??___flmul,w
  5900     0AC0  07AE               	addwf	___flmul@grs,f
  5901     0AC1  0829               	movf	??___flmul+1,w
  5902     0AC2  1103               	clrz
  5903     0AC3  1803               	skipnc
  5904     0AC4  3E01               	addlw	1
  5905     0AC5  1903               	skipnz
  5906     0AC6  2AC8               	goto	u3811
  5907     0AC7  07AF               	addwf	___flmul@grs+1,f
  5908     0AC8                     u3811:
  5909     0AC8  082A               	movf	??___flmul+2,w
  5910     0AC9  1103               	clrz
  5911     0ACA  1803               	skipnc
  5912     0ACB  3E01               	addlw	1
  5913     0ACC  1903               	skipnz
  5914     0ACD  2ACF               	goto	u3812
  5915     0ACE  07B0               	addwf	___flmul@grs+2,f
  5916     0ACF                     u3812:
  5917     0ACF  082B               	movf	??___flmul+3,w
  5918     0AD0  1103               	clrz
  5919     0AD1  1803               	skipnc
  5920     0AD2  3E01               	addlw	1
  5921     0AD3  1903               	skipnz
  5922     0AD4  2AD6               	goto	u3813
  5923     0AD5  07B1               	addwf	___flmul@grs+3,f
  5924     0AD6                     u3813:
  5925     0AD6                     l2864:
  5926     0AD6  3008               	movlw	8
  5927     0AD7  00A8               	movwf	??___flmul
  5928     0AD8                     u3825:
  5929     0AD8  1003               	clrc
  5930     0AD9  0DAE               	rlf	___flmul@grs,f
  5931     0ADA  0DAF               	rlf	___flmul@grs+1,f
  5932     0ADB  0DB0               	rlf	___flmul@grs+2,f
  5933     0ADC  0DB1               	rlf	___flmul@grs+3,f
  5934     0ADD  0BA8               	decfsz	??___flmul,f
  5935     0ADE  2AD8               	goto	u3825
  5936     0ADF  0820               	movf	___flmul@b,w
  5937     0AE0  00F0               	movwf	__Umul8_16@multiplicand
  5938     0AE1  0824               	movf	___flmul@a,w
  5939     0AE2  120A  158A  2003  120A  158A  	fcall	__Umul8_16
  5940     0AE7  0871               	movf	?__Umul8_16+1,w
  5941     0AE8  1283               	bcf	3,5	;RP0=0, select bank0
  5942     0AE9  1303               	bcf	3,6	;RP1=0, select bank0
  5943     0AEA  00B9               	movwf	___flmul@temp+1
  5944     0AEB  0870               	movf	?__Umul8_16,w
  5945     0AEC  00B8               	movwf	___flmul@temp
  5946     0AED                     l2866:
  5947     0AED  0838               	movf	___flmul@temp,w
  5948     0AEE  00A8               	movwf	??___flmul
  5949     0AEF  0839               	movf	___flmul@temp+1,w
  5950     0AF0  00A9               	movwf	??___flmul+1
  5951     0AF1  01AA               	clrf	??___flmul+2
  5952     0AF2  01AB               	clrf	??___flmul+3
  5953     0AF3  0828               	movf	??___flmul,w
  5954     0AF4  07AE               	addwf	___flmul@grs,f
  5955     0AF5  0829               	movf	??___flmul+1,w
  5956     0AF6  1103               	clrz
  5957     0AF7  1803               	skipnc
  5958     0AF8  3E01               	addlw	1
  5959     0AF9  1903               	skipnz
  5960     0AFA  2AFC               	goto	u3831
  5961     0AFB  07AF               	addwf	___flmul@grs+1,f
  5962     0AFC                     u3831:
  5963     0AFC  082A               	movf	??___flmul+2,w
  5964     0AFD  1103               	clrz
  5965     0AFE  1803               	skipnc
  5966     0AFF  3E01               	addlw	1
  5967     0B00  1903               	skipnz
  5968     0B01  2B03               	goto	u3832
  5969     0B02  07B0               	addwf	___flmul@grs+2,f
  5970     0B03                     u3832:
  5971     0B03  082B               	movf	??___flmul+3,w
  5972     0B04  1103               	clrz
  5973     0B05  1803               	skipnc
  5974     0B06  3E01               	addlw	1
  5975     0B07  1903               	skipnz
  5976     0B08  2B0A               	goto	u3833
  5977     0B09  07B1               	addwf	___flmul@grs+3,f
  5978     0B0A                     u3833:
  5979     0B0A                     l2868:
  5980     0B0A  0821               	movf	___flmul@b+1,w
  5981     0B0B  00F0               	movwf	__Umul8_16@multiplicand
  5982     0B0C  0826               	movf	___flmul@a+2,w
  5983     0B0D  120A  158A  2003  120A  158A  	fcall	__Umul8_16
  5984     0B12  0871               	movf	?__Umul8_16+1,w
  5985     0B13  1283               	bcf	3,5	;RP0=0, select bank0
  5986     0B14  1303               	bcf	3,6	;RP1=0, select bank0
  5987     0B15  00B9               	movwf	___flmul@temp+1
  5988     0B16  0870               	movf	?__Umul8_16,w
  5989     0B17  00B8               	movwf	___flmul@temp
  5990     0B18  0838               	movf	___flmul@temp,w
  5991     0B19  00A8               	movwf	??___flmul
  5992     0B1A  0839               	movf	___flmul@temp+1,w
  5993     0B1B  00A9               	movwf	??___flmul+1
  5994     0B1C  01AA               	clrf	??___flmul+2
  5995     0B1D  01AB               	clrf	??___flmul+3
  5996     0B1E  0828               	movf	??___flmul,w
  5997     0B1F  07B4               	addwf	___flmul@prod,f
  5998     0B20  0829               	movf	??___flmul+1,w
  5999     0B21  1103               	clrz
  6000     0B22  1803               	skipnc
  6001     0B23  3E01               	addlw	1
  6002     0B24  1903               	skipnz
  6003     0B25  2B27               	goto	u3841
  6004     0B26  07B5               	addwf	___flmul@prod+1,f
  6005     0B27                     u3841:
  6006     0B27  082A               	movf	??___flmul+2,w
  6007     0B28  1103               	clrz
  6008     0B29  1803               	skipnc
  6009     0B2A  3E01               	addlw	1
  6010     0B2B  1903               	skipnz
  6011     0B2C  2B2E               	goto	u3842
  6012     0B2D  07B6               	addwf	___flmul@prod+2,f
  6013     0B2E                     u3842:
  6014     0B2E  082B               	movf	??___flmul+3,w
  6015     0B2F  1103               	clrz
  6016     0B30  1803               	skipnc
  6017     0B31  3E01               	addlw	1
  6018     0B32  1903               	skipnz
  6019     0B33  2B35               	goto	u3843
  6020     0B34  07B7               	addwf	___flmul@prod+3,f
  6021     0B35                     u3843:
  6022     0B35                     l2870:
  6023     0B35  0822               	movf	___flmul@b+2,w
  6024     0B36  00F0               	movwf	__Umul8_16@multiplicand
  6025     0B37  0825               	movf	___flmul@a+1,w
  6026     0B38  120A  158A  2003  120A  158A  	fcall	__Umul8_16
  6027     0B3D  0871               	movf	?__Umul8_16+1,w
  6028     0B3E  1283               	bcf	3,5	;RP0=0, select bank0
  6029     0B3F  1303               	bcf	3,6	;RP1=0, select bank0
  6030     0B40  00B9               	movwf	___flmul@temp+1
  6031     0B41  0870               	movf	?__Umul8_16,w
  6032     0B42  00B8               	movwf	___flmul@temp
  6033     0B43                     l2872:
  6034     0B43  0838               	movf	___flmul@temp,w
  6035     0B44  00A8               	movwf	??___flmul
  6036     0B45  0839               	movf	___flmul@temp+1,w
  6037     0B46  00A9               	movwf	??___flmul+1
  6038     0B47  01AA               	clrf	??___flmul+2
  6039     0B48  01AB               	clrf	??___flmul+3
  6040     0B49  0828               	movf	??___flmul,w
  6041     0B4A  07B4               	addwf	___flmul@prod,f
  6042     0B4B  0829               	movf	??___flmul+1,w
  6043     0B4C  1103               	clrz
  6044     0B4D  1803               	skipnc
  6045     0B4E  3E01               	addlw	1
  6046     0B4F  1903               	skipnz
  6047     0B50  2B52               	goto	u3851
  6048     0B51  07B5               	addwf	___flmul@prod+1,f
  6049     0B52                     u3851:
  6050     0B52  082A               	movf	??___flmul+2,w
  6051     0B53  1103               	clrz
  6052     0B54  1803               	skipnc
  6053     0B55  3E01               	addlw	1
  6054     0B56  1903               	skipnz
  6055     0B57  2B59               	goto	u3852
  6056     0B58  07B6               	addwf	___flmul@prod+2,f
  6057     0B59                     u3852:
  6058     0B59  082B               	movf	??___flmul+3,w
  6059     0B5A  1103               	clrz
  6060     0B5B  1803               	skipnc
  6061     0B5C  3E01               	addlw	1
  6062     0B5D  1903               	skipnz
  6063     0B5E  2B60               	goto	u3853
  6064     0B5F  07B7               	addwf	___flmul@prod+3,f
  6065     0B60                     u3853:
  6066     0B60  0822               	movf	___flmul@b+2,w
  6067     0B61  00F0               	movwf	__Umul8_16@multiplicand
  6068     0B62  0826               	movf	___flmul@a+2,w
  6069     0B63  120A  158A  2003  120A  158A  	fcall	__Umul8_16
  6070     0B68  0871               	movf	?__Umul8_16+1,w
  6071     0B69  1283               	bcf	3,5	;RP0=0, select bank0
  6072     0B6A  1303               	bcf	3,6	;RP1=0, select bank0
  6073     0B6B  00B9               	movwf	___flmul@temp+1
  6074     0B6C  0870               	movf	?__Umul8_16,w
  6075     0B6D  00B8               	movwf	___flmul@temp
  6076     0B6E                     l2874:
  6077     0B6E  0838               	movf	___flmul@temp,w
  6078     0B6F  00A8               	movwf	??___flmul
  6079     0B70  0839               	movf	___flmul@temp+1,w
  6080     0B71  00A9               	movwf	??___flmul+1
  6081     0B72  01AA               	clrf	??___flmul+2
  6082     0B73  01AB               	clrf	??___flmul+3
  6083     0B74  3008               	movlw	8
  6084     0B75                     u3865:
  6085     0B75  1003               	clrc
  6086     0B76  0DA8               	rlf	??___flmul,f
  6087     0B77  0DA9               	rlf	??___flmul+1,f
  6088     0B78  0DAA               	rlf	??___flmul+2,f
  6089     0B79  0DAB               	rlf	??___flmul+3,f
  6090     0B7A                     u3860:
  6091     0B7A  3EFF               	addlw	-1
  6092     0B7B  1D03               	skipz
  6093     0B7C  2B75               	goto	u3865
  6094     0B7D  0828               	movf	??___flmul,w
  6095     0B7E  07B4               	addwf	___flmul@prod,f
  6096     0B7F  0829               	movf	??___flmul+1,w
  6097     0B80  1103               	clrz
  6098     0B81  1803               	skipnc
  6099     0B82  3E01               	addlw	1
  6100     0B83  1903               	skipnz
  6101     0B84  2B86               	goto	u3871
  6102     0B85  07B5               	addwf	___flmul@prod+1,f
  6103     0B86                     u3871:
  6104     0B86  082A               	movf	??___flmul+2,w
  6105     0B87  1103               	clrz
  6106     0B88  1803               	skipnc
  6107     0B89  3E01               	addlw	1
  6108     0B8A  1903               	skipnz
  6109     0B8B  2B8D               	goto	u3872
  6110     0B8C  07B6               	addwf	___flmul@prod+2,f
  6111     0B8D                     u3872:
  6112     0B8D  082B               	movf	??___flmul+3,w
  6113     0B8E  1103               	clrz
  6114     0B8F  1803               	skipnc
  6115     0B90  3E01               	addlw	1
  6116     0B91  1903               	skipnz
  6117     0B92  2B94               	goto	u3873
  6118     0B93  07B7               	addwf	___flmul@prod+3,f
  6119     0B94                     u3873:
  6120     0B94                     l2876:
  6121     0B94  082E               	movf	___flmul@grs,w
  6122     0B95  00A8               	movwf	??___flmul
  6123     0B96  082F               	movf	___flmul@grs+1,w
  6124     0B97  00A9               	movwf	??___flmul+1
  6125     0B98  0830               	movf	___flmul@grs+2,w
  6126     0B99  00AA               	movwf	??___flmul+2
  6127     0B9A  0831               	movf	___flmul@grs+3,w
  6128     0B9B  00AB               	movwf	??___flmul+3
  6129     0B9C  3018               	movlw	24
  6130     0B9D                     u3885:
  6131     0B9D  1003               	clrc
  6132     0B9E  0CAB               	rrf	??___flmul+3,f
  6133     0B9F  0CAA               	rrf	??___flmul+2,f
  6134     0BA0  0CA9               	rrf	??___flmul+1,f
  6135     0BA1  0CA8               	rrf	??___flmul,f
  6136     0BA2                     u3880:
  6137     0BA2  3EFF               	addlw	-1
  6138     0BA3  1D03               	skipz
  6139     0BA4  2B9D               	goto	u3885
  6140     0BA5  0828               	movf	??___flmul,w
  6141     0BA6  07B4               	addwf	___flmul@prod,f
  6142     0BA7  0829               	movf	??___flmul+1,w
  6143     0BA8  1103               	clrz
  6144     0BA9  1803               	skipnc
  6145     0BAA  3E01               	addlw	1
  6146     0BAB  1903               	skipnz
  6147     0BAC  2BAE               	goto	u3891
  6148     0BAD  07B5               	addwf	___flmul@prod+1,f
  6149     0BAE                     u3891:
  6150     0BAE  082A               	movf	??___flmul+2,w
  6151     0BAF  1103               	clrz
  6152     0BB0  1803               	skipnc
  6153     0BB1  3E01               	addlw	1
  6154     0BB2  1903               	skipnz
  6155     0BB3  2BB5               	goto	u3892
  6156     0BB4  07B6               	addwf	___flmul@prod+2,f
  6157     0BB5                     u3892:
  6158     0BB5  082B               	movf	??___flmul+3,w
  6159     0BB6  1103               	clrz
  6160     0BB7  1803               	skipnc
  6161     0BB8  3E01               	addlw	1
  6162     0BB9  1903               	skipnz
  6163     0BBA  2BBC               	goto	u3893
  6164     0BBB  07B7               	addwf	___flmul@prod+3,f
  6165     0BBC                     u3893:
  6166     0BBC                     l2878:
  6167     0BBC  3008               	movlw	8
  6168     0BBD  00A8               	movwf	??___flmul
  6169     0BBE                     u3905:
  6170     0BBE  1003               	clrc
  6171     0BBF  0DAE               	rlf	___flmul@grs,f
  6172     0BC0  0DAF               	rlf	___flmul@grs+1,f
  6173     0BC1  0DB0               	rlf	___flmul@grs+2,f
  6174     0BC2  0DB1               	rlf	___flmul@grs+3,f
  6175     0BC3  0BA8               	decfsz	??___flmul,f
  6176     0BC4  2BBE               	goto	u3905
  6177     0BC5                     l2880:
  6178     0BC5  0833               	movf	___flmul@bexp,w
  6179     0BC6  0732               	addwf	___flmul@aexp,w
  6180     0BC7  00A8               	movwf	??___flmul
  6181     0BC8  01A9               	clrf	??___flmul+1
  6182     0BC9  0DA9               	rlf	??___flmul+1,f
  6183     0BCA  0828               	movf	??___flmul,w
  6184     0BCB  3E82               	addlw	130
  6185     0BCC  00B8               	movwf	___flmul@temp
  6186     0BCD  0829               	movf	??___flmul+1,w
  6187     0BCE  1803               	skipnc
  6188     0BCF  3E01               	addlw	1
  6189     0BD0  3EFF               	addlw	255
  6190     0BD1  00B9               	movwf	___flmul@temp+1
  6191     0BD2  2BF0               	goto	l2892
  6192     0BD3                     l2882:
  6193     0BD3  3001               	movlw	1
  6194     0BD4  00A8               	movwf	??___flmul
  6195     0BD5                     u3915:
  6196     0BD5  1003               	clrc
  6197     0BD6  0DB4               	rlf	___flmul@prod,f
  6198     0BD7  0DB5               	rlf	___flmul@prod+1,f
  6199     0BD8  0DB6               	rlf	___flmul@prod+2,f
  6200     0BD9  0DB7               	rlf	___flmul@prod+3,f
  6201     0BDA  0BA8               	decfsz	??___flmul,f
  6202     0BDB  2BD5               	goto	u3915
  6203     0BDC                     l2884:
  6204     0BDC  1FB1               	btfss	___flmul@grs+3,7
  6205     0BDD  2BDF               	goto	u3921
  6206     0BDE  2BE0               	goto	u3920
  6207     0BDF                     u3921:
  6208     0BDF  2BE1               	goto	l2888
  6209     0BE0                     u3920:
  6210     0BE0                     l2886:
  6211     0BE0  1434               	bsf	___flmul@prod,0
  6212     0BE1                     l2888:
  6213     0BE1  3001               	movlw	1
  6214     0BE2  00A8               	movwf	??___flmul
  6215     0BE3                     u3935:
  6216     0BE3  1003               	clrc
  6217     0BE4  0DAE               	rlf	___flmul@grs,f
  6218     0BE5  0DAF               	rlf	___flmul@grs+1,f
  6219     0BE6  0DB0               	rlf	___flmul@grs+2,f
  6220     0BE7  0DB1               	rlf	___flmul@grs+3,f
  6221     0BE8  0BA8               	decfsz	??___flmul,f
  6222     0BE9  2BE3               	goto	u3935
  6223     0BEA                     l2890:
  6224     0BEA  30FF               	movlw	255
  6225     0BEB  07B8               	addwf	___flmul@temp,f
  6226     0BEC  1803               	skipnc
  6227     0BED  0AB9               	incf	___flmul@temp+1,f
  6228     0BEE  30FF               	movlw	255
  6229     0BEF  07B9               	addwf	___flmul@temp+1,f
  6230     0BF0                     l2892:
  6231     0BF0  1FB6               	btfss	___flmul@prod+2,7
  6232     0BF1  2BF3               	goto	u3941
  6233     0BF2  2BF4               	goto	u3940
  6234     0BF3                     u3941:
  6235     0BF3  2BD3               	goto	l2882
  6236     0BF4                     u3940:
  6237     0BF4                     l2894:
  6238     0BF4  01B2               	clrf	___flmul@aexp
  6239     0BF5                     l2896:
  6240     0BF5  1FB1               	btfss	___flmul@grs+3,7
  6241     0BF6  2BF8               	goto	u3951
  6242     0BF7  2BF9               	goto	u3950
  6243     0BF8                     u3951:
  6244     0BF8  2C15               	goto	l2904
  6245     0BF9                     u3950:
  6246     0BF9                     l2898:
  6247     0BF9  30FF               	movlw	255
  6248     0BFA  052E               	andwf	___flmul@grs,w
  6249     0BFB  00A8               	movwf	??___flmul
  6250     0BFC  30FF               	movlw	255
  6251     0BFD  052F               	andwf	___flmul@grs+1,w
  6252     0BFE  00A9               	movwf	??___flmul+1
  6253     0BFF  30FF               	movlw	255
  6254     0C00  0530               	andwf	___flmul@grs+2,w
  6255     0C01  00AA               	movwf	??___flmul+2
  6256     0C02  307F               	movlw	127
  6257     0C03  0531               	andwf	___flmul@grs+3,w
  6258     0C04  00AB               	movwf	??___flmul+3
  6259     0C05  082B               	movf	??___flmul+3,w
  6260     0C06  042A               	iorwf	??___flmul+2,w
  6261     0C07  0429               	iorwf	??___flmul+1,w
  6262     0C08  0428               	iorwf	??___flmul,w
  6263     0C09  1903               	skipnz
  6264     0C0A  2C0C               	goto	u3961
  6265     0C0B  2C0D               	goto	u3960
  6266     0C0C                     u3961:
  6267     0C0C  2C10               	goto	l832
  6268     0C0D                     u3960:
  6269     0C0D                     l2900:
  6270     0C0D  01B2               	clrf	___flmul@aexp
  6271     0C0E  0AB2               	incf	___flmul@aexp,f
  6272     0C0F  2C15               	goto	l2904
  6273     0C10                     l832:
  6274     0C10  1C34               	btfss	___flmul@prod,0
  6275     0C11  2C13               	goto	u3971
  6276     0C12  2C14               	goto	u3970
  6277     0C13                     u3971:
  6278     0C13  2C15               	goto	l2904
  6279     0C14                     u3970:
  6280     0C14  2C0D               	goto	l2900
  6281     0C15                     l2904:
  6282     0C15  0832               	movf	___flmul@aexp,w
  6283     0C16  1903               	btfsc	3,2
  6284     0C17  2C19               	goto	u3981
  6285     0C18  2C1A               	goto	u3980
  6286     0C19                     u3981:
  6287     0C19  2C4B               	goto	l2914
  6288     0C1A                     u3980:
  6289     0C1A                     l2906:
  6290     0C1A  3001               	movlw	1
  6291     0C1B  07B4               	addwf	___flmul@prod,f
  6292     0C1C  3000               	movlw	0
  6293     0C1D  1803               	skipnc
  6294     0C1E  3001               	movlw	1
  6295     0C1F  07B5               	addwf	___flmul@prod+1,f
  6296     0C20  3000               	movlw	0
  6297     0C21  1803               	skipnc
  6298     0C22  3001               	movlw	1
  6299     0C23  07B6               	addwf	___flmul@prod+2,f
  6300     0C24  3000               	movlw	0
  6301     0C25  1803               	skipnc
  6302     0C26  3001               	movlw	1
  6303     0C27  07B7               	addwf	___flmul@prod+3,f
  6304     0C28                     l2908:
  6305     0C28  1C37               	btfss	___flmul@prod+3,0
  6306     0C29  2C2B               	goto	u3991
  6307     0C2A  2C2C               	goto	u3990
  6308     0C2B                     u3991:
  6309     0C2B  2C4B               	goto	l2914
  6310     0C2C                     u3990:
  6311     0C2C                     l2910:
  6312     0C2C  0834               	movf	___flmul@prod,w
  6313     0C2D  00A8               	movwf	??___flmul
  6314     0C2E  0835               	movf	___flmul@prod+1,w
  6315     0C2F  00A9               	movwf	??___flmul+1
  6316     0C30  0836               	movf	___flmul@prod+2,w
  6317     0C31  00AA               	movwf	??___flmul+2
  6318     0C32  0837               	movf	___flmul@prod+3,w
  6319     0C33  00AB               	movwf	??___flmul+3
  6320     0C34  3001               	movlw	1
  6321     0C35  00AC               	movwf	??___flmul+4
  6322     0C36                     u4005:
  6323     0C36  0D2B               	rlf	??___flmul+3,w
  6324     0C37  0CAB               	rrf	??___flmul+3,f
  6325     0C38  0CAA               	rrf	??___flmul+2,f
  6326     0C39  0CA9               	rrf	??___flmul+1,f
  6327     0C3A  0CA8               	rrf	??___flmul,f
  6328     0C3B                     u4000:
  6329     0C3B  0BAC               	decfsz	??___flmul+4,f
  6330     0C3C  2C36               	goto	u4005
  6331     0C3D  082B               	movf	??___flmul+3,w
  6332     0C3E  00B7               	movwf	___flmul@prod+3
  6333     0C3F  082A               	movf	??___flmul+2,w
  6334     0C40  00B6               	movwf	___flmul@prod+2
  6335     0C41  0829               	movf	??___flmul+1,w
  6336     0C42  00B5               	movwf	___flmul@prod+1
  6337     0C43  0828               	movf	??___flmul,w
  6338     0C44  00B4               	movwf	___flmul@prod
  6339     0C45                     l2912:
  6340     0C45  3001               	movlw	1
  6341     0C46  07B8               	addwf	___flmul@temp,f
  6342     0C47  1803               	skipnc
  6343     0C48  0AB9               	incf	___flmul@temp+1,f
  6344     0C49  3000               	movlw	0
  6345     0C4A  07B9               	addwf	___flmul@temp+1,f
  6346     0C4B                     l2914:
  6347     0C4B  0839               	movf	___flmul@temp+1,w
  6348     0C4C  3A80               	xorlw	128
  6349     0C4D  00FF               	movwf	btemp+1
  6350     0C4E  3080               	movlw	128
  6351     0C4F  027F               	subwf	btemp+1,w
  6352     0C50  1D03               	skipz
  6353     0C51  2C54               	goto	u4015
  6354     0C52  30FF               	movlw	255
  6355     0C53  0238               	subwf	___flmul@temp,w
  6356     0C54                     u4015:
  6357     0C54  1C03               	skipc
  6358     0C55  2C57               	goto	u4011
  6359     0C56  2C58               	goto	u4010
  6360     0C57                     u4011:
  6361     0C57  2C63               	goto	l2918
  6362     0C58                     u4010:
  6363     0C58                     l2916:
  6364     0C58  307F               	movlw	127
  6365     0C59  1283               	bcf	3,5	;RP0=0, select bank0
  6366     0C5A  1303               	bcf	3,6	;RP1=0, select bank0
  6367     0C5B  00B7               	movwf	___flmul@prod+3
  6368     0C5C  3080               	movlw	128
  6369     0C5D  00B6               	movwf	___flmul@prod+2
  6370     0C5E  3000               	movlw	0
  6371     0C5F  00B5               	movwf	___flmul@prod+1
  6372     0C60  3000               	movlw	0
  6373     0C61  00B4               	movwf	___flmul@prod
  6374     0C62  2C94               	goto	l2932
  6375     0C63                     l2918:
  6376     0C63  1283               	bcf	3,5	;RP0=0, select bank0
  6377     0C64  1303               	bcf	3,6	;RP1=0, select bank0
  6378     0C65  0839               	movf	___flmul@temp+1,w
  6379     0C66  3A80               	xorlw	128
  6380     0C67  00FF               	movwf	btemp+1
  6381     0C68  3080               	movlw	128
  6382     0C69  027F               	subwf	btemp+1,w
  6383     0C6A  1D03               	skipz
  6384     0C6B  2C6E               	goto	u4025
  6385     0C6C  3001               	movlw	1
  6386     0C6D  0238               	subwf	___flmul@temp,w
  6387     0C6E                     u4025:
  6388     0C6E  1803               	skipnc
  6389     0C6F  2C71               	goto	u4021
  6390     0C70  2C72               	goto	u4020
  6391     0C71                     u4021:
  6392     0C71  2C7E               	goto	l2924
  6393     0C72                     u4020:
  6394     0C72                     l2920:
  6395     0C72  3000               	movlw	0
  6396     0C73  1283               	bcf	3,5	;RP0=0, select bank0
  6397     0C74  1303               	bcf	3,6	;RP1=0, select bank0
  6398     0C75  00B7               	movwf	___flmul@prod+3
  6399     0C76  3000               	movlw	0
  6400     0C77  00B6               	movwf	___flmul@prod+2
  6401     0C78  3000               	movlw	0
  6402     0C79  00B5               	movwf	___flmul@prod+1
  6403     0C7A  3000               	movlw	0
  6404     0C7B  00B4               	movwf	___flmul@prod
  6405     0C7C                     l2922:
  6406     0C7C  01AD               	clrf	___flmul@sign
  6407     0C7D  2C94               	goto	l2932
  6408     0C7E                     l2924:
  6409     0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  6410     0C7F  1303               	bcf	3,6	;RP1=0, select bank0
  6411     0C80  0838               	movf	___flmul@temp,w
  6412     0C81  00B3               	movwf	___flmul@bexp
  6413     0C82  30FF               	movlw	255
  6414     0C83  05B4               	andwf	___flmul@prod,f
  6415     0C84  30FF               	movlw	255
  6416     0C85  05B5               	andwf	___flmul@prod+1,f
  6417     0C86  307F               	movlw	127
  6418     0C87  05B6               	andwf	___flmul@prod+2,f
  6419     0C88  3000               	movlw	0
  6420     0C89  05B7               	andwf	___flmul@prod+3,f
  6421     0C8A                     l2926:
  6422     0C8A  1C33               	btfss	___flmul@bexp,0
  6423     0C8B  2C8D               	goto	u4031
  6424     0C8C  2C8E               	goto	u4030
  6425     0C8D                     u4031:
  6426     0C8D  2C8F               	goto	l2930
  6427     0C8E                     u4030:
  6428     0C8E                     l2928:
  6429     0C8E  17B6               	bsf	___flmul@prod+2,7
  6430     0C8F                     l2930:
  6431     0C8F  0833               	movf	___flmul@bexp,w
  6432     0C90  00A8               	movwf	??___flmul
  6433     0C91  1003               	clrc
  6434     0C92  0C28               	rrf	??___flmul,w
  6435     0C93  00B7               	movwf	___flmul@prod+3
  6436     0C94                     l2932:
  6437     0C94  082D               	movf	___flmul@sign,w
  6438     0C95  00FF               	movwf	btemp+1
  6439     0C96  087F               	movf	btemp+1,w
  6440     0C97  04B7               	iorwf	___flmul@prod+3,f
  6441     0C98                     l2934:
  6442     0C98  0837               	movf	___flmul@prod+3,w
  6443     0C99  00A3               	movwf	?___flmul+3
  6444     0C9A  0836               	movf	___flmul@prod+2,w
  6445     0C9B  00A2               	movwf	?___flmul+2
  6446     0C9C  0835               	movf	___flmul@prod+1,w
  6447     0C9D  00A1               	movwf	?___flmul+1
  6448     0C9E  0834               	movf	___flmul@prod,w
  6449     0C9F  00A0               	movwf	?___flmul
  6450     0CA0                     l826:
  6451     0CA0  0008               	return
  6452     0CA1                     __end_of___flmul:
  6453                           
  6454                           	psect	text8
  6455     0803                     __ptext8:	
  6456 ;; *************** function __Umul8_16 *****************
  6457 ;; Defined at:
  6458 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul8_16.c"
  6459 ;; Parameters:    Size  Location     Type
  6460 ;;  multiplier      1    wreg     unsigned char 
  6461 ;;  multiplicand    1    0[COMMON] unsigned char 
  6462 ;; Auto vars:     Size  Location     Type
  6463 ;;  multiplier      1    8[COMMON] unsigned char 
  6464 ;;  word_mpld       2    6[COMMON] unsigned int 
  6465 ;;  product         2    4[COMMON] unsigned int 
  6466 ;; Return value:  Size  Location     Type
  6467 ;;                  2    0[COMMON] unsigned int 
  6468 ;; Registers used:
  6469 ;;		wreg, status,2, status,0
  6470 ;; Tracked objects:
  6471 ;;		On entry : 0/0
  6472 ;;		On exit  : 0/0
  6473 ;;		Unchanged: 0/0
  6474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6475 ;;      Params:         2       0       0       0       0
  6476 ;;      Locals:         5       0       0       0       0
  6477 ;;      Temps:          2       0       0       0       0
  6478 ;;      Totals:         9       0       0       0       0
  6479 ;;Total ram usage:        9 bytes
  6480 ;; Hardware stack levels used: 1
  6481 ;; This function calls:
  6482 ;;		Nothing
  6483 ;; This function is called by:
  6484 ;;		___flmul
  6485 ;; This function uses a non-reentrant model
  6486 ;;
  6487                           
  6488     0803                     __Umul8_16:	
  6489                           ;psect for function __Umul8_16
  6490                           
  6491                           
  6492                           ;incstack = 0
  6493                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6494                           ;__Umul8_16@multiplier stored from wreg
  6495     0803  00F8               	movwf	__Umul8_16@multiplier
  6496     0804                     l2482:
  6497     0804  01F4               	clrf	__Umul8_16@product
  6498     0805  01F5               	clrf	__Umul8_16@product+1
  6499     0806                     l2484:
  6500     0806  0870               	movf	__Umul8_16@multiplicand,w
  6501     0807  00F2               	movwf	??__Umul8_16
  6502     0808  01F3               	clrf	??__Umul8_16+1
  6503     0809  0872               	movf	??__Umul8_16,w
  6504     080A  00F6               	movwf	__Umul8_16@word_mpld
  6505     080B  0873               	movf	??__Umul8_16+1,w
  6506     080C  00F7               	movwf	__Umul8_16@word_mpld+1
  6507     080D                     l2486:
  6508     080D  1C78               	btfss	__Umul8_16@multiplier,0
  6509     080E  2810               	goto	u2981
  6510     080F  2811               	goto	u2980
  6511     0810                     u2981:
  6512     0810  2817               	goto	l845
  6513     0811                     u2980:
  6514     0811                     l2488:
  6515     0811  0876               	movf	__Umul8_16@word_mpld,w
  6516     0812  07F4               	addwf	__Umul8_16@product,f
  6517     0813  1803               	skipnc
  6518     0814  0AF5               	incf	__Umul8_16@product+1,f
  6519     0815  0877               	movf	__Umul8_16@word_mpld+1,w
  6520     0816  07F5               	addwf	__Umul8_16@product+1,f
  6521     0817                     l845:
  6522     0817  3001               	movlw	1
  6523     0818                     u2995:
  6524     0818  1003               	clrc
  6525     0819  0DF6               	rlf	__Umul8_16@word_mpld,f
  6526     081A  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6527     081B  3EFF               	addlw	-1
  6528     081C  1D03               	skipz
  6529     081D  2818               	goto	u2995
  6530     081E  1003               	clrc
  6531     081F  0CF8               	rrf	__Umul8_16@multiplier,f
  6532     0820                     l2490:
  6533     0820  0878               	movf	__Umul8_16@multiplier,w
  6534     0821  1D03               	btfss	3,2
  6535     0822  2824               	goto	u3001
  6536     0823  2825               	goto	u3000
  6537     0824                     u3001:
  6538     0824  280D               	goto	l2486
  6539     0825                     u3000:
  6540     0825                     l2492:
  6541     0825  0875               	movf	__Umul8_16@product+1,w
  6542     0826  00F1               	movwf	?__Umul8_16+1
  6543     0827  0874               	movf	__Umul8_16@product,w
  6544     0828  00F0               	movwf	?__Umul8_16
  6545     0829                     l847:
  6546     0829  0008               	return
  6547     082A                     __end_of__Umul8_16:
  6548                           
  6549                           	psect	text9
  6550     1E91                     __ptext9:	
  6551 ;; *************** function __tdiv_to_l_ *****************
  6552 ;; Defined at:
  6553 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftdivl.c"
  6554 ;; Parameters:    Size  Location     Type
  6555 ;;  f1              4    0[COMMON] float 
  6556 ;;  f2              4    4[COMMON] float 
  6557 ;; Auto vars:     Size  Location     Type
  6558 ;;  quot            4    0[BANK0 ] unsigned long 
  6559 ;;  exp1            1    5[BANK0 ] unsigned char 
  6560 ;;  cntr            1    4[BANK0 ] unsigned char 
  6561 ;; Return value:  Size  Location     Type
  6562 ;;                  4    0[COMMON] unsigned long 
  6563 ;; Registers used:
  6564 ;;		wreg, status,2, status,0, btemp+1
  6565 ;; Tracked objects:
  6566 ;;		On entry : 0/0
  6567 ;;		On exit  : 0/0
  6568 ;;		Unchanged: 0/0
  6569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6570 ;;      Params:         8       0       0       0       0
  6571 ;;      Locals:         0       6       0       0       0
  6572 ;;      Temps:          3       0       0       0       0
  6573 ;;      Totals:        11       6       0       0       0
  6574 ;;Total ram usage:       17 bytes
  6575 ;; Hardware stack levels used: 1
  6576 ;; This function calls:
  6577 ;;		Nothing
  6578 ;; This function is called by:
  6579 ;;		_sprintf
  6580 ;; This function uses a non-reentrant model
  6581 ;;
  6582                           
  6583     1E91                     __tdiv_to_l_:	
  6584                           ;psect for function __tdiv_to_l_
  6585                           
  6586     1E91                     l3074:	
  6587                           ;incstack = 0
  6588                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0+btemp+1]
  6589                           
  6590     1E91  0870               	movf	__tdiv_to_l_@f1,w
  6591     1E92  00F8               	movwf	??__tdiv_to_l_
  6592     1E93  0871               	movf	__tdiv_to_l_@f1+1,w
  6593     1E94  00F9               	movwf	??__tdiv_to_l_+1
  6594     1E95  0872               	movf	__tdiv_to_l_@f1+2,w
  6595     1E96  00FA               	movwf	??__tdiv_to_l_+2
  6596     1E97  1003               	clrc
  6597     1E98  0D79               	rlf	??__tdiv_to_l_+1,w
  6598     1E99  0D7A               	rlf	??__tdiv_to_l_+2,w
  6599     1E9A  1283               	bcf	3,5	;RP0=0, select bank0
  6600     1E9B  1303               	bcf	3,6	;RP1=0, select bank0
  6601     1E9C  00A5               	movwf	__tdiv_to_l_@exp1
  6602     1E9D  0825               	movf	__tdiv_to_l_@exp1,w
  6603     1E9E  1D03               	btfss	3,2
  6604     1E9F  2EA1               	goto	u4321
  6605     1EA0  2EA2               	goto	u4320
  6606     1EA1                     u4321:
  6607     1EA1  2EAB               	goto	l3080
  6608     1EA2                     u4320:
  6609     1EA2                     l3076:
  6610     1EA2  3000               	movlw	0
  6611     1EA3  00F3               	movwf	?__tdiv_to_l_+3
  6612     1EA4  3000               	movlw	0
  6613     1EA5  00F2               	movwf	?__tdiv_to_l_+2
  6614     1EA6  3000               	movlw	0
  6615     1EA7  00F1               	movwf	?__tdiv_to_l_+1
  6616     1EA8  3000               	movlw	0
  6617     1EA9  00F0               	movwf	?__tdiv_to_l_
  6618     1EAA  2F47               	goto	l620
  6619     1EAB                     l3080:
  6620     1EAB  0874               	movf	__tdiv_to_l_@f2,w
  6621     1EAC  00F8               	movwf	??__tdiv_to_l_
  6622     1EAD  0875               	movf	__tdiv_to_l_@f2+1,w
  6623     1EAE  00F9               	movwf	??__tdiv_to_l_+1
  6624     1EAF  0876               	movf	__tdiv_to_l_@f2+2,w
  6625     1EB0  00FA               	movwf	??__tdiv_to_l_+2
  6626     1EB1  1003               	clrc
  6627     1EB2  0D79               	rlf	??__tdiv_to_l_+1,w
  6628     1EB3  0D7A               	rlf	??__tdiv_to_l_+2,w
  6629     1EB4  00A4               	movwf	__tdiv_to_l_@cntr
  6630     1EB5  0824               	movf	__tdiv_to_l_@cntr,w
  6631     1EB6  1D03               	btfss	3,2
  6632     1EB7  2EB9               	goto	u4331
  6633     1EB8  2EBA               	goto	u4330
  6634     1EB9                     u4331:
  6635     1EB9  2EBB               	goto	l621
  6636     1EBA                     u4330:
  6637     1EBA  2EA2               	goto	l3076
  6638     1EBB                     l621:
  6639     1EBB  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6640     1EBC                     l3086:
  6641     1EBC  30FF               	movlw	255
  6642     1EBD  05F0               	andwf	__tdiv_to_l_@f1,f
  6643     1EBE  30FF               	movlw	255
  6644     1EBF  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6645     1EC0  3000               	movlw	0
  6646     1EC1  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6647     1EC2                     l3088:
  6648     1EC2  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6649     1EC3  30FF               	movlw	255
  6650     1EC4  05F4               	andwf	__tdiv_to_l_@f2,f
  6651     1EC5  30FF               	movlw	255
  6652     1EC6  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6653     1EC7  3000               	movlw	0
  6654     1EC8  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6655     1EC9  3000               	movlw	0
  6656     1ECA  00A3               	movwf	__tdiv_to_l_@quot+3
  6657     1ECB  3000               	movlw	0
  6658     1ECC  00A2               	movwf	__tdiv_to_l_@quot+2
  6659     1ECD  3000               	movlw	0
  6660     1ECE  00A1               	movwf	__tdiv_to_l_@quot+1
  6661     1ECF  3000               	movlw	0
  6662     1ED0  00A0               	movwf	__tdiv_to_l_@quot
  6663     1ED1                     l3090:
  6664     1ED1  307F               	movlw	127
  6665     1ED2  02A5               	subwf	__tdiv_to_l_@exp1,f
  6666     1ED3                     l3092:
  6667     1ED3  3098               	movlw	152
  6668     1ED4  0724               	addwf	__tdiv_to_l_@cntr,w
  6669     1ED5  00F8               	movwf	??__tdiv_to_l_
  6670     1ED6  0878               	movf	??__tdiv_to_l_,w
  6671     1ED7  02A5               	subwf	__tdiv_to_l_@exp1,f
  6672     1ED8  3018               	movlw	24
  6673     1ED9  00A4               	movwf	__tdiv_to_l_@cntr
  6674     1EDA                     l3094:
  6675     1EDA  3001               	movlw	1
  6676     1EDB  00F8               	movwf	??__tdiv_to_l_
  6677     1EDC                     u4345:
  6678     1EDC  1003               	clrc
  6679     1EDD  0DA0               	rlf	__tdiv_to_l_@quot,f
  6680     1EDE  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6681     1EDF  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6682     1EE0  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6683     1EE1  0BF8               	decfsz	??__tdiv_to_l_,f
  6684     1EE2  2EDC               	goto	u4345
  6685     1EE3                     l3096:
  6686     1EE3  0876               	movf	__tdiv_to_l_@f2+2,w
  6687     1EE4  0272               	subwf	__tdiv_to_l_@f1+2,w
  6688     1EE5  1D03               	skipz
  6689     1EE6  2EED               	goto	u4355
  6690     1EE7  0875               	movf	__tdiv_to_l_@f2+1,w
  6691     1EE8  0271               	subwf	__tdiv_to_l_@f1+1,w
  6692     1EE9  1D03               	skipz
  6693     1EEA  2EED               	goto	u4355
  6694     1EEB  0874               	movf	__tdiv_to_l_@f2,w
  6695     1EEC  0270               	subwf	__tdiv_to_l_@f1,w
  6696     1EED                     u4355:
  6697     1EED  1C03               	skipc
  6698     1EEE  2EF0               	goto	u4351
  6699     1EEF  2EF1               	goto	u4350
  6700     1EF0                     u4351:
  6701     1EF0  2EFC               	goto	l3102
  6702     1EF1                     u4350:
  6703     1EF1                     l3098:
  6704     1EF1  0874               	movf	__tdiv_to_l_@f2,w
  6705     1EF2  02F0               	subwf	__tdiv_to_l_@f1,f
  6706     1EF3  0875               	movf	__tdiv_to_l_@f2+1,w
  6707     1EF4  1C03               	skipc
  6708     1EF5  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6709     1EF6  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6710     1EF7  0876               	movf	__tdiv_to_l_@f2+2,w
  6711     1EF8  1C03               	skipc
  6712     1EF9  0A76               	incf	__tdiv_to_l_@f2+2,w
  6713     1EFA  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6714     1EFB                     l3100:
  6715     1EFB  1420               	bsf	__tdiv_to_l_@quot,0
  6716     1EFC                     l3102:
  6717     1EFC  3001               	movlw	1
  6718     1EFD                     u4365:
  6719     1EFD  1003               	clrc
  6720     1EFE  0DF0               	rlf	__tdiv_to_l_@f1,f
  6721     1EFF  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6722     1F00  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6723     1F01  3EFF               	addlw	-1
  6724     1F02  1D03               	skipz
  6725     1F03  2EFD               	goto	u4365
  6726     1F04                     l3104:
  6727     1F04  3001               	movlw	1
  6728     1F05  02A4               	subwf	__tdiv_to_l_@cntr,f
  6729     1F06  1D03               	btfss	3,2
  6730     1F07  2F09               	goto	u4371
  6731     1F08  2F0A               	goto	u4370
  6732     1F09                     u4371:
  6733     1F09  2EDA               	goto	l3094
  6734     1F0A                     u4370:
  6735     1F0A                     l624:
  6736     1F0A  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6737     1F0B  2F0D               	goto	u4381
  6738     1F0C  2F0E               	goto	u4380
  6739     1F0D                     u4381:
  6740     1F0D  2F28               	goto	l3116
  6741     1F0E                     u4380:
  6742     1F0E                     l3106:
  6743     1F0E  0825               	movf	__tdiv_to_l_@exp1,w
  6744     1F0F  3A80               	xorlw	128
  6745     1F10  3E97               	addlw	151
  6746     1F11  1803               	skipnc
  6747     1F12  2F14               	goto	u4391
  6748     1F13  2F15               	goto	u4390
  6749     1F14                     u4391:
  6750     1F14  2F16               	goto	l3112
  6751     1F15                     u4390:
  6752     1F15  2EA2               	goto	l3076
  6753     1F16                     l3112:
  6754     1F16  3001               	movlw	1
  6755     1F17                     u4405:
  6756     1F17  1003               	clrc
  6757     1F18  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6758     1F19  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6759     1F1A  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6760     1F1B  0CA0               	rrf	__tdiv_to_l_@quot,f
  6761     1F1C  3EFF               	addlw	-1
  6762     1F1D  1D03               	skipz
  6763     1F1E  2F17               	goto	u4405
  6764     1F1F                     l3114:
  6765     1F1F  3001               	movlw	1
  6766     1F20  00FF               	movwf	btemp+1
  6767     1F21  087F               	movf	btemp+1,w
  6768     1F22  07A5               	addwf	__tdiv_to_l_@exp1,f
  6769     1F23  1D03               	btfss	3,2
  6770     1F24  2F26               	goto	u4411
  6771     1F25  2F27               	goto	u4410
  6772     1F26                     u4411:
  6773     1F26  2F16               	goto	l3112
  6774     1F27                     u4410:
  6775     1F27  2F3F               	goto	l3124
  6776     1F28                     l3116:
  6777     1F28  3018               	movlw	24
  6778     1F29  0225               	subwf	__tdiv_to_l_@exp1,w
  6779     1F2A  1C03               	skipc
  6780     1F2B  2F2D               	goto	u4421
  6781     1F2C  2F2E               	goto	u4420
  6782     1F2D                     u4421:
  6783     1F2D  2F3A               	goto	l631
  6784     1F2E                     u4420:
  6785     1F2E  2EA2               	goto	l3076
  6786     1F2F                     l3122:
  6787     1F2F  3001               	movlw	1
  6788     1F30  00F8               	movwf	??__tdiv_to_l_
  6789     1F31                     u4435:
  6790     1F31  1003               	clrc
  6791     1F32  0DA0               	rlf	__tdiv_to_l_@quot,f
  6792     1F33  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6793     1F34  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6794     1F35  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6795     1F36  0BF8               	decfsz	??__tdiv_to_l_,f
  6796     1F37  2F31               	goto	u4435
  6797     1F38  3001               	movlw	1
  6798     1F39  02A5               	subwf	__tdiv_to_l_@exp1,f
  6799     1F3A                     l631:
  6800     1F3A  0825               	movf	__tdiv_to_l_@exp1,w
  6801     1F3B  1D03               	btfss	3,2
  6802     1F3C  2F3E               	goto	u4441
  6803     1F3D  2F3F               	goto	u4440
  6804     1F3E                     u4441:
  6805     1F3E  2F2F               	goto	l3122
  6806     1F3F                     u4440:
  6807     1F3F                     l3124:
  6808     1F3F  0823               	movf	__tdiv_to_l_@quot+3,w
  6809     1F40  00F3               	movwf	?__tdiv_to_l_+3
  6810     1F41  0822               	movf	__tdiv_to_l_@quot+2,w
  6811     1F42  00F2               	movwf	?__tdiv_to_l_+2
  6812     1F43  0821               	movf	__tdiv_to_l_@quot+1,w
  6813     1F44  00F1               	movwf	?__tdiv_to_l_+1
  6814     1F45  0820               	movf	__tdiv_to_l_@quot,w
  6815     1F46  00F0               	movwf	?__tdiv_to_l_
  6816     1F47                     l620:
  6817     1F47  0008               	return
  6818     1F48                     __end_of__tdiv_to_l_:
  6819                           
  6820                           	psect	text10
  6821     1F48                     __ptext10:	
  6822 ;; *************** function __div_to_l_ *****************
  6823 ;; Defined at:
  6824 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fldivl.c"
  6825 ;; Parameters:    Size  Location     Type
  6826 ;;  f1              4    0[COMMON] unsigned long 
  6827 ;;  f2              4    4[COMMON] unsigned long 
  6828 ;; Auto vars:     Size  Location     Type
  6829 ;;  quot            4    0[BANK0 ] unsigned long 
  6830 ;;  exp1            1    5[BANK0 ] unsigned char 
  6831 ;;  cntr            1    4[BANK0 ] unsigned char 
  6832 ;; Return value:  Size  Location     Type
  6833 ;;                  4    0[COMMON] unsigned long 
  6834 ;; Registers used:
  6835 ;;		wreg, status,2, status,0, btemp+1
  6836 ;; Tracked objects:
  6837 ;;		On entry : 0/0
  6838 ;;		On exit  : 0/0
  6839 ;;		Unchanged: 0/0
  6840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6841 ;;      Params:         8       0       0       0       0
  6842 ;;      Locals:         0       6       0       0       0
  6843 ;;      Temps:          1       0       0       0       0
  6844 ;;      Totals:         9       6       0       0       0
  6845 ;;Total ram usage:       15 bytes
  6846 ;; Hardware stack levels used: 1
  6847 ;; This function calls:
  6848 ;;		Nothing
  6849 ;; This function is called by:
  6850 ;;		_sprintf
  6851 ;; This function uses a non-reentrant model
  6852 ;;
  6853                           
  6854     1F48                     __div_to_l_:	
  6855                           ;psect for function __div_to_l_
  6856                           
  6857     1F48                     l3128:	
  6858                           ;incstack = 0
  6859                           ; Regs used in __div_to_l_: [wreg+status,2+status,0+btemp+1]
  6860                           
  6861     1F48  1003               	clrc
  6862     1F49  0D72               	rlf	__div_to_l_@f1+2,w
  6863     1F4A  0D73               	rlf	__div_to_l_@f1+3,w
  6864     1F4B  1283               	bcf	3,5	;RP0=0, select bank0
  6865     1F4C  1303               	bcf	3,6	;RP1=0, select bank0
  6866     1F4D  00A5               	movwf	__div_to_l_@exp1
  6867     1F4E  0825               	movf	__div_to_l_@exp1,w
  6868     1F4F  1D03               	btfss	3,2
  6869     1F50  2F52               	goto	u4451
  6870     1F51  2F53               	goto	u4450
  6871     1F52                     u4451:
  6872     1F52  2F5C               	goto	l3134
  6873     1F53                     u4450:
  6874     1F53                     l3130:
  6875     1F53  3000               	movlw	0
  6876     1F54  00F3               	movwf	?__div_to_l_+3
  6877     1F55  3000               	movlw	0
  6878     1F56  00F2               	movwf	?__div_to_l_+2
  6879     1F57  3000               	movlw	0
  6880     1F58  00F1               	movwf	?__div_to_l_+1
  6881     1F59  3000               	movlw	0
  6882     1F5A  00F0               	movwf	?__div_to_l_
  6883     1F5B  2FFF               	goto	l573
  6884     1F5C                     l3134:
  6885     1F5C  1003               	clrc
  6886     1F5D  0D76               	rlf	__div_to_l_@f2+2,w
  6887     1F5E  0D77               	rlf	__div_to_l_@f2+3,w
  6888     1F5F  00A4               	movwf	__div_to_l_@cntr
  6889     1F60  0824               	movf	__div_to_l_@cntr,w
  6890     1F61  1D03               	btfss	3,2
  6891     1F62  2F64               	goto	u4461
  6892     1F63  2F65               	goto	u4460
  6893     1F64                     u4461:
  6894     1F64  2F66               	goto	l574
  6895     1F65                     u4460:
  6896     1F65  2F53               	goto	l3130
  6897     1F66                     l574:
  6898     1F66  17F2               	bsf	__div_to_l_@f1+2,7
  6899     1F67                     l3140:
  6900     1F67  30FF               	movlw	255
  6901     1F68  05F0               	andwf	__div_to_l_@f1,f
  6902     1F69  30FF               	movlw	255
  6903     1F6A  05F1               	andwf	__div_to_l_@f1+1,f
  6904     1F6B  30FF               	movlw	255
  6905     1F6C  05F2               	andwf	__div_to_l_@f1+2,f
  6906     1F6D  3000               	movlw	0
  6907     1F6E  05F3               	andwf	__div_to_l_@f1+3,f
  6908     1F6F                     l3142:
  6909     1F6F  17F6               	bsf	__div_to_l_@f2+2,7
  6910     1F70  30FF               	movlw	255
  6911     1F71  05F4               	andwf	__div_to_l_@f2,f
  6912     1F72  30FF               	movlw	255
  6913     1F73  05F5               	andwf	__div_to_l_@f2+1,f
  6914     1F74  30FF               	movlw	255
  6915     1F75  05F6               	andwf	__div_to_l_@f2+2,f
  6916     1F76  3000               	movlw	0
  6917     1F77  05F7               	andwf	__div_to_l_@f2+3,f
  6918     1F78  3000               	movlw	0
  6919     1F79  00A3               	movwf	__div_to_l_@quot+3
  6920     1F7A  3000               	movlw	0
  6921     1F7B  00A2               	movwf	__div_to_l_@quot+2
  6922     1F7C  3000               	movlw	0
  6923     1F7D  00A1               	movwf	__div_to_l_@quot+1
  6924     1F7E  3000               	movlw	0
  6925     1F7F  00A0               	movwf	__div_to_l_@quot
  6926     1F80                     l3144:
  6927     1F80  307F               	movlw	127
  6928     1F81  02A5               	subwf	__div_to_l_@exp1,f
  6929     1F82                     l3146:
  6930     1F82  30A0               	movlw	160
  6931     1F83  0724               	addwf	__div_to_l_@cntr,w
  6932     1F84  00F8               	movwf	??__div_to_l_
  6933     1F85  0878               	movf	??__div_to_l_,w
  6934     1F86  02A5               	subwf	__div_to_l_@exp1,f
  6935     1F87  3020               	movlw	32
  6936     1F88  00A4               	movwf	__div_to_l_@cntr
  6937     1F89                     l3148:
  6938     1F89  3001               	movlw	1
  6939     1F8A  00F8               	movwf	??__div_to_l_
  6940     1F8B                     u4475:
  6941     1F8B  1003               	clrc
  6942     1F8C  0DA0               	rlf	__div_to_l_@quot,f
  6943     1F8D  0DA1               	rlf	__div_to_l_@quot+1,f
  6944     1F8E  0DA2               	rlf	__div_to_l_@quot+2,f
  6945     1F8F  0DA3               	rlf	__div_to_l_@quot+3,f
  6946     1F90  0BF8               	decfsz	??__div_to_l_,f
  6947     1F91  2F8B               	goto	u4475
  6948     1F92                     l3150:
  6949     1F92  0877               	movf	__div_to_l_@f2+3,w
  6950     1F93  0273               	subwf	__div_to_l_@f1+3,w
  6951     1F94  1D03               	skipz
  6952     1F95  2FA0               	goto	u4485
  6953     1F96  0876               	movf	__div_to_l_@f2+2,w
  6954     1F97  0272               	subwf	__div_to_l_@f1+2,w
  6955     1F98  1D03               	skipz
  6956     1F99  2FA0               	goto	u4485
  6957     1F9A  0875               	movf	__div_to_l_@f2+1,w
  6958     1F9B  0271               	subwf	__div_to_l_@f1+1,w
  6959     1F9C  1D03               	skipz
  6960     1F9D  2FA0               	goto	u4485
  6961     1F9E  0874               	movf	__div_to_l_@f2,w
  6962     1F9F  0270               	subwf	__div_to_l_@f1,w
  6963     1FA0                     u4485:
  6964     1FA0  1C03               	skipc
  6965     1FA1  2FA3               	goto	u4481
  6966     1FA2  2FA4               	goto	u4480
  6967     1FA3                     u4481:
  6968     1FA3  2FB3               	goto	l3156
  6969     1FA4                     u4480:
  6970     1FA4                     l3152:
  6971     1FA4  0874               	movf	__div_to_l_@f2,w
  6972     1FA5  02F0               	subwf	__div_to_l_@f1,f
  6973     1FA6  0875               	movf	__div_to_l_@f2+1,w
  6974     1FA7  1C03               	skipc
  6975     1FA8  0F75               	incfsz	__div_to_l_@f2+1,w
  6976     1FA9  02F1               	subwf	__div_to_l_@f1+1,f
  6977     1FAA  0876               	movf	__div_to_l_@f2+2,w
  6978     1FAB  1C03               	skipc
  6979     1FAC  0F76               	incfsz	__div_to_l_@f2+2,w
  6980     1FAD  02F2               	subwf	__div_to_l_@f1+2,f
  6981     1FAE  0877               	movf	__div_to_l_@f2+3,w
  6982     1FAF  1C03               	skipc
  6983     1FB0  0F77               	incfsz	__div_to_l_@f2+3,w
  6984     1FB1  02F3               	subwf	__div_to_l_@f1+3,f
  6985     1FB2                     l3154:
  6986     1FB2  1420               	bsf	__div_to_l_@quot,0
  6987     1FB3                     l3156:
  6988     1FB3  3001               	movlw	1
  6989     1FB4  00F8               	movwf	??__div_to_l_
  6990     1FB5                     u4495:
  6991     1FB5  1003               	clrc
  6992     1FB6  0DF0               	rlf	__div_to_l_@f1,f
  6993     1FB7  0DF1               	rlf	__div_to_l_@f1+1,f
  6994     1FB8  0DF2               	rlf	__div_to_l_@f1+2,f
  6995     1FB9  0DF3               	rlf	__div_to_l_@f1+3,f
  6996     1FBA  0BF8               	decfsz	??__div_to_l_,f
  6997     1FBB  2FB5               	goto	u4495
  6998     1FBC                     l3158:
  6999     1FBC  3001               	movlw	1
  7000     1FBD  02A4               	subwf	__div_to_l_@cntr,f
  7001     1FBE  1D03               	btfss	3,2
  7002     1FBF  2FC1               	goto	u4501
  7003     1FC0  2FC2               	goto	u4500
  7004     1FC1                     u4501:
  7005     1FC1  2F89               	goto	l3148
  7006     1FC2                     u4500:
  7007     1FC2                     l577:
  7008     1FC2  1FA5               	btfss	__div_to_l_@exp1,7
  7009     1FC3  2FC5               	goto	u4511
  7010     1FC4  2FC6               	goto	u4510
  7011     1FC5                     u4511:
  7012     1FC5  2FE0               	goto	l3170
  7013     1FC6                     u4510:
  7014     1FC6                     l3160:
  7015     1FC6  0825               	movf	__div_to_l_@exp1,w
  7016     1FC7  3A80               	xorlw	128
  7017     1FC8  3E9F               	addlw	159
  7018     1FC9  1803               	skipnc
  7019     1FCA  2FCC               	goto	u4521
  7020     1FCB  2FCD               	goto	u4520
  7021     1FCC                     u4521:
  7022     1FCC  2FCE               	goto	l3166
  7023     1FCD                     u4520:
  7024     1FCD  2F53               	goto	l3130
  7025     1FCE                     l3166:
  7026     1FCE  3001               	movlw	1
  7027     1FCF                     u4535:
  7028     1FCF  1003               	clrc
  7029     1FD0  0CA3               	rrf	__div_to_l_@quot+3,f
  7030     1FD1  0CA2               	rrf	__div_to_l_@quot+2,f
  7031     1FD2  0CA1               	rrf	__div_to_l_@quot+1,f
  7032     1FD3  0CA0               	rrf	__div_to_l_@quot,f
  7033     1FD4  3EFF               	addlw	-1
  7034     1FD5  1D03               	skipz
  7035     1FD6  2FCF               	goto	u4535
  7036     1FD7                     l3168:
  7037     1FD7  3001               	movlw	1
  7038     1FD8  00FF               	movwf	btemp+1
  7039     1FD9  087F               	movf	btemp+1,w
  7040     1FDA  07A5               	addwf	__div_to_l_@exp1,f
  7041     1FDB  1D03               	btfss	3,2
  7042     1FDC  2FDE               	goto	u4541
  7043     1FDD  2FDF               	goto	u4540
  7044     1FDE                     u4541:
  7045     1FDE  2FCE               	goto	l3166
  7046     1FDF                     u4540:
  7047     1FDF  2FF7               	goto	l3178
  7048     1FE0                     l3170:
  7049     1FE0  3020               	movlw	32
  7050     1FE1  0225               	subwf	__div_to_l_@exp1,w
  7051     1FE2  1C03               	skipc
  7052     1FE3  2FE5               	goto	u4551
  7053     1FE4  2FE6               	goto	u4550
  7054     1FE5                     u4551:
  7055     1FE5  2FF2               	goto	l584
  7056     1FE6                     u4550:
  7057     1FE6  2F53               	goto	l3130
  7058     1FE7                     l3176:
  7059     1FE7  3001               	movlw	1
  7060     1FE8  00F8               	movwf	??__div_to_l_
  7061     1FE9                     u4565:
  7062     1FE9  1003               	clrc
  7063     1FEA  0DA0               	rlf	__div_to_l_@quot,f
  7064     1FEB  0DA1               	rlf	__div_to_l_@quot+1,f
  7065     1FEC  0DA2               	rlf	__div_to_l_@quot+2,f
  7066     1FED  0DA3               	rlf	__div_to_l_@quot+3,f
  7067     1FEE  0BF8               	decfsz	??__div_to_l_,f
  7068     1FEF  2FE9               	goto	u4565
  7069     1FF0  3001               	movlw	1
  7070     1FF1  02A5               	subwf	__div_to_l_@exp1,f
  7071     1FF2                     l584:
  7072     1FF2  0825               	movf	__div_to_l_@exp1,w
  7073     1FF3  1D03               	btfss	3,2
  7074     1FF4  2FF6               	goto	u4571
  7075     1FF5  2FF7               	goto	u4570
  7076     1FF6                     u4571:
  7077     1FF6  2FE7               	goto	l3176
  7078     1FF7                     u4570:
  7079     1FF7                     l3178:
  7080     1FF7  0823               	movf	__div_to_l_@quot+3,w
  7081     1FF8  00F3               	movwf	?__div_to_l_+3
  7082     1FF9  0822               	movf	__div_to_l_@quot+2,w
  7083     1FFA  00F2               	movwf	?__div_to_l_+2
  7084     1FFB  0821               	movf	__div_to_l_@quot+1,w
  7085     1FFC  00F1               	movwf	?__div_to_l_+1
  7086     1FFD  0820               	movf	__div_to_l_@quot,w
  7087     1FFE  00F0               	movwf	?__div_to_l_
  7088     1FFF                     l573:
  7089     1FFF  0008               	return
  7090     2000                     __end_of__div_to_l_:
  7091                           
  7092                           	psect	text11
  7093     08A2                     __ptext11:	
  7094 ;; *************** function ___xxtofl *****************
  7095 ;; Defined at:
  7096 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\xxtofl.c"
  7097 ;; Parameters:    Size  Location     Type
  7098 ;;  sign            1    wreg     unsigned char 
  7099 ;;  val             4    6[COMMON] long 
  7100 ;; Auto vars:     Size  Location     Type
  7101 ;;  sign            1    0[BANK0 ] unsigned char 
  7102 ;;  arg             4    2[BANK0 ] unsigned long 
  7103 ;;  exp             1    1[BANK0 ] unsigned char 
  7104 ;; Return value:  Size  Location     Type
  7105 ;;                  4    6[COMMON] unsigned char 
  7106 ;; Registers used:
  7107 ;;		wreg, status,2, status,0, btemp+1
  7108 ;; Tracked objects:
  7109 ;;		On entry : 0/0
  7110 ;;		On exit  : 0/0
  7111 ;;		Unchanged: 0/0
  7112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7113 ;;      Params:         4       0       0       0       0
  7114 ;;      Locals:         0       6       0       0       0
  7115 ;;      Temps:          4       0       0       0       0
  7116 ;;      Totals:         8       6       0       0       0
  7117 ;;Total ram usage:       14 bytes
  7118 ;; Hardware stack levels used: 1
  7119 ;; This function calls:
  7120 ;;		Nothing
  7121 ;; This function is called by:
  7122 ;;		_main
  7123 ;;		_sprintf
  7124 ;; This function uses a non-reentrant model
  7125 ;;
  7126                           
  7127     08A2                     ___xxtofl:	
  7128                           ;psect for function ___xxtofl
  7129                           
  7130                           
  7131                           ;incstack = 0
  7132                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  7133                           ;___xxtofl@sign stored from wreg
  7134     08A2  1283               	bcf	3,5	;RP0=0, select bank0
  7135     08A3  1303               	bcf	3,6	;RP1=0, select bank0
  7136     08A4  00A0               	movwf	___xxtofl@sign
  7137     08A5                     l3302:
  7138     08A5  0820               	movf	___xxtofl@sign,w
  7139     08A6  1903               	btfsc	3,2
  7140     08A7  28A9               	goto	u4891
  7141     08A8  28AA               	goto	u4890
  7142     08A9                     u4891:
  7143     08A9  28BE               	goto	l3308
  7144     08AA                     u4890:
  7145     08AA                     l3304:
  7146     08AA  1FF9               	btfss	___xxtofl@val+3,7
  7147     08AB  28AD               	goto	u4901
  7148     08AC  28AE               	goto	u4900
  7149     08AD                     u4901:
  7150     08AD  28BE               	goto	l3308
  7151     08AE                     u4900:
  7152     08AE                     l3306:
  7153     08AE  0976               	comf	___xxtofl@val,w
  7154     08AF  00A2               	movwf	___xxtofl@arg
  7155     08B0  0977               	comf	___xxtofl@val+1,w
  7156     08B1  00A3               	movwf	___xxtofl@arg+1
  7157     08B2  0978               	comf	___xxtofl@val+2,w
  7158     08B3  00A4               	movwf	___xxtofl@arg+2
  7159     08B4  0979               	comf	___xxtofl@val+3,w
  7160     08B5  00A5               	movwf	___xxtofl@arg+3
  7161     08B6  0AA2               	incf	___xxtofl@arg,f
  7162     08B7  1903               	skipnz
  7163     08B8  0AA3               	incf	___xxtofl@arg+1,f
  7164     08B9  1903               	skipnz
  7165     08BA  0AA4               	incf	___xxtofl@arg+2,f
  7166     08BB  1903               	skipnz
  7167     08BC  0AA5               	incf	___xxtofl@arg+3,f
  7168     08BD  28C6               	goto	l870
  7169     08BE                     l3308:
  7170     08BE  0879               	movf	___xxtofl@val+3,w
  7171     08BF  00A5               	movwf	___xxtofl@arg+3
  7172     08C0  0878               	movf	___xxtofl@val+2,w
  7173     08C1  00A4               	movwf	___xxtofl@arg+2
  7174     08C2  0877               	movf	___xxtofl@val+1,w
  7175     08C3  00A3               	movwf	___xxtofl@arg+1
  7176     08C4  0876               	movf	___xxtofl@val,w
  7177     08C5  00A2               	movwf	___xxtofl@arg
  7178     08C6                     l870:
  7179     08C6  0879               	movf	___xxtofl@val+3,w
  7180     08C7  0478               	iorwf	___xxtofl@val+2,w
  7181     08C8  0477               	iorwf	___xxtofl@val+1,w
  7182     08C9  0476               	iorwf	___xxtofl@val,w
  7183     08CA  1D03               	skipz
  7184     08CB  28CD               	goto	u4911
  7185     08CC  28CE               	goto	u4910
  7186     08CD                     u4911:
  7187     08CD  28D7               	goto	l3314
  7188     08CE                     u4910:
  7189     08CE                     l3310:
  7190     08CE  3000               	movlw	0
  7191     08CF  00F9               	movwf	?___xxtofl+3
  7192     08D0  3000               	movlw	0
  7193     08D1  00F8               	movwf	?___xxtofl+2
  7194     08D2  3000               	movlw	0
  7195     08D3  00F7               	movwf	?___xxtofl+1
  7196     08D4  3000               	movlw	0
  7197     08D5  00F6               	movwf	?___xxtofl
  7198     08D6  295B               	goto	l872
  7199     08D7                     l3314:
  7200     08D7  3096               	movlw	150
  7201     08D8  00A1               	movwf	___xxtofl@exp
  7202     08D9  28E7               	goto	l3320
  7203     08DA                     l3316:
  7204     08DA  3001               	movlw	1
  7205     08DB  00FF               	movwf	btemp+1
  7206     08DC  087F               	movf	btemp+1,w
  7207     08DD  07A1               	addwf	___xxtofl@exp,f
  7208     08DE                     l3318:
  7209     08DE  3001               	movlw	1
  7210     08DF                     u4925:
  7211     08DF  1003               	clrc
  7212     08E0  0CA5               	rrf	___xxtofl@arg+3,f
  7213     08E1  0CA4               	rrf	___xxtofl@arg+2,f
  7214     08E2  0CA3               	rrf	___xxtofl@arg+1,f
  7215     08E3  0CA2               	rrf	___xxtofl@arg,f
  7216     08E4  3EFF               	addlw	-1
  7217     08E5  1D03               	skipz
  7218     08E6  28DF               	goto	u4925
  7219     08E7                     l3320:
  7220     08E7  30FE               	movlw	254
  7221     08E8  0525               	andwf	___xxtofl@arg+3,w
  7222     08E9  1D03               	btfss	3,2
  7223     08EA  28EC               	goto	u4931
  7224     08EB  28ED               	goto	u4930
  7225     08EC                     u4931:
  7226     08EC  28DA               	goto	l3316
  7227     08ED                     u4930:
  7228     08ED  2909               	goto	l3328
  7229     08EE                     l3322:
  7230     08EE  3001               	movlw	1
  7231     08EF  00FF               	movwf	btemp+1
  7232     08F0  087F               	movf	btemp+1,w
  7233     08F1  07A1               	addwf	___xxtofl@exp,f
  7234     08F2                     l3324:
  7235     08F2  3001               	movlw	1
  7236     08F3  07A2               	addwf	___xxtofl@arg,f
  7237     08F4  3000               	movlw	0
  7238     08F5  1803               	skipnc
  7239     08F6  3001               	movlw	1
  7240     08F7  07A3               	addwf	___xxtofl@arg+1,f
  7241     08F8  3000               	movlw	0
  7242     08F9  1803               	skipnc
  7243     08FA  3001               	movlw	1
  7244     08FB  07A4               	addwf	___xxtofl@arg+2,f
  7245     08FC  3000               	movlw	0
  7246     08FD  1803               	skipnc
  7247     08FE  3001               	movlw	1
  7248     08FF  07A5               	addwf	___xxtofl@arg+3,f
  7249     0900                     l3326:
  7250     0900  3001               	movlw	1
  7251     0901                     u4945:
  7252     0901  1003               	clrc
  7253     0902  0CA5               	rrf	___xxtofl@arg+3,f
  7254     0903  0CA4               	rrf	___xxtofl@arg+2,f
  7255     0904  0CA3               	rrf	___xxtofl@arg+1,f
  7256     0905  0CA2               	rrf	___xxtofl@arg,f
  7257     0906  3EFF               	addlw	-1
  7258     0907  1D03               	skipz
  7259     0908  2901               	goto	u4945
  7260     0909                     l3328:
  7261     0909  30FF               	movlw	255
  7262     090A  0525               	andwf	___xxtofl@arg+3,w
  7263     090B  1D03               	btfss	3,2
  7264     090C  290E               	goto	u4951
  7265     090D  290F               	goto	u4950
  7266     090E                     u4951:
  7267     090E  28EE               	goto	l3322
  7268     090F                     u4950:
  7269     090F  291B               	goto	l3332
  7270     0910                     l3330:
  7271     0910  3001               	movlw	1
  7272     0911  02A1               	subwf	___xxtofl@exp,f
  7273     0912  3001               	movlw	1
  7274     0913  00FA               	movwf	??___xxtofl
  7275     0914                     u4965:
  7276     0914  1003               	clrc
  7277     0915  0DA2               	rlf	___xxtofl@arg,f
  7278     0916  0DA3               	rlf	___xxtofl@arg+1,f
  7279     0917  0DA4               	rlf	___xxtofl@arg+2,f
  7280     0918  0DA5               	rlf	___xxtofl@arg+3,f
  7281     0919  0BFA               	decfsz	??___xxtofl,f
  7282     091A  2914               	goto	u4965
  7283     091B                     l3332:
  7284     091B  1BA4               	btfsc	___xxtofl@arg+2,7
  7285     091C  291E               	goto	u4971
  7286     091D  291F               	goto	u4970
  7287     091E                     u4971:
  7288     091E  2925               	goto	l883
  7289     091F                     u4970:
  7290     091F                     l3334:
  7291     091F  3002               	movlw	2
  7292     0920  0221               	subwf	___xxtofl@exp,w
  7293     0921  1803               	skipnc
  7294     0922  2924               	goto	u4981
  7295     0923  2925               	goto	u4980
  7296     0924                     u4981:
  7297     0924  2910               	goto	l3330
  7298     0925                     u4980:
  7299     0925                     l883:
  7300     0925  1821               	btfsc	___xxtofl@exp,0
  7301     0926  2928               	goto	u4991
  7302     0927  2929               	goto	u4990
  7303     0928                     u4991:
  7304     0928  2931               	goto	l884
  7305     0929                     u4990:
  7306     0929                     l3336:
  7307     0929  30FF               	movlw	255
  7308     092A  05A2               	andwf	___xxtofl@arg,f
  7309     092B  30FF               	movlw	255
  7310     092C  05A3               	andwf	___xxtofl@arg+1,f
  7311     092D  307F               	movlw	127
  7312     092E  05A4               	andwf	___xxtofl@arg+2,f
  7313     092F  30FF               	movlw	255
  7314     0930  05A5               	andwf	___xxtofl@arg+3,f
  7315     0931                     l884:
  7316     0931  1003               	clrc
  7317     0932  0CA1               	rrf	___xxtofl@exp,f
  7318     0933                     l3338:
  7319     0933  0821               	movf	___xxtofl@exp,w
  7320     0934  00FA               	movwf	??___xxtofl
  7321     0935  01FB               	clrf	??___xxtofl+1
  7322     0936  01FC               	clrf	??___xxtofl+2
  7323     0937  01FD               	clrf	??___xxtofl+3
  7324     0938  3018               	movlw	24
  7325     0939                     u5005:
  7326     0939  1003               	clrc
  7327     093A  0DFA               	rlf	??___xxtofl,f
  7328     093B  0DFB               	rlf	??___xxtofl+1,f
  7329     093C  0DFC               	rlf	??___xxtofl+2,f
  7330     093D  0DFD               	rlf	??___xxtofl+3,f
  7331     093E                     u5000:
  7332     093E  3EFF               	addlw	-1
  7333     093F  1D03               	skipz
  7334     0940  2939               	goto	u5005
  7335     0941  087A               	movf	??___xxtofl,w
  7336     0942  04A2               	iorwf	___xxtofl@arg,f
  7337     0943  087B               	movf	??___xxtofl+1,w
  7338     0944  04A3               	iorwf	___xxtofl@arg+1,f
  7339     0945  087C               	movf	??___xxtofl+2,w
  7340     0946  04A4               	iorwf	___xxtofl@arg+2,f
  7341     0947  087D               	movf	??___xxtofl+3,w
  7342     0948  04A5               	iorwf	___xxtofl@arg+3,f
  7343     0949                     l3340:
  7344     0949  0820               	movf	___xxtofl@sign,w
  7345     094A  1903               	btfsc	3,2
  7346     094B  294D               	goto	u5011
  7347     094C  294E               	goto	u5010
  7348     094D                     u5011:
  7349     094D  2953               	goto	l3346
  7350     094E                     u5010:
  7351     094E                     l3342:
  7352     094E  1FF9               	btfss	___xxtofl@val+3,7
  7353     094F  2951               	goto	u5021
  7354     0950  2952               	goto	u5020
  7355     0951                     u5021:
  7356     0951  2953               	goto	l3346
  7357     0952                     u5020:
  7358     0952                     l3344:
  7359     0952  17A5               	bsf	___xxtofl@arg+3,7
  7360     0953                     l3346:
  7361     0953  0825               	movf	___xxtofl@arg+3,w
  7362     0954  00F9               	movwf	?___xxtofl+3
  7363     0955  0824               	movf	___xxtofl@arg+2,w
  7364     0956  00F8               	movwf	?___xxtofl+2
  7365     0957  0823               	movf	___xxtofl@arg+1,w
  7366     0958  00F7               	movwf	?___xxtofl+1
  7367     0959  0822               	movf	___xxtofl@arg,w
  7368     095A  00F6               	movwf	?___xxtofl
  7369     095B                     l872:
  7370     095B  0008               	return
  7371     095C                     __end_of___xxtofl:
  7372                           
  7373                           	psect	text12
  7374     1AC3                     __ptext12:	
  7375 ;; *************** function ___wmul *****************
  7376 ;; Defined at:
  7377 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  7378 ;; Parameters:    Size  Location     Type
  7379 ;;  multiplier      2    0[COMMON] unsigned int 
  7380 ;;  multiplicand    2    2[COMMON] unsigned int 
  7381 ;; Auto vars:     Size  Location     Type
  7382 ;;  product         2    4[COMMON] unsigned int 
  7383 ;; Return value:  Size  Location     Type
  7384 ;;                  2    0[COMMON] unsigned int 
  7385 ;; Registers used:
  7386 ;;		wreg, status,2, status,0
  7387 ;; Tracked objects:
  7388 ;;		On entry : 0/0
  7389 ;;		On exit  : 0/0
  7390 ;;		Unchanged: 0/0
  7391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7392 ;;      Params:         4       0       0       0       0
  7393 ;;      Locals:         2       0       0       0       0
  7394 ;;      Temps:          0       0       0       0       0
  7395 ;;      Totals:         6       0       0       0       0
  7396 ;;Total ram usage:        6 bytes
  7397 ;; Hardware stack levels used: 1
  7398 ;; This function calls:
  7399 ;;		Nothing
  7400 ;; This function is called by:
  7401 ;;		_sprintf
  7402 ;;		_BCD_A_DEC
  7403 ;; This function uses a non-reentrant model
  7404 ;;
  7405                           
  7406     1AC3                     ___wmul:	
  7407                           ;psect for function ___wmul
  7408                           
  7409     1AC3                     l3182:	
  7410                           ;incstack = 0
  7411                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7412                           
  7413     1AC3  01F4               	clrf	___wmul@product
  7414     1AC4  01F5               	clrf	___wmul@product+1
  7415     1AC5                     l3184:
  7416     1AC5  1C70               	btfss	___wmul@multiplier,0
  7417     1AC6  2AC8               	goto	u4581
  7418     1AC7  2AC9               	goto	u4580
  7419     1AC8                     u4581:
  7420     1AC8  2ACF               	goto	l403
  7421     1AC9                     u4580:
  7422     1AC9                     l3186:
  7423     1AC9  0872               	movf	___wmul@multiplicand,w
  7424     1ACA  07F4               	addwf	___wmul@product,f
  7425     1ACB  1803               	skipnc
  7426     1ACC  0AF5               	incf	___wmul@product+1,f
  7427     1ACD  0873               	movf	___wmul@multiplicand+1,w
  7428     1ACE  07F5               	addwf	___wmul@product+1,f
  7429     1ACF                     l403:
  7430     1ACF  3001               	movlw	1
  7431     1AD0                     u4595:
  7432     1AD0  1003               	clrc
  7433     1AD1  0DF2               	rlf	___wmul@multiplicand,f
  7434     1AD2  0DF3               	rlf	___wmul@multiplicand+1,f
  7435     1AD3  3EFF               	addlw	-1
  7436     1AD4  1D03               	skipz
  7437     1AD5  2AD0               	goto	u4595
  7438     1AD6                     l3188:
  7439     1AD6  3001               	movlw	1
  7440     1AD7                     u4605:
  7441     1AD7  1003               	clrc
  7442     1AD8  0CF1               	rrf	___wmul@multiplier+1,f
  7443     1AD9  0CF0               	rrf	___wmul@multiplier,f
  7444     1ADA  3EFF               	addlw	-1
  7445     1ADB  1D03               	skipz
  7446     1ADC  2AD7               	goto	u4605
  7447     1ADD                     l3190:
  7448     1ADD  0870               	movf	___wmul@multiplier,w
  7449     1ADE  0471               	iorwf	___wmul@multiplier+1,w
  7450     1ADF  1D03               	btfss	3,2
  7451     1AE0  2AE2               	goto	u4611
  7452     1AE1  2AE3               	goto	u4610
  7453     1AE2                     u4611:
  7454     1AE2  2AC5               	goto	l3184
  7455     1AE3                     u4610:
  7456     1AE3                     l3192:
  7457     1AE3  0875               	movf	___wmul@product+1,w
  7458     1AE4  00F1               	movwf	?___wmul+1
  7459     1AE5  0874               	movf	___wmul@product,w
  7460     1AE6  00F0               	movwf	?___wmul
  7461     1AE7                     l405:
  7462     1AE7  0008               	return
  7463     1AE8                     __end_of___wmul:
  7464                           
  7465                           	psect	text13
  7466     1D1A                     __ptext13:	
  7467 ;; *************** function ___llmod *****************
  7468 ;; Defined at:
  7469 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\llmod.c"
  7470 ;; Parameters:    Size  Location     Type
  7471 ;;  divisor         4    0[COMMON] unsigned long 
  7472 ;;  dividend        4    4[COMMON] unsigned long 
  7473 ;; Auto vars:     Size  Location     Type
  7474 ;;  counter         1    9[COMMON] unsigned char 
  7475 ;; Return value:  Size  Location     Type
  7476 ;;                  4    0[COMMON] unsigned long 
  7477 ;; Registers used:
  7478 ;;		wreg, status,2, status,0, btemp+1
  7479 ;; Tracked objects:
  7480 ;;		On entry : 0/0
  7481 ;;		On exit  : 0/0
  7482 ;;		Unchanged: 0/0
  7483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7484 ;;      Params:         8       0       0       0       0
  7485 ;;      Locals:         1       0       0       0       0
  7486 ;;      Temps:          1       0       0       0       0
  7487 ;;      Totals:        10       0       0       0       0
  7488 ;;Total ram usage:       10 bytes
  7489 ;; Hardware stack levels used: 1
  7490 ;; This function calls:
  7491 ;;		Nothing
  7492 ;; This function is called by:
  7493 ;;		_sprintf
  7494 ;; This function uses a non-reentrant model
  7495 ;;
  7496                           
  7497     1D1A                     ___llmod:	
  7498                           ;psect for function ___llmod
  7499                           
  7500     1D1A                     l3274:	
  7501                           ;incstack = 0
  7502                           ; Regs used in ___llmod: [wreg+status,2+status,0+btemp+1]
  7503                           
  7504     1D1A  0873               	movf	___llmod@divisor+3,w
  7505     1D1B  0472               	iorwf	___llmod@divisor+2,w
  7506     1D1C  0471               	iorwf	___llmod@divisor+1,w
  7507     1D1D  0470               	iorwf	___llmod@divisor,w
  7508     1D1E  1903               	skipnz
  7509     1D1F  2D21               	goto	u4831
  7510     1D20  2D22               	goto	u4830
  7511     1D21                     u4831:
  7512     1D21  2D65               	goto	l3292
  7513     1D22                     u4830:
  7514     1D22                     l3276:
  7515     1D22  01F9               	clrf	___llmod@counter
  7516     1D23  0AF9               	incf	___llmod@counter,f
  7517     1D24  2D32               	goto	l3282
  7518     1D25                     l3278:
  7519     1D25  3001               	movlw	1
  7520     1D26  00F8               	movwf	??___llmod
  7521     1D27                     u4845:
  7522     1D27  1003               	clrc
  7523     1D28  0DF0               	rlf	___llmod@divisor,f
  7524     1D29  0DF1               	rlf	___llmod@divisor+1,f
  7525     1D2A  0DF2               	rlf	___llmod@divisor+2,f
  7526     1D2B  0DF3               	rlf	___llmod@divisor+3,f
  7527     1D2C  0BF8               	decfsz	??___llmod,f
  7528     1D2D  2D27               	goto	u4845
  7529     1D2E                     l3280:
  7530     1D2E  3001               	movlw	1
  7531     1D2F  00FF               	movwf	btemp+1
  7532     1D30  087F               	movf	btemp+1,w
  7533     1D31  07F9               	addwf	___llmod@counter,f
  7534     1D32                     l3282:
  7535     1D32  1FF3               	btfss	___llmod@divisor+3,7
  7536     1D33  2D35               	goto	u4851
  7537     1D34  2D36               	goto	u4850
  7538     1D35                     u4851:
  7539     1D35  2D25               	goto	l3278
  7540     1D36                     u4850:
  7541     1D36                     l3284:
  7542     1D36  0873               	movf	___llmod@divisor+3,w
  7543     1D37  0277               	subwf	___llmod@dividend+3,w
  7544     1D38  1D03               	skipz
  7545     1D39  2D44               	goto	u4865
  7546     1D3A  0872               	movf	___llmod@divisor+2,w
  7547     1D3B  0276               	subwf	___llmod@dividend+2,w
  7548     1D3C  1D03               	skipz
  7549     1D3D  2D44               	goto	u4865
  7550     1D3E  0871               	movf	___llmod@divisor+1,w
  7551     1D3F  0275               	subwf	___llmod@dividend+1,w
  7552     1D40  1D03               	skipz
  7553     1D41  2D44               	goto	u4865
  7554     1D42  0870               	movf	___llmod@divisor,w
  7555     1D43  0274               	subwf	___llmod@dividend,w
  7556     1D44                     u4865:
  7557     1D44  1C03               	skipc
  7558     1D45  2D47               	goto	u4861
  7559     1D46  2D48               	goto	u4860
  7560     1D47                     u4861:
  7561     1D47  2D56               	goto	l3288
  7562     1D48                     u4860:
  7563     1D48                     l3286:
  7564     1D48  0870               	movf	___llmod@divisor,w
  7565     1D49  02F4               	subwf	___llmod@dividend,f
  7566     1D4A  0871               	movf	___llmod@divisor+1,w
  7567     1D4B  1C03               	skipc
  7568     1D4C  0F71               	incfsz	___llmod@divisor+1,w
  7569     1D4D  02F5               	subwf	___llmod@dividend+1,f
  7570     1D4E  0872               	movf	___llmod@divisor+2,w
  7571     1D4F  1C03               	skipc
  7572     1D50  0F72               	incfsz	___llmod@divisor+2,w
  7573     1D51  02F6               	subwf	___llmod@dividend+2,f
  7574     1D52  0873               	movf	___llmod@divisor+3,w
  7575     1D53  1C03               	skipc
  7576     1D54  0F73               	incfsz	___llmod@divisor+3,w
  7577     1D55  02F7               	subwf	___llmod@dividend+3,f
  7578     1D56                     l3288:
  7579     1D56  3001               	movlw	1
  7580     1D57                     u4875:
  7581     1D57  1003               	clrc
  7582     1D58  0CF3               	rrf	___llmod@divisor+3,f
  7583     1D59  0CF2               	rrf	___llmod@divisor+2,f
  7584     1D5A  0CF1               	rrf	___llmod@divisor+1,f
  7585     1D5B  0CF0               	rrf	___llmod@divisor,f
  7586     1D5C  3EFF               	addlw	-1
  7587     1D5D  1D03               	skipz
  7588     1D5E  2D57               	goto	u4875
  7589     1D5F                     l3290:
  7590     1D5F  3001               	movlw	1
  7591     1D60  02F9               	subwf	___llmod@counter,f
  7592     1D61  1D03               	btfss	3,2
  7593     1D62  2D64               	goto	u4881
  7594     1D63  2D65               	goto	u4880
  7595     1D64                     u4881:
  7596     1D64  2D36               	goto	l3284
  7597     1D65                     u4880:
  7598     1D65                     l3292:
  7599     1D65  0877               	movf	___llmod@dividend+3,w
  7600     1D66  00F3               	movwf	?___llmod+3
  7601     1D67  0876               	movf	___llmod@dividend+2,w
  7602     1D68  00F2               	movwf	?___llmod+2
  7603     1D69  0875               	movf	___llmod@dividend+1,w
  7604     1D6A  00F1               	movwf	?___llmod+1
  7605     1D6B  0874               	movf	___llmod@dividend,w
  7606     1D6C  00F0               	movwf	?___llmod
  7607     1D6D                     l659:
  7608     1D6D  0008               	return
  7609     1D6E                     __end_of___llmod:
  7610                           
  7611                           	psect	text14
  7612     082A                     __ptext14:	
  7613 ;; *************** function ___fltol *****************
  7614 ;; Defined at:
  7615 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fltol.c"
  7616 ;; Parameters:    Size  Location     Type
  7617 ;;  f1              4   45[BANK0 ] unsigned long 
  7618 ;; Auto vars:     Size  Location     Type
  7619 ;;  exp1            1   54[BANK0 ] unsigned char 
  7620 ;;  sign1           1   53[BANK0 ] unsigned char 
  7621 ;; Return value:  Size  Location     Type
  7622 ;;                  4   45[BANK0 ] long 
  7623 ;; Registers used:
  7624 ;;		wreg, status,2, status,0, btemp+1
  7625 ;; Tracked objects:
  7626 ;;		On entry : 0/0
  7627 ;;		On exit  : 0/0
  7628 ;;		Unchanged: 0/0
  7629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7630 ;;      Params:         0       4       0       0       0
  7631 ;;      Locals:         0       2       0       0       0
  7632 ;;      Temps:          0       4       0       0       0
  7633 ;;      Totals:         0      10       0       0       0
  7634 ;;Total ram usage:       10 bytes
  7635 ;; Hardware stack levels used: 1
  7636 ;; This function calls:
  7637 ;;		Nothing
  7638 ;; This function is called by:
  7639 ;;		_sprintf
  7640 ;; This function uses a non-reentrant model
  7641 ;;
  7642                           
  7643     082A                     ___fltol:	
  7644                           ;psect for function ___fltol
  7645                           
  7646     082A                     l3236:	
  7647                           ;incstack = 0
  7648                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  7649                           
  7650     082A  1003               	clrc
  7651     082B  1283               	bcf	3,5	;RP0=0, select bank0
  7652     082C  1303               	bcf	3,6	;RP1=0, select bank0
  7653     082D  0D4F               	rlf	___fltol@f1+2,w
  7654     082E  0D50               	rlf	___fltol@f1+3,w
  7655     082F  00D6               	movwf	___fltol@exp1
  7656     0830  0856               	movf	___fltol@exp1,w
  7657     0831  1D03               	btfss	3,2
  7658     0832  2834               	goto	u4731
  7659     0833  2835               	goto	u4730
  7660     0834                     u4731:
  7661     0834  283E               	goto	l3242
  7662     0835                     u4730:
  7663     0835                     l3238:
  7664     0835  3000               	movlw	0
  7665     0836  00D0               	movwf	?___fltol+3
  7666     0837  3000               	movlw	0
  7667     0838  00CF               	movwf	?___fltol+2
  7668     0839  3000               	movlw	0
  7669     083A  00CE               	movwf	?___fltol+1
  7670     083B  3000               	movlw	0
  7671     083C  00CD               	movwf	?___fltol
  7672     083D  28A1               	goto	l606
  7673     083E                     l3242:
  7674     083E  084D               	movf	___fltol@f1,w
  7675     083F  00D1               	movwf	??___fltol
  7676     0840  084E               	movf	___fltol@f1+1,w
  7677     0841  00D2               	movwf	??___fltol+1
  7678     0842  084F               	movf	___fltol@f1+2,w
  7679     0843  00D3               	movwf	??___fltol+2
  7680     0844  0850               	movf	___fltol@f1+3,w
  7681     0845  00D4               	movwf	??___fltol+3
  7682     0846  301F               	movlw	31
  7683     0847                     u4745:
  7684     0847  1003               	clrc
  7685     0848  0CD4               	rrf	??___fltol+3,f
  7686     0849  0CD3               	rrf	??___fltol+2,f
  7687     084A  0CD2               	rrf	??___fltol+1,f
  7688     084B  0CD1               	rrf	??___fltol,f
  7689     084C                     u4740:
  7690     084C  3EFF               	addlw	-1
  7691     084D  1D03               	skipz
  7692     084E  2847               	goto	u4745
  7693     084F  0851               	movf	??___fltol,w
  7694     0850  00D5               	movwf	___fltol@sign1
  7695     0851                     l3244:
  7696     0851  17CF               	bsf	___fltol@f1+2,7
  7697     0852                     l3246:
  7698     0852  30FF               	movlw	255
  7699     0853  05CD               	andwf	___fltol@f1,f
  7700     0854  30FF               	movlw	255
  7701     0855  05CE               	andwf	___fltol@f1+1,f
  7702     0856  30FF               	movlw	255
  7703     0857  05CF               	andwf	___fltol@f1+2,f
  7704     0858  3000               	movlw	0
  7705     0859  05D0               	andwf	___fltol@f1+3,f
  7706     085A                     l3248:
  7707     085A  3096               	movlw	150
  7708     085B  02D6               	subwf	___fltol@exp1,f
  7709     085C                     l3250:
  7710     085C  1FD6               	btfss	___fltol@exp1,7
  7711     085D  285F               	goto	u4751
  7712     085E  2860               	goto	u4750
  7713     085F                     u4751:
  7714     085F  287A               	goto	l3262
  7715     0860                     u4750:
  7716     0860                     l3252:
  7717     0860  0856               	movf	___fltol@exp1,w
  7718     0861  3A80               	xorlw	128
  7719     0862  3E97               	addlw	151
  7720     0863  1803               	skipnc
  7721     0864  2866               	goto	u4761
  7722     0865  2867               	goto	u4760
  7723     0866                     u4761:
  7724     0866  2868               	goto	l3258
  7725     0867                     u4760:
  7726     0867  2835               	goto	l3238
  7727     0868                     l3258:
  7728     0868  3001               	movlw	1
  7729     0869                     u4775:
  7730     0869  1003               	clrc
  7731     086A  0CD0               	rrf	___fltol@f1+3,f
  7732     086B  0CCF               	rrf	___fltol@f1+2,f
  7733     086C  0CCE               	rrf	___fltol@f1+1,f
  7734     086D  0CCD               	rrf	___fltol@f1,f
  7735     086E  3EFF               	addlw	-1
  7736     086F  1D03               	skipz
  7737     0870  2869               	goto	u4775
  7738     0871                     l3260:
  7739     0871  3001               	movlw	1
  7740     0872  00FF               	movwf	btemp+1
  7741     0873  087F               	movf	btemp+1,w
  7742     0874  07D6               	addwf	___fltol@exp1,f
  7743     0875  1D03               	btfss	3,2
  7744     0876  2878               	goto	u4781
  7745     0877  2879               	goto	u4780
  7746     0878                     u4781:
  7747     0878  2868               	goto	l3258
  7748     0879                     u4780:
  7749     0879  2891               	goto	l3270
  7750     087A                     l3262:
  7751     087A  3020               	movlw	32
  7752     087B  0256               	subwf	___fltol@exp1,w
  7753     087C  1C03               	skipc
  7754     087D  287F               	goto	u4791
  7755     087E  2880               	goto	u4790
  7756     087F                     u4791:
  7757     087F  288C               	goto	l613
  7758     0880                     u4790:
  7759     0880  2835               	goto	l3238
  7760     0881                     l3268:
  7761     0881  3001               	movlw	1
  7762     0882  00D1               	movwf	??___fltol
  7763     0883                     u4805:
  7764     0883  1003               	clrc
  7765     0884  0DCD               	rlf	___fltol@f1,f
  7766     0885  0DCE               	rlf	___fltol@f1+1,f
  7767     0886  0DCF               	rlf	___fltol@f1+2,f
  7768     0887  0DD0               	rlf	___fltol@f1+3,f
  7769     0888  0BD1               	decfsz	??___fltol,f
  7770     0889  2883               	goto	u4805
  7771     088A  3001               	movlw	1
  7772     088B  02D6               	subwf	___fltol@exp1,f
  7773     088C                     l613:
  7774     088C  0856               	movf	___fltol@exp1,w
  7775     088D  1D03               	btfss	3,2
  7776     088E  2890               	goto	u4811
  7777     088F  2891               	goto	u4810
  7778     0890                     u4811:
  7779     0890  2881               	goto	l3268
  7780     0891                     u4810:
  7781     0891                     l3270:
  7782     0891  0855               	movf	___fltol@sign1,w
  7783     0892  1903               	btfsc	3,2
  7784     0893  2895               	goto	u4821
  7785     0894  2896               	goto	u4820
  7786     0895                     u4821:
  7787     0895  28A1               	goto	l616
  7788     0896                     u4820:
  7789     0896                     l3272:
  7790     0896  09CD               	comf	___fltol@f1,f
  7791     0897  09CE               	comf	___fltol@f1+1,f
  7792     0898  09CF               	comf	___fltol@f1+2,f
  7793     0899  09D0               	comf	___fltol@f1+3,f
  7794     089A  0ACD               	incf	___fltol@f1,f
  7795     089B  1903               	skipnz
  7796     089C  0ACE               	incf	___fltol@f1+1,f
  7797     089D  1903               	skipnz
  7798     089E  0ACF               	incf	___fltol@f1+2,f
  7799     089F  1903               	skipnz
  7800     08A0  0AD0               	incf	___fltol@f1+3,f
  7801     08A1                     l616:
  7802     08A1                     l606:
  7803     08A1  0008               	return
  7804     08A2                     __end_of___fltol:
  7805                           
  7806                           	psect	text15
  7807     1A9F                     __ptext15:	
  7808 ;; *************** function ___flsub *****************
  7809 ;; Defined at:
  7810 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcadd.c"
  7811 ;; Parameters:    Size  Location     Type
  7812 ;;  a               4   66[BANK0 ] long 
  7813 ;;  b               4   70[BANK0 ] long 
  7814 ;; Auto vars:     Size  Location     Type
  7815 ;;		None
  7816 ;; Return value:  Size  Location     Type
  7817 ;;                  4   66[BANK0 ] long 
  7818 ;; Registers used:
  7819 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7820 ;; Tracked objects:
  7821 ;;		On entry : 0/0
  7822 ;;		On exit  : 0/0
  7823 ;;		Unchanged: 0/0
  7824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7825 ;;      Params:         0       8       0       0       0
  7826 ;;      Locals:         0       0       0       0       0
  7827 ;;      Temps:          0       0       0       0       0
  7828 ;;      Totals:         0       8       0       0       0
  7829 ;;Total ram usage:        8 bytes
  7830 ;; Hardware stack levels used: 1
  7831 ;; Hardware stack levels required when called: 1
  7832 ;; This function calls:
  7833 ;;		___fladd
  7834 ;; This function is called by:
  7835 ;;		_sprintf
  7836 ;; This function uses a non-reentrant model
  7837 ;;
  7838                           
  7839     1A9F                     ___flsub:	
  7840                           ;psect for function ___flsub
  7841                           
  7842     1A9F                     l3296:	
  7843                           ;incstack = 0
  7844                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7845                           
  7846     1A9F  3080               	movlw	128
  7847     1AA0  1283               	bcf	3,5	;RP0=0, select bank0
  7848     1AA1  1303               	bcf	3,6	;RP1=0, select bank0
  7849     1AA2  06E5               	xorwf	___flsub@a+3,f
  7850     1AA3                     l3298:
  7851     1AA3  0869               	movf	___flsub@b+3,w
  7852     1AA4  00D1               	movwf	___fladd@b+3
  7853     1AA5  0868               	movf	___flsub@b+2,w
  7854     1AA6  00D0               	movwf	___fladd@b+2
  7855     1AA7  0867               	movf	___flsub@b+1,w
  7856     1AA8  00CF               	movwf	___fladd@b+1
  7857     1AA9  0866               	movf	___flsub@b,w
  7858     1AAA  00CE               	movwf	___fladd@b
  7859     1AAB  0865               	movf	___flsub@a+3,w
  7860     1AAC  00D5               	movwf	___fladd@a+3
  7861     1AAD  0864               	movf	___flsub@a+2,w
  7862     1AAE  00D4               	movwf	___fladd@a+2
  7863     1AAF  0863               	movf	___flsub@a+1,w
  7864     1AB0  00D3               	movwf	___fladd@a+1
  7865     1AB1  0862               	movf	___flsub@a,w
  7866     1AB2  00D2               	movwf	___fladd@a
  7867     1AB3  160A  118A  2326  160A  158A  	fcall	___fladd
  7868     1AB8  1283               	bcf	3,5	;RP0=0, select bank0
  7869     1AB9  1303               	bcf	3,6	;RP1=0, select bank0
  7870     1ABA  0851               	movf	?___fladd+3,w
  7871     1ABB  00E5               	movwf	?___flsub+3
  7872     1ABC  0850               	movf	?___fladd+2,w
  7873     1ABD  00E4               	movwf	?___flsub+2
  7874     1ABE  084F               	movf	?___fladd+1,w
  7875     1ABF  00E3               	movwf	?___flsub+1
  7876     1AC0  084E               	movf	?___fladd,w
  7877     1AC1  00E2               	movwf	?___flsub
  7878     1AC2                     l776:
  7879     1AC2  0008               	return
  7880     1AC3                     __end_of___flsub:
  7881                           
  7882                           	psect	text16
  7883     1326                     __ptext16:	
  7884 ;; *************** function ___fladd *****************
  7885 ;; Defined at:
  7886 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcadd.c"
  7887 ;; Parameters:    Size  Location     Type
  7888 ;;  b               4   46[BANK0 ] long 
  7889 ;;  a               4   50[BANK0 ] long 
  7890 ;; Auto vars:     Size  Location     Type
  7891 ;;  grs             1   65[BANK0 ] unsigned char 
  7892 ;;  bexp            1   64[BANK0 ] unsigned char 
  7893 ;;  aexp            1   63[BANK0 ] unsigned char 
  7894 ;;  signs           1   62[BANK0 ] unsigned char 
  7895 ;; Return value:  Size  Location     Type
  7896 ;;                  4   46[BANK0 ] unsigned char 
  7897 ;; Registers used:
  7898 ;;		wreg, status,2, status,0, btemp+1
  7899 ;; Tracked objects:
  7900 ;;		On entry : 0/0
  7901 ;;		On exit  : 0/0
  7902 ;;		Unchanged: 0/0
  7903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7904 ;;      Params:         0       8       0       0       0
  7905 ;;      Locals:         0       4       0       0       0
  7906 ;;      Temps:          0       8       0       0       0
  7907 ;;      Totals:         0      20       0       0       0
  7908 ;;Total ram usage:       20 bytes
  7909 ;; Hardware stack levels used: 1
  7910 ;; This function calls:
  7911 ;;		Nothing
  7912 ;; This function is called by:
  7913 ;;		_sprintf
  7914 ;;		___flsub
  7915 ;; This function uses a non-reentrant model
  7916 ;;
  7917                           
  7918     1326                     ___fladd:	
  7919                           ;psect for function ___fladd
  7920                           
  7921     1326                     l2596:	
  7922                           ;incstack = 0
  7923                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7924                           
  7925     1326  1283               	bcf	3,5	;RP0=0, select bank0
  7926     1327  1303               	bcf	3,6	;RP1=0, select bank0
  7927     1328  0851               	movf	___fladd@b+3,w
  7928     1329  3980               	andlw	128
  7929     132A  00DE               	movwf	___fladd@signs
  7930     132B                     l2598:
  7931     132B  0851               	movf	___fladd@b+3,w
  7932     132C  00D6               	movwf	??___fladd
  7933     132D  0756               	addwf	??___fladd,w
  7934     132E  00E0               	movwf	___fladd@bexp
  7935     132F                     l2600:
  7936     132F  1FD0               	btfss	___fladd@b+2,7
  7937     1330  2B32               	goto	u3211
  7938     1331  2B33               	goto	u3210
  7939     1332                     u3211:
  7940     1332  2B34               	goto	l2604
  7941     1333                     u3210:
  7942     1333                     l2602:
  7943     1333  1460               	bsf	___fladd@bexp,0
  7944     1334                     l2604:
  7945     1334  0860               	movf	___fladd@bexp,w
  7946     1335  1903               	btfsc	3,2
  7947     1336  2B38               	goto	u3221
  7948     1337  2B39               	goto	u3220
  7949     1338                     u3221:
  7950     1338  2B49               	goto	l2614
  7951     1339                     u3220:
  7952     1339                     l2606:
  7953     1339  0A60               	incf	___fladd@bexp,w
  7954     133A  1D03               	btfss	3,2
  7955     133B  2B3D               	goto	u3231
  7956     133C  2B3E               	goto	u3230
  7957     133D                     u3231:
  7958     133D  2B46               	goto	l2610
  7959     133E                     u3230:
  7960     133E                     l2608:
  7961     133E  3000               	movlw	0
  7962     133F  00D1               	movwf	___fladd@b+3
  7963     1340  3000               	movlw	0
  7964     1341  00D0               	movwf	___fladd@b+2
  7965     1342  3000               	movlw	0
  7966     1343  00CF               	movwf	___fladd@b+1
  7967     1344  3000               	movlw	0
  7968     1345  00CE               	movwf	___fladd@b
  7969     1346                     l2610:
  7970     1346  17D0               	bsf	___fladd@b+2,7
  7971     1347                     l2612:
  7972     1347  01D1               	clrf	___fladd@b+3
  7973     1348  2B51               	goto	l2616
  7974     1349                     l2614:
  7975     1349  3000               	movlw	0
  7976     134A  00D1               	movwf	___fladd@b+3
  7977     134B  3000               	movlw	0
  7978     134C  00D0               	movwf	___fladd@b+2
  7979     134D  3000               	movlw	0
  7980     134E  00CF               	movwf	___fladd@b+1
  7981     134F  3000               	movlw	0
  7982     1350  00CE               	movwf	___fladd@b
  7983     1351                     l2616:
  7984     1351  0855               	movf	___fladd@a+3,w
  7985     1352  3980               	andlw	128
  7986     1353  00DF               	movwf	___fladd@aexp
  7987     1354                     l2618:
  7988     1354  085F               	movf	___fladd@aexp,w
  7989     1355  065E               	xorwf	___fladd@signs,w
  7990     1356  1903               	skipnz
  7991     1357  2B59               	goto	u3241
  7992     1358  2B5A               	goto	u3240
  7993     1359                     u3241:
  7994     1359  2B5B               	goto	l2622
  7995     135A                     u3240:
  7996     135A                     l2620:
  7997     135A  175E               	bsf	___fladd@signs,6
  7998     135B                     l2622:
  7999     135B  0855               	movf	___fladd@a+3,w
  8000     135C  00D6               	movwf	??___fladd
  8001     135D  0756               	addwf	??___fladd,w
  8002     135E  00DF               	movwf	___fladd@aexp
  8003     135F                     l2624:
  8004     135F  1FD4               	btfss	___fladd@a+2,7
  8005     1360  2B62               	goto	u3251
  8006     1361  2B63               	goto	u3250
  8007     1362                     u3251:
  8008     1362  2B64               	goto	l2628
  8009     1363                     u3250:
  8010     1363                     l2626:
  8011     1363  145F               	bsf	___fladd@aexp,0
  8012     1364                     l2628:
  8013     1364  085F               	movf	___fladd@aexp,w
  8014     1365  1903               	btfsc	3,2
  8015     1366  2B68               	goto	u3261
  8016     1367  2B69               	goto	u3260
  8017     1368                     u3261:
  8018     1368  2B79               	goto	l2638
  8019     1369                     u3260:
  8020     1369                     l2630:
  8021     1369  0A5F               	incf	___fladd@aexp,w
  8022     136A  1D03               	btfss	3,2
  8023     136B  2B6D               	goto	u3271
  8024     136C  2B6E               	goto	u3270
  8025     136D                     u3271:
  8026     136D  2B76               	goto	l2634
  8027     136E                     u3270:
  8028     136E                     l2632:
  8029     136E  3000               	movlw	0
  8030     136F  00D5               	movwf	___fladd@a+3
  8031     1370  3000               	movlw	0
  8032     1371  00D4               	movwf	___fladd@a+2
  8033     1372  3000               	movlw	0
  8034     1373  00D3               	movwf	___fladd@a+1
  8035     1374  3000               	movlw	0
  8036     1375  00D2               	movwf	___fladd@a
  8037     1376                     l2634:
  8038     1376  17D4               	bsf	___fladd@a+2,7
  8039     1377                     l2636:
  8040     1377  01D5               	clrf	___fladd@a+3
  8041     1378  2B81               	goto	l730
  8042     1379                     l2638:
  8043     1379  3000               	movlw	0
  8044     137A  00D5               	movwf	___fladd@a+3
  8045     137B  3000               	movlw	0
  8046     137C  00D4               	movwf	___fladd@a+2
  8047     137D  3000               	movlw	0
  8048     137E  00D3               	movwf	___fladd@a+1
  8049     137F  3000               	movlw	0
  8050     1380  00D2               	movwf	___fladd@a
  8051     1381                     l730:
  8052     1381  0860               	movf	___fladd@bexp,w
  8053     1382  025F               	subwf	___fladd@aexp,w
  8054     1383  1803               	skipnc
  8055     1384  2B86               	goto	u3281
  8056     1385  2B87               	goto	u3280
  8057     1386                     u3281:
  8058     1386  2BAD               	goto	l2674
  8059     1387                     u3280:
  8060     1387                     l2640:
  8061     1387  1F5E               	btfss	___fladd@signs,6
  8062     1388  2B8A               	goto	u3291
  8063     1389  2B8B               	goto	u3290
  8064     138A                     u3291:
  8065     138A  2B8F               	goto	l2644
  8066     138B                     u3290:
  8067     138B                     l2642:
  8068     138B  3080               	movlw	128
  8069     138C  00FF               	movwf	btemp+1
  8070     138D  087F               	movf	btemp+1,w
  8071     138E  06DE               	xorwf	___fladd@signs,f
  8072     138F                     l2644:
  8073     138F  0860               	movf	___fladd@bexp,w
  8074     1390  00E1               	movwf	___fladd@grs
  8075     1391                     l2646:
  8076     1391  085F               	movf	___fladd@aexp,w
  8077     1392  00E0               	movwf	___fladd@bexp
  8078     1393                     l2648:
  8079     1393  0861               	movf	___fladd@grs,w
  8080     1394  00DF               	movwf	___fladd@aexp
  8081     1395                     l2650:
  8082     1395  084E               	movf	___fladd@b,w
  8083     1396  00E1               	movwf	___fladd@grs
  8084     1397                     l2652:
  8085     1397  0852               	movf	___fladd@a,w
  8086     1398  00CE               	movwf	___fladd@b
  8087     1399                     l2654:
  8088     1399  0861               	movf	___fladd@grs,w
  8089     139A  00D2               	movwf	___fladd@a
  8090     139B                     l2656:
  8091     139B  084F               	movf	___fladd@b+1,w
  8092     139C  00E1               	movwf	___fladd@grs
  8093     139D                     l2658:
  8094     139D  0853               	movf	___fladd@a+1,w
  8095     139E  00CF               	movwf	___fladd@b+1
  8096     139F                     l2660:
  8097     139F  0861               	movf	___fladd@grs,w
  8098     13A0  00D3               	movwf	___fladd@a+1
  8099     13A1                     l2662:
  8100     13A1  0850               	movf	___fladd@b+2,w
  8101     13A2  00E1               	movwf	___fladd@grs
  8102     13A3                     l2664:
  8103     13A3  0854               	movf	___fladd@a+2,w
  8104     13A4  00D0               	movwf	___fladd@b+2
  8105     13A5                     l2666:
  8106     13A5  0861               	movf	___fladd@grs,w
  8107     13A6  00D4               	movwf	___fladd@a+2
  8108     13A7                     l2668:
  8109     13A7  0851               	movf	___fladd@b+3,w
  8110     13A8  00E1               	movwf	___fladd@grs
  8111     13A9                     l2670:
  8112     13A9  0855               	movf	___fladd@a+3,w
  8113     13AA  00D1               	movwf	___fladd@b+3
  8114     13AB                     l2672:
  8115     13AB  0861               	movf	___fladd@grs,w
  8116     13AC  00D5               	movwf	___fladd@a+3
  8117     13AD                     l2674:
  8118     13AD  01E1               	clrf	___fladd@grs
  8119     13AE                     l2676:
  8120     13AE  085F               	movf	___fladd@aexp,w
  8121     13AF  00D6               	movwf	??___fladd
  8122     13B0  01D7               	clrf	??___fladd+1
  8123     13B1  0857               	movf	??___fladd+1,w
  8124     13B2  00D9               	movwf	??___fladd+3
  8125     13B3  0860               	movf	___fladd@bexp,w
  8126     13B4  0256               	subwf	??___fladd,w
  8127     13B5  00D8               	movwf	??___fladd+2
  8128     13B6  1C03               	skipc
  8129     13B7  03D9               	decf	??___fladd+3,f
  8130     13B8  0859               	movf	??___fladd+3,w
  8131     13B9  3A80               	xorlw	128
  8132     13BA  00FF               	movwf	btemp+1
  8133     13BB  3080               	movlw	128
  8134     13BC  027F               	subwf	btemp+1,w
  8135     13BD  1D03               	skipz
  8136     13BE  2BC1               	goto	u3305
  8137     13BF  301A               	movlw	26
  8138     13C0  0258               	subwf	??___fladd+2,w
  8139     13C1                     u3305:
  8140     13C1  1C03               	skipc
  8141     13C2  2BC4               	goto	u3301
  8142     13C3  2BC5               	goto	u3300
  8143     13C4                     u3301:
  8144     13C4  2BFC               	goto	l2692
  8145     13C5                     u3300:
  8146     13C5                     l2678:
  8147     13C5  1283               	bcf	3,5	;RP0=0, select bank0
  8148     13C6  1303               	bcf	3,6	;RP1=0, select bank0
  8149     13C7  0851               	movf	___fladd@b+3,w
  8150     13C8  0450               	iorwf	___fladd@b+2,w
  8151     13C9  044F               	iorwf	___fladd@b+1,w
  8152     13CA  044E               	iorwf	___fladd@b,w
  8153     13CB  1D03               	skipz
  8154     13CC  2BCE               	goto	u3311
  8155     13CD  2BD0               	goto	u3310
  8156     13CE                     u3311:
  8157     13CE  3001               	movlw	1
  8158     13CF  2BD1               	goto	u3320
  8159     13D0                     u3310:
  8160     13D0  3000               	movlw	0
  8161     13D1                     u3320:
  8162     13D1  00E1               	movwf	___fladd@grs
  8163     13D2  3000               	movlw	0
  8164     13D3  00D1               	movwf	___fladd@b+3
  8165     13D4  3000               	movlw	0
  8166     13D5  00D0               	movwf	___fladd@b+2
  8167     13D6  3000               	movlw	0
  8168     13D7  00CF               	movwf	___fladd@b+1
  8169     13D8  3000               	movlw	0
  8170     13D9  00CE               	movwf	___fladd@b
  8171     13DA  085F               	movf	___fladd@aexp,w
  8172     13DB  00E0               	movwf	___fladd@bexp
  8173     13DC  2C04               	goto	l734
  8174     13DD                     l736:
  8175     13DD  1C61               	btfss	___fladd@grs,0
  8176     13DE  2BE0               	goto	u3331
  8177     13DF  2BE1               	goto	u3330
  8178     13E0                     u3331:
  8179     13E0  2BE8               	goto	l2682
  8180     13E1                     u3330:
  8181     13E1                     l2680:
  8182     13E1  0861               	movf	___fladd@grs,w
  8183     13E2  00D6               	movwf	??___fladd
  8184     13E3  1003               	clrc
  8185     13E4  0C56               	rrf	??___fladd,w
  8186     13E5  3801               	iorlw	1
  8187     13E6  00E1               	movwf	___fladd@grs
  8188     13E7  2BEA               	goto	l2684
  8189     13E8                     l2682:
  8190     13E8  1003               	clrc
  8191     13E9  0CE1               	rrf	___fladd@grs,f
  8192     13EA                     l2684:
  8193     13EA  1C4E               	btfss	___fladd@b,0
  8194     13EB  2BED               	goto	u3341
  8195     13EC  2BEE               	goto	u3340
  8196     13ED                     u3341:
  8197     13ED  2BEF               	goto	l2688
  8198     13EE                     u3340:
  8199     13EE                     l2686:
  8200     13EE  17E1               	bsf	___fladd@grs,7
  8201     13EF                     l2688:
  8202     13EF  3001               	movlw	1
  8203     13F0  00D6               	movwf	??___fladd
  8204     13F1                     u3355:
  8205     13F1  0D51               	rlf	___fladd@b+3,w
  8206     13F2  0CD1               	rrf	___fladd@b+3,f
  8207     13F3  0CD0               	rrf	___fladd@b+2,f
  8208     13F4  0CCF               	rrf	___fladd@b+1,f
  8209     13F5  0CCE               	rrf	___fladd@b,f
  8210     13F6  0BD6               	decfsz	??___fladd& (0+127),f
  8211     13F7  2BF1               	goto	u3355
  8212     13F8                     l2690:
  8213     13F8  3001               	movlw	1
  8214     13F9  00FF               	movwf	btemp+1
  8215     13FA  087F               	movf	btemp+1,w
  8216     13FB  07E0               	addwf	___fladd@bexp,f
  8217     13FC                     l2692:
  8218     13FC  1283               	bcf	3,5	;RP0=0, select bank0
  8219     13FD  1303               	bcf	3,6	;RP1=0, select bank0
  8220     13FE  085F               	movf	___fladd@aexp,w
  8221     13FF  0260               	subwf	___fladd@bexp,w
  8222     1400  1C03               	skipc
  8223     1401  2C03               	goto	u3361
  8224     1402  2C04               	goto	u3360
  8225     1403                     u3361:
  8226     1403  2BDD               	goto	l736
  8227     1404                     u3360:
  8228     1404                     l734:
  8229     1404  1B5E               	btfsc	___fladd@signs,6
  8230     1405  2C07               	goto	u3371
  8231     1406  2C08               	goto	u3370
  8232     1407                     u3371:
  8233     1407  2C51               	goto	l2718
  8234     1408                     u3370:
  8235     1408                     l2694:
  8236     1408  0860               	movf	___fladd@bexp,w
  8237     1409  1D03               	btfss	3,2
  8238     140A  2C0C               	goto	u3381
  8239     140B  2C0D               	goto	u3380
  8240     140C                     u3381:
  8241     140C  2C16               	goto	l2700
  8242     140D                     u3380:
  8243     140D                     l2696:
  8244     140D  3000               	movlw	0
  8245     140E  00D1               	movwf	?___fladd+3
  8246     140F  3000               	movlw	0
  8247     1410  00D0               	movwf	?___fladd+2
  8248     1411  3000               	movlw	0
  8249     1412  00CF               	movwf	?___fladd+1
  8250     1413  3000               	movlw	0
  8251     1414  00CE               	movwf	?___fladd
  8252     1415  2D7D               	goto	l743
  8253     1416                     l2700:
  8254     1416  0852               	movf	___fladd@a,w
  8255     1417  07CE               	addwf	___fladd@b,f
  8256     1418  0853               	movf	___fladd@a+1,w
  8257     1419  1103               	clrz
  8258     141A  1803               	skipnc
  8259     141B  3E01               	addlw	1
  8260     141C  1903               	skipnz
  8261     141D  2C1F               	goto	u3391
  8262     141E  07CF               	addwf	___fladd@b+1,f
  8263     141F                     u3391:
  8264     141F  0854               	movf	___fladd@a+2,w
  8265     1420  1103               	clrz
  8266     1421  1803               	skipnc
  8267     1422  3E01               	addlw	1
  8268     1423  1903               	skipnz
  8269     1424  2C26               	goto	u3392
  8270     1425  07D0               	addwf	___fladd@b+2,f
  8271     1426                     u3392:
  8272     1426  0855               	movf	___fladd@a+3,w
  8273     1427  1103               	clrz
  8274     1428  1803               	skipnc
  8275     1429  3E01               	addlw	1
  8276     142A  1903               	skipnz
  8277     142B  2C2D               	goto	u3393
  8278     142C  07D1               	addwf	___fladd@b+3,f
  8279     142D                     u3393:
  8280     142D                     l2702:
  8281     142D  1C51               	btfss	___fladd@b+3,0
  8282     142E  2C30               	goto	u3401
  8283     142F  2C31               	goto	u3400
  8284     1430                     u3401:
  8285     1430  2D05               	goto	l2754
  8286     1431                     u3400:
  8287     1431                     l2704:
  8288     1431  1C61               	btfss	___fladd@grs,0
  8289     1432  2C34               	goto	u3411
  8290     1433  2C35               	goto	u3410
  8291     1434                     u3411:
  8292     1434  2C3C               	goto	l2708
  8293     1435                     u3410:
  8294     1435                     l2706:
  8295     1435  0861               	movf	___fladd@grs,w
  8296     1436  00D6               	movwf	??___fladd
  8297     1437  1003               	clrc
  8298     1438  0C56               	rrf	??___fladd,w
  8299     1439  3801               	iorlw	1
  8300     143A  00E1               	movwf	___fladd@grs
  8301     143B  2C3E               	goto	l2710
  8302     143C                     l2708:
  8303     143C  1003               	clrc
  8304     143D  0CE1               	rrf	___fladd@grs,f
  8305     143E                     l2710:
  8306     143E  1C4E               	btfss	___fladd@b,0
  8307     143F  2C41               	goto	u3421
  8308     1440  2C42               	goto	u3420
  8309     1441                     u3421:
  8310     1441  2C43               	goto	l2714
  8311     1442                     u3420:
  8312     1442                     l2712:
  8313     1442  17E1               	bsf	___fladd@grs,7
  8314     1443                     l2714:
  8315     1443  3001               	movlw	1
  8316     1444  00D6               	movwf	??___fladd
  8317     1445                     u3435:
  8318     1445  0D51               	rlf	___fladd@b+3,w
  8319     1446  0CD1               	rrf	___fladd@b+3,f
  8320     1447  0CD0               	rrf	___fladd@b+2,f
  8321     1448  0CCF               	rrf	___fladd@b+1,f
  8322     1449  0CCE               	rrf	___fladd@b,f
  8323     144A  0BD6               	decfsz	??___fladd& (0+127),f
  8324     144B  2C45               	goto	u3435
  8325     144C                     l2716:
  8326     144C  3001               	movlw	1
  8327     144D  00FF               	movwf	btemp+1
  8328     144E  087F               	movf	btemp+1,w
  8329     144F  07E0               	addwf	___fladd@bexp,f
  8330     1450  2D05               	goto	l2754
  8331     1451                     l2718:
  8332     1451  0851               	movf	___fladd@b+3,w
  8333     1452  3A80               	xorlw	128
  8334     1453  00FF               	movwf	btemp+1
  8335     1454  0855               	movf	___fladd@a+3,w
  8336     1455  3A80               	xorlw	128
  8337     1456  027F               	subwf	btemp+1,w
  8338     1457  1D03               	skipz
  8339     1458  2C63               	goto	u3443
  8340     1459  0854               	movf	___fladd@a+2,w
  8341     145A  0250               	subwf	___fladd@b+2,w
  8342     145B  1D03               	skipz
  8343     145C  2C63               	goto	u3443
  8344     145D  0853               	movf	___fladd@a+1,w
  8345     145E  024F               	subwf	___fladd@b+1,w
  8346     145F  1D03               	skipz
  8347     1460  2C63               	goto	u3443
  8348     1461  0852               	movf	___fladd@a,w
  8349     1462  024E               	subwf	___fladd@b,w
  8350     1463                     u3443:
  8351     1463  1803               	skipnc
  8352     1464  2C66               	goto	u3441
  8353     1465  2C67               	goto	u3440
  8354     1466                     u3441:
  8355     1466  2CBF               	goto	l2730
  8356     1467                     u3440:
  8357     1467                     l2720:
  8358     1467  30FF               	movlw	255
  8359     1468  00D6               	movwf	??___fladd
  8360     1469  30FF               	movlw	255
  8361     146A  00D7               	movwf	??___fladd+1
  8362     146B  30FF               	movlw	255
  8363     146C  00D8               	movwf	??___fladd+2
  8364     146D  30FF               	movlw	255
  8365     146E  00D9               	movwf	??___fladd+3
  8366     146F  0852               	movf	___fladd@a,w
  8367     1470  00DA               	movwf	??___fladd+4
  8368     1471  0853               	movf	___fladd@a+1,w
  8369     1472  00DB               	movwf	??___fladd+5
  8370     1473  0854               	movf	___fladd@a+2,w
  8371     1474  00DC               	movwf	??___fladd+6
  8372     1475  0855               	movf	___fladd@a+3,w
  8373     1476  00DD               	movwf	??___fladd+7
  8374     1477  084E               	movf	___fladd@b,w
  8375     1478  02DA               	subwf	??___fladd+4,f
  8376     1479  084F               	movf	___fladd@b+1,w
  8377     147A  1C03               	skipc
  8378     147B  0F4F               	incfsz	___fladd@b+1,w
  8379     147C  2C7E               	goto	u3451
  8380     147D  2C7F               	goto	u3452
  8381     147E                     u3451:
  8382     147E  02DB               	subwf	??___fladd+5,f
  8383     147F                     u3452:
  8384     147F  0850               	movf	___fladd@b+2,w
  8385     1480  1C03               	skipc
  8386     1481  0F50               	incfsz	___fladd@b+2,w
  8387     1482  2C84               	goto	u3453
  8388     1483  2C85               	goto	u3454
  8389     1484                     u3453:
  8390     1484  02DC               	subwf	??___fladd+6,f
  8391     1485                     u3454:
  8392     1485  0851               	movf	___fladd@b+3,w
  8393     1486  1C03               	skipc
  8394     1487  0F51               	incfsz	___fladd@b+3,w
  8395     1488  2C8A               	goto	u3455
  8396     1489  2C8B               	goto	u3456
  8397     148A                     u3455:
  8398     148A  02DD               	subwf	??___fladd+7,f
  8399     148B                     u3456:
  8400     148B  085A               	movf	??___fladd+4,w
  8401     148C  07D6               	addwf	??___fladd,f
  8402     148D  085B               	movf	??___fladd+5,w
  8403     148E  1803               	skipnc
  8404     148F  0F5B               	incfsz	??___fladd+5,w
  8405     1490  2C92               	goto	u3460
  8406     1491  2C93               	goto	u3461
  8407     1492                     u3460:
  8408     1492  07D7               	addwf	??___fladd+1,f
  8409     1493                     u3461:
  8410     1493  085C               	movf	??___fladd+6,w
  8411     1494  1803               	skipnc
  8412     1495  0F5C               	incfsz	??___fladd+6,w
  8413     1496  2C98               	goto	u3462
  8414     1497  2C99               	goto	u3463
  8415     1498                     u3462:
  8416     1498  07D8               	addwf	??___fladd+2,f
  8417     1499                     u3463:
  8418     1499  085D               	movf	??___fladd+7,w
  8419     149A  1803               	skipnc
  8420     149B  0A5D               	incf	??___fladd+7,w
  8421     149C  07D9               	addwf	??___fladd+3,f
  8422     149D  0859               	movf	??___fladd+3,w
  8423     149E  00D1               	movwf	___fladd@b+3
  8424     149F  0858               	movf	??___fladd+2,w
  8425     14A0  00D0               	movwf	___fladd@b+2
  8426     14A1  0857               	movf	??___fladd+1,w
  8427     14A2  00CF               	movwf	___fladd@b+1
  8428     14A3  0856               	movf	??___fladd,w
  8429     14A4  00CE               	movwf	___fladd@b
  8430     14A5                     l2722:
  8431     14A5  3080               	movlw	128
  8432     14A6  00FF               	movwf	btemp+1
  8433     14A7  087F               	movf	btemp+1,w
  8434     14A8  06DE               	xorwf	___fladd@signs,f
  8435     14A9                     l2724:
  8436     14A9  09E1               	comf	___fladd@grs,f
  8437     14AA  0AE1               	incf	___fladd@grs,f
  8438     14AB                     l2726:
  8439     14AB  0861               	movf	___fladd@grs,w
  8440     14AC  1D03               	btfss	3,2
  8441     14AD  2CAF               	goto	u3471
  8442     14AE  2CB0               	goto	u3470
  8443     14AF                     u3471:
  8444     14AF  2CCD               	goto	l751
  8445     14B0                     u3470:
  8446     14B0                     l2728:
  8447     14B0  3001               	movlw	1
  8448     14B1  07CE               	addwf	___fladd@b,f
  8449     14B2  3000               	movlw	0
  8450     14B3  1803               	skipnc
  8451     14B4  3001               	movlw	1
  8452     14B5  07CF               	addwf	___fladd@b+1,f
  8453     14B6  3000               	movlw	0
  8454     14B7  1803               	skipnc
  8455     14B8  3001               	movlw	1
  8456     14B9  07D0               	addwf	___fladd@b+2,f
  8457     14BA  3000               	movlw	0
  8458     14BB  1803               	skipnc
  8459     14BC  3001               	movlw	1
  8460     14BD  07D1               	addwf	___fladd@b+3,f
  8461     14BE  2CCD               	goto	l751
  8462     14BF                     l2730:
  8463     14BF  0852               	movf	___fladd@a,w
  8464     14C0  02CE               	subwf	___fladd@b,f
  8465     14C1  0853               	movf	___fladd@a+1,w
  8466     14C2  1C03               	skipc
  8467     14C3  0F53               	incfsz	___fladd@a+1,w
  8468     14C4  02CF               	subwf	___fladd@b+1,f
  8469     14C5  0854               	movf	___fladd@a+2,w
  8470     14C6  1C03               	skipc
  8471     14C7  0F54               	incfsz	___fladd@a+2,w
  8472     14C8  02D0               	subwf	___fladd@b+2,f
  8473     14C9  0855               	movf	___fladd@a+3,w
  8474     14CA  1C03               	skipc
  8475     14CB  0F55               	incfsz	___fladd@a+3,w
  8476     14CC  02D1               	subwf	___fladd@b+3,f
  8477     14CD                     l751:
  8478     14CD  0851               	movf	___fladd@b+3,w
  8479     14CE  0450               	iorwf	___fladd@b+2,w
  8480     14CF  044F               	iorwf	___fladd@b+1,w
  8481     14D0  044E               	iorwf	___fladd@b,w
  8482     14D1  1D03               	skipz
  8483     14D2  2CD4               	goto	u3481
  8484     14D3  2CD5               	goto	u3480
  8485     14D4                     u3481:
  8486     14D4  2D01               	goto	l2752
  8487     14D5                     u3480:
  8488     14D5                     l2732:
  8489     14D5  0861               	movf	___fladd@grs,w
  8490     14D6  1D03               	btfss	3,2
  8491     14D7  2CD9               	goto	u3491
  8492     14D8  2CDA               	goto	u3490
  8493     14D9                     u3491:
  8494     14D9  2D01               	goto	l2752
  8495     14DA                     u3490:
  8496     14DA                     l2734:
  8497     14DA  3000               	movlw	0
  8498     14DB  00D1               	movwf	?___fladd+3
  8499     14DC  3000               	movlw	0
  8500     14DD  00D0               	movwf	?___fladd+2
  8501     14DE  3000               	movlw	0
  8502     14DF  00CF               	movwf	?___fladd+1
  8503     14E0  3000               	movlw	0
  8504     14E1  00CE               	movwf	?___fladd
  8505     14E2  2D7D               	goto	l743
  8506     14E3                     l2738:
  8507     14E3  3001               	movlw	1
  8508     14E4  00D6               	movwf	??___fladd
  8509     14E5                     u3505:
  8510     14E5  1003               	clrc
  8511     14E6  0DCE               	rlf	___fladd@b,f
  8512     14E7  0DCF               	rlf	___fladd@b+1,f
  8513     14E8  0DD0               	rlf	___fladd@b+2,f
  8514     14E9  0DD1               	rlf	___fladd@b+3,f
  8515     14EA  0BD6               	decfsz	??___fladd,f
  8516     14EB  2CE5               	goto	u3505
  8517     14EC                     l2740:
  8518     14EC  1FE1               	btfss	___fladd@grs,7
  8519     14ED  2CEF               	goto	u3511
  8520     14EE  2CF0               	goto	u3510
  8521     14EF                     u3511:
  8522     14EF  2CF1               	goto	l755
  8523     14F0                     u3510:
  8524     14F0                     l2742:
  8525     14F0  144E               	bsf	___fladd@b,0
  8526     14F1                     l755:
  8527     14F1  1C61               	btfss	___fladd@grs,0
  8528     14F2  2CF4               	goto	u3521
  8529     14F3  2CF5               	goto	u3520
  8530     14F4                     u3521:
  8531     14F4  2CF8               	goto	l2746
  8532     14F5                     u3520:
  8533     14F5                     l2744:
  8534     14F5  1403               	setc
  8535     14F6  0DE1               	rlf	___fladd@grs,f
  8536     14F7  2CFA               	goto	l2748
  8537     14F8                     l2746:
  8538     14F8  1003               	clrc
  8539     14F9  0DE1               	rlf	___fladd@grs,f
  8540     14FA                     l2748:
  8541     14FA  0860               	movf	___fladd@bexp,w
  8542     14FB  1903               	btfsc	3,2
  8543     14FC  2CFE               	goto	u3531
  8544     14FD  2CFF               	goto	u3530
  8545     14FE                     u3531:
  8546     14FE  2D01               	goto	l2752
  8547     14FF                     u3530:
  8548     14FF                     l2750:
  8549     14FF  3001               	movlw	1
  8550     1500  02E0               	subwf	___fladd@bexp,f
  8551     1501                     l2752:
  8552     1501  1FD0               	btfss	___fladd@b+2,7
  8553     1502  2D04               	goto	u3541
  8554     1503  2D05               	goto	u3540
  8555     1504                     u3541:
  8556     1504  2CE3               	goto	l2738
  8557     1505                     u3540:
  8558     1505                     l2754:
  8559     1505  01DF               	clrf	___fladd@aexp
  8560     1506                     l2756:
  8561     1506  1FE1               	btfss	___fladd@grs,7
  8562     1507  2D09               	goto	u3551
  8563     1508  2D0A               	goto	u3550
  8564     1509                     u3551:
  8565     1509  2D18               	goto	l2764
  8566     150A                     u3550:
  8567     150A                     l2758:
  8568     150A  0861               	movf	___fladd@grs,w
  8569     150B  397F               	andlw	127
  8570     150C  1903               	btfsc	3,2
  8571     150D  2D0F               	goto	u3561
  8572     150E  2D10               	goto	u3560
  8573     150F                     u3561:
  8574     150F  2D13               	goto	l761
  8575     1510                     u3560:
  8576     1510                     l2760:
  8577     1510  01DF               	clrf	___fladd@aexp
  8578     1511  0ADF               	incf	___fladd@aexp,f
  8579     1512  2D18               	goto	l2764
  8580     1513                     l761:
  8581     1513  1C4E               	btfss	___fladd@b,0
  8582     1514  2D16               	goto	u3571
  8583     1515  2D17               	goto	u3570
  8584     1516                     u3571:
  8585     1516  2D18               	goto	l2764
  8586     1517                     u3570:
  8587     1517  2D10               	goto	l2760
  8588     1518                     l2764:
  8589     1518  085F               	movf	___fladd@aexp,w
  8590     1519  1903               	btfsc	3,2
  8591     151A  2D1C               	goto	u3581
  8592     151B  2D1D               	goto	u3580
  8593     151C                     u3581:
  8594     151C  2D51               	goto	l2774
  8595     151D                     u3580:
  8596     151D                     l2766:
  8597     151D  3001               	movlw	1
  8598     151E  07CE               	addwf	___fladd@b,f
  8599     151F  3000               	movlw	0
  8600     1520  1803               	skipnc
  8601     1521  3001               	movlw	1
  8602     1522  07CF               	addwf	___fladd@b+1,f
  8603     1523  3000               	movlw	0
  8604     1524  1803               	skipnc
  8605     1525  3001               	movlw	1
  8606     1526  07D0               	addwf	___fladd@b+2,f
  8607     1527  3000               	movlw	0
  8608     1528  1803               	skipnc
  8609     1529  3001               	movlw	1
  8610     152A  07D1               	addwf	___fladd@b+3,f
  8611     152B                     l2768:
  8612     152B  1C51               	btfss	___fladd@b+3,0
  8613     152C  2D2E               	goto	u3591
  8614     152D  2D2F               	goto	u3590
  8615     152E                     u3591:
  8616     152E  2D51               	goto	l2774
  8617     152F                     u3590:
  8618     152F                     l2770:
  8619     152F  084E               	movf	___fladd@b,w
  8620     1530  00D6               	movwf	??___fladd
  8621     1531  084F               	movf	___fladd@b+1,w
  8622     1532  00D7               	movwf	??___fladd+1
  8623     1533  0850               	movf	___fladd@b+2,w
  8624     1534  00D8               	movwf	??___fladd+2
  8625     1535  0851               	movf	___fladd@b+3,w
  8626     1536  00D9               	movwf	??___fladd+3
  8627     1537  3001               	movlw	1
  8628     1538  00DA               	movwf	??___fladd+4
  8629     1539                     u3605:
  8630     1539  0D59               	rlf	??___fladd+3,w
  8631     153A  0CD9               	rrf	??___fladd+3,f
  8632     153B  0CD8               	rrf	??___fladd+2,f
  8633     153C  0CD7               	rrf	??___fladd+1,f
  8634     153D  0CD6               	rrf	??___fladd,f
  8635     153E                     u3600:
  8636     153E  0BDA               	decfsz	??___fladd+4,f
  8637     153F  2D39               	goto	u3605
  8638     1540  0859               	movf	??___fladd+3,w
  8639     1541  00D1               	movwf	___fladd@b+3
  8640     1542  0858               	movf	??___fladd+2,w
  8641     1543  00D0               	movwf	___fladd@b+2
  8642     1544  0857               	movf	??___fladd+1,w
  8643     1545  00CF               	movwf	___fladd@b+1
  8644     1546  0856               	movf	??___fladd,w
  8645     1547  00CE               	movwf	___fladd@b
  8646     1548  0A60               	incf	___fladd@bexp,w
  8647     1549  1903               	btfsc	3,2
  8648     154A  2D4C               	goto	u3611
  8649     154B  2D4D               	goto	u3610
  8650     154C                     u3611:
  8651     154C  2D51               	goto	l2774
  8652     154D                     u3610:
  8653     154D                     l2772:
  8654     154D  3001               	movlw	1
  8655     154E  00FF               	movwf	btemp+1
  8656     154F  087F               	movf	btemp+1,w
  8657     1550  07E0               	addwf	___fladd@bexp,f
  8658     1551                     l2774:
  8659     1551  0A60               	incf	___fladd@bexp,w
  8660     1552  1903               	btfsc	3,2
  8661     1553  2D55               	goto	u3621
  8662     1554  2D56               	goto	u3620
  8663     1555                     u3621:
  8664     1555  2D5B               	goto	l2778
  8665     1556                     u3620:
  8666     1556                     l2776:
  8667     1556  0860               	movf	___fladd@bexp,w
  8668     1557  1D03               	btfss	3,2
  8669     1558  2D5A               	goto	u3631
  8670     1559  2D5B               	goto	u3630
  8671     155A                     u3631:
  8672     155A  2D69               	goto	l2784
  8673     155B                     u3630:
  8674     155B                     l2778:
  8675     155B  3000               	movlw	0
  8676     155C  00D1               	movwf	___fladd@b+3
  8677     155D  3000               	movlw	0
  8678     155E  00D0               	movwf	___fladd@b+2
  8679     155F  3000               	movlw	0
  8680     1560  00CF               	movwf	___fladd@b+1
  8681     1561  3000               	movlw	0
  8682     1562  00CE               	movwf	___fladd@b
  8683     1563                     l2780:
  8684     1563  0860               	movf	___fladd@bexp,w
  8685     1564  1D03               	btfss	3,2
  8686     1565  2D67               	goto	u3641
  8687     1566  2D68               	goto	u3640
  8688     1567                     u3641:
  8689     1567  2D69               	goto	l2784
  8690     1568                     u3640:
  8691     1568                     l2782:
  8692     1568  01DE               	clrf	___fladd@signs
  8693     1569                     l2784:
  8694     1569  1C60               	btfss	___fladd@bexp,0
  8695     156A  2D6C               	goto	u3651
  8696     156B  2D6D               	goto	u3650
  8697     156C                     u3651:
  8698     156C  2D6F               	goto	l2788
  8699     156D                     u3650:
  8700     156D                     l2786:
  8701     156D  17D0               	bsf	___fladd@b+2,7
  8702     156E  2D73               	goto	l2790
  8703     156F                     l2788:
  8704     156F  307F               	movlw	127
  8705     1570  00FF               	movwf	btemp+1
  8706     1571  087F               	movf	btemp+1,w
  8707     1572  05D0               	andwf	___fladd@b+2,f
  8708     1573                     l2790:
  8709     1573  0860               	movf	___fladd@bexp,w
  8710     1574  00D6               	movwf	??___fladd
  8711     1575  1003               	clrc
  8712     1576  0C56               	rrf	??___fladd,w
  8713     1577  00D1               	movwf	___fladd@b+3
  8714     1578                     l2792:
  8715     1578  1FDE               	btfss	___fladd@signs,7
  8716     1579  2D7B               	goto	u3661
  8717     157A  2D7C               	goto	u3660
  8718     157B                     u3661:
  8719     157B  2D7D               	goto	l773
  8720     157C                     u3660:
  8721     157C                     l2794:
  8722     157C  17D1               	bsf	___fladd@b+3,7
  8723     157D                     l773:
  8724     157D                     l743:
  8725     157D  0008               	return
  8726     157E                     __end_of___fladd:
  8727                           
  8728                           	psect	text17
  8729     1A29                     __ptext17:	
  8730 ;; *************** function ___flneg *****************
  8731 ;; Defined at:
  8732 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\flneg.c"
  8733 ;; Parameters:    Size  Location     Type
  8734 ;;  f1              4    0[COMMON] unsigned char 
  8735 ;; Auto vars:     Size  Location     Type
  8736 ;;		None
  8737 ;; Return value:  Size  Location     Type
  8738 ;;                  4    0[COMMON] unsigned char 
  8739 ;; Registers used:
  8740 ;;		wreg
  8741 ;; Tracked objects:
  8742 ;;		On entry : 0/0
  8743 ;;		On exit  : 0/0
  8744 ;;		Unchanged: 0/0
  8745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8746 ;;      Params:         4       0       0       0       0
  8747 ;;      Locals:         0       0       0       0       0
  8748 ;;      Temps:          0       0       0       0       0
  8749 ;;      Totals:         4       0       0       0       0
  8750 ;;Total ram usage:        4 bytes
  8751 ;; Hardware stack levels used: 1
  8752 ;; This function calls:
  8753 ;;		Nothing
  8754 ;; This function is called by:
  8755 ;;		_sprintf
  8756 ;; This function uses a non-reentrant model
  8757 ;;
  8758                           
  8759     1A29                     ___flneg:	
  8760                           ;psect for function ___flneg
  8761                           
  8762     1A29                     l3228:	
  8763                           ;incstack = 0
  8764                           ; Regs used in ___flneg: [wreg]
  8765                           
  8766     1A29  0873               	movf	___flneg@f1+3,w
  8767     1A2A  0472               	iorwf	___flneg@f1+2,w
  8768     1A2B  0471               	iorwf	___flneg@f1+1,w
  8769     1A2C  0470               	iorwf	___flneg@f1,w
  8770     1A2D  1903               	skipnz
  8771     1A2E  2A30               	goto	u4721
  8772     1A2F  2A31               	goto	u4720
  8773     1A30                     u4721:
  8774     1A30  2A33               	goto	l3232
  8775     1A31                     u4720:
  8776     1A31                     l3230:
  8777     1A31  3080               	movlw	128
  8778     1A32  06F3               	xorwf	___flneg@f1+3,f
  8779     1A33                     l3232:
  8780     1A33                     l602:
  8781     1A33  0008               	return
  8782     1A34                     __end_of___flneg:
  8783                           
  8784                           	psect	text18
  8785     0004                     __ptext18:	
  8786 ;; *************** function ___flge *****************
  8787 ;; Defined at:
  8788 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\flge.c"
  8789 ;; Parameters:    Size  Location     Type
  8790 ;;  ff1             4    0[COMMON] unsigned char 
  8791 ;;  ff2             4    4[COMMON] unsigned char 
  8792 ;; Auto vars:     Size  Location     Type
  8793 ;;		None
  8794 ;; Return value:  Size  Location     Type
  8795 ;;		None               void
  8796 ;; Registers used:
  8797 ;;		wreg, status,2, status,0
  8798 ;; Tracked objects:
  8799 ;;		On entry : 0/0
  8800 ;;		On exit  : 0/0
  8801 ;;		Unchanged: 0/0
  8802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8803 ;;      Params:         8       0       0       0       0
  8804 ;;      Locals:         0       0       0       0       0
  8805 ;;      Temps:          4       0       0       0       0
  8806 ;;      Totals:        12       0       0       0       0
  8807 ;;Total ram usage:       12 bytes
  8808 ;; Hardware stack levels used: 1
  8809 ;; This function calls:
  8810 ;;		Nothing
  8811 ;; This function is called by:
  8812 ;;		_sprintf
  8813 ;; This function uses a non-reentrant model
  8814 ;;
  8815                           
  8816     0004                     ___flge:	
  8817                           ;psect for function ___flge
  8818                           
  8819     0004                     l3208:	
  8820                           ;incstack = 0
  8821                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8822                           
  8823     0004  3000               	movlw	0
  8824     0005  0570               	andwf	___flge@ff1,w
  8825     0006  00F8               	movwf	??___flge
  8826     0007  3000               	movlw	0
  8827     0008  0571               	andwf	___flge@ff1+1,w
  8828     0009  00F9               	movwf	??___flge+1
  8829     000A  3080               	movlw	128
  8830     000B  0572               	andwf	___flge@ff1+2,w
  8831     000C  00FA               	movwf	??___flge+2
  8832     000D  307F               	movlw	127
  8833     000E  0573               	andwf	___flge@ff1+3,w
  8834     000F  00FB               	movwf	??___flge+3
  8835     0010  087B               	movf	??___flge+3,w
  8836     0011  047A               	iorwf	??___flge+2,w
  8837     0012  0479               	iorwf	??___flge+1,w
  8838     0013  0478               	iorwf	??___flge,w
  8839     0014  1D03               	skipz
  8840     0015  2817               	goto	u4651
  8841     0016  2818               	goto	u4650
  8842     0017                     u4651:
  8843     0017  2820               	goto	l594
  8844     0018                     u4650:
  8845     0018                     l3210:
  8846     0018  3000               	movlw	0
  8847     0019  00F3               	movwf	___flge@ff1+3
  8848     001A  3000               	movlw	0
  8849     001B  00F2               	movwf	___flge@ff1+2
  8850     001C  3000               	movlw	0
  8851     001D  00F1               	movwf	___flge@ff1+1
  8852     001E  3000               	movlw	0
  8853     001F  00F0               	movwf	___flge@ff1
  8854     0020                     l594:
  8855     0020  3000               	movlw	0
  8856     0021  0574               	andwf	___flge@ff2,w
  8857     0022  00F8               	movwf	??___flge
  8858     0023  3000               	movlw	0
  8859     0024  0575               	andwf	___flge@ff2+1,w
  8860     0025  00F9               	movwf	??___flge+1
  8861     0026  3080               	movlw	128
  8862     0027  0576               	andwf	___flge@ff2+2,w
  8863     0028  00FA               	movwf	??___flge+2
  8864     0029  307F               	movlw	127
  8865     002A  0577               	andwf	___flge@ff2+3,w
  8866     002B  00FB               	movwf	??___flge+3
  8867     002C  087B               	movf	??___flge+3,w
  8868     002D  047A               	iorwf	??___flge+2,w
  8869     002E  0479               	iorwf	??___flge+1,w
  8870     002F  0478               	iorwf	??___flge,w
  8871     0030  1D03               	skipz
  8872     0031  2833               	goto	u4661
  8873     0032  2834               	goto	u4660
  8874     0033                     u4661:
  8875     0033  283C               	goto	l3214
  8876     0034                     u4660:
  8877     0034                     l3212:
  8878     0034  3000               	movlw	0
  8879     0035  00F7               	movwf	___flge@ff2+3
  8880     0036  3000               	movlw	0
  8881     0037  00F6               	movwf	___flge@ff2+2
  8882     0038  3000               	movlw	0
  8883     0039  00F5               	movwf	___flge@ff2+1
  8884     003A  3000               	movlw	0
  8885     003B  00F4               	movwf	___flge@ff2
  8886     003C                     l3214:
  8887     003C  1FF3               	btfss	___flge@ff1+3,7
  8888     003D  283F               	goto	u4671
  8889     003E  2840               	goto	u4670
  8890     003F                     u4671:
  8891     003F  2864               	goto	l3218
  8892     0040                     u4670:
  8893     0040                     l3216:
  8894     0040  3000               	movlw	0
  8895     0041  00F8               	movwf	??___flge
  8896     0042  3000               	movlw	0
  8897     0043  00F9               	movwf	??___flge+1
  8898     0044  3000               	movlw	0
  8899     0045  00FA               	movwf	??___flge+2
  8900     0046  3080               	movlw	128
  8901     0047  00FB               	movwf	??___flge+3
  8902     0048  0870               	movf	___flge@ff1,w
  8903     0049  02F8               	subwf	??___flge,f
  8904     004A  0871               	movf	___flge@ff1+1,w
  8905     004B  1C03               	skipc
  8906     004C  0F71               	incfsz	___flge@ff1+1,w
  8907     004D  284F               	goto	u4681
  8908     004E  2850               	goto	u4682
  8909     004F                     u4681:
  8910     004F  02F9               	subwf	??___flge+1,f
  8911     0050                     u4682:
  8912     0050  0872               	movf	___flge@ff1+2,w
  8913     0051  1C03               	skipc
  8914     0052  0F72               	incfsz	___flge@ff1+2,w
  8915     0053  2855               	goto	u4683
  8916     0054  2856               	goto	u4684
  8917     0055                     u4683:
  8918     0055  02FA               	subwf	??___flge+2,f
  8919     0056                     u4684:
  8920     0056  0873               	movf	___flge@ff1+3,w
  8921     0057  1C03               	skipc
  8922     0058  0F73               	incfsz	___flge@ff1+3,w
  8923     0059  285B               	goto	u4685
  8924     005A  285C               	goto	u4686
  8925     005B                     u4685:
  8926     005B  02FB               	subwf	??___flge+3,f
  8927     005C                     u4686:
  8928     005C  087B               	movf	??___flge+3,w
  8929     005D  00F3               	movwf	___flge@ff1+3
  8930     005E  087A               	movf	??___flge+2,w
  8931     005F  00F2               	movwf	___flge@ff1+2
  8932     0060  0879               	movf	??___flge+1,w
  8933     0061  00F1               	movwf	___flge@ff1+1
  8934     0062  0878               	movf	??___flge,w
  8935     0063  00F0               	movwf	___flge@ff1
  8936     0064                     l3218:
  8937     0064  1FF7               	btfss	___flge@ff2+3,7
  8938     0065  2867               	goto	u4691
  8939     0066  2868               	goto	u4690
  8940     0067                     u4691:
  8941     0067  288C               	goto	l597
  8942     0068                     u4690:
  8943     0068                     l3220:
  8944     0068  3000               	movlw	0
  8945     0069  00F8               	movwf	??___flge
  8946     006A  3000               	movlw	0
  8947     006B  00F9               	movwf	??___flge+1
  8948     006C  3000               	movlw	0
  8949     006D  00FA               	movwf	??___flge+2
  8950     006E  3080               	movlw	128
  8951     006F  00FB               	movwf	??___flge+3
  8952     0070  0874               	movf	___flge@ff2,w
  8953     0071  02F8               	subwf	??___flge,f
  8954     0072  0875               	movf	___flge@ff2+1,w
  8955     0073  1C03               	skipc
  8956     0074  0F75               	incfsz	___flge@ff2+1,w
  8957     0075  2877               	goto	u4701
  8958     0076  2878               	goto	u4702
  8959     0077                     u4701:
  8960     0077  02F9               	subwf	??___flge+1,f
  8961     0078                     u4702:
  8962     0078  0876               	movf	___flge@ff2+2,w
  8963     0079  1C03               	skipc
  8964     007A  0F76               	incfsz	___flge@ff2+2,w
  8965     007B  287D               	goto	u4703
  8966     007C  287E               	goto	u4704
  8967     007D                     u4703:
  8968     007D  02FA               	subwf	??___flge+2,f
  8969     007E                     u4704:
  8970     007E  0877               	movf	___flge@ff2+3,w
  8971     007F  1C03               	skipc
  8972     0080  0F77               	incfsz	___flge@ff2+3,w
  8973     0081  2883               	goto	u4705
  8974     0082  2884               	goto	u4706
  8975     0083                     u4705:
  8976     0083  02FB               	subwf	??___flge+3,f
  8977     0084                     u4706:
  8978     0084  087B               	movf	??___flge+3,w
  8979     0085  00F7               	movwf	___flge@ff2+3
  8980     0086  087A               	movf	??___flge+2,w
  8981     0087  00F6               	movwf	___flge@ff2+2
  8982     0088  0879               	movf	??___flge+1,w
  8983     0089  00F5               	movwf	___flge@ff2+1
  8984     008A  0878               	movf	??___flge,w
  8985     008B  00F4               	movwf	___flge@ff2
  8986     008C                     l597:
  8987     008C  3080               	movlw	128
  8988     008D  06F3               	xorwf	___flge@ff1+3,f
  8989     008E  3080               	movlw	128
  8990     008F  06F7               	xorwf	___flge@ff2+3,f
  8991     0090  0877               	movf	___flge@ff2+3,w
  8992     0091  0273               	subwf	___flge@ff1+3,w
  8993     0092  1D03               	skipz
  8994     0093  289E               	goto	u4715
  8995     0094  0876               	movf	___flge@ff2+2,w
  8996     0095  0272               	subwf	___flge@ff1+2,w
  8997     0096  1D03               	skipz
  8998     0097  289E               	goto	u4715
  8999     0098  0875               	movf	___flge@ff2+1,w
  9000     0099  0271               	subwf	___flge@ff1+1,w
  9001     009A  1D03               	skipz
  9002     009B  289E               	goto	u4715
  9003     009C  0874               	movf	___flge@ff2,w
  9004     009D  0270               	subwf	___flge@ff1,w
  9005     009E                     u4715:
  9006     009E  1803               	skipnc
  9007     009F  28A1               	goto	u4711
  9008     00A0  28A2               	goto	u4710
  9009     00A1                     u4711:
  9010     00A1  28A4               	goto	l3224
  9011     00A2                     u4710:
  9012     00A2                     l3222:
  9013     00A2  1003               	clrc
  9014     00A3  28A5               	goto	l598
  9015     00A4                     l3224:
  9016     00A4  1403               	setc
  9017     00A5                     l598:
  9018     00A5  0008               	return
  9019     00A6                     __end_of___flge:
  9020                           
  9021                           	psect	text19
  9022     1CCC                     __ptext19:	
  9023 ;; *************** function ___fleq *****************
  9024 ;; Defined at:
  9025 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fleq.c"
  9026 ;; Parameters:    Size  Location     Type
  9027 ;;  ff1             4    0[COMMON] unsigned char 
  9028 ;;  ff2             4    4[COMMON] unsigned char 
  9029 ;; Auto vars:     Size  Location     Type
  9030 ;;		None
  9031 ;; Return value:  Size  Location     Type
  9032 ;;		None               void
  9033 ;; Registers used:
  9034 ;;		wreg, status,2, status,0
  9035 ;; Tracked objects:
  9036 ;;		On entry : 0/0
  9037 ;;		On exit  : 0/0
  9038 ;;		Unchanged: 0/0
  9039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9040 ;;      Params:         8       0       0       0       0
  9041 ;;      Locals:         0       0       0       0       0
  9042 ;;      Temps:          4       0       0       0       0
  9043 ;;      Totals:        12       0       0       0       0
  9044 ;;Total ram usage:       12 bytes
  9045 ;; Hardware stack levels used: 1
  9046 ;; This function calls:
  9047 ;;		Nothing
  9048 ;; This function is called by:
  9049 ;;		_sprintf
  9050 ;; This function uses a non-reentrant model
  9051 ;;
  9052                           
  9053     1CCC                     ___fleq:	
  9054                           ;psect for function ___fleq
  9055                           
  9056     1CCC                     l3196:	
  9057                           ;incstack = 0
  9058                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9059                           
  9060     1CCC  3000               	movlw	0
  9061     1CCD  0570               	andwf	___fleq@ff1,w
  9062     1CCE  00F8               	movwf	??___fleq
  9063     1CCF  3000               	movlw	0
  9064     1CD0  0571               	andwf	___fleq@ff1+1,w
  9065     1CD1  00F9               	movwf	??___fleq+1
  9066     1CD2  3080               	movlw	128
  9067     1CD3  0572               	andwf	___fleq@ff1+2,w
  9068     1CD4  00FA               	movwf	??___fleq+2
  9069     1CD5  307F               	movlw	127
  9070     1CD6  0573               	andwf	___fleq@ff1+3,w
  9071     1CD7  00FB               	movwf	??___fleq+3
  9072     1CD8  087B               	movf	??___fleq+3,w
  9073     1CD9  047A               	iorwf	??___fleq+2,w
  9074     1CDA  0479               	iorwf	??___fleq+1,w
  9075     1CDB  0478               	iorwf	??___fleq,w
  9076     1CDC  1D03               	skipz
  9077     1CDD  2CDF               	goto	u4621
  9078     1CDE  2CE0               	goto	u4620
  9079     1CDF                     u4621:
  9080     1CDF  2CE8               	goto	l589
  9081     1CE0                     u4620:
  9082     1CE0                     l3198:
  9083     1CE0  3000               	movlw	0
  9084     1CE1  00F3               	movwf	___fleq@ff1+3
  9085     1CE2  3000               	movlw	0
  9086     1CE3  00F2               	movwf	___fleq@ff1+2
  9087     1CE4  3000               	movlw	0
  9088     1CE5  00F1               	movwf	___fleq@ff1+1
  9089     1CE6  3000               	movlw	0
  9090     1CE7  00F0               	movwf	___fleq@ff1
  9091     1CE8                     l589:
  9092     1CE8  3000               	movlw	0
  9093     1CE9  0574               	andwf	___fleq@ff2,w
  9094     1CEA  00F8               	movwf	??___fleq
  9095     1CEB  3000               	movlw	0
  9096     1CEC  0575               	andwf	___fleq@ff2+1,w
  9097     1CED  00F9               	movwf	??___fleq+1
  9098     1CEE  3080               	movlw	128
  9099     1CEF  0576               	andwf	___fleq@ff2+2,w
  9100     1CF0  00FA               	movwf	??___fleq+2
  9101     1CF1  307F               	movlw	127
  9102     1CF2  0577               	andwf	___fleq@ff2+3,w
  9103     1CF3  00FB               	movwf	??___fleq+3
  9104     1CF4  087B               	movf	??___fleq+3,w
  9105     1CF5  047A               	iorwf	??___fleq+2,w
  9106     1CF6  0479               	iorwf	??___fleq+1,w
  9107     1CF7  0478               	iorwf	??___fleq,w
  9108     1CF8  1D03               	skipz
  9109     1CF9  2CFB               	goto	u4631
  9110     1CFA  2CFC               	goto	u4630
  9111     1CFB                     u4631:
  9112     1CFB  2D04               	goto	l590
  9113     1CFC                     u4630:
  9114     1CFC                     l3200:
  9115     1CFC  3000               	movlw	0
  9116     1CFD  00F7               	movwf	___fleq@ff2+3
  9117     1CFE  3000               	movlw	0
  9118     1CFF  00F6               	movwf	___fleq@ff2+2
  9119     1D00  3000               	movlw	0
  9120     1D01  00F5               	movwf	___fleq@ff2+1
  9121     1D02  3000               	movlw	0
  9122     1D03  00F4               	movwf	___fleq@ff2
  9123     1D04                     l590:
  9124     1D04  0877               	movf	___fleq@ff2+3,w
  9125     1D05  0673               	xorwf	___fleq@ff1+3,w
  9126     1D06  1D03               	skipz
  9127     1D07  2D12               	goto	u4645
  9128     1D08  0876               	movf	___fleq@ff2+2,w
  9129     1D09  0672               	xorwf	___fleq@ff1+2,w
  9130     1D0A  1D03               	skipz
  9131     1D0B  2D12               	goto	u4645
  9132     1D0C  0875               	movf	___fleq@ff2+1,w
  9133     1D0D  0671               	xorwf	___fleq@ff1+1,w
  9134     1D0E  1D03               	skipz
  9135     1D0F  2D12               	goto	u4645
  9136     1D10  0874               	movf	___fleq@ff2,w
  9137     1D11  0670               	xorwf	___fleq@ff1,w
  9138     1D12                     u4645:
  9139     1D12  1903               	skipnz
  9140     1D13  2D15               	goto	u4641
  9141     1D14  2D16               	goto	u4640
  9142     1D15                     u4641:
  9143     1D15  2D18               	goto	l3204
  9144     1D16                     u4640:
  9145     1D16                     l3202:
  9146     1D16  1003               	clrc
  9147     1D17  2D19               	goto	l591
  9148     1D18                     l3204:
  9149     1D18  1403               	setc
  9150     1D19                     l591:
  9151     1D19  0008               	return
  9152     1D1A                     __end_of___fleq:
  9153                           
  9154                           	psect	text20
  9155     1C87                     __ptext20:	
  9156 ;; *************** function _setup *****************
  9157 ;; Defined at:
  9158 ;;		line 139 in file "main.c"
  9159 ;; Parameters:    Size  Location     Type
  9160 ;;		None
  9161 ;; Auto vars:     Size  Location     Type
  9162 ;;		None
  9163 ;; Return value:  Size  Location     Type
  9164 ;;                  1    wreg      void 
  9165 ;; Registers used:
  9166 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9167 ;; Tracked objects:
  9168 ;;		On entry : 0/0
  9169 ;;		On exit  : 0/0
  9170 ;;		Unchanged: 0/0
  9171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9172 ;;      Params:         0       0       0       0       0
  9173 ;;      Locals:         0       0       0       0       0
  9174 ;;      Temps:          0       0       0       0       0
  9175 ;;      Totals:         0       0       0       0       0
  9176 ;;Total ram usage:        0 bytes
  9177 ;; Hardware stack levels used: 1
  9178 ;; Hardware stack levels required when called: 3
  9179 ;; This function calls:
  9180 ;;		_I2C_Master_Init
  9181 ;;		_Lcd_Init
  9182 ;;		_ioc_init
  9183 ;;		_setear_dia_tiempo
  9184 ;; This function is called by:
  9185 ;;		_main
  9186 ;; This function uses a non-reentrant model
  9187 ;;
  9188                           
  9189     1C87                     _setup:	
  9190                           ;psect for function _setup
  9191                           
  9192     1C87                     l3382:	
  9193                           ;incstack = 0
  9194                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9195                           
  9196                           
  9197                           ;main.c: 140:     ANSEL = 0;
  9198     1C87  1683               	bsf	3,5	;RP0=1, select bank3
  9199     1C88  1703               	bsf	3,6	;RP1=1, select bank3
  9200     1C89  0188               	clrf	8	;volatile
  9201                           
  9202                           ;main.c: 141:     ANSELH = 0;
  9203     1C8A  0189               	clrf	9	;volatile
  9204                           
  9205                           ;main.c: 142:     TRISA = 0;
  9206     1C8B  1683               	bsf	3,5	;RP0=1, select bank1
  9207     1C8C  1303               	bcf	3,6	;RP1=0, select bank1
  9208     1C8D  0185               	clrf	5	;volatile
  9209                           
  9210                           ;main.c: 143:     PORTA = 0;
  9211     1C8E  1283               	bcf	3,5	;RP0=0, select bank0
  9212     1C8F  1303               	bcf	3,6	;RP1=0, select bank0
  9213     1C90  0185               	clrf	5	;volatile
  9214     1C91                     l3384:
  9215                           
  9216                           ;main.c: 144:     TRISB = 0b00000111;
  9217     1C91  3007               	movlw	7
  9218     1C92  1683               	bsf	3,5	;RP0=1, select bank1
  9219     1C93  1303               	bcf	3,6	;RP1=0, select bank1
  9220     1C94  0086               	movwf	6	;volatile
  9221     1C95                     l3386:
  9222                           
  9223                           ;main.c: 145:     TRISD = 0;
  9224     1C95  0188               	clrf	8	;volatile
  9225     1C96                     l3388:
  9226                           
  9227                           ;main.c: 146:     PORTB = 0;
  9228     1C96  1283               	bcf	3,5	;RP0=0, select bank0
  9229     1C97  1303               	bcf	3,6	;RP1=0, select bank0
  9230     1C98  0186               	clrf	6	;volatile
  9231     1C99                     l3390:
  9232                           
  9233                           ;main.c: 147:     PORTD = 0;
  9234     1C99  0188               	clrf	8	;volatile
  9235     1C9A                     l3392:
  9236                           
  9237                           ;main.c: 148:     TRISE = 0;
  9238     1C9A  1683               	bsf	3,5	;RP0=1, select bank1
  9239     1C9B  1303               	bcf	3,6	;RP1=0, select bank1
  9240     1C9C  0189               	clrf	9	;volatile
  9241     1C9D                     l3394:
  9242                           
  9243                           ;main.c: 149:     PORTE = 0;
  9244     1C9D  1283               	bcf	3,5	;RP0=0, select bank0
  9245     1C9E  1303               	bcf	3,6	;RP1=0, select bank0
  9246     1C9F  0189               	clrf	9	;volatile
  9247     1CA0                     l3396:
  9248                           
  9249                           ;main.c: 150:     ioc_init(0);
  9250     1CA0  3000               	movlw	0
  9251     1CA1  160A  158A  2400  160A  158A  	fcall	_ioc_init
  9252     1CA6                     l3398:
  9253                           
  9254                           ;main.c: 151:     ioc_init(1);
  9255     1CA6  3001               	movlw	1
  9256     1CA7  160A  158A  2400  160A  158A  	fcall	_ioc_init
  9257     1CAC                     l3400:
  9258                           
  9259                           ;main.c: 152:     ioc_init(2);
  9260     1CAC  3002               	movlw	2
  9261     1CAD  160A  158A  2400  160A  158A  	fcall	_ioc_init
  9262     1CB2                     l3402:
  9263                           
  9264                           ;main.c: 153:     Lcd_Init();
  9265     1CB2  160A  158A  256E  160A  158A  	fcall	_Lcd_Init
  9266     1CB7                     l3404:
  9267                           
  9268                           ;main.c: 154:     I2C_Master_Init(100000);
  9269     1CB7  3000               	movlw	0
  9270     1CB8  1283               	bcf	3,5	;RP0=0, select bank0
  9271     1CB9  1303               	bcf	3,6	;RP1=0, select bank0
  9272     1CBA  00A3               	movwf	I2C_Master_Init@c+3
  9273     1CBB  3001               	movlw	1
  9274     1CBC  00A2               	movwf	I2C_Master_Init@c+2
  9275     1CBD  3086               	movlw	134
  9276     1CBE  00A1               	movwf	I2C_Master_Init@c+1
  9277     1CBF  30A0               	movlw	160
  9278     1CC0  00A0               	movwf	I2C_Master_Init@c
  9279     1CC1  160A  158A  234C  160A  158A  	fcall	_I2C_Master_Init
  9280     1CC6                     l3406:
  9281                           
  9282                           ;main.c: 155:     setear_dia_tiempo();
  9283     1CC6  120A  118A  20A6  160A  158A  	fcall	_setear_dia_tiempo
  9284     1CCB                     l192:
  9285     1CCB  0008               	return
  9286     1CCC                     __end_of_setup:
  9287                           
  9288                           	psect	text21
  9289     00A6                     __ptext21:	
  9290 ;; *************** function _setear_dia_tiempo *****************
  9291 ;; Defined at:
  9292 ;;		line 165 in file "main.c"
  9293 ;; Parameters:    Size  Location     Type
  9294 ;;		None
  9295 ;; Auto vars:     Size  Location     Type
  9296 ;;		None
  9297 ;; Return value:  Size  Location     Type
  9298 ;;                  1    wreg      void 
  9299 ;; Registers used:
  9300 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9301 ;; Tracked objects:
  9302 ;;		On entry : 0/0
  9303 ;;		On exit  : 0/0
  9304 ;;		Unchanged: 0/0
  9305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9306 ;;      Params:         0       0       0       0       0
  9307 ;;      Locals:         0       0       0       0       0
  9308 ;;      Temps:          0       0       0       0       0
  9309 ;;      Totals:         0       0       0       0       0
  9310 ;;Total ram usage:        0 bytes
  9311 ;; Hardware stack levels used: 1
  9312 ;; Hardware stack levels required when called: 2
  9313 ;; This function calls:
  9314 ;;		_DEC_A_BCD
  9315 ;;		_I2C_Master_Start
  9316 ;;		_I2C_Master_Stop
  9317 ;;		_I2C_Master_Write
  9318 ;; This function is called by:
  9319 ;;		_setup
  9320 ;; This function uses a non-reentrant model
  9321 ;;
  9322                           
  9323     00A6                     _setear_dia_tiempo:	
  9324                           ;psect for function _setear_dia_tiempo
  9325                           
  9326     00A6                     l2992:	
  9327                           ;incstack = 0
  9328                           ; Regs used in _setear_dia_tiempo: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9329                           
  9330                           
  9331                           ;main.c: 166:     I2C_Master_Start();
  9332     00A6  160A  158A  2217  120A  118A  	fcall	_I2C_Master_Start
  9333                           
  9334                           ;main.c: 167:     I2C_Master_Write(0xD0);
  9335     00AB  30D0               	movlw	208
  9336     00AC  1283               	bcf	3,5	;RP0=0, select bank0
  9337     00AD  1303               	bcf	3,6	;RP1=0, select bank0
  9338     00AE  00A4               	movwf	I2C_Master_Write@d
  9339     00AF  3000               	movlw	0
  9340     00B0  00A5               	movwf	I2C_Master_Write@d+1
  9341     00B1  160A  118A  20B8  120A  118A  	fcall	_I2C_Master_Write
  9342                           
  9343                           ;main.c: 168:     I2C_Master_Write(0x00);
  9344     00B6  3000               	movlw	0
  9345     00B7  1283               	bcf	3,5	;RP0=0, select bank0
  9346     00B8  1303               	bcf	3,6	;RP1=0, select bank0
  9347     00B9  00A4               	movwf	I2C_Master_Write@d
  9348     00BA  00A5               	movwf	I2C_Master_Write@d+1
  9349     00BB  160A  118A  20B8  120A  118A  	fcall	_I2C_Master_Write
  9350     00C0                     l2994:
  9351                           
  9352                           ;main.c: 169:     I2C_Master_Write(DEC_A_BCD(sec));
  9353     00C0  1683               	bsf	3,5	;RP0=1, select bank1
  9354     00C1  1303               	bcf	3,6	;RP1=0, select bank1
  9355     00C2  0855               	movf	(_sec+1)^(0+128),w
  9356     00C3  1283               	bcf	3,5	;RP0=0, select bank0
  9357     00C4  1303               	bcf	3,6	;RP1=0, select bank0
  9358     00C5  00A1               	movwf	DEC_A_BCD@convertir+1
  9359     00C6  1683               	bsf	3,5	;RP0=1, select bank1
  9360     00C7  1303               	bcf	3,6	;RP1=0, select bank1
  9361     00C8  0854               	movf	_sec^(0+128),w
  9362     00C9  1283               	bcf	3,5	;RP0=0, select bank0
  9363     00CA  1303               	bcf	3,6	;RP1=0, select bank0
  9364     00CB  00A0               	movwf	DEC_A_BCD@convertir
  9365     00CC  160A  158A  2316  120A  118A  	fcall	_DEC_A_BCD
  9366     00D1  1283               	bcf	3,5	;RP0=0, select bank0
  9367     00D2  1303               	bcf	3,6	;RP1=0, select bank0
  9368     00D3  0821               	movf	?_DEC_A_BCD+1,w
  9369     00D4  00A5               	movwf	I2C_Master_Write@d+1
  9370     00D5  0820               	movf	?_DEC_A_BCD,w
  9371     00D6  00A4               	movwf	I2C_Master_Write@d
  9372     00D7  160A  118A  20B8  120A  118A  	fcall	_I2C_Master_Write
  9373     00DC                     l2996:
  9374                           
  9375                           ;main.c: 170:     I2C_Master_Write(DEC_A_BCD(min));
  9376     00DC  1683               	bsf	3,5	;RP0=1, select bank1
  9377     00DD  1303               	bcf	3,6	;RP1=0, select bank1
  9378     00DE  0853               	movf	(_min+1)^(0+128),w
  9379     00DF  1283               	bcf	3,5	;RP0=0, select bank0
  9380     00E0  1303               	bcf	3,6	;RP1=0, select bank0
  9381     00E1  00A1               	movwf	DEC_A_BCD@convertir+1
  9382     00E2  1683               	bsf	3,5	;RP0=1, select bank1
  9383     00E3  1303               	bcf	3,6	;RP1=0, select bank1
  9384     00E4  0852               	movf	_min^(0+128),w
  9385     00E5  1283               	bcf	3,5	;RP0=0, select bank0
  9386     00E6  1303               	bcf	3,6	;RP1=0, select bank0
  9387     00E7  00A0               	movwf	DEC_A_BCD@convertir
  9388     00E8  160A  158A  2316  120A  118A  	fcall	_DEC_A_BCD
  9389     00ED  1283               	bcf	3,5	;RP0=0, select bank0
  9390     00EE  1303               	bcf	3,6	;RP1=0, select bank0
  9391     00EF  0821               	movf	?_DEC_A_BCD+1,w
  9392     00F0  00A5               	movwf	I2C_Master_Write@d+1
  9393     00F1  0820               	movf	?_DEC_A_BCD,w
  9394     00F2  00A4               	movwf	I2C_Master_Write@d
  9395     00F3  160A  118A  20B8  120A  118A  	fcall	_I2C_Master_Write
  9396     00F8                     l2998:
  9397                           
  9398                           ;main.c: 171:     I2C_Master_Write(DEC_A_BCD(hora));
  9399     00F8  1683               	bsf	3,5	;RP0=1, select bank1
  9400     00F9  1303               	bcf	3,6	;RP1=0, select bank1
  9401     00FA  0851               	movf	(_hora+1)^(0+128),w
  9402     00FB  1283               	bcf	3,5	;RP0=0, select bank0
  9403     00FC  1303               	bcf	3,6	;RP1=0, select bank0
  9404     00FD  00A1               	movwf	DEC_A_BCD@convertir+1
  9405     00FE  1683               	bsf	3,5	;RP0=1, select bank1
  9406     00FF  1303               	bcf	3,6	;RP1=0, select bank1
  9407     0100  0850               	movf	_hora^(0+128),w
  9408     0101  1283               	bcf	3,5	;RP0=0, select bank0
  9409     0102  1303               	bcf	3,6	;RP1=0, select bank0
  9410     0103  00A0               	movwf	DEC_A_BCD@convertir
  9411     0104  160A  158A  2316  120A  118A  	fcall	_DEC_A_BCD
  9412     0109  1283               	bcf	3,5	;RP0=0, select bank0
  9413     010A  1303               	bcf	3,6	;RP1=0, select bank0
  9414     010B  0821               	movf	?_DEC_A_BCD+1,w
  9415     010C  00A5               	movwf	I2C_Master_Write@d+1
  9416     010D  0820               	movf	?_DEC_A_BCD,w
  9417     010E  00A4               	movwf	I2C_Master_Write@d
  9418     010F  160A  118A  20B8  120A  118A  	fcall	_I2C_Master_Write
  9419     0114                     l3000:
  9420                           
  9421                           ;main.c: 172:     I2C_Master_Write(0x01);
  9422     0114  3001               	movlw	1
  9423     0115  1283               	bcf	3,5	;RP0=0, select bank0
  9424     0116  1303               	bcf	3,6	;RP1=0, select bank0
  9425     0117  00A4               	movwf	I2C_Master_Write@d
  9426     0118  3000               	movlw	0
  9427     0119  00A5               	movwf	I2C_Master_Write@d+1
  9428     011A  160A  118A  20B8  120A  118A  	fcall	_I2C_Master_Write
  9429                           
  9430                           ;main.c: 173:     I2C_Master_Write(DEC_A_BCD(dia));
  9431     011F  1683               	bsf	3,5	;RP0=1, select bank1
  9432     0120  1303               	bcf	3,6	;RP1=0, select bank1
  9433     0121  086F               	movf	(_dia+1)^(0+128),w
  9434     0122  1283               	bcf	3,5	;RP0=0, select bank0
  9435     0123  1303               	bcf	3,6	;RP1=0, select bank0
  9436     0124  00A1               	movwf	DEC_A_BCD@convertir+1
  9437     0125  1683               	bsf	3,5	;RP0=1, select bank1
  9438     0126  1303               	bcf	3,6	;RP1=0, select bank1
  9439     0127  086E               	movf	_dia^(0+128),w
  9440     0128  1283               	bcf	3,5	;RP0=0, select bank0
  9441     0129  1303               	bcf	3,6	;RP1=0, select bank0
  9442     012A  00A0               	movwf	DEC_A_BCD@convertir
  9443     012B  160A  158A  2316  120A  118A  	fcall	_DEC_A_BCD
  9444     0130  1283               	bcf	3,5	;RP0=0, select bank0
  9445     0131  1303               	bcf	3,6	;RP1=0, select bank0
  9446     0132  0821               	movf	?_DEC_A_BCD+1,w
  9447     0133  00A5               	movwf	I2C_Master_Write@d+1
  9448     0134  0820               	movf	?_DEC_A_BCD,w
  9449     0135  00A4               	movwf	I2C_Master_Write@d
  9450     0136  160A  118A  20B8  120A  118A  	fcall	_I2C_Master_Write
  9451                           
  9452                           ;main.c: 174:     I2C_Master_Write(DEC_A_BCD(mes));
  9453     013B  1683               	bsf	3,5	;RP0=1, select bank1
  9454     013C  1303               	bcf	3,6	;RP1=0, select bank1
  9455     013D  086D               	movf	(_mes+1)^(0+128),w
  9456     013E  1283               	bcf	3,5	;RP0=0, select bank0
  9457     013F  1303               	bcf	3,6	;RP1=0, select bank0
  9458     0140  00A1               	movwf	DEC_A_BCD@convertir+1
  9459     0141  1683               	bsf	3,5	;RP0=1, select bank1
  9460     0142  1303               	bcf	3,6	;RP1=0, select bank1
  9461     0143  086C               	movf	_mes^(0+128),w
  9462     0144  1283               	bcf	3,5	;RP0=0, select bank0
  9463     0145  1303               	bcf	3,6	;RP1=0, select bank0
  9464     0146  00A0               	movwf	DEC_A_BCD@convertir
  9465     0147  160A  158A  2316  120A  118A  	fcall	_DEC_A_BCD
  9466     014C  1283               	bcf	3,5	;RP0=0, select bank0
  9467     014D  1303               	bcf	3,6	;RP1=0, select bank0
  9468     014E  0821               	movf	?_DEC_A_BCD+1,w
  9469     014F  00A5               	movwf	I2C_Master_Write@d+1
  9470     0150  0820               	movf	?_DEC_A_BCD,w
  9471     0151  00A4               	movwf	I2C_Master_Write@d
  9472     0152  160A  118A  20B8  120A  118A  	fcall	_I2C_Master_Write
  9473                           
  9474                           ;main.c: 175:     I2C_Master_Write(DEC_A_BCD(year));
  9475     0157  1683               	bsf	3,5	;RP0=1, select bank1
  9476     0158  1303               	bcf	3,6	;RP1=0, select bank1
  9477     0159  086B               	movf	(_year+1)^(0+128),w
  9478     015A  1283               	bcf	3,5	;RP0=0, select bank0
  9479     015B  1303               	bcf	3,6	;RP1=0, select bank0
  9480     015C  00A1               	movwf	DEC_A_BCD@convertir+1
  9481     015D  1683               	bsf	3,5	;RP0=1, select bank1
  9482     015E  1303               	bcf	3,6	;RP1=0, select bank1
  9483     015F  086A               	movf	_year^(0+128),w
  9484     0160  1283               	bcf	3,5	;RP0=0, select bank0
  9485     0161  1303               	bcf	3,6	;RP1=0, select bank0
  9486     0162  00A0               	movwf	DEC_A_BCD@convertir
  9487     0163  160A  158A  2316  120A  118A  	fcall	_DEC_A_BCD
  9488     0168  1283               	bcf	3,5	;RP0=0, select bank0
  9489     0169  1303               	bcf	3,6	;RP1=0, select bank0
  9490     016A  0821               	movf	?_DEC_A_BCD+1,w
  9491     016B  00A5               	movwf	I2C_Master_Write@d+1
  9492     016C  0820               	movf	?_DEC_A_BCD,w
  9493     016D  00A4               	movwf	I2C_Master_Write@d
  9494     016E  160A  118A  20B8  120A  118A  	fcall	_I2C_Master_Write
  9495     0173                     l3002:
  9496                           
  9497                           ;main.c: 176:     I2C_Master_Stop();
  9498     0173  160A  158A  2220  120A  118A  	fcall	_I2C_Master_Stop
  9499     0178                     l201:
  9500     0178  0008               	return
  9501     0179                     __end_of_setear_dia_tiempo:
  9502                           
  9503                           	psect	text22
  9504     10B8                     __ptext22:	
  9505 ;; *************** function _I2C_Master_Write *****************
  9506 ;; Defined at:
  9507 ;;		line 65 in file "I2C.c"
  9508 ;; Parameters:    Size  Location     Type
  9509 ;;  d               2    4[BANK0 ] unsigned int 
  9510 ;; Auto vars:     Size  Location     Type
  9511 ;;		None
  9512 ;; Return value:  Size  Location     Type
  9513 ;;                  1    wreg      void 
  9514 ;; Registers used:
  9515 ;;		wreg, status,2, status,0, pclath, cstack
  9516 ;; Tracked objects:
  9517 ;;		On entry : 0/0
  9518 ;;		On exit  : 0/0
  9519 ;;		Unchanged: 0/0
  9520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9521 ;;      Params:         0       2       0       0       0
  9522 ;;      Locals:         0       0       0       0       0
  9523 ;;      Temps:          0       0       0       0       0
  9524 ;;      Totals:         0       2       0       0       0
  9525 ;;Total ram usage:        2 bytes
  9526 ;; Hardware stack levels used: 1
  9527 ;; Hardware stack levels required when called: 1
  9528 ;; This function calls:
  9529 ;;		_I2C_Master_Wait
  9530 ;; This function is called by:
  9531 ;;		_main
  9532 ;;		_setear_dia_tiempo
  9533 ;;		_update_dia_tiempo
  9534 ;; This function uses a non-reentrant model
  9535 ;;
  9536                           
  9537     10B8                     _I2C_Master_Write:	
  9538                           ;psect for function _I2C_Master_Write
  9539                           
  9540     10B8                     l2514:	
  9541                           ;incstack = 0
  9542                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  9543                           
  9544                           
  9545                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  9546     10B8  160A  158A  2234  160A  118A  	fcall	_I2C_Master_Wait
  9547     10BD                     l2516:
  9548                           
  9549                           ;I2C.c: 68:     SSPBUF = d;
  9550     10BD  1283               	bcf	3,5	;RP0=0, select bank0
  9551     10BE  1303               	bcf	3,6	;RP1=0, select bank0
  9552     10BF  0824               	movf	I2C_Master_Write@d,w
  9553     10C0  0093               	movwf	19	;volatile
  9554     10C1                     l88:
  9555     10C1  0008               	return
  9556     10C2                     __end_of_I2C_Master_Write:
  9557                           
  9558                           	psect	text23
  9559     1A20                     __ptext23:	
  9560 ;; *************** function _I2C_Master_Stop *****************
  9561 ;; Defined at:
  9562 ;;		line 55 in file "I2C.c"
  9563 ;; Parameters:    Size  Location     Type
  9564 ;;		None
  9565 ;; Auto vars:     Size  Location     Type
  9566 ;;		None
  9567 ;; Return value:  Size  Location     Type
  9568 ;;                  1    wreg      void 
  9569 ;; Registers used:
  9570 ;;		wreg, status,2, status,0, pclath, cstack
  9571 ;; Tracked objects:
  9572 ;;		On entry : 0/0
  9573 ;;		On exit  : 0/0
  9574 ;;		Unchanged: 0/0
  9575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9576 ;;      Params:         0       0       0       0       0
  9577 ;;      Locals:         0       0       0       0       0
  9578 ;;      Temps:          0       0       0       0       0
  9579 ;;      Totals:         0       0       0       0       0
  9580 ;;Total ram usage:        0 bytes
  9581 ;; Hardware stack levels used: 1
  9582 ;; Hardware stack levels required when called: 1
  9583 ;; This function calls:
  9584 ;;		_I2C_Master_Wait
  9585 ;; This function is called by:
  9586 ;;		_main
  9587 ;;		_setear_dia_tiempo
  9588 ;;		_update_dia_tiempo
  9589 ;; This function uses a non-reentrant model
  9590 ;;
  9591                           
  9592     1A20                     _I2C_Master_Stop:	
  9593                           ;psect for function _I2C_Master_Stop
  9594                           
  9595     1A20                     l2510:	
  9596                           ;incstack = 0
  9597                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  9598                           
  9599                           
  9600                           ;I2C.c: 57:     I2C_Master_Wait();
  9601     1A20  160A  158A  2234  160A  158A  	fcall	_I2C_Master_Wait
  9602     1A25                     l2512:
  9603                           
  9604                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  9605     1A25  1683               	bsf	3,5	;RP0=1, select bank1
  9606     1A26  1303               	bcf	3,6	;RP1=0, select bank1
  9607     1A27  1511               	bsf	17,2	;volatile
  9608     1A28                     l85:
  9609     1A28  0008               	return
  9610     1A29                     __end_of_I2C_Master_Stop:
  9611                           
  9612                           	psect	text24
  9613     1A17                     __ptext24:	
  9614 ;; *************** function _I2C_Master_Start *****************
  9615 ;; Defined at:
  9616 ;;		line 39 in file "I2C.c"
  9617 ;; Parameters:    Size  Location     Type
  9618 ;;		None
  9619 ;; Auto vars:     Size  Location     Type
  9620 ;;		None
  9621 ;; Return value:  Size  Location     Type
  9622 ;;                  1    wreg      void 
  9623 ;; Registers used:
  9624 ;;		wreg, status,2, status,0, pclath, cstack
  9625 ;; Tracked objects:
  9626 ;;		On entry : 0/0
  9627 ;;		On exit  : 0/0
  9628 ;;		Unchanged: 0/0
  9629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9630 ;;      Params:         0       0       0       0       0
  9631 ;;      Locals:         0       0       0       0       0
  9632 ;;      Temps:          0       0       0       0       0
  9633 ;;      Totals:         0       0       0       0       0
  9634 ;;Total ram usage:        0 bytes
  9635 ;; Hardware stack levels used: 1
  9636 ;; Hardware stack levels required when called: 1
  9637 ;; This function calls:
  9638 ;;		_I2C_Master_Wait
  9639 ;; This function is called by:
  9640 ;;		_main
  9641 ;;		_setear_dia_tiempo
  9642 ;;		_update_dia_tiempo
  9643 ;; This function uses a non-reentrant model
  9644 ;;
  9645                           
  9646     1A17                     _I2C_Master_Start:	
  9647                           ;psect for function _I2C_Master_Start
  9648                           
  9649     1A17                     l2506:	
  9650                           ;incstack = 0
  9651                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  9652                           
  9653                           
  9654                           ;I2C.c: 41:     I2C_Master_Wait();
  9655     1A17  160A  158A  2234  160A  158A  	fcall	_I2C_Master_Wait
  9656     1A1C                     l2508:
  9657                           
  9658                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  9659     1A1C  1683               	bsf	3,5	;RP0=1, select bank1
  9660     1A1D  1303               	bcf	3,6	;RP1=0, select bank1
  9661     1A1E  1411               	bsf	17,0	;volatile
  9662     1A1F                     l79:
  9663     1A1F  0008               	return
  9664     1A20                     __end_of_I2C_Master_Start:
  9665                           
  9666                           	psect	text25
  9667     1B16                     __ptext25:	
  9668 ;; *************** function _DEC_A_BCD *****************
  9669 ;; Defined at:
  9670 ;;		line 161 in file "main.c"
  9671 ;; Parameters:    Size  Location     Type
  9672 ;;  convertir       2    0[BANK0 ] int 
  9673 ;; Auto vars:     Size  Location     Type
  9674 ;;		None
  9675 ;; Return value:  Size  Location     Type
  9676 ;;                  2    0[BANK0 ] int 
  9677 ;; Registers used:
  9678 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9679 ;; Tracked objects:
  9680 ;;		On entry : 0/0
  9681 ;;		On exit  : 0/0
  9682 ;;		Unchanged: 0/0
  9683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9684 ;;      Params:         0       2       0       0       0
  9685 ;;      Locals:         0       0       0       0       0
  9686 ;;      Temps:          0       2       0       0       0
  9687 ;;      Totals:         0       4       0       0       0
  9688 ;;Total ram usage:        4 bytes
  9689 ;; Hardware stack levels used: 1
  9690 ;; Hardware stack levels required when called: 1
  9691 ;; This function calls:
  9692 ;;		___awdiv
  9693 ;;		___awmod
  9694 ;; This function is called by:
  9695 ;;		_main
  9696 ;;		_setear_dia_tiempo
  9697 ;; This function uses a non-reentrant model
  9698 ;;
  9699                           
  9700     1B16                     _DEC_A_BCD:	
  9701                           ;psect for function _DEC_A_BCD
  9702                           
  9703     1B16                     l2518:	
  9704                           ;incstack = 0
  9705                           ; Regs used in _DEC_A_BCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9706                           
  9707                           
  9708                           ;main.c: 162:     return ((convertir / 10) << 4) + (convertir % 10);
  9709     1B16  300A               	movlw	10
  9710     1B17  00F6               	movwf	___awdiv@divisor
  9711     1B18  3000               	movlw	0
  9712     1B19  00F7               	movwf	___awdiv@divisor+1
  9713     1B1A  1283               	bcf	3,5	;RP0=0, select bank0
  9714     1B1B  1303               	bcf	3,6	;RP1=0, select bank0
  9715     1B1C  0821               	movf	DEC_A_BCD@convertir+1,w
  9716     1B1D  00F9               	movwf	___awdiv@dividend+1
  9717     1B1E  0820               	movf	DEC_A_BCD@convertir,w
  9718     1B1F  00F8               	movwf	___awdiv@dividend
  9719     1B20  160A  158A  262A  160A  158A  	fcall	___awdiv
  9720     1B25  0876               	movf	?___awdiv,w
  9721     1B26  1283               	bcf	3,5	;RP0=0, select bank0
  9722     1B27  1303               	bcf	3,6	;RP1=0, select bank0
  9723     1B28  00A2               	movwf	??_DEC_A_BCD
  9724     1B29  0877               	movf	?___awdiv+1,w
  9725     1B2A  00A3               	movwf	??_DEC_A_BCD+1
  9726     1B2B  0EA2               	swapf	??_DEC_A_BCD,f
  9727     1B2C  0EA3               	swapf	??_DEC_A_BCD+1,f
  9728     1B2D  30F0               	movlw	240
  9729     1B2E  05A3               	andwf	??_DEC_A_BCD+1,f
  9730     1B2F  0822               	movf	??_DEC_A_BCD,w
  9731     1B30  390F               	andlw	15
  9732     1B31  04A3               	iorwf	??_DEC_A_BCD+1,f
  9733     1B32  30F0               	movlw	240
  9734     1B33  05A2               	andwf	??_DEC_A_BCD,f
  9735     1B34  300A               	movlw	10
  9736     1B35  00F0               	movwf	___awmod@divisor
  9737     1B36  3000               	movlw	0
  9738     1B37  00F1               	movwf	___awmod@divisor+1
  9739     1B38  0821               	movf	DEC_A_BCD@convertir+1,w
  9740     1B39  00F3               	movwf	___awmod@dividend+1
  9741     1B3A  0820               	movf	DEC_A_BCD@convertir,w
  9742     1B3B  00F2               	movwf	___awmod@dividend
  9743     1B3C  160A  118A  20C2  160A  158A  	fcall	___awmod
  9744     1B41  0870               	movf	?___awmod,w
  9745     1B42  1283               	bcf	3,5	;RP0=0, select bank0
  9746     1B43  1303               	bcf	3,6	;RP1=0, select bank0
  9747     1B44  0722               	addwf	??_DEC_A_BCD,w
  9748     1B45  00A0               	movwf	?_DEC_A_BCD
  9749     1B46  0871               	movf	?___awmod+1,w
  9750     1B47  1803               	skipnc
  9751     1B48  0A71               	incf	?___awmod+1,w
  9752     1B49  0723               	addwf	??_DEC_A_BCD+1,w
  9753     1B4A  00A1               	movwf	?_DEC_A_BCD+1
  9754     1B4B                     l198:
  9755     1B4B  0008               	return
  9756     1B4C                     __end_of_DEC_A_BCD:
  9757                           
  9758                           	psect	text26
  9759     10C2                     __ptext26:	
  9760 ;; *************** function ___awmod *****************
  9761 ;; Defined at:
  9762 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  9763 ;; Parameters:    Size  Location     Type
  9764 ;;  divisor         2    0[COMMON] int 
  9765 ;;  dividend        2    2[COMMON] int 
  9766 ;; Auto vars:     Size  Location     Type
  9767 ;;  sign            1    5[COMMON] unsigned char 
  9768 ;;  counter         1    4[COMMON] unsigned char 
  9769 ;; Return value:  Size  Location     Type
  9770 ;;                  2    0[COMMON] int 
  9771 ;; Registers used:
  9772 ;;		wreg, status,2, status,0, btemp+1
  9773 ;; Tracked objects:
  9774 ;;		On entry : 0/0
  9775 ;;		On exit  : 0/0
  9776 ;;		Unchanged: 0/0
  9777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9778 ;;      Params:         4       0       0       0       0
  9779 ;;      Locals:         2       0       0       0       0
  9780 ;;      Temps:          0       0       0       0       0
  9781 ;;      Totals:         6       0       0       0       0
  9782 ;;Total ram usage:        6 bytes
  9783 ;; Hardware stack levels used: 1
  9784 ;; This function calls:
  9785 ;;		Nothing
  9786 ;; This function is called by:
  9787 ;;		_main
  9788 ;;		_DEC_A_BCD
  9789 ;;		_scale
  9790 ;; This function uses a non-reentrant model
  9791 ;;
  9792                           
  9793     10C2                     ___awmod:	
  9794                           ;psect for function ___awmod
  9795                           
  9796     10C2                     l2444:	
  9797                           ;incstack = 0
  9798                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  9799                           
  9800     10C2  01F5               	clrf	___awmod@sign
  9801     10C3                     l2446:
  9802     10C3  1FF3               	btfss	___awmod@dividend+1,7
  9803     10C4  28C6               	goto	u2891
  9804     10C5  28C7               	goto	u2890
  9805     10C6                     u2891:
  9806     10C6  28CE               	goto	l2452
  9807     10C7                     u2890:
  9808     10C7                     l2448:
  9809     10C7  09F2               	comf	___awmod@dividend,f
  9810     10C8  09F3               	comf	___awmod@dividend+1,f
  9811     10C9  0AF2               	incf	___awmod@dividend,f
  9812     10CA  1903               	skipnz
  9813     10CB  0AF3               	incf	___awmod@dividend+1,f
  9814     10CC                     l2450:
  9815     10CC  01F5               	clrf	___awmod@sign
  9816     10CD  0AF5               	incf	___awmod@sign,f
  9817     10CE                     l2452:
  9818     10CE  1FF1               	btfss	___awmod@divisor+1,7
  9819     10CF  28D1               	goto	u2901
  9820     10D0  28D2               	goto	u2900
  9821     10D1                     u2901:
  9822     10D1  28D7               	goto	l2456
  9823     10D2                     u2900:
  9824     10D2                     l2454:
  9825     10D2  09F0               	comf	___awmod@divisor,f
  9826     10D3  09F1               	comf	___awmod@divisor+1,f
  9827     10D4  0AF0               	incf	___awmod@divisor,f
  9828     10D5  1903               	skipnz
  9829     10D6  0AF1               	incf	___awmod@divisor+1,f
  9830     10D7                     l2456:
  9831     10D7  0870               	movf	___awmod@divisor,w
  9832     10D8  0471               	iorwf	___awmod@divisor+1,w
  9833     10D9  1903               	btfsc	3,2
  9834     10DA  28DC               	goto	u2911
  9835     10DB  28DD               	goto	u2910
  9836     10DC                     u2911:
  9837     10DC  290C               	goto	l2474
  9838     10DD                     u2910:
  9839     10DD                     l2458:
  9840     10DD  01F4               	clrf	___awmod@counter
  9841     10DE  0AF4               	incf	___awmod@counter,f
  9842     10DF  28EB               	goto	l2464
  9843     10E0                     l2460:
  9844     10E0  3001               	movlw	1
  9845     10E1                     u2925:
  9846     10E1  1003               	clrc
  9847     10E2  0DF0               	rlf	___awmod@divisor,f
  9848     10E3  0DF1               	rlf	___awmod@divisor+1,f
  9849     10E4  3EFF               	addlw	-1
  9850     10E5  1D03               	skipz
  9851     10E6  28E1               	goto	u2925
  9852     10E7                     l2462:
  9853     10E7  3001               	movlw	1
  9854     10E8  00FF               	movwf	btemp+1
  9855     10E9  087F               	movf	btemp+1,w
  9856     10EA  07F4               	addwf	___awmod@counter,f
  9857     10EB                     l2464:
  9858     10EB  1FF1               	btfss	___awmod@divisor+1,7
  9859     10EC  28EE               	goto	u2931
  9860     10ED  28EF               	goto	u2930
  9861     10EE                     u2931:
  9862     10EE  28E0               	goto	l2460
  9863     10EF                     u2930:
  9864     10EF                     l2466:
  9865     10EF  0871               	movf	___awmod@divisor+1,w
  9866     10F0  0273               	subwf	___awmod@dividend+1,w
  9867     10F1  1D03               	skipz
  9868     10F2  28F5               	goto	u2945
  9869     10F3  0870               	movf	___awmod@divisor,w
  9870     10F4  0272               	subwf	___awmod@dividend,w
  9871     10F5                     u2945:
  9872     10F5  1C03               	skipc
  9873     10F6  28F8               	goto	u2941
  9874     10F7  28F9               	goto	u2940
  9875     10F8                     u2941:
  9876     10F8  28FF               	goto	l2470
  9877     10F9                     u2940:
  9878     10F9                     l2468:
  9879     10F9  0870               	movf	___awmod@divisor,w
  9880     10FA  02F2               	subwf	___awmod@dividend,f
  9881     10FB  0871               	movf	___awmod@divisor+1,w
  9882     10FC  1C03               	skipc
  9883     10FD  03F3               	decf	___awmod@dividend+1,f
  9884     10FE  02F3               	subwf	___awmod@dividend+1,f
  9885     10FF                     l2470:
  9886     10FF  3001               	movlw	1
  9887     1100                     u2955:
  9888     1100  1003               	clrc
  9889     1101  0CF1               	rrf	___awmod@divisor+1,f
  9890     1102  0CF0               	rrf	___awmod@divisor,f
  9891     1103  3EFF               	addlw	-1
  9892     1104  1D03               	skipz
  9893     1105  2900               	goto	u2955
  9894     1106                     l2472:
  9895     1106  3001               	movlw	1
  9896     1107  02F4               	subwf	___awmod@counter,f
  9897     1108  1D03               	btfss	3,2
  9898     1109  290B               	goto	u2961
  9899     110A  290C               	goto	u2960
  9900     110B                     u2961:
  9901     110B  28EF               	goto	l2466
  9902     110C                     u2960:
  9903     110C                     l2474:
  9904     110C  0875               	movf	___awmod@sign,w
  9905     110D  1903               	btfsc	3,2
  9906     110E  2910               	goto	u2971
  9907     110F  2911               	goto	u2970
  9908     1110                     u2971:
  9909     1110  2916               	goto	l2478
  9910     1111                     u2970:
  9911     1111                     l2476:
  9912     1111  09F2               	comf	___awmod@dividend,f
  9913     1112  09F3               	comf	___awmod@dividend+1,f
  9914     1113  0AF2               	incf	___awmod@dividend,f
  9915     1114  1903               	skipnz
  9916     1115  0AF3               	incf	___awmod@dividend+1,f
  9917     1116                     l2478:
  9918     1116  0873               	movf	___awmod@dividend+1,w
  9919     1117  00F1               	movwf	?___awmod+1
  9920     1118  0872               	movf	___awmod@dividend,w
  9921     1119  00F0               	movwf	?___awmod
  9922     111A                     l569:
  9923     111A  0008               	return
  9924     111B                     __end_of___awmod:
  9925                           
  9926                           	psect	text27
  9927     1E2A                     __ptext27:	
  9928 ;; *************** function ___awdiv *****************
  9929 ;; Defined at:
  9930 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  9931 ;; Parameters:    Size  Location     Type
  9932 ;;  divisor         2    6[COMMON] int 
  9933 ;;  dividend        2    8[COMMON] int 
  9934 ;; Auto vars:     Size  Location     Type
  9935 ;;  quotient        2   12[COMMON] int 
  9936 ;;  sign            1   11[COMMON] unsigned char 
  9937 ;;  counter         1   10[COMMON] unsigned char 
  9938 ;; Return value:  Size  Location     Type
  9939 ;;                  2    6[COMMON] int 
  9940 ;; Registers used:
  9941 ;;		wreg, status,2, status,0, btemp+1
  9942 ;; Tracked objects:
  9943 ;;		On entry : 0/0
  9944 ;;		On exit  : 0/0
  9945 ;;		Unchanged: 0/0
  9946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9947 ;;      Params:         4       0       0       0       0
  9948 ;;      Locals:         4       0       0       0       0
  9949 ;;      Temps:          0       0       0       0       0
  9950 ;;      Totals:         8       0       0       0       0
  9951 ;;Total ram usage:        8 bytes
  9952 ;; Hardware stack levels used: 1
  9953 ;; This function calls:
  9954 ;;		Nothing
  9955 ;; This function is called by:
  9956 ;;		_main
  9957 ;;		_DEC_A_BCD
  9958 ;;		_scale
  9959 ;;		_sprintf
  9960 ;; This function uses a non-reentrant model
  9961 ;;
  9962                           
  9963     1E2A                     ___awdiv:	
  9964                           ;psect for function ___awdiv
  9965                           
  9966     1E2A                     l2400:	
  9967                           ;incstack = 0
  9968                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  9969                           
  9970     1E2A  01FB               	clrf	___awdiv@sign
  9971     1E2B                     l2402:
  9972     1E2B  1FF7               	btfss	___awdiv@divisor+1,7
  9973     1E2C  2E2E               	goto	u2791
  9974     1E2D  2E2F               	goto	u2790
  9975     1E2E                     u2791:
  9976     1E2E  2E36               	goto	l2408
  9977     1E2F                     u2790:
  9978     1E2F                     l2404:
  9979     1E2F  09F6               	comf	___awdiv@divisor,f
  9980     1E30  09F7               	comf	___awdiv@divisor+1,f
  9981     1E31  0AF6               	incf	___awdiv@divisor,f
  9982     1E32  1903               	skipnz
  9983     1E33  0AF7               	incf	___awdiv@divisor+1,f
  9984     1E34                     l2406:
  9985     1E34  01FB               	clrf	___awdiv@sign
  9986     1E35  0AFB               	incf	___awdiv@sign,f
  9987     1E36                     l2408:
  9988     1E36  1FF9               	btfss	___awdiv@dividend+1,7
  9989     1E37  2E39               	goto	u2801
  9990     1E38  2E3A               	goto	u2800
  9991     1E39                     u2801:
  9992     1E39  2E43               	goto	l2414
  9993     1E3A                     u2800:
  9994     1E3A                     l2410:
  9995     1E3A  09F8               	comf	___awdiv@dividend,f
  9996     1E3B  09F9               	comf	___awdiv@dividend+1,f
  9997     1E3C  0AF8               	incf	___awdiv@dividend,f
  9998     1E3D  1903               	skipnz
  9999     1E3E  0AF9               	incf	___awdiv@dividend+1,f
 10000     1E3F                     l2412:
 10001     1E3F  3001               	movlw	1
 10002     1E40  00FF               	movwf	btemp+1
 10003     1E41  087F               	movf	btemp+1,w
 10004     1E42  06FB               	xorwf	___awdiv@sign,f
 10005     1E43                     l2414:
 10006     1E43  01FC               	clrf	___awdiv@quotient
 10007     1E44  01FD               	clrf	___awdiv@quotient+1
 10008     1E45                     l2416:
 10009     1E45  0876               	movf	___awdiv@divisor,w
 10010     1E46  0477               	iorwf	___awdiv@divisor+1,w
 10011     1E47  1903               	btfsc	3,2
 10012     1E48  2E4A               	goto	u2811
 10013     1E49  2E4B               	goto	u2810
 10014     1E4A                     u2811:
 10015     1E4A  2E82               	goto	l2436
 10016     1E4B                     u2810:
 10017     1E4B                     l2418:
 10018     1E4B  01FA               	clrf	___awdiv@counter
 10019     1E4C  0AFA               	incf	___awdiv@counter,f
 10020     1E4D  2E59               	goto	l2424
 10021     1E4E                     l2420:
 10022     1E4E  3001               	movlw	1
 10023     1E4F                     u2825:
 10024     1E4F  1003               	clrc
 10025     1E50  0DF6               	rlf	___awdiv@divisor,f
 10026     1E51  0DF7               	rlf	___awdiv@divisor+1,f
 10027     1E52  3EFF               	addlw	-1
 10028     1E53  1D03               	skipz
 10029     1E54  2E4F               	goto	u2825
 10030     1E55                     l2422:
 10031     1E55  3001               	movlw	1
 10032     1E56  00FF               	movwf	btemp+1
 10033     1E57  087F               	movf	btemp+1,w
 10034     1E58  07FA               	addwf	___awdiv@counter,f
 10035     1E59                     l2424:
 10036     1E59  1FF7               	btfss	___awdiv@divisor+1,7
 10037     1E5A  2E5C               	goto	u2831
 10038     1E5B  2E5D               	goto	u2830
 10039     1E5C                     u2831:
 10040     1E5C  2E4E               	goto	l2420
 10041     1E5D                     u2830:
 10042     1E5D                     l2426:
 10043     1E5D  3001               	movlw	1
 10044     1E5E                     u2845:
 10045     1E5E  1003               	clrc
 10046     1E5F  0DFC               	rlf	___awdiv@quotient,f
 10047     1E60  0DFD               	rlf	___awdiv@quotient+1,f
 10048     1E61  3EFF               	addlw	-1
 10049     1E62  1D03               	skipz
 10050     1E63  2E5E               	goto	u2845
 10051     1E64  0877               	movf	___awdiv@divisor+1,w
 10052     1E65  0279               	subwf	___awdiv@dividend+1,w
 10053     1E66  1D03               	skipz
 10054     1E67  2E6A               	goto	u2855
 10055     1E68  0876               	movf	___awdiv@divisor,w
 10056     1E69  0278               	subwf	___awdiv@dividend,w
 10057     1E6A                     u2855:
 10058     1E6A  1C03               	skipc
 10059     1E6B  2E6D               	goto	u2851
 10060     1E6C  2E6E               	goto	u2850
 10061     1E6D                     u2851:
 10062     1E6D  2E75               	goto	l2432
 10063     1E6E                     u2850:
 10064     1E6E                     l2428:
 10065     1E6E  0876               	movf	___awdiv@divisor,w
 10066     1E6F  02F8               	subwf	___awdiv@dividend,f
 10067     1E70  0877               	movf	___awdiv@divisor+1,w
 10068     1E71  1C03               	skipc
 10069     1E72  03F9               	decf	___awdiv@dividend+1,f
 10070     1E73  02F9               	subwf	___awdiv@dividend+1,f
 10071     1E74                     l2430:
 10072     1E74  147C               	bsf	___awdiv@quotient,0
 10073     1E75                     l2432:
 10074     1E75  3001               	movlw	1
 10075     1E76                     u2865:
 10076     1E76  1003               	clrc
 10077     1E77  0CF7               	rrf	___awdiv@divisor+1,f
 10078     1E78  0CF6               	rrf	___awdiv@divisor,f
 10079     1E79  3EFF               	addlw	-1
 10080     1E7A  1D03               	skipz
 10081     1E7B  2E76               	goto	u2865
 10082     1E7C                     l2434:
 10083     1E7C  3001               	movlw	1
 10084     1E7D  02FA               	subwf	___awdiv@counter,f
 10085     1E7E  1D03               	btfss	3,2
 10086     1E7F  2E81               	goto	u2871
 10087     1E80  2E82               	goto	u2870
 10088     1E81                     u2871:
 10089     1E81  2E5D               	goto	l2426
 10090     1E82                     u2870:
 10091     1E82                     l2436:
 10092     1E82  087B               	movf	___awdiv@sign,w
 10093     1E83  1903               	btfsc	3,2
 10094     1E84  2E86               	goto	u2881
 10095     1E85  2E87               	goto	u2880
 10096     1E86                     u2881:
 10097     1E86  2E8C               	goto	l2440
 10098     1E87                     u2880:
 10099     1E87                     l2438:
 10100     1E87  09FC               	comf	___awdiv@quotient,f
 10101     1E88  09FD               	comf	___awdiv@quotient+1,f
 10102     1E89  0AFC               	incf	___awdiv@quotient,f
 10103     1E8A  1903               	skipnz
 10104     1E8B  0AFD               	incf	___awdiv@quotient+1,f
 10105     1E8C                     l2440:
 10106     1E8C  087D               	movf	___awdiv@quotient+1,w
 10107     1E8D  00F7               	movwf	?___awdiv+1
 10108     1E8E  087C               	movf	___awdiv@quotient,w
 10109     1E8F  00F6               	movwf	?___awdiv
 10110     1E90                     l556:
 10111     1E90  0008               	return
 10112     1E91                     __end_of___awdiv:
 10113                           
 10114                           	psect	text28
 10115     1C00                     __ptext28:	
 10116 ;; *************** function _ioc_init *****************
 10117 ;; Defined at:
 10118 ;;		line 3 in file "iocb.c"
 10119 ;; Parameters:    Size  Location     Type
 10120 ;;  pin             1    wreg     unsigned char 
 10121 ;; Auto vars:     Size  Location     Type
 10122 ;;  pin             1    2[COMMON] unsigned char 
 10123 ;; Return value:  Size  Location     Type
 10124 ;;                  1    wreg      void 
 10125 ;; Registers used:
 10126 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10127 ;; Tracked objects:
 10128 ;;		On entry : 0/0
 10129 ;;		On exit  : 0/0
 10130 ;;		Unchanged: 0/0
 10131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10132 ;;      Params:         0       0       0       0       0
 10133 ;;      Locals:         1       0       0       0       0
 10134 ;;      Temps:          2       0       0       0       0
 10135 ;;      Totals:         3       0       0       0       0
 10136 ;;Total ram usage:        3 bytes
 10137 ;; Hardware stack levels used: 1
 10138 ;; This function calls:
 10139 ;;		Nothing
 10140 ;; This function is called by:
 10141 ;;		_setup
 10142 ;; This function uses a non-reentrant model
 10143 ;;
 10144                           
 10145     1C00                     _ioc_init:	
 10146                           ;psect for function _ioc_init
 10147                           
 10148                           
 10149                           ;incstack = 0
 10150                           ; Regs used in _ioc_init: [wreg-fsr0h+status,2+status,0]
 10151                           ;ioc_init@pin stored from wreg
 10152     1C00  00F2               	movwf	ioc_init@pin
 10153     1C01                     l2982:
 10154                           
 10155                           ;iocb.c: 4:     OPTION_REGbits.nRBPU = 0;
 10156     1C01  1683               	bsf	3,5	;RP0=1, select bank1
 10157     1C02  1303               	bcf	3,6	;RP1=0, select bank1
 10158     1C03  1381               	bcf	1,7	;volatile
 10159                           
 10160                           ;iocb.c: 5:     switch(pin)
 10161     1C04  2C20               	goto	l2986
 10162     1C05                     l214:	
 10163                           ;iocb.c: 6:     {;iocb.c: 7:         case 0:
 10164                           
 10165                           
 10166                           ;iocb.c: 8:             IOCBbits.IOCB0 = 1;
 10167     1C05  1416               	bsf	22,0	;volatile
 10168                           
 10169                           ;iocb.c: 9:             WPUBbits.WPUB0 = 1;
 10170     1C06  1415               	bsf	21,0	;volatile
 10171                           
 10172                           ;iocb.c: 10:             break;
 10173     1C07  2C42               	goto	l224
 10174     1C08                     l216:	
 10175                           ;iocb.c: 11:         case 1:
 10176                           
 10177                           
 10178                           ;iocb.c: 12:             IOCBbits.IOCB1 = 1;
 10179     1C08  1496               	bsf	22,1	;volatile
 10180                           
 10181                           ;iocb.c: 13:             WPUBbits.WPUB1 = 1;
 10182     1C09  1495               	bsf	21,1	;volatile
 10183                           
 10184                           ;iocb.c: 14:             break;
 10185     1C0A  2C42               	goto	l224
 10186     1C0B                     l217:	
 10187                           ;iocb.c: 15:         case 2:
 10188                           
 10189                           
 10190                           ;iocb.c: 16:             IOCBbits.IOCB2 = 1;
 10191     1C0B  1516               	bsf	22,2	;volatile
 10192                           
 10193                           ;iocb.c: 17:             WPUBbits.WPUB2 = 1;
 10194     1C0C  1515               	bsf	21,2	;volatile
 10195                           
 10196                           ;iocb.c: 18:             break;
 10197     1C0D  2C42               	goto	l224
 10198     1C0E                     l218:	
 10199                           ;iocb.c: 19:         case 3:
 10200                           
 10201                           
 10202                           ;iocb.c: 20:             IOCBbits.IOCB3 = 1;
 10203     1C0E  1596               	bsf	22,3	;volatile
 10204                           
 10205                           ;iocb.c: 21:             WPUBbits.WPUB3 = 1;
 10206     1C0F  1595               	bsf	21,3	;volatile
 10207                           
 10208                           ;iocb.c: 22:             break;
 10209     1C10  2C42               	goto	l224
 10210     1C11                     l219:	
 10211                           ;iocb.c: 23:         case 4:
 10212                           
 10213                           
 10214                           ;iocb.c: 24:             IOCBbits.IOCB4 = 1;
 10215     1C11  1616               	bsf	22,4	;volatile
 10216                           
 10217                           ;iocb.c: 25:             WPUBbits.WPUB4 = 1;
 10218     1C12  1615               	bsf	21,4	;volatile
 10219                           
 10220                           ;iocb.c: 26:             break;
 10221     1C13  2C42               	goto	l224
 10222     1C14                     l220:	
 10223                           ;iocb.c: 27:         case 5:
 10224                           
 10225                           
 10226                           ;iocb.c: 28:             IOCBbits.IOCB5 = 1;
 10227     1C14  1696               	bsf	22,5	;volatile
 10228                           
 10229                           ;iocb.c: 29:             WPUBbits.WPUB5 = 1;
 10230     1C15  1695               	bsf	21,5	;volatile
 10231                           
 10232                           ;iocb.c: 30:             break;
 10233     1C16  2C42               	goto	l224
 10234     1C17                     l221:	
 10235                           ;iocb.c: 31:         case 6:
 10236                           
 10237                           
 10238                           ;iocb.c: 32:             IOCBbits.IOCB6 = 1;
 10239     1C17  1716               	bsf	22,6	;volatile
 10240                           
 10241                           ;iocb.c: 33:             WPUBbits.WPUB6 = 1;
 10242     1C18  1715               	bsf	21,6	;volatile
 10243                           
 10244                           ;iocb.c: 34:             break;
 10245     1C19  2C42               	goto	l224
 10246     1C1A                     l222:	
 10247                           ;iocb.c: 35:         case 7:
 10248                           
 10249                           
 10250                           ;iocb.c: 36:             IOCBbits.IOCB7 = 1;
 10251     1C1A  1796               	bsf	22,7	;volatile
 10252                           
 10253                           ;iocb.c: 37:             WPUBbits.WPUB7 = 1;
 10254     1C1B  1795               	bsf	21,7	;volatile
 10255                           
 10256                           ;iocb.c: 38:             break;
 10257     1C1C  2C42               	goto	l224
 10258     1C1D                     l2984:
 10259                           
 10260                           ;iocb.c: 40:             IOCBbits.IOCB = 0;
 10261     1C1D  0196               	clrf	22	;volatile
 10262                           
 10263                           ;iocb.c: 41:             WPUBbits.WPUB = 0;
 10264     1C1E  0195               	clrf	21	;volatile
 10265                           
 10266                           ;iocb.c: 42:     }
 10267     1C1F  2C42               	goto	l224
 10268     1C20                     l2986:
 10269     1C20  0872               	movf	ioc_init@pin,w
 10270     1C21  00F0               	movwf	??_ioc_init
 10271     1C22  01F1               	clrf	??_ioc_init+1
 10272                           
 10273                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10274                           ; Switch size 1, requested type "simple"
 10275                           ; Number of cases is 1, Range of values is 0 to 0
 10276                           ; switch strategies available:
 10277                           ; Name         Instructions Cycles
 10278                           ; simple_byte            4     3 (average)
 10279                           ; direct_byte           11     8 (fixed)
 10280                           ; jumptable            260     6 (fixed)
 10281                           ;	Chosen strategy is simple_byte
 10282     1C23  0871               	movf	??_ioc_init+1,w
 10283     1C24  3A00               	xorlw	0	; case 0
 10284     1C25  1903               	skipnz
 10285     1C26  2C28               	goto	l3792
 10286     1C27  2C1D               	goto	l2984
 10287     1C28                     l3792:
 10288                           
 10289                           ; Switch size 1, requested type "simple"
 10290                           ; Number of cases is 8, Range of values is 0 to 7
 10291                           ; switch strategies available:
 10292                           ; Name         Instructions Cycles
 10293                           ; simple_byte           25    13 (average)
 10294                           ; direct_byte           32     8 (fixed)
 10295                           ; jumptable            260     6 (fixed)
 10296                           ;	Chosen strategy is simple_byte
 10297     1C28  0870               	movf	??_ioc_init,w
 10298     1C29  3A00               	xorlw	0	; case 0
 10299     1C2A  1903               	skipnz
 10300     1C2B  2C05               	goto	l214
 10301     1C2C  3A01               	xorlw	1	; case 1
 10302     1C2D  1903               	skipnz
 10303     1C2E  2C08               	goto	l216
 10304     1C2F  3A03               	xorlw	3	; case 2
 10305     1C30  1903               	skipnz
 10306     1C31  2C0B               	goto	l217
 10307     1C32  3A01               	xorlw	1	; case 3
 10308     1C33  1903               	skipnz
 10309     1C34  2C0E               	goto	l218
 10310     1C35  3A07               	xorlw	7	; case 4
 10311     1C36  1903               	skipnz
 10312     1C37  2C11               	goto	l219
 10313     1C38  3A01               	xorlw	1	; case 5
 10314     1C39  1903               	skipnz
 10315     1C3A  2C14               	goto	l220
 10316     1C3B  3A03               	xorlw	3	; case 6
 10317     1C3C  1903               	skipnz
 10318     1C3D  2C17               	goto	l221
 10319     1C3E  3A01               	xorlw	1	; case 7
 10320     1C3F  1903               	skipnz
 10321     1C40  2C1A               	goto	l222
 10322     1C41  2C1D               	goto	l2984
 10323     1C42                     l224:
 10324     1C42  0008               	return
 10325     1C43                     __end_of_ioc_init:
 10326                           
 10327                           	psect	text29
 10328     1D6E                     __ptext29:	
 10329 ;; *************** function _Lcd_Init *****************
 10330 ;; Defined at:
 10331 ;;		line 28 in file "LCD8bits.c"
 10332 ;; Parameters:    Size  Location     Type
 10333 ;;		None
 10334 ;; Auto vars:     Size  Location     Type
 10335 ;;		None
 10336 ;; Return value:  Size  Location     Type
 10337 ;;                  1    wreg      void 
 10338 ;; Registers used:
 10339 ;;		wreg, status,2, status,0, pclath, cstack
 10340 ;; Tracked objects:
 10341 ;;		On entry : 0/0
 10342 ;;		On exit  : 0/0
 10343 ;;		Unchanged: 0/0
 10344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10345 ;;      Params:         0       0       0       0       0
 10346 ;;      Locals:         0       0       0       0       0
 10347 ;;      Temps:          2       0       0       0       0
 10348 ;;      Totals:         2       0       0       0       0
 10349 ;;Total ram usage:        2 bytes
 10350 ;; Hardware stack levels used: 1
 10351 ;; Hardware stack levels required when called: 2
 10352 ;; This function calls:
 10353 ;;		_Lcd_Cmd
 10354 ;;		_Lcd_Port
 10355 ;; This function is called by:
 10356 ;;		_setup
 10357 ;; This function uses a non-reentrant model
 10358 ;;
 10359                           
 10360     1D6E                     _Lcd_Init:	
 10361                           ;psect for function _Lcd_Init
 10362                           
 10363     1D6E                     l2938:	
 10364                           ;incstack = 0
 10365                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 10366                           
 10367                           
 10368                           ;LCD8bits.c: 29:     _delay((unsigned long)((15)*(8000000/4000.0)));
 10369     1D6E  3027               	movlw	39
 10370     1D6F  00F5               	movwf	??_Lcd_Init+1
 10371     1D70  30F5               	movlw	245
 10372     1D71  00F4               	movwf	??_Lcd_Init
 10373     1D72                     u5547:
 10374     1D72  0BF4               	decfsz	??_Lcd_Init,f
 10375     1D73  2D72               	goto	u5547
 10376     1D74  0BF5               	decfsz	??_Lcd_Init+1,f
 10377     1D75  2D72               	goto	u5547
 10378     1D76                     l2940:
 10379                           
 10380                           ;LCD8bits.c: 30:     Lcd_Port(0x00);
 10381     1D76  3000               	movlw	0
 10382     1D77  160A  158A  2203  160A  158A  	fcall	_Lcd_Port
 10383     1D7C                     l2942:
 10384                           
 10385                           ;LCD8bits.c: 31:     _delay((unsigned long)((20)*(8000000/4000.0)));
 10386     1D7C  3034               	movlw	52
 10387     1D7D  00F5               	movwf	??_Lcd_Init+1
 10388     1D7E  30F1               	movlw	241
 10389     1D7F  00F4               	movwf	??_Lcd_Init
 10390     1D80                     u5557:
 10391     1D80  0BF4               	decfsz	??_Lcd_Init,f
 10392     1D81  2D80               	goto	u5557
 10393     1D82  0BF5               	decfsz	??_Lcd_Init+1,f
 10394     1D83  2D80               	goto	u5557
 10395     1D84  2D85               	nop2
 10396                           
 10397                           ;LCD8bits.c: 32:     Lcd_Cmd(0x30);
 10398     1D85  3030               	movlw	48
 10399     1D86  160A  158A  2269  160A  158A  	fcall	_Lcd_Cmd
 10400     1D8B                     l2944:
 10401                           
 10402                           ;LCD8bits.c: 33:     _delay((unsigned long)((5)*(8000000/4000.0)));
 10403     1D8B  300D               	movlw	13
 10404     1D8C  00F5               	movwf	??_Lcd_Init+1
 10405     1D8D  30FB               	movlw	251
 10406     1D8E  00F4               	movwf	??_Lcd_Init
 10407     1D8F                     u5567:
 10408     1D8F  0BF4               	decfsz	??_Lcd_Init,f
 10409     1D90  2D8F               	goto	u5567
 10410     1D91  0BF5               	decfsz	??_Lcd_Init+1,f
 10411     1D92  2D8F               	goto	u5567
 10412     1D93  2D94               	nop2
 10413     1D94                     l2946:
 10414                           
 10415                           ;LCD8bits.c: 34:     Lcd_Cmd(0x30);
 10416     1D94  3030               	movlw	48
 10417     1D95  160A  158A  2269  160A  158A  	fcall	_Lcd_Cmd
 10418                           
 10419                           ;LCD8bits.c: 35:     _delay((unsigned long)((160)*(8000000/4000000.0)));
 10420     1D9A  306A               	movlw	106
 10421     1D9B  00F4               	movwf	??_Lcd_Init
 10422     1D9C                     u5577:
 10423     1D9C  0BF4               	decfsz	??_Lcd_Init,f
 10424     1D9D  2D9C               	goto	u5577
 10425     1D9E  0000               	nop
 10426     1D9F                     l2948:
 10427                           
 10428                           ;LCD8bits.c: 36:     Lcd_Cmd(0x30);
 10429     1D9F  3030               	movlw	48
 10430     1DA0  160A  158A  2269  160A  158A  	fcall	_Lcd_Cmd
 10431     1DA5                     l2950:
 10432                           
 10433                           ;LCD8bits.c: 38:     Lcd_Cmd(0x38);
 10434     1DA5  3038               	movlw	56
 10435     1DA6  160A  158A  2269  160A  158A  	fcall	_Lcd_Cmd
 10436     1DAB                     l2952:
 10437                           
 10438                           ;LCD8bits.c: 39:     Lcd_Cmd(0x10);
 10439     1DAB  3010               	movlw	16
 10440     1DAC  160A  158A  2269  160A  158A  	fcall	_Lcd_Cmd
 10441     1DB1                     l2954:
 10442                           
 10443                           ;LCD8bits.c: 40:     Lcd_Cmd(0x01);
 10444     1DB1  3001               	movlw	1
 10445     1DB2  160A  158A  2269  160A  158A  	fcall	_Lcd_Cmd
 10446     1DB7                     l2956:
 10447                           
 10448                           ;LCD8bits.c: 41:     Lcd_Cmd(0x06);
 10449     1DB7  3006               	movlw	6
 10450     1DB8  160A  158A  2269  160A  158A  	fcall	_Lcd_Cmd
 10451     1DBD                     l2958:
 10452                           
 10453                           ;LCD8bits.c: 42:     Lcd_Cmd(0x0C);
 10454     1DBD  300C               	movlw	12
 10455     1DBE  160A  158A  2269  160A  158A  	fcall	_Lcd_Cmd
 10456     1DC3                     l26:
 10457     1DC3  0008               	return
 10458     1DC4                     __end_of_Lcd_Init:
 10459                           
 10460                           	psect	text30
 10461     1B4C                     __ptext30:	
 10462 ;; *************** function _I2C_Master_Init *****************
 10463 ;; Defined at:
 10464 ;;		line 16 in file "I2C.c"
 10465 ;; Parameters:    Size  Location     Type
 10466 ;;  c               4    0[BANK0 ] const unsigned long 
 10467 ;; Auto vars:     Size  Location     Type
 10468 ;;		None
 10469 ;; Return value:  Size  Location     Type
 10470 ;;                  1    wreg      void 
 10471 ;; Registers used:
 10472 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10473 ;; Tracked objects:
 10474 ;;		On entry : 0/0
 10475 ;;		On exit  : 0/0
 10476 ;;		Unchanged: 0/0
 10477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10478 ;;      Params:         0       4       0       0       0
 10479 ;;      Locals:         0       0       0       0       0
 10480 ;;      Temps:          0       4       0       0       0
 10481 ;;      Totals:         0       8       0       0       0
 10482 ;;Total ram usage:        8 bytes
 10483 ;; Hardware stack levels used: 1
 10484 ;; Hardware stack levels required when called: 1
 10485 ;; This function calls:
 10486 ;;		___lldiv
 10487 ;; This function is called by:
 10488 ;;		_setup
 10489 ;; This function uses a non-reentrant model
 10490 ;;
 10491                           
 10492     1B4C                     _I2C_Master_Init:	
 10493                           ;psect for function _I2C_Master_Init
 10494                           
 10495     1B4C                     l2970:	
 10496                           ;incstack = 0
 10497                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10498                           
 10499                           
 10500                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
 10501     1B4C  3028               	movlw	40
 10502     1B4D  1283               	bcf	3,5	;RP0=0, select bank0
 10503     1B4E  1303               	bcf	3,6	;RP1=0, select bank0
 10504     1B4F  0094               	movwf	20	;volatile
 10505     1B50                     l2972:
 10506                           
 10507                           ;I2C.c: 19:     SSPCON2 = 0;
 10508     1B50  1683               	bsf	3,5	;RP0=1, select bank1
 10509     1B51  1303               	bcf	3,6	;RP1=0, select bank1
 10510     1B52  0191               	clrf	17	;volatile
 10511     1B53                     l2974:
 10512                           
 10513                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
 10514     1B53  1283               	bcf	3,5	;RP0=0, select bank0
 10515     1B54  1303               	bcf	3,6	;RP1=0, select bank0
 10516     1B55  0820               	movf	I2C_Master_Init@c,w
 10517     1B56  00A4               	movwf	??_I2C_Master_Init
 10518     1B57  0821               	movf	I2C_Master_Init@c+1,w
 10519     1B58  00A5               	movwf	??_I2C_Master_Init+1
 10520     1B59  0822               	movf	I2C_Master_Init@c+2,w
 10521     1B5A  00A6               	movwf	??_I2C_Master_Init+2
 10522     1B5B  0823               	movf	I2C_Master_Init@c+3,w
 10523     1B5C  00A7               	movwf	??_I2C_Master_Init+3
 10524     1B5D  3002               	movlw	2
 10525     1B5E                     u4045:
 10526     1B5E  1003               	clrc
 10527     1B5F  0DA4               	rlf	??_I2C_Master_Init,f
 10528     1B60  0DA5               	rlf	??_I2C_Master_Init+1,f
 10529     1B61  0DA6               	rlf	??_I2C_Master_Init+2,f
 10530     1B62  0DA7               	rlf	??_I2C_Master_Init+3,f
 10531     1B63                     u4040:
 10532     1B63  3EFF               	addlw	-1
 10533     1B64  1D03               	skipz
 10534     1B65  2B5E               	goto	u4045
 10535     1B66  0827               	movf	??_I2C_Master_Init+3,w
 10536     1B67  00F3               	movwf	___lldiv@divisor+3
 10537     1B68  0826               	movf	??_I2C_Master_Init+2,w
 10538     1B69  00F2               	movwf	___lldiv@divisor+2
 10539     1B6A  0825               	movf	??_I2C_Master_Init+1,w
 10540     1B6B  00F1               	movwf	___lldiv@divisor+1
 10541     1B6C  0824               	movf	??_I2C_Master_Init,w
 10542     1B6D  00F0               	movwf	___lldiv@divisor
 10543     1B6E  3000               	movlw	0
 10544     1B6F  00F7               	movwf	___lldiv@dividend+3
 10545     1B70  307A               	movlw	122
 10546     1B71  00F6               	movwf	___lldiv@dividend+2
 10547     1B72  3012               	movlw	18
 10548     1B73  00F5               	movwf	___lldiv@dividend+1
 10549     1B74  3000               	movlw	0
 10550     1B75  00F4               	movwf	___lldiv@dividend
 10551     1B76  160A  158A  25C4  160A  158A  	fcall	___lldiv
 10552     1B7B  0870               	movf	?___lldiv,w
 10553     1B7C  3EFF               	addlw	255
 10554     1B7D  1683               	bsf	3,5	;RP0=1, select bank1
 10555     1B7E  1303               	bcf	3,6	;RP1=0, select bank1
 10556     1B7F  0093               	movwf	19	;volatile
 10557     1B80                     l2976:
 10558                           
 10559                           ;I2C.c: 21:     SSPSTAT = 0;
 10560     1B80  0194               	clrf	20	;volatile
 10561     1B81                     l2978:
 10562                           
 10563                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
 10564     1B81  1587               	bsf	7,3	;volatile
 10565     1B82                     l2980:
 10566                           
 10567                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
 10568     1B82  1607               	bsf	7,4	;volatile
 10569     1B83                     l70:
 10570     1B83  0008               	return
 10571     1B84                     __end_of_I2C_Master_Init:
 10572                           
 10573                           	psect	text31
 10574     1DC4                     __ptext31:	
 10575 ;; *************** function ___lldiv *****************
 10576 ;; Defined at:
 10577 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
 10578 ;; Parameters:    Size  Location     Type
 10579 ;;  divisor         4    0[COMMON] unsigned long 
 10580 ;;  dividend        4    4[COMMON] unsigned long 
 10581 ;; Auto vars:     Size  Location     Type
 10582 ;;  quotient        4    9[COMMON] unsigned long 
 10583 ;;  counter         1   13[COMMON] unsigned char 
 10584 ;; Return value:  Size  Location     Type
 10585 ;;                  4    0[COMMON] unsigned long 
 10586 ;; Registers used:
 10587 ;;		wreg, status,2, status,0, btemp+1
 10588 ;; Tracked objects:
 10589 ;;		On entry : 0/0
 10590 ;;		On exit  : 0/0
 10591 ;;		Unchanged: 0/0
 10592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10593 ;;      Params:         8       0       0       0       0
 10594 ;;      Locals:         5       0       0       0       0
 10595 ;;      Temps:          1       0       0       0       0
 10596 ;;      Totals:        14       0       0       0       0
 10597 ;;Total ram usage:       14 bytes
 10598 ;; Hardware stack levels used: 1
 10599 ;; This function calls:
 10600 ;;		Nothing
 10601 ;; This function is called by:
 10602 ;;		_I2C_Master_Init
 10603 ;;		_sprintf
 10604 ;; This function uses a non-reentrant model
 10605 ;;
 10606                           
 10607     1DC4                     ___lldiv:	
 10608                           ;psect for function ___lldiv
 10609                           
 10610     1DC4                     l2522:	
 10611                           ;incstack = 0
 10612                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
 10613                           
 10614     1DC4  3000               	movlw	0
 10615     1DC5  00FC               	movwf	___lldiv@quotient+3
 10616     1DC6  3000               	movlw	0
 10617     1DC7  00FB               	movwf	___lldiv@quotient+2
 10618     1DC8  3000               	movlw	0
 10619     1DC9  00FA               	movwf	___lldiv@quotient+1
 10620     1DCA  3000               	movlw	0
 10621     1DCB  00F9               	movwf	___lldiv@quotient
 10622     1DCC  0873               	movf	___lldiv@divisor+3,w
 10623     1DCD  0472               	iorwf	___lldiv@divisor+2,w
 10624     1DCE  0471               	iorwf	___lldiv@divisor+1,w
 10625     1DCF  0470               	iorwf	___lldiv@divisor,w
 10626     1DD0  1903               	skipnz
 10627     1DD1  2DD3               	goto	u3011
 10628     1DD2  2DD4               	goto	u3010
 10629     1DD3                     u3011:
 10630     1DD3  2E21               	goto	l2544
 10631     1DD4                     u3010:
 10632     1DD4                     l2524:
 10633     1DD4  01FD               	clrf	___lldiv@counter
 10634     1DD5  0AFD               	incf	___lldiv@counter,f
 10635     1DD6  2DE4               	goto	l2530
 10636     1DD7                     l2526:
 10637     1DD7  3001               	movlw	1
 10638     1DD8  00F8               	movwf	??___lldiv
 10639     1DD9                     u3025:
 10640     1DD9  1003               	clrc
 10641     1DDA  0DF0               	rlf	___lldiv@divisor,f
 10642     1DDB  0DF1               	rlf	___lldiv@divisor+1,f
 10643     1DDC  0DF2               	rlf	___lldiv@divisor+2,f
 10644     1DDD  0DF3               	rlf	___lldiv@divisor+3,f
 10645     1DDE  0BF8               	decfsz	??___lldiv,f
 10646     1DDF  2DD9               	goto	u3025
 10647     1DE0                     l2528:
 10648     1DE0  3001               	movlw	1
 10649     1DE1  00FF               	movwf	btemp+1
 10650     1DE2  087F               	movf	btemp+1,w
 10651     1DE3  07FD               	addwf	___lldiv@counter,f
 10652     1DE4                     l2530:
 10653     1DE4  1FF3               	btfss	___lldiv@divisor+3,7
 10654     1DE5  2DE7               	goto	u3031
 10655     1DE6  2DE8               	goto	u3030
 10656     1DE7                     u3031:
 10657     1DE7  2DD7               	goto	l2526
 10658     1DE8                     u3030:
 10659     1DE8                     l2532:
 10660     1DE8  3001               	movlw	1
 10661     1DE9  00F8               	movwf	??___lldiv
 10662     1DEA                     u3045:
 10663     1DEA  1003               	clrc
 10664     1DEB  0DF9               	rlf	___lldiv@quotient,f
 10665     1DEC  0DFA               	rlf	___lldiv@quotient+1,f
 10666     1DED  0DFB               	rlf	___lldiv@quotient+2,f
 10667     1DEE  0DFC               	rlf	___lldiv@quotient+3,f
 10668     1DEF  0BF8               	decfsz	??___lldiv,f
 10669     1DF0  2DEA               	goto	u3045
 10670     1DF1                     l2534:
 10671     1DF1  0873               	movf	___lldiv@divisor+3,w
 10672     1DF2  0277               	subwf	___lldiv@dividend+3,w
 10673     1DF3  1D03               	skipz
 10674     1DF4  2DFF               	goto	u3055
 10675     1DF5  0872               	movf	___lldiv@divisor+2,w
 10676     1DF6  0276               	subwf	___lldiv@dividend+2,w
 10677     1DF7  1D03               	skipz
 10678     1DF8  2DFF               	goto	u3055
 10679     1DF9  0871               	movf	___lldiv@divisor+1,w
 10680     1DFA  0275               	subwf	___lldiv@dividend+1,w
 10681     1DFB  1D03               	skipz
 10682     1DFC  2DFF               	goto	u3055
 10683     1DFD  0870               	movf	___lldiv@divisor,w
 10684     1DFE  0274               	subwf	___lldiv@dividend,w
 10685     1DFF                     u3055:
 10686     1DFF  1C03               	skipc
 10687     1E00  2E02               	goto	u3051
 10688     1E01  2E03               	goto	u3050
 10689     1E02                     u3051:
 10690     1E02  2E12               	goto	l2540
 10691     1E03                     u3050:
 10692     1E03                     l2536:
 10693     1E03  0870               	movf	___lldiv@divisor,w
 10694     1E04  02F4               	subwf	___lldiv@dividend,f
 10695     1E05  0871               	movf	___lldiv@divisor+1,w
 10696     1E06  1C03               	skipc
 10697     1E07  0F71               	incfsz	___lldiv@divisor+1,w
 10698     1E08  02F5               	subwf	___lldiv@dividend+1,f
 10699     1E09  0872               	movf	___lldiv@divisor+2,w
 10700     1E0A  1C03               	skipc
 10701     1E0B  0F72               	incfsz	___lldiv@divisor+2,w
 10702     1E0C  02F6               	subwf	___lldiv@dividend+2,f
 10703     1E0D  0873               	movf	___lldiv@divisor+3,w
 10704     1E0E  1C03               	skipc
 10705     1E0F  0F73               	incfsz	___lldiv@divisor+3,w
 10706     1E10  02F7               	subwf	___lldiv@dividend+3,f
 10707     1E11                     l2538:
 10708     1E11  1479               	bsf	___lldiv@quotient,0
 10709     1E12                     l2540:
 10710     1E12  3001               	movlw	1
 10711     1E13                     u3065:
 10712     1E13  1003               	clrc
 10713     1E14  0CF3               	rrf	___lldiv@divisor+3,f
 10714     1E15  0CF2               	rrf	___lldiv@divisor+2,f
 10715     1E16  0CF1               	rrf	___lldiv@divisor+1,f
 10716     1E17  0CF0               	rrf	___lldiv@divisor,f
 10717     1E18  3EFF               	addlw	-1
 10718     1E19  1D03               	skipz
 10719     1E1A  2E13               	goto	u3065
 10720     1E1B                     l2542:
 10721     1E1B  3001               	movlw	1
 10722     1E1C  02FD               	subwf	___lldiv@counter,f
 10723     1E1D  1D03               	btfss	3,2
 10724     1E1E  2E20               	goto	u3071
 10725     1E1F  2E21               	goto	u3070
 10726     1E20                     u3071:
 10727     1E20  2DE8               	goto	l2532
 10728     1E21                     u3070:
 10729     1E21                     l2544:
 10730     1E21  087C               	movf	___lldiv@quotient+3,w
 10731     1E22  00F3               	movwf	?___lldiv+3
 10732     1E23  087B               	movf	___lldiv@quotient+2,w
 10733     1E24  00F2               	movwf	?___lldiv+2
 10734     1E25  087A               	movf	___lldiv@quotient+1,w
 10735     1E26  00F1               	movwf	?___lldiv+1
 10736     1E27  0879               	movf	___lldiv@quotient,w
 10737     1E28  00F0               	movwf	?___lldiv
 10738     1E29                     l439:
 10739     1E29  0008               	return
 10740     1E2A                     __end_of___lldiv:
 10741                           
 10742                           	psect	text32
 10743     1BBE                     __ptext32:	
 10744 ;; *************** function _Lcd_Write_String *****************
 10745 ;; Defined at:
 10746 ;;		line 53 in file "LCD8bits.c"
 10747 ;; Parameters:    Size  Location     Type
 10748 ;;  a               2    3[COMMON] PTR unsigned char 
 10749 ;;		 -> STR_6(3), valor(20), STR_4(7), STR_3(2), 
 10750 ;;		 -> STR_2(2), STR_1(7), 
 10751 ;; Auto vars:     Size  Location     Type
 10752 ;;  i               2    8[COMMON] int 
 10753 ;; Return value:  Size  Location     Type
 10754 ;;                  1    wreg      void 
 10755 ;; Registers used:
 10756 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10757 ;; Tracked objects:
 10758 ;;		On entry : 0/0
 10759 ;;		On exit  : 0/0
 10760 ;;		Unchanged: 0/0
 10761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10762 ;;      Params:         2       0       0       0       0
 10763 ;;      Locals:         2       0       0       0       0
 10764 ;;      Temps:          3       0       0       0       0
 10765 ;;      Totals:         7       0       0       0       0
 10766 ;;Total ram usage:        7 bytes
 10767 ;; Hardware stack levels used: 1
 10768 ;; Hardware stack levels required when called: 2
 10769 ;; This function calls:
 10770 ;;		_Lcd_Write_Char
 10771 ;; This function is called by:
 10772 ;;		_main
 10773 ;; This function uses a non-reentrant model
 10774 ;;
 10775                           
 10776     1BBE                     _Lcd_Write_String:	
 10777                           ;psect for function _Lcd_Write_String
 10778                           
 10779     1BBE                     l3358:	
 10780                           ;incstack = 0
 10781                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10782                           
 10783                           
 10784                           ;LCD8bits.c: 54:     int i;;LCD8bits.c: 55:     for (i = 0; a[i] != '\0'; i++)
 10785     1BBE  01F8               	clrf	Lcd_Write_String@i
 10786     1BBF  01F9               	clrf	Lcd_Write_String@i+1
 10787     1BC0  2BE3               	goto	l3364
 10788     1BC1                     l3360:
 10789                           
 10790                           ;LCD8bits.c: 56:         Lcd_Write_Char(a[i]);
 10791     1BC1  0878               	movf	Lcd_Write_String@i,w
 10792     1BC2  0773               	addwf	Lcd_Write_String@a,w
 10793     1BC3  00F6               	movwf	??_Lcd_Write_String+1
 10794     1BC4  0874               	movf	Lcd_Write_String@a+1,w
 10795     1BC5  00F5               	movwf	??_Lcd_Write_String
 10796     1BC6  1803               	skipnc
 10797     1BC7  0AF5               	incf	??_Lcd_Write_String,f
 10798     1BC8  1FF8               	btfss	Lcd_Write_String@i,7
 10799     1BC9  2BCB               	goto	u5050
 10800     1BCA  03F5               	decf	??_Lcd_Write_String,f
 10801     1BCB                     u5050:
 10802     1BCB  0875               	movf	??_Lcd_Write_String,w
 10803     1BCC  00F7               	movwf	??_Lcd_Write_String+2
 10804     1BCD  0877               	movf	??_Lcd_Write_String+2,w
 10805     1BCE  1283               	bcf	3,5	;RP0=0, select bank0
 10806     1BCF  1303               	bcf	3,6	;RP1=0, select bank0
 10807     1BD0  00FF               	movwf	btemp+1
 10808     1BD1  0876               	movf	??_Lcd_Write_String+1,w
 10809     1BD2  0084               	movwf	4
 10810     1BD3  160A  118A  2000  160A  158A  	fcall	stringtab
 10811     1BD8  160A  158A  2253  160A  158A  	fcall	_Lcd_Write_Char
 10812     1BDD                     l3362:
 10813     1BDD  3001               	movlw	1
 10814     1BDE  07F8               	addwf	Lcd_Write_String@i,f
 10815     1BDF  1803               	skipnc
 10816     1BE0  0AF9               	incf	Lcd_Write_String@i+1,f
 10817     1BE1  3000               	movlw	0
 10818     1BE2  07F9               	addwf	Lcd_Write_String@i+1,f
 10819     1BE3                     l3364:
 10820     1BE3  0878               	movf	Lcd_Write_String@i,w
 10821     1BE4  0773               	addwf	Lcd_Write_String@a,w
 10822     1BE5  00F6               	movwf	??_Lcd_Write_String+1
 10823     1BE6  0874               	movf	Lcd_Write_String@a+1,w
 10824     1BE7  00F5               	movwf	??_Lcd_Write_String
 10825     1BE8  1803               	skipnc
 10826     1BE9  0AF5               	incf	??_Lcd_Write_String,f
 10827     1BEA  1FF8               	btfss	Lcd_Write_String@i,7
 10828     1BEB  2BED               	goto	u5060
 10829     1BEC  03F5               	decf	??_Lcd_Write_String,f
 10830     1BED                     u5060:
 10831     1BED  0875               	movf	??_Lcd_Write_String,w
 10832     1BEE  00F7               	movwf	??_Lcd_Write_String+2
 10833     1BEF  0877               	movf	??_Lcd_Write_String+2,w
 10834     1BF0  1283               	bcf	3,5	;RP0=0, select bank0
 10835     1BF1  1303               	bcf	3,6	;RP1=0, select bank0
 10836     1BF2  00FF               	movwf	btemp+1
 10837     1BF3  0876               	movf	??_Lcd_Write_String+1,w
 10838     1BF4  0084               	movwf	4
 10839     1BF5  160A  118A  2000  160A  158A  	fcall	stringtab
 10840     1BFA  3A00               	xorlw	0
 10841     1BFB  1D03               	skipz
 10842     1BFC  2BFE               	goto	u5071
 10843     1BFD  2BFF               	goto	u5070
 10844     1BFE                     u5071:
 10845     1BFE  2BC1               	goto	l3360
 10846     1BFF                     u5070:
 10847     1BFF                     l35:
 10848     1BFF  0008               	return
 10849     1C00                     __end_of_Lcd_Write_String:
 10850                           
 10851                           	psect	text33
 10852     1A53                     __ptext33:	
 10853 ;; *************** function _Lcd_Write_Char *****************
 10854 ;; Defined at:
 10855 ;;		line 45 in file "LCD8bits.c"
 10856 ;; Parameters:    Size  Location     Type
 10857 ;;  a               1    wreg     unsigned char 
 10858 ;; Auto vars:     Size  Location     Type
 10859 ;;  a               1    2[COMMON] unsigned char 
 10860 ;; Return value:  Size  Location     Type
 10861 ;;                  1    wreg      void 
 10862 ;; Registers used:
 10863 ;;		wreg, status,2, status,0, pclath, cstack
 10864 ;; Tracked objects:
 10865 ;;		On entry : 0/0
 10866 ;;		On exit  : 0/0
 10867 ;;		Unchanged: 0/0
 10868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10869 ;;      Params:         0       0       0       0       0
 10870 ;;      Locals:         1       0       0       0       0
 10871 ;;      Temps:          1       0       0       0       0
 10872 ;;      Totals:         2       0       0       0       0
 10873 ;;Total ram usage:        2 bytes
 10874 ;; Hardware stack levels used: 1
 10875 ;; Hardware stack levels required when called: 1
 10876 ;; This function calls:
 10877 ;;		_Lcd_Port
 10878 ;; This function is called by:
 10879 ;;		_Lcd_Write_String
 10880 ;;		_main
 10881 ;; This function uses a non-reentrant model
 10882 ;;
 10883                           
 10884     1A53                     _Lcd_Write_Char:	
 10885                           ;psect for function _Lcd_Write_Char
 10886                           
 10887                           
 10888                           ;incstack = 0
 10889                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10890                           ;Lcd_Write_Char@a stored from wreg
 10891     1A53  00F2               	movwf	Lcd_Write_Char@a
 10892     1A54                     l2960:
 10893                           
 10894                           ;LCD8bits.c: 46:     RE0 = 1;
 10895     1A54  1283               	bcf	3,5	;RP0=0, select bank0
 10896     1A55  1303               	bcf	3,6	;RP1=0, select bank0
 10897     1A56  1409               	bsf	9,0	;volatile
 10898     1A57                     l2962:
 10899                           
 10900                           ;LCD8bits.c: 47:     Lcd_Port(a);
 10901     1A57  0872               	movf	Lcd_Write_Char@a,w
 10902     1A58  160A  158A  2203  160A  158A  	fcall	_Lcd_Port
 10903     1A5D                     l2964:
 10904                           
 10905                           ;LCD8bits.c: 48:     RE1 = 1;
 10906     1A5D  1283               	bcf	3,5	;RP0=0, select bank0
 10907     1A5E  1303               	bcf	3,6	;RP1=0, select bank0
 10908     1A5F  1489               	bsf	9,1	;volatile
 10909     1A60                     l2966:
 10910                           
 10911                           ;LCD8bits.c: 49:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 10912     1A60  301A               	movlw	26
 10913     1A61  00F1               	movwf	??_Lcd_Write_Char
 10914     1A62                     u5587:
 10915     1A62  0BF1               	decfsz	??_Lcd_Write_Char,f
 10916     1A63  2A62               	goto	u5587
 10917     1A64  0000               	nop
 10918     1A65                     l2968:
 10919                           
 10920                           ;LCD8bits.c: 50:     RE1 = 0;
 10921     1A65  1283               	bcf	3,5	;RP0=0, select bank0
 10922     1A66  1303               	bcf	3,6	;RP1=0, select bank0
 10923     1A67  1089               	bcf	9,1	;volatile
 10924     1A68                     l29:
 10925     1A68  0008               	return
 10926     1A69                     __end_of_Lcd_Write_Char:
 10927                           
 10928                           	psect	text34
 10929     1A83                     __ptext34:	
 10930 ;; *************** function _Lcd_Set_Cursor *****************
 10931 ;; Defined at:
 10932 ;;		line 20 in file "LCD8bits.c"
 10933 ;; Parameters:    Size  Location     Type
 10934 ;;  a               1    wreg     unsigned char 
 10935 ;;  b               1    4[COMMON] unsigned char 
 10936 ;; Auto vars:     Size  Location     Type
 10937 ;;  a               1    5[COMMON] unsigned char 
 10938 ;; Return value:  Size  Location     Type
 10939 ;;                  1    wreg      void 
 10940 ;; Registers used:
 10941 ;;		wreg, status,2, status,0, pclath, cstack
 10942 ;; Tracked objects:
 10943 ;;		On entry : 0/0
 10944 ;;		On exit  : 0/0
 10945 ;;		Unchanged: 0/0
 10946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10947 ;;      Params:         1       0       0       0       0
 10948 ;;      Locals:         1       0       0       0       0
 10949 ;;      Temps:          0       0       0       0       0
 10950 ;;      Totals:         2       0       0       0       0
 10951 ;;Total ram usage:        2 bytes
 10952 ;; Hardware stack levels used: 1
 10953 ;; Hardware stack levels required when called: 2
 10954 ;; This function calls:
 10955 ;;		_Lcd_Cmd
 10956 ;; This function is called by:
 10957 ;;		_main
 10958 ;; This function uses a non-reentrant model
 10959 ;;
 10960                           
 10961     1A83                     _Lcd_Set_Cursor:	
 10962                           ;psect for function _Lcd_Set_Cursor
 10963                           
 10964                           
 10965                           ;incstack = 0
 10966                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 10967                           ;Lcd_Set_Cursor@a stored from wreg
 10968     1A83  00F5               	movwf	Lcd_Set_Cursor@a
 10969     1A84                     l3350:
 10970                           
 10971                           ;LCD8bits.c: 21:     if (a == 1) {
 10972     1A84  0375               	decf	Lcd_Set_Cursor@a,w
 10973     1A85  1D03               	btfss	3,2
 10974     1A86  2A88               	goto	u5031
 10975     1A87  2A89               	goto	u5030
 10976     1A88                     u5031:
 10977     1A88  2A91               	goto	l3354
 10978     1A89                     u5030:
 10979     1A89                     l3352:
 10980                           
 10981                           ;LCD8bits.c: 22:         Lcd_Cmd(0x80 + b - 1);
 10982     1A89  0874               	movf	Lcd_Set_Cursor@b,w
 10983     1A8A  3E7F               	addlw	127
 10984     1A8B  160A  158A  2269  160A  158A  	fcall	_Lcd_Cmd
 10985                           
 10986                           ;LCD8bits.c: 23:     } else if (a == 2) {
 10987     1A90  2A9E               	goto	l23
 10988     1A91                     l3354:
 10989     1A91  3002               	movlw	2
 10990     1A92  0675               	xorwf	Lcd_Set_Cursor@a,w
 10991     1A93  1D03               	btfss	3,2
 10992     1A94  2A96               	goto	u5041
 10993     1A95  2A97               	goto	u5040
 10994     1A96                     u5041:
 10995     1A96  2A9E               	goto	l23
 10996     1A97                     u5040:
 10997     1A97                     l3356:
 10998                           
 10999                           ;LCD8bits.c: 24:         Lcd_Cmd(0xC0 + b - 1);
 11000     1A97  0874               	movf	Lcd_Set_Cursor@b,w
 11001     1A98  3EBF               	addlw	191
 11002     1A99  160A  158A  2269  160A  158A  	fcall	_Lcd_Cmd
 11003     1A9E                     l23:
 11004     1A9E  0008               	return
 11005     1A9F                     __end_of_Lcd_Set_Cursor:
 11006                           
 11007                           	psect	text35
 11008     1A69                     __ptext35:	
 11009 ;; *************** function _Lcd_Cmd *****************
 11010 ;; Defined at:
 11011 ;;		line 7 in file "LCD8bits.c"
 11012 ;; Parameters:    Size  Location     Type
 11013 ;;  a               1    wreg     unsigned char 
 11014 ;; Auto vars:     Size  Location     Type
 11015 ;;  a               1    3[COMMON] unsigned char 
 11016 ;; Return value:  Size  Location     Type
 11017 ;;                  1    wreg      void 
 11018 ;; Registers used:
 11019 ;;		wreg, status,2, status,0, pclath, cstack
 11020 ;; Tracked objects:
 11021 ;;		On entry : 0/0
 11022 ;;		On exit  : 0/0
 11023 ;;		Unchanged: 0/0
 11024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11025 ;;      Params:         0       0       0       0       0
 11026 ;;      Locals:         1       0       0       0       0
 11027 ;;      Temps:          2       0       0       0       0
 11028 ;;      Totals:         3       0       0       0       0
 11029 ;;Total ram usage:        3 bytes
 11030 ;; Hardware stack levels used: 1
 11031 ;; Hardware stack levels required when called: 1
 11032 ;; This function calls:
 11033 ;;		_Lcd_Port
 11034 ;; This function is called by:
 11035 ;;		_Lcd_Set_Cursor
 11036 ;;		_Lcd_Init
 11037 ;;		_Lcd_Clear
 11038 ;;		_Lcd_Shift_Right
 11039 ;;		_Lcd_Shift_Left
 11040 ;; This function uses a non-reentrant model
 11041 ;;
 11042                           
 11043     1A69                     _Lcd_Cmd:	
 11044                           ;psect for function _Lcd_Cmd
 11045                           
 11046                           
 11047                           ;incstack = 0
 11048                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 11049                           ;Lcd_Cmd@a stored from wreg
 11050     1A69  00F3               	movwf	Lcd_Cmd@a
 11051     1A6A                     l2496:
 11052                           
 11053                           ;LCD8bits.c: 8:     RE0 = 0;
 11054     1A6A  1283               	bcf	3,5	;RP0=0, select bank0
 11055     1A6B  1303               	bcf	3,6	;RP1=0, select bank0
 11056     1A6C  1009               	bcf	9,0	;volatile
 11057     1A6D                     l2498:
 11058                           
 11059                           ;LCD8bits.c: 9:     Lcd_Port(a);
 11060     1A6D  0873               	movf	Lcd_Cmd@a,w
 11061     1A6E  160A  158A  2203  160A  158A  	fcall	_Lcd_Port
 11062     1A73                     l2500:
 11063                           
 11064                           ;LCD8bits.c: 10:     RE1 = 1;
 11065     1A73  1283               	bcf	3,5	;RP0=0, select bank0
 11066     1A74  1303               	bcf	3,6	;RP1=0, select bank0
 11067     1A75  1489               	bsf	9,1	;volatile
 11068     1A76                     l2502:
 11069                           
 11070                           ;LCD8bits.c: 11:     _delay((unsigned long)((4)*(8000000/4000.0)));
 11071     1A76  300B               	movlw	11
 11072     1A77  00F2               	movwf	??_Lcd_Cmd+1
 11073     1A78  3062               	movlw	98
 11074     1A79  00F1               	movwf	??_Lcd_Cmd
 11075     1A7A                     u5597:
 11076     1A7A  0BF1               	decfsz	??_Lcd_Cmd,f
 11077     1A7B  2A7A               	goto	u5597
 11078     1A7C  0BF2               	decfsz	??_Lcd_Cmd+1,f
 11079     1A7D  2A7A               	goto	u5597
 11080     1A7E  0000               	nop
 11081     1A7F                     l2504:
 11082                           
 11083                           ;LCD8bits.c: 12:     RE1 = 0;
 11084     1A7F  1283               	bcf	3,5	;RP0=0, select bank0
 11085     1A80  1303               	bcf	3,6	;RP1=0, select bank0
 11086     1A81  1089               	bcf	9,1	;volatile
 11087     1A82                     l14:
 11088     1A82  0008               	return
 11089     1A83                     __end_of_Lcd_Cmd:
 11090                           
 11091                           	psect	text36
 11092     1A03                     __ptext36:	
 11093 ;; *************** function _Lcd_Port *****************
 11094 ;; Defined at:
 11095 ;;		line 3 in file "LCD8bits.c"
 11096 ;; Parameters:    Size  Location     Type
 11097 ;;  a               1    wreg     unsigned char 
 11098 ;; Auto vars:     Size  Location     Type
 11099 ;;  a               1    0[COMMON] unsigned char 
 11100 ;; Return value:  Size  Location     Type
 11101 ;;                  1    wreg      void 
 11102 ;; Registers used:
 11103 ;;		wreg
 11104 ;; Tracked objects:
 11105 ;;		On entry : 0/0
 11106 ;;		On exit  : 0/0
 11107 ;;		Unchanged: 0/0
 11108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11109 ;;      Params:         0       0       0       0       0
 11110 ;;      Locals:         1       0       0       0       0
 11111 ;;      Temps:          0       0       0       0       0
 11112 ;;      Totals:         1       0       0       0       0
 11113 ;;Total ram usage:        1 bytes
 11114 ;; Hardware stack levels used: 1
 11115 ;; This function calls:
 11116 ;;		Nothing
 11117 ;; This function is called by:
 11118 ;;		_Lcd_Cmd
 11119 ;;		_Lcd_Init
 11120 ;;		_Lcd_Write_Char
 11121 ;; This function uses a non-reentrant model
 11122 ;;
 11123                           
 11124     1A03                     _Lcd_Port:	
 11125                           ;psect for function _Lcd_Port
 11126                           
 11127                           
 11128                           ;incstack = 0
 11129                           ; Regs used in _Lcd_Port: [wreg]
 11130                           ;Lcd_Port@a stored from wreg
 11131     1A03  00F0               	movwf	Lcd_Port@a
 11132     1A04                     l2394:
 11133                           
 11134                           ;LCD8bits.c: 4:     PORTD = a;
 11135     1A04  0870               	movf	Lcd_Port@a,w
 11136     1A05  1283               	bcf	3,5	;RP0=0, select bank0
 11137     1A06  1303               	bcf	3,6	;RP1=0, select bank0
 11138     1A07  0088               	movwf	8	;volatile
 11139     1A08                     l11:
 11140     1A08  0008               	return
 11141     1A09                     __end_of_Lcd_Port:
 11142                           
 11143                           	psect	text37
 11144     1AE8                     __ptext37:	
 11145 ;; *************** function _I2C_Master_Read *****************
 11146 ;; Defined at:
 11147 ;;		line 74 in file "I2C.c"
 11148 ;; Parameters:    Size  Location     Type
 11149 ;;  a               2    0[COMMON] unsigned short 
 11150 ;; Auto vars:     Size  Location     Type
 11151 ;;  temp            2    4[COMMON] unsigned short 
 11152 ;; Return value:  Size  Location     Type
 11153 ;;                  2    0[COMMON] unsigned short 
 11154 ;; Registers used:
 11155 ;;		wreg, status,2, status,0, pclath, cstack
 11156 ;; Tracked objects:
 11157 ;;		On entry : 0/0
 11158 ;;		On exit  : 0/0
 11159 ;;		Unchanged: 0/0
 11160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11161 ;;      Params:         2       0       0       0       0
 11162 ;;      Locals:         2       0       0       0       0
 11163 ;;      Temps:          2       0       0       0       0
 11164 ;;      Totals:         6       0       0       0       0
 11165 ;;Total ram usage:        6 bytes
 11166 ;; Hardware stack levels used: 1
 11167 ;; Hardware stack levels required when called: 1
 11168 ;; This function calls:
 11169 ;;		_I2C_Master_Wait
 11170 ;; This function is called by:
 11171 ;;		_main
 11172 ;;		_update_dia_tiempo
 11173 ;; This function uses a non-reentrant model
 11174 ;;
 11175                           
 11176     1AE8                     _I2C_Master_Read:	
 11177                           ;psect for function _I2C_Master_Read
 11178                           
 11179     1AE8                     l3366:	
 11180                           ;incstack = 0
 11181                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 11182                           
 11183                           
 11184                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
 11185     1AE8  160A  158A  2234  160A  158A  	fcall	_I2C_Master_Wait
 11186     1AED                     l3368:
 11187                           
 11188                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
 11189     1AED  1683               	bsf	3,5	;RP0=1, select bank1
 11190     1AEE  1303               	bcf	3,6	;RP1=0, select bank1
 11191     1AEF  1591               	bsf	17,3	;volatile
 11192                           
 11193                           ;I2C.c: 79:     I2C_Master_Wait();
 11194     1AF0  160A  158A  2234  160A  158A  	fcall	_I2C_Master_Wait
 11195     1AF5                     l3370:
 11196                           
 11197                           ;I2C.c: 80:     temp = SSPBUF;
 11198     1AF5  1283               	bcf	3,5	;RP0=0, select bank0
 11199     1AF6  1303               	bcf	3,6	;RP1=0, select bank0
 11200     1AF7  0813               	movf	19,w	;volatile
 11201     1AF8  00F2               	movwf	??_I2C_Master_Read
 11202     1AF9  01F3               	clrf	??_I2C_Master_Read+1
 11203     1AFA  0872               	movf	??_I2C_Master_Read,w
 11204     1AFB  00F4               	movwf	I2C_Master_Read@temp
 11205     1AFC  0873               	movf	??_I2C_Master_Read+1,w
 11206     1AFD  00F5               	movwf	I2C_Master_Read@temp+1
 11207     1AFE                     l3372:
 11208                           
 11209                           ;I2C.c: 81:     I2C_Master_Wait();
 11210     1AFE  160A  158A  2234  160A  158A  	fcall	_I2C_Master_Wait
 11211     1B03                     l3374:
 11212                           
 11213                           ;I2C.c: 82:     if(a == 1){
 11214     1B03  0370               	decf	I2C_Master_Read@a,w
 11215     1B04  0471               	iorwf	I2C_Master_Read@a+1,w
 11216     1B05  1D03               	btfss	3,2
 11217     1B06  2B08               	goto	u5081
 11218     1B07  2B09               	goto	u5080
 11219     1B08                     u5081:
 11220     1B08  2B0D               	goto	l91
 11221     1B09                     u5080:
 11222     1B09                     l3376:
 11223                           
 11224                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
 11225     1B09  1683               	bsf	3,5	;RP0=1, select bank1
 11226     1B0A  1303               	bcf	3,6	;RP1=0, select bank1
 11227     1B0B  1291               	bcf	17,5	;volatile
 11228                           
 11229                           ;I2C.c: 84:     }else{
 11230     1B0C  2B10               	goto	l92
 11231     1B0D                     l91:
 11232                           
 11233                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
 11234     1B0D  1683               	bsf	3,5	;RP0=1, select bank1
 11235     1B0E  1303               	bcf	3,6	;RP1=0, select bank1
 11236     1B0F  1691               	bsf	17,5	;volatile
 11237     1B10                     l92:	
 11238                           ;I2C.c: 86:     }
 11239                           
 11240                           
 11241                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
 11242     1B10  1611               	bsf	17,4	;volatile
 11243     1B11                     l3378:
 11244                           
 11245                           ;I2C.c: 88:     return temp;
 11246     1B11  0875               	movf	I2C_Master_Read@temp+1,w
 11247     1B12  00F1               	movwf	?_I2C_Master_Read+1
 11248     1B13  0874               	movf	I2C_Master_Read@temp,w
 11249     1B14  00F0               	movwf	?_I2C_Master_Read
 11250     1B15                     l93:
 11251     1B15  0008               	return
 11252     1B16                     __end_of_I2C_Master_Read:
 11253                           
 11254                           	psect	text38
 11255     1A34                     __ptext38:	
 11256 ;; *************** function _I2C_Master_Wait *****************
 11257 ;; Defined at:
 11258 ;;		line 32 in file "I2C.c"
 11259 ;; Parameters:    Size  Location     Type
 11260 ;;		None
 11261 ;; Auto vars:     Size  Location     Type
 11262 ;;		None
 11263 ;; Return value:  Size  Location     Type
 11264 ;;                  1    wreg      void 
 11265 ;; Registers used:
 11266 ;;		wreg, status,2
 11267 ;; Tracked objects:
 11268 ;;		On entry : 0/0
 11269 ;;		On exit  : 0/0
 11270 ;;		Unchanged: 0/0
 11271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11272 ;;      Params:         0       0       0       0       0
 11273 ;;      Locals:         0       0       0       0       0
 11274 ;;      Temps:          0       0       0       0       0
 11275 ;;      Totals:         0       0       0       0       0
 11276 ;;Total ram usage:        0 bytes
 11277 ;; Hardware stack levels used: 1
 11278 ;; This function calls:
 11279 ;;		Nothing
 11280 ;; This function is called by:
 11281 ;;		_I2C_Master_Start
 11282 ;;		_I2C_Master_Stop
 11283 ;;		_I2C_Master_Write
 11284 ;;		_I2C_Master_Read
 11285 ;;		_I2C_Master_RepeatedStart
 11286 ;; This function uses a non-reentrant model
 11287 ;;
 11288                           
 11289     1A34                     _I2C_Master_Wait:	
 11290                           ;psect for function _I2C_Master_Wait
 11291                           
 11292     1A34                     l2396:	
 11293                           ;incstack = 0
 11294                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 11295                           
 11296     1A34                     l73:	
 11297                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 11298                           
 11299     1A34  1683               	bsf	3,5	;RP0=1, select bank1
 11300     1A35  1303               	bcf	3,6	;RP1=0, select bank1
 11301     1A36  1914               	btfsc	20,2	;volatile
 11302     1A37  2A39               	goto	u2771
 11303     1A38  2A3A               	goto	u2770
 11304     1A39                     u2771:
 11305     1A39  2A34               	goto	l73
 11306     1A3A                     u2770:
 11307     1A3A                     l2398:
 11308     1A3A  0811               	movf	17,w	;volatile
 11309     1A3B  391F               	andlw	31
 11310     1A3C  1D03               	btfss	3,2
 11311     1A3D  2A3F               	goto	u2781
 11312     1A3E  2A40               	goto	u2780
 11313     1A3F                     u2781:
 11314     1A3F  2A34               	goto	l73
 11315     1A40                     u2780:
 11316     1A40                     l76:
 11317     1A40  0008               	return
 11318     1A41                     __end_of_I2C_Master_Wait:
 11319     007E                     btemp	set	126	;btemp
 11320     007E                     wtemp0	set	126
 11321                           
 11322                           	psect	config
 11323                           
 11324                           ;Config register CONFIG1 @ 0x2007
 11325                           ;	Oscillator Selection bits
 11326                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 11327                           ;	Watchdog Timer Enable bit
 11328                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11329                           ;	Power-up Timer Enable bit
 11330                           ;	PWRTE = OFF, PWRT disabled
 11331                           ;	RE3/MCLR pin function select bit
 11332                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11333                           ;	Code Protection bit
 11334                           ;	CP = OFF, Program memory code protection is disabled
 11335                           ;	Data Code Protection bit
 11336                           ;	CPD = OFF, Data memory code protection is disabled
 11337                           ;	Brown Out Reset Selection bits
 11338                           ;	BOREN = OFF, BOR disabled
 11339                           ;	Internal External Switchover bit
 11340                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11341                           ;	Fail-Safe Clock Monitor Enabled bit
 11342                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11343                           ;	Low Voltage Programming Enable bit
 11344                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11345                           ;	In-Circuit Debugger Mode bit
 11346                           ;	DEBUG = 0x1, unprogrammed default
 11347     2007                     	org	8199
 11348     2007  20D4               	dw	8404
 11349                           
 11350                           ;Config register CONFIG2 @ 0x2008
 11351                           ;	Brown-out Reset Selection bit
 11352                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 11353                           ;	Flash Program Memory Self Write Enable bits
 11354                           ;	WRT = OFF, Write protection off
 11355     2008                     	org	8200
 11356     2008  3FFF               	dw	16383

Data Sizes:
    Strings     24
    Constant    144
    Data        6
    BSS         34
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     40      80
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_5(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> valor(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_6(CODE[3]), valor(BANK1[20]), STR_4(CODE[7]), STR_3(CODE[2]), 
		 -> STR_2(CODE[2]), STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _main->___awdiv
    _main->___xxtofl
    _sprintf->___awdiv
    _sprintf->___lldiv
    _sprintf->___xxtofl
    _scale->___awdiv
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___xxtofl->_I2C_Master_Read
    ___flsub->___xxtofl
    _DEC_A_BCD->___awdiv
    ___awdiv->___awmod
    _Lcd_Init->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _setup->_I2C_Master_Init
    _setear_dia_tiempo->_I2C_Master_Write
    _I2C_Master_Write->_DEC_A_BCD

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   52125
                                             30 BANK1     10    10      0
                          _DEC_A_BCD
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                           ___xxtofl
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   32626
                                             74 BANK0      5     0      5
                                              0 BANK1     30    30      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    8624
                                             26 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    5871
                                             26 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     615
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              5 COMMON     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              0 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMMON    11     3      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              6 COMMON     8     4      4
                                              0 BANK0      6     6      0
                    _I2C_Master_Read (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             45 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             66 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             46 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    7090
                    _I2C_Master_Init
                           _Lcd_Init
                           _ioc_init
                  _setear_dia_tiempo
 ---------------------------------------------------------------------------------
 (2) _setear_dia_tiempo                                    0     0      0    6286
                          _DEC_A_BCD
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2    1770
                                              4 BANK0      2     0      2
                          _DEC_A_BCD (ARG)
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _DEC_A_BCD                                            4     2      2    4516
                                              0 BANK0      4     2      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1816
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1972
                                              6 COMMON     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _ioc_init                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     716
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     590
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       2     1      1     360
                                              4 COMMON     2     1      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     729
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DEC_A_BCD
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _DEC_A_BCD (ARG)
     _I2C_Master_Wait (ARG)
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   ___awdiv
   ___awmod
   ___xxtofl
     _I2C_Master_Read (ARG)
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port
     _ioc_init
     _setear_dia_tiempo
       _DEC_A_BCD
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
   _sprintf
     ___awdiv
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     28      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      AD      12        0.0%
ABS                  0      0      AD       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Aug 09 11:13:09 2023

      ??_setear_dia_tiempo 007E                          pc 0002                         l11 1A08  
                       l14 1A82                         l23 1A9E                         l26 1DC3  
                       l35 1BFF                         l29 1A68                         l70 1B83  
                       l73 1A34                         l91 1B0D                         l76 1A40  
                       l92 1B10                         l93 1B15                         l85 1A28  
                       l79 1A1F                         l88 10C1               ___awdiv@sign 007B  
       DEC_A_BCD@convertir 0020                         fsr 0004        ___wmul@multiplicand 0072  
      __Umul8_16@word_mpld 0076                        l201 0178                        l220 1C14  
                      l221 1C17                        l222 1C1A                        l214 1C05  
                      l216 1C08                        l224 1C42                        l217 1C0B  
                      l218 1C0E                        l219 1C11                        l403 1ACF  
                      l405 1AE7                        l333 0FFF                        l173 1697  
                      l326 1325                        l183 1757                        l192 1CCB  
                      l352 01F7                        l602 1A33                        l178 16F6  
                      l620 1F47                        l613 088C                        l621 1EBB  
                      l198 1B4B                        l606 08A1                        l439 1E29  
                      l631 1F3A                        l616 08A1                        l624 1F0A  
                      l393 0785                        l385 0624                        l730 1381  
                      l556 1E90                        l573 1FFF                        l709 1C86  
                      l590 1D04                        l734 1404                        l574 1F66  
                      l591 1D19                        l751 14CD                        l743 157D  
                      l719 1BBD                        l399 07CC                        l736 13DD  
                      l584 1FF2                        l832 0C10                        l569 111A  
                      l761 1513                        l577 1FC2                        l594 0020  
                      l826 0CA0                        l755 14F1                        l659 1D6D  
                      l589 1CE8                        l597 008C                        l773 157D  
                      l845 0817                        l598 00A5                        l870 08C6  
                      l847 0829                        l776 1AC2                        l872 095B  
                      l890 1A52                        l883 0925                        l884 0931  
                      _GIE 005F                        _RE0 0048                        _RE1 0049  
                      _dia 00EE                        _mes 00EC                        _min 00D2  
                      _sec 00D4                        _pot 00CC                        fsr0 0004  
                      indf 0000               ___awmod@sign 0075               ___flmul@aexp 0032  
             ___flmul@bexp 0033               ___flmul@sign 002D               ___flmul@temp 0038  
             ___flmul@prod 0034  __end_of_setear_dia_tiempo 0179               ___fltol@exp1 0056  
                     l3000 0114                       l3002 0173                       l3100 1EFB  
                     l3012 1231                       l3004 111E                       l3102 1EFC  
                     l3014 1237                       l3006 1124                       l3022 0CA4  
                     l2400 1E2A                       l3200 1CFC                       l3112 1F16  
                     l3104 1F04                       l3040 0E28                       l3024 0CA8  
                     l2410 1E3A                       l2402 1E2B                       l3202 1D16  
                     l3210 0018                       l3130 1F53                       l3122 1F2F  
                     l3114 1F1F                       l3106 1F0E                       l3018 12E2  
                     l3034 0D99                       l3026 0CAA                       l2500 1A73  
                     l2420 1E4E                       l2412 1E3F                       l2404 1E2F  
                     l3204 1D18                       l3220 0068                       l3212 0034  
                     l3140 1F67                       l3124 1F3F                       l3116 1F28  
                     l3052 0F44                       l3036 0DA0                       l3028 0CB1  
                     l3044 0E55                       l2502 1A76                       l2430 1E74  
                     l2422 1E55                       l2414 1E43                       l2406 1E34  
                     l2510 1A20                       l3222 00A2                       l3214 003C  
                     l3230 1A31                       l3310 08CE                       l3302 08A5  
                     l3150 1F92                       l3142 1F6F                       l3134 1F5C  
                     l3070 1A51                       l3062 1A42                       l3054 0F4B  
                     l3046 0E5C                       l2504 1A7F                       l2440 1E8C  
                     l2432 1E75                       l2424 1E59                       l2416 1E45  
                     l2408 1E36                       l2512 1A25                       l3400 1CAC  
                     l3224 00A4                       l3216 0040                       l3208 0004  
                     l3232 1A33                       l2600 132F                       l3320 08E7  
                     l3304 08AA                       l3160 1FC6                       l3152 1FA4  
                     l3144 1F80                       l3128 1F48                       l3080 1EAB  
                     l3064 1A43                       l2530 1DE4                       l2522 1DC4  
                     l2434 1E7C                       l2426 1E5D                       l2418 1E4B  
                     l2450 10CC                       l2506 1A17                       l2514 10B8  
                     l3402 1CB2                       l3218 0064                       l2610 1346  
                     l2602 1333                       l3250 085C                       l3242 083E  
                     l3330 0910                       l3322 08EE                       l3314 08D7  
                     l3306 08AE                       l3170 1FE0                       l3154 1FB2  
                     l3146 1F82                       l3090 1ED1                       l3074 1E91  
                     l3066 1A49                       l3058 0FD3                       l3410 017F  
                     l2540 1E12                       l2532 1DE8                       l2524 1DD4  
                     l2428 1E6E                       l2436 1E82                       l2460 10E0  
                     l2452 10CE                       l2444 10C2                       l2508 1A1C  
                     l2516 10BD                       l3404 1CB7                       l3228 1A29  
                     l2700 1416                       l2620 135A                       l2612 1347  
                     l2604 1334                       l3260 0871                       l3252 0860  
                     l3244 0851                       l3236 082A                       l3340 0949  
                     l3332 091B                       l3324 08F2                       l3316 08DA  
                     l3308 08BE                       l3156 1FB3                       l3148 1F89  
                     l3092 1ED3                       l3076 1EA2                       l3068 1A4F  
                     l3500 0451                       l3420 019F                       l3412 0185  
                     l3350 1A84                       l2542 1E1B                       l2534 1DF1  
                     l2526 1DD7                       l2438 1E87                       l2470 10FF  
                     l2462 10E7                       l2454 10D2                       l2446 10C3  
                     l2518 1B16                       l3406 1CC6                       l2710 143E  
                     l2702 142D                       l2630 1369                       l2622 135B  
                     l2606 1339                       l2614 1349                       l3270 0891  
                     l3262 087A                       l3246 0852                       l3238 0835  
                     l3190 1ADD                       l3182 1AC3                       l3342 094E  
                     l3334 091F                       l3326 0900                       l3318 08DE  
                     l3166 1FCE                       l3158 1FBC                       l3094 1EDA  
                     l3086 1EBC                       l2550 1C45                       l3510 049F  
                     l3502 045A                       l3430 01D9                       l3422 01A2  
                     l3414 018A                       l3352 1A89                       l3360 1BC1  
                     l2536 1E03                       l2528 1DE0                       l2544 1E21  
                     l2472 1106                       l2464 10EB                       l2456 10D7  
                     l2448 10C7                       l2720 1467                       l2712 1442  
                     l2704 1431                       l2640 1387                       l2632 136E  
                     l2624 135F                       l2616 1351                       l2608 133E  
                     l3272 0896                       l3248 085A                       l3280 1D2E  
                     l3192 1AE3                       l3184 1AC5                       l3344 0952  
                     l3336 0929                       l3328 0909                       l3176 1FE7  
                     l3168 1FD7                       l3096 1EE3                       l3088 1EC2  
                     l2800 0965                       l2560 1C5D                       l2552 1C4B  
                     l3600 07A0                       l3504 0462                       l3512 04A8  
                     l3440 01F9                       l3432 01DF                       l3424 01A8  
                     l3416 018F                       l3408 017C                       l3370 1AF5  
                     l2394 1A04                       l3354 1A91                       l3362 1BDD  
                     l2538 1E11                       l2466 10EF                       l2458 10DD  
                     l2474 110C                       l2722 14A5                       l2730 14BF  
                     l2714 1443                       l2706 1435                       l2650 1395  
                     l2642 138B                       l2634 1376                       l2626 1363  
                     l2618 1354                       l3258 0868                       l3290 1D5F  
                     l3282 1D32                       l3274 1D1A                       l3186 1AC9  
                     l3346 0953                       l3338 0933                       l3178 1FF7  
                     l3098 1EF1                       l2490 0820                       l2482 0804  
                     l2810 097C                       l2802 0969                       l2562 1C6E  
                     l2554 1C4E                       l2570 1C82                       l3602 07A0  
                     l3530 056F                       l3522 052E                       l3514 052A  
                     l3506 0480                       l3450 0239                       l3610 07C8  
                     l3442 0217                       l3426 01AD                       l3434 01F1  
                     l3418 0191                       l2396 1A34                       l3372 1AFE  
                     l3356 1A97                       l3364 1BE3                       l2476 1111  
                     l2468 10F9                       l3196 1CCC                       l2740 14EC  
                     l2732 14D5                       l2724 14A9                       l2716 144C  
                     l2708 143C                       l2660 139F                       l2652 1397  
                     l2644 138F                       l2636 1377                       l2628 1364  
                     l3268 0881                       l3284 1D36                       l3276 1D22  
                     l3292 1D65                       l3188 1AD6                       l2492 0825  
                     l2484 0806                       l2900 0C0D                       l2820 0993  
                     l2812 097E                       l2804 096A                       l2564 1C74  
                     l2556 1C55                       l2548 1C43                       l2580 1B94  
                     l3604 07AE                       l3540 05DF                       l3532 057B  
                     l3516 052C                       l3460 0277                       l3452 023D  
                     l3444 0223                       l3436 01F5                       l3428 01C2  
                     l3700 171A                       l2398 1A3A                       l3374 1B03  
                     l3366 1AE8                       l3358 1BBE                       l2478 1116  
                     l3390 1C99                       l3382 1C87                       l3198 1CE0  
                     l2750 14FF                       l2742 14F0                       l2734 14DA  
                     l2726 14AB                       l2718 1451                       l2670 13A9  
                     l2662 13A1                       l2654 1399                       l2646 1391  
                     l2638 1379                       l3286 1D48                       l3278 1D25  
                     l2486 080D                       l2910 0C2C                       l2830 09A8  
                     l2822 0994                       l2814 0986                       l2806 096F  
                     l2566 1C75                       l2558 1C59                       l2590 1BB3  
                     l2582 1B98                       l2574 1B84                       l3550 05F9  
                     l3534 0580                       l3526 0565                       l3470 02C7  
                     l3462 0290                       l3454 0256                       l3446 0227  
                     l3702 1725                       l3376 1B09                       l3368 1AED  
                     l2496 1A6A                       l3392 1C9A                       l3384 1C91  
                     l2760 1510                       l2744 14F5                       l2752 1501  
                     l2728 14B0                       l2680 13E1                       l2672 13AB  
                     l2664 13A3                       l2656 139B                       l2648 1393  
                     l3296 1A9F                       l3288 1D56                       l2488 0811  
                     l2920 0C72                       l2912 0C45                       l2904 0C15  
                     l2840 09C3                       l2832 09B0                       l2824 0999  
                     l2816 098B                       l2808 0974                       l2568 1C7C  
                     l2584 1B9C                       l2576 1B8A                       l2592 1BB9  
                     l3560 062D                       l3552 05FF                       l3536 0585  
                     l3544 05E6                       l3528 0569                       l3480 0354  
                     l3472 02CB                       l3464 029B                       l3456 026F  
                     l3448 022B                       l3608 07B4                       l3720 1779  
                     l3712 175B                       l3704 1730                       l3640 15A7  
                     l3378 1B11                       l2498 1A6D                       l3394 1C9D  
                     l3386 1C95                       l2770 152F                       l2746 14F8  
                     l2738 14E3                       l2754 1505                       l2690 13F8  
                     l2682 13E8                       l2666 13A5                       l2658 139D  
                     l2674 13AD                       l3298 1AA3                       l2930 0C8F  
                     l2922 0C7C                       l2906 0C1A                       l2914 0C4B  
                     l2850 0A3F                       l2842 09D1                       l2834 09B5  
                     l2826 099E                       l2818 098F                       l2586 1BA6  
                     l2578 1B8D                       l3570 06B4                       l3562 0632  
                     l3554 060C                       l3546 05EE                       l3538 05C0  
                     l3490 03D6                       l3482 035D                       l3474 02D1  
                     l3466 02A1                       l3458 0273                       l3730 17B5  
                     l3722 1784                       l3714 1763                       l3706 174C  
                     l3650 15F3                       l3642 15B8                       l3634 157E  
                     l2940 1D76                       l3396 1CA0                       l3388 1C96  
                     l2780 1563                       l2772 154D                       l2764 1518  
                     l2756 1506                       l2748 14FA                       l2684 13EA  
                     l2692 13FC                       l2676 13AE                       l2668 13A7  
                     l2596 1326                       l2924 0C7E                       l2932 0C94  
                     l2916 0C58                       l2908 0C28                       l2860 0AAB  
                     l2852 0A5B                       l2844 09DE                       l2836 09BA  
                     l2828 09A6                       l2588 1BAC                       l3572 06EF  
                     l3580 0753                       l3564 0637                       l3556 061B  
                     l3548 05F5                       l3492 03E5                       l3484 0378  
                     l3476 02F0                       l3468 02B4                       l3732 17C0  
                     l3724 178F                       l3716 1770                       l3708 1751  
                     l3660 164C                       l3652 160E                       l3644 15C9  
                     l3636 1583                       l2950 1DA5                       l2942 1D7C  
                     l3398 1CA6                       l2790 1573                       l2782 1568  
                     l2766 151D                       l2774 1551                       l2758 150A  
                     l2694 1408                       l2686 13EE                       l2678 13C5  
                     l2598 132B                       l2934 0C98                       l2926 0C8A  
                     l2918 0C63                       l2870 0B35                       l2862 0AB9  
                     l2854 0A77                       l2846 09F9                       l3582 075B  
                     l3574 070E                       l3566 063B                       l3558 0620  
                     l3494 0400                       l3478 033B                       l3486 0380  
                     l3590 0771                       l3734 17E8                       l3726 17AB  
                     l3718 1774                       l3662 1655                       l3654 1617  
                     l3646 15DA                       l3638 1596                       l2960 1A54  
                     l2952 1DAB                       l2944 1D8B                       l2792 1578  
                     l2784 1569                       l2776 1556                       l2768 152B  
                     l2696 140D                       l2688 13EF                       l2928 0C8E  
                     l2880 0BC5                       l2872 0B43                       l2864 0AD6  
                     l2856 0A80                       l2848 0A15                       l3592 0777  
                     l3584 0760                       l3576 0714                       l3568 0659  
                     l3496 0427                       l3488 038F                       l3736 17ED  
                     l3728 17B0                       l3680 16B9                       l3672 169B  
                     l3664 1677                       l3656 1620                       l3648 15EB  
                     l2962 1A57                       l2970 1B4C                       l2954 1DB1  
                     l2946 1D94                       l2938 1D6E                       l2794 157C  
                     l2786 156D                       l2778 155B                       l2890 0BEA  
                     l2882 0BD3                       l2874 0B6E                       l2866 0AED  
                     l2858 0A8E                       l3594 077F                       l3586 0764  
                     l3578 0718                       l3498 0436                       l3682 16C4  
                     l3674 16A3                       l3666 1680                       l3658 1629  
                     l2964 1A5D                       l2980 1B82                       l2972 1B50  
                     l2956 1DB7                       l2948 1D9F                       l2788 156F  
                     l2884 0BDC                       l2892 0BF0                       l2876 0B94  
                     l2868 0B0A                       l2796 095C                       l3596 0790  
                     l3588 076A                       l3692 16FA                       l3684 16CF  
                     l3676 16B0                       l3668 1691                       l2966 1A60  
                     l2974 1B53                       l2958 1DBD                       l2982 1C01  
                     l2894 0BF4                       l2886 0BE0                       l2878 0BBC  
                     l2798 0961                       l3598 0791                       l3790 020F  
                     l3694 1702                       l3686 16EB                       l3678 16B4  
                     l2968 1A65                       l2976 1B80                       l3792 1C28  
                     l2984 1C1D                       l2992 00A6                       l2896 0BF5  
                     l2888 0BE1                       l3696 170F                       l3688 16F0  
                     l2978 1B81                       l2986 1C20                       l2994 00C0  
                     l2898 0BF9                       l3698 1715                       l2996 00DC  
                     l2998 00F8                       STR_1 10A0                       STR_2 10B6  
                     STR_3 10B6                       STR_4 10A7                       STR_5 10AE  
                     STR_6 10B3                       u3000 0825                       u3001 0824  
                     u3010 1DD4                       u3011 1DD3                       u3100 1C5D  
                     u3101 1C5C                       u3030 1DE8                       u3031 1DE7  
                     u4000 0C3B                       u3120 1C6E                       u3200 1BB9  
                     u3025 1DD9                       u3121 1C6D                       u3201 1BB8  
                     u3050 1E03                       u3210 1333                       u4010 0C58  
                     u3051 1E02                       u3211 1332                       u4011 0C57  
                     u3115 1C5E                       u3300 13C5                       u3220 1339  
                     u4020 0C72                       u3140 1C82                       u3045 1DEA  
                     u3301 13C4                       u3221 1338                       u4021 0C71  
                     u4005 0C36                       u3141 1C81                       u3125 1C6A  
                     u3070 1E21                       u3310 13D0                       u3230 133E  
                     u4030 0C8E                       u3150 1B8A                       u3071 1E20  
                     u3055 1DFF                       u3311 13CE                       u3231 133D  
                     u4031 0C8D                       u4015 0C54                       u3135 1C76  
                     u3151 1B89                       u4040 1B63                       u3400 1431  
                     u3320 13D1                       u3240 135A                       u5000 093E  
                     u3080 1C4B                       u3065 1E13                       u3401 1430  
                     u3305 13C1                       u3241 1359                       u4025 0C6E  
                     u3081 1C4A                       u4105 1254                       u3410 1435  
                     u3330 13E1                       u3250 1363                       u5010 094E  
                     u3170 1B9C                       u4050 1124                       u4130 0CA8  
                     u3411 1434                       u3331 13E0                       u3251 1362  
                     u5011 094D                       u3171 1B9B                       u4115 12A1  
                     u4051 1123                       u4131 0CA7                       u3420 1442  
                     u3340 13EE                       u3260 1369                       u5020 0952  
                     u3180 1BA6                       u4300 1A49                       u4220 0E5C  
                     u4140 0CB1                       u5100 019F                       u4045 1B5E  
                     u3421 1441                       u3341 13ED                       u3261 1368  
                     u5021 0951                       u5005 0939                       u3181 1BA5  
                     u3165 1B8E                       u4125 12ED                       u4301 1A48  
                     u4221 0E5B                       u4205 0DEF                       u4141 0CB0  
                     u5101 019E                       u5030 1A89                       u3510 14F0  
                     u3270 136E                       u4310 1A4F                       u5110 01F0  
                     u5031 1A88                       u3511 14EF                       u3271 136D  
                     u3095 1C4F                       u4311 1A4E                       u4215 0E2B  
                     u5111 01EF                       u5040 1A97                       u2800 1E3A  
                     u3600 153E                       u3520 14F5                       u3440 1467  
                     u3360 1404                       u3280 1387                       u4320 1EA2  
                     u5200 03E5                       u5120 0223                       u5041 1A96  
                     u2801 1E39                       u3521 14F4                       u3505 14E5  
                     u3441 1466                       u3361 1403                       u3281 1386  
                     u4321 1EA1                       u3185 1BA2                       u4065 1141  
                     u5201 03E4                       u5121 0222                       u5050 1BCB  
                     u2810 1E4B                       u3610 154D                       u3530 14FF  
                     u3370 1408                       u3290 138B                       u4410 1F27  
                     u4330 1EBA                       u4090 1237                       u5210 0400  
                     u5130 0227                       u2811 1E4A                       u3611 154C  
                     u3531 14FE                       u3451 147E                       u3443 1463  
                     u3435 1445                       u3371 1407                       u3355 13F1  
                     u3291 138A                       u4411 1F26                       u4331 1EB9  
                     u3195 1BAD                       u4091 1236                       u4075 119B  
                     u4235 0E7C                       u4155 0CD1                       u5211 03FF  
                     u5131 0226                       u5060 1BED                       u2900 10D2  
                     u3620 1556                       u3540 1505                       u3460 1492  
                     u3452 147F                       u3380 140D                       u4500 1FC2  
                     u4420 1F2E                       u3700 0993                       u4260 0F4B  
                     u4180 0DA0                       u5300 05ED                       u5220 0427  
                     u5140 0256                       u2901 10D1                       u3621 1555  
                     u3605 1539                       u3541 1504                       u3461 1493  
                     u3453 1484                       u3381 140C                       u4501 1FC1  
                     u4421 1F2D                       u4405 1F17                       u3701 0992  
                     u4085 11F0                       u4261 0F4A                       u4245 0EB8  
                     u4181 0D9F                       u4165 0D0D                       u5301 05EC  
                     u5221 0426                       u5205 03E1                       u5141 0255  
                     u5070 1BFF                       u2830 1E5D                       u2910 10DD  
                     u3630 155B                       u3550 150A                       u3470 14B0  
                     u3462 1498                       u3454 1485                       u4510 1FC6  
                     u4350 1EF1                       u3710 0999                       u5310 060C  
                     u5230 0436                       u5150 0290                       u5071 1BFE  
                     u2831 1E5C                       u2911 10DC                       u3631 155A  
                     u3551 1509                       u3471 14AF                       u3463 1499  
                     u3455 148A                       u3391 141F                       u4511 1FC5  
                     u4351 1EF0                       u3711 0998                       u4255 0F03  
                     u4175 0D58                       u5311 060B                       u5231 0435  
                     u5151 028F                       u5080 1B09                       u3640 1568  
                     u3560 1510                       u3480 14D5                       u3456 148B  
                     u3392 1426                       u4520 1FCD                       u4440 1F3F  
                     u3720 099E                       u5400 0790                       u5320 061B  
                     u5240 0451                       u5160 02CB                       u5081 1B08  
                     u2825 1E4F                       u3641 1567                       u3561 150F  
                     u3481 14D4                       u3393 142D                       u4521 1FCC  
                     u4441 1F3E                       u4345 1EDC                       u3801 0A9D  
                     u3721 099D                       u5401 078F                       u5321 061A  
                     u5241 0450                       u5161 02CA                       u2770 1A3A  
                     u2850 1E6E                       u2930 10EF                       u3650 156D  
                     u3570 1517                       u3490 14DA                       u4610 1AE3  
                     u4450 1F53                       u4370 1F0A                       u3802 0AA4  
                     u3730 09B5                       u5410 07A0                       u5330 0632  
                     u5170 0354                       u5090 0185                       u2771 1A39  
                     u2851 1E6D                       u2931 10EE                       u3651 156C  
                     u3571 1516                       u3491 14D9                       u4611 1AE2  
                     u4451 1F52                       u4435 1F31                       u4371 1F09  
                     u4355 1EED                       u3811 0AC8                       u3803 0AAB  
                     u3731 09B4                       u4275 0F5E                       u4195 0DB3  
                     u5411 079F                       u5331 0631                       u5315 0608  
                     u5235 0432                       u5171 0353                       u5091 0184  
                     _PEIE 005E                       u2780 1A40                       u2940 10F9  
                     u4620 1CE0                       u3660 157C                       u3580 151D  
                     u4540 1FDF                       u4460 1F65                       u4380 1F0E  
                     u3812 0ACF                       u3740 09BA                       u5420 07AE  
                     u5260 0564                       u5180 0378                       u5500 1757  
                     u2781 1A3F                       u2845 1E5E                       u2941 10F8  
                     u2925 10E1                       u4621 1CDF                       u4701 0077  
                     u3661 157B                       u3581 151C                       u4605 1AD7  
                     u4541 1FDE                       u4461 1F64                       u4381 1F0D  
                     u4365 1EFD                       u3813 0AD6                       u3741 09B9  
                     u4285 0F9A                       u5421 07AD                       u5405 078C  
                     u5325 0617                       u5261 0563                       u5181 0377  
                     u5501 1756                       u2870 1E82                       u2790 1E2F  
                     u4630 1CFC                       u4710 00A2                       u4702 0078  
                     u3590 152F                       u4550 1FE6                       u4390 1F15  
                     u3670 0969                       u5430 07C8                       u5270 056F  
                     u5190 038F                       u5510 175B                       u2871 1E81  
                     u2855 1E6A                       u2791 1E2E                       u4631 1CFB  
                     u4711 00A1                       u4703 007D                       u3591 152E  
                     u4551 1FE5                       u4535 1FCF                       u4391 1F14  
                     u3831 0AFC                       u3751 0A07                       u3671 0968  
                     u4295 0FD6                       u5431 07C7                       u5415 079C  
                     u5271 056E                       u5255 0531                       u5191 038E  
                     u5511 175A                       u2880 1E87                       u2960 110C  
                     u4640 1D16                       u4704 007E                       u4720 1A31  
                     u4480 1FA4                       u3920 0BE0                       u3832 0B03  
                     u3752 0A0E                       u3680 096F                       u5360 075A  
                     u5280 057B                       u5520 1770                       u5440 1697  
                     u2881 1E86                       u2865 1E76                       u2961 110B  
                     u2945 10F5                       u4641 1D15                       u4705 0083  
                     u4721 1A30                       u4481 1FA3                       u3921 0BDF  
                     u3905 0BBE                       u3841 0B27                       u3833 0B0A  
                     u3825 0AD8                       u3761 0A23                       u3753 0A15  
                     u3681 096E                       u5361 0759                       u5345 06B7  
                     u5281 057A                       u5265 0560                       u5521 176F  
                     u5441 1696                       u2970 1111                       u2890 10C7  
                     u4706 0084                       u4650 0018                       u4810 0891  
                     u4730 0835                       u4570 1FF7                       u3842 0B2E  
                     u3762 0A2A                       u3690 0974                       u5370 0770  
                     u5450 169B                       u2971 1110                       u2955 1100  
                     u2891 10C6                       u4715 009E                       u4651 0017  
                     u4811 0890                       u4731 0834                       u4571 1FF6  
                     u4475 1F8B                       u3915 0BD5                       u3851 0B52  
                     u3843 0B35                       u3771 0A4D                       u3763 0A31  
                     u3691 0973                       u5371 076F                       u5355 071B  
                     u5195 038B                       u5451 169A                       u4660 0034  
                     u4820 0896                       u4740 084C                       u4580 1AC9  
                     u4900 08AE                       u2980 0811                       u3940 0BF4  
                     u3860 0B7A                       u3852 0B59                       u3772 0A54  
                     u5380 0777                       u5460 16B0                       u4645 1D12  
                     u4661 0033                       u4821 0895                       u4805 0883  
                     u4581 1AC8                       u4901 08AD                       u4565 1FE9  
                     u4485 1FA0                       u2981 0810                       u3941 0BF3  
                     u3853 0B60                       u3781 0A69                       u3773 0A5B  
                     u5381 0776                       u5525 176C                       u5461 16AF  
                     u4670 0040                       u4750 0860                       u4830 1D22  
                     u4910 08CE                       u3950 0BF9                       u3782 0A70  
                     u5390 077F                       u5470 16F6                       u4671 003F  
                     u4751 085F                       u4831 1D21                       u4911 08CD  
                     u4495 1FB5                       u3951 0BF8                       u3935 0BE3  
                     u3871 0B86                       u3783 0A77                       u5391 077E  
                     u5295 0588                       u5471 16F5                       u4760 0867  
                     u3960 0C0D                       u3880 0BA2                       u3872 0B8D  
                     u5480 16FA                       u4681 004F                       u4761 0866  
                     u4745 0847                       u3961 0C0C                       u3873 0B94  
                     u3865 0B75                       u5537 17F5                       u5481 16F9  
                     u5465 16AC                       u4690 0068                       u4682 0050  
                     u4850 1D36                       u4930 08ED                       u3970 0C14  
                     u5490 170F                       u5547 1D72                       u4691 0067  
                     u4683 0055                       u4851 1D35                       u4595 1AD0  
                     u4931 08EC                       u2995 0818                       u3971 0C13  
                     u3891 0BAE                       u3795 0A79                       u5491 170E  
                     u4684 0056                       u4780 0879                       u4860 1D48  
                     u3980 0C1A                       u3892 0BB5                       u5557 1D80  
                     u4685 005B                       u4781 0878                       u4861 1D47  
                     u4845 1D27                       u4925 08DF                       u3981 0C19  
                     u3893 0BBC                       u3885 0B9D                       u4686 005C  
                     u4790 0880                       u4950 090F                       u3990 0C2C  
                     u5567 1D8F                       u4791 087F                       u4775 0869  
                     u4951 090E                       u3991 0C2B                       u5495 170B  
                     u4880 1D65                       u5577 1D9C                       u4881 1D64  
                     u4865 1D44                       u4945 0901                       u4970 091F  
                     u4890 08AA                       u5587 1A62                       u4875 1D57  
                     u4971 091E                       u4891 08A9                       u4980 0925  
                     u5597 1A7A                       u4981 0924                       u4965 0914  
                     u4990 0929                       u4991 0928          ?_Lcd_Write_String 0073  
                     _main 157E                       _hora 00D0                       _year 00EA  
                     btemp 007E                       start 0000         ??_Lcd_Write_String 0075  
             _sprintf$1076 00A5            __end_of_Lcd_Cmd 1A83           ?_I2C_Master_Init 0020  
         ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
            ___fltol@sign1 0055            __end_of___fladd 157E                      ?_main 0070  
          __end_of___awdiv 1E91            __end_of___flneg 1A34            __end_of___awmod 111B  
          __end_of___flmul 0CA1            __end_of___flsub 1AC3            __end_of___fltol 08A2  
                    _ANSEL 0188            __end_of___lldiv 1E2A            ___awdiv@divisor 0076  
          __end_of___llmod 1D6E            __end_of___lwdiv 1C87            __end_of___lwmod 1BBE  
          ___awdiv@counter 007A                      _PORTA 0005                      _PORTB 0006  
                    _PORTD 0008                      _PORTE 0009                      _TRISA 0085  
                    _TRISB 0086                      _TRISD 0088                      _SSPIE 0463  
                    _TRISE 0089                      _SSPIF 0063            __end_of_dpowers 10A0  
                    _scale 0CA1            __end_of_isdigit 1A53                      _valor 00D6  
                    _setup 1C87                      pclath 000A          __end_of_DEC_A_BCD 1B4C  
                    status 0003                      wtemp0 007E            __end_of_sprintf 07CD  
              ioc_init@pin 0072           __end_of_Lcd_Init 1DC4           __end_of_Lcd_Port 1A09  
          __initialization 07CD               __end_of_main 1800                     ??_main 00BE  
        ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0024         ??_I2C_Master_Start 0070  
       ??_I2C_Master_Write 007E           ___llmod@dividend 0074                     ?_scale 003A  
         ___awdiv@dividend 0078                     ?_setup 0070                     _ANSELH 0189  
                ??_Lcd_Cmd 0071                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
         __end_of___xxtofl 095C           __end_of__powers_ 1044                     ___flge 0004  
                   ___fleq 1CCC                  ??___fladd 0056                     ___wmul 1AC3  
                ??___awdiv 007A                  ??___flneg 0074                  ??___awmod 0074  
                ??___flmul 0028                  ??___flsub 007E           __end_of_ioc_init 1C43  
                ??___fltol 0051                  ??___lldiv 0078                  ??___llmod 0078  
                ??___lwdiv 0079                  ??___lwmod 0074                     _fround 111B  
         ___awdiv@quotient 007C            ___awmod@divisor 0070            ___awmod@counter 0074  
                ??_isdigit 0070                  ??_sprintf 00A0            Lcd_Set_Cursor@a 0075  
          Lcd_Set_Cursor@b 0074                 ___flge@ff1 0070                 ___flge@ff2 0074  
             ___xxtofl@arg 0022               ___xxtofl@exp 0021               ___xxtofl@val 0076  
               ___fleq@ff1 0070                 ___fleq@ff2 0074    __end_of__initialization 07FC  
               ___flneg@f1 0070                 ___fltol@f1 004D             __pcstackCOMMON 0070  
             __pidataBANK1 1A09              __end_of_scale 1000              __end_of_setup 1CCC  
           _Lcd_Set_Cursor 1A83                 __div_to_l_ 1F48             _OPTION_REGbits 0081  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070            __div_to_l_@exp1 0025  
          __div_to_l_@cntr 0024                    ??_scale 003E            __div_to_l_@quot 0020  
                  ??_setup 007E                 __pbssBANK1 00C8              __div_to_l_@f1 0070  
            __div_to_l_@f2 0074          __end_of__Umul8_16 082A                 __pmaintext 157E  
                  ?___flge 0070                    ?___fleq 0070                    ?___wmul 0070  
                  ?_fround 003A     __end_of_Lcd_Set_Cursor 1A9F                  ?___xxtofl 0076  
               ??_Lcd_Init 0074                 ??_Lcd_Port 0070                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 1000                  ?_ioc_init 0070  
           _Lcd_Write_Char 1A53                    _Lcd_Cmd 1A69          __end_of__npowers_ 1078  
               _scale$1075 0048                  _DEC_A_BCD 1B16                    ___fladd 1326  
                  ___awdiv 1E2A                    ___flneg 1A29                    ___awmod 10C2  
                  ___flmul 095C                    ___flsub 1A9F                    ___fltol 082A  
                  ___lldiv 1DC4                    ___llmod 1D1A                    ___lwdiv 1C43  
                  ___lwmod 1B84            ?_Lcd_Set_Cursor 0074                    __ptext1 0179  
                  __ptext2 0CA1                    __ptext3 1A41                    __ptext4 111B  
                  __ptext5 1B84                    __ptext6 1C43                    __ptext7 095C  
                  __ptext8 0803                    __ptext9 1E91                ?__div_to_l_ 0070  
                  _dpowers 1078                    _isdigit 1A41                 ??___xxtofl 007A  
         ___awmod@dividend 0072                    _sprintf 0179                    clrloop0 1A10  
   __end_of_Lcd_Write_Char 1A69       end_of_initialization 07FC                 ??_ioc_init 0070  
          ___lldiv@divisor 0070            ___lldiv@counter 007D                 ?_DEC_A_BCD 0020  
         I2C_Master_Init@c 0020           I2C_Master_Read@a 0070                  Lcd_Port@a 0070  
           __tdiv_to_l_@f1 0070             __tdiv_to_l_@f2 0074              ??__tdiv_to_l_ 0078  
                _PORTBbits 0006                ___fladd@grs 0061              ___xxtofl@sign 0020  
                _TRISCbits 0087            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0073  
        Lcd_Write_String@i 0078                ___flmul@grs 002E                 main@year_0 00C6  
               main@year_1 00C7             __end_of___flge 00A6             __end_of___fleq 1D1A  
           __end_of___wmul 1AE8           _Lcd_Write_String 1BBE             __end_of_fround 1326  
      start_initialization 07CD        __end_of__tdiv_to_l_ 1F48          ??_I2C_Master_Init 0024  
        ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070  
          ___llmod@divisor 0070            ___llmod@counter 0079                ??_DEC_A_BCD 0022  
                 ??___flge 0078                   ??___fleq 0078                   ??___wmul 0074  
                __Umul8_16 0803                __pdataBANK1 00EA            Lcd_Write_Char@a 0072  
                 ??_fround 003E              sprintf@tmpval 00B2                  ___fladd@a 0052  
                ___fladd@b 004E                 fround@prec 004D                  ___flmul@a 0024  
                ___flmul@b 0020                  ___flsub@a 0062                  ___flsub@b 0066  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
                 ?_Lcd_Cmd 0070                sprintf@flag 00AA                sprintf@eexp 00B0  
              sprintf@fval 00B9                sprintf@prec 00B7           _I2C_Master_Start 1A17  
         _I2C_Master_Write 10B8           ___lwdiv@dividend 0077           ??_Lcd_Set_Cursor 0075  
                 ?___fladd 004E                   ?___awdiv 0076                   ?___flneg 0070  
                 ?___awmod 0070                   ?___flmul 0020                   ?___flsub 0062  
                 ?___fltol 004D                   ?___lldiv 0070                   ?___llmod 0070  
                __npowers_ 1044                 ?__Umul8_16 0070                   ?___lwdiv 0075  
                 ?___lwmod 0070                  __pstrings 1000                __tdiv_to_l_ 1E91  
             ??__div_to_l_ 0078                   ?_isdigit 0070           ___lwdiv@quotient 0079  
                 ?_sprintf 006A             ___wmul@product 0074                   _IOCBbits 0096  
                clear_ram0 1A0F                   Lcd_Cmd@a 0073         __end_of__div_to_l_ 2000  
              __stringbase 100F          ___wmul@multiplier 0070                  main@dia_0 00C2  
                main@dia_1 00C3                   _WPUBbits 0095                  main@mes_0 00C4  
                main@mes_1 00C5           ??_Lcd_Write_Char 0071                   _Lcd_Init 1D6E  
                 _Lcd_Port 1A03        I2C_Master_Read@temp 0074   __end_of_Lcd_Write_String 1C00  
              ??__Umul8_16 0072                _fround$1073 0049                _fround$1074 0045  
       __end_of__stringtab 1010                _isdigit$863 0070                 sprintf@val 00AC  
          _I2C_Master_Init 1B4C            _I2C_Master_Read 1AE8                   ___xxtofl 08A2  
          _I2C_Master_Wait 1A34            _I2C_Master_Stop 1A20            ___lwdiv@divisor 0075  
          ___lwdiv@counter 007B                   __ptext10 1F48                   __ptext11 08A2  
                 __ptext20 1C87                   __ptext12 1AC3                   __ptext21 00A6  
                 __ptext13 1D1A                   __ptext30 1B4C                   __ptext22 10B8  
                 __ptext14 082A                   __ptext31 1DC4                   __ptext23 1A20  
                 __ptext15 1A9F                   __ptext32 1BBE                   __ptext24 1A17  
                 __ptext16 1326                   __ptext33 1A53                   __ptext25 1B16  
                 __ptext17 1A29                   __ptext34 1A83                   __ptext26 10C2  
                 __ptext18 0004                   __ptext35 1A69                   __ptext27 1E2A  
                 __ptext19 1CCC                   __ptext36 1A03                   __ptext28 1C00  
                 __ptext37 1AE8                   __ptext29 1D6E                   __ptext38 1A34  
                 __powers_ 1010                   _ioc_init 1C00   __end_of_I2C_Master_Start 1A20  
 __end_of_I2C_Master_Write 10C2                   isdigit@c 0071                   scale@scl 004C  
                sprintf@ap 00A9           __tdiv_to_l_@exp1 0025           __tdiv_to_l_@cntr 0024  
                sprintf@sp 00B6           __tdiv_to_l_@quot 0020           ___lwmod@dividend 0072  
         ___lldiv@dividend 0074                  stringcode 100A    __end_of_I2C_Master_Init 1B84  
  __end_of_I2C_Master_Read 1B16    __end_of_I2C_Master_Wait 1A41    __end_of_I2C_Master_Stop 1A29  
             ?__tdiv_to_l_ 0070     __Umul8_16@multiplicand 0070                _temperatura 00C8  
                 sprintf@c 00BD                   sprintf@f 006A           ___lldiv@quotient 0079  
        I2C_Master_Write@d 0024            ___lwmod@divisor 0070            ___lwmod@counter 0074  
                 stringdir 100A                   stringtab 1000                _SSPCON2bits 0091  
            ___fladd@signs 005E          _setear_dia_tiempo 00A6               ___fladd@aexp 005F  
             ___fladd@bexp 0060         ?_setear_dia_tiempo 0070       __Umul8_16@multiplier 0078  
        __Umul8_16@product 0074  
