

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Jul 25 18:29:26 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    49                           	dabs	1,0x7E,2
    50     0000                     
    51                           ; Generated 22/03/2023 GMT
    52                           ; 
    53                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution. Publication is not required when
    67                           ;        this file is used in an embedded application.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F887 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85     0000                     	;# 
    86     0001                     	;# 
    87     0002                     	;# 
    88     0003                     	;# 
    89     0004                     	;# 
    90     0005                     	;# 
    91     0006                     	;# 
    92     0007                     	;# 
    93     0008                     	;# 
    94     0009                     	;# 
    95     000A                     	;# 
    96     000B                     	;# 
    97     000C                     	;# 
    98     000D                     	;# 
    99     000E                     	;# 
   100     000E                     	;# 
   101     000F                     	;# 
   102     0010                     	;# 
   103     0011                     	;# 
   104     0012                     	;# 
   105     0013                     	;# 
   106     0014                     	;# 
   107     0015                     	;# 
   108     0015                     	;# 
   109     0016                     	;# 
   110     0017                     	;# 
   111     0018                     	;# 
   112     0019                     	;# 
   113     001A                     	;# 
   114     001B                     	;# 
   115     001B                     	;# 
   116     001C                     	;# 
   117     001D                     	;# 
   118     001E                     	;# 
   119     001F                     	;# 
   120     0081                     	;# 
   121     0085                     	;# 
   122     0086                     	;# 
   123     0087                     	;# 
   124     0088                     	;# 
   125     0089                     	;# 
   126     008C                     	;# 
   127     008D                     	;# 
   128     008E                     	;# 
   129     008F                     	;# 
   130     0090                     	;# 
   131     0091                     	;# 
   132     0092                     	;# 
   133     0093                     	;# 
   134     0093                     	;# 
   135     0093                     	;# 
   136     0094                     	;# 
   137     0095                     	;# 
   138     0096                     	;# 
   139     0097                     	;# 
   140     0098                     	;# 
   141     0099                     	;# 
   142     009A                     	;# 
   143     009B                     	;# 
   144     009C                     	;# 
   145     009D                     	;# 
   146     009E                     	;# 
   147     009F                     	;# 
   148     0105                     	;# 
   149     0107                     	;# 
   150     0108                     	;# 
   151     0109                     	;# 
   152     010C                     	;# 
   153     010C                     	;# 
   154     010D                     	;# 
   155     010E                     	;# 
   156     010F                     	;# 
   157     0185                     	;# 
   158     0187                     	;# 
   159     0188                     	;# 
   160     0189                     	;# 
   161     018C                     	;# 
   162     018D                     	;# 
   163     0000                     	;# 
   164     0001                     	;# 
   165     0002                     	;# 
   166     0003                     	;# 
   167     0004                     	;# 
   168     0005                     	;# 
   169     0006                     	;# 
   170     0007                     	;# 
   171     0008                     	;# 
   172     0009                     	;# 
   173     000A                     	;# 
   174     000B                     	;# 
   175     000C                     	;# 
   176     000D                     	;# 
   177     000E                     	;# 
   178     000E                     	;# 
   179     000F                     	;# 
   180     0010                     	;# 
   181     0011                     	;# 
   182     0012                     	;# 
   183     0013                     	;# 
   184     0014                     	;# 
   185     0015                     	;# 
   186     0015                     	;# 
   187     0016                     	;# 
   188     0017                     	;# 
   189     0018                     	;# 
   190     0019                     	;# 
   191     001A                     	;# 
   192     001B                     	;# 
   193     001B                     	;# 
   194     001C                     	;# 
   195     001D                     	;# 
   196     001E                     	;# 
   197     001F                     	;# 
   198     0081                     	;# 
   199     0085                     	;# 
   200     0086                     	;# 
   201     0087                     	;# 
   202     0088                     	;# 
   203     0089                     	;# 
   204     008C                     	;# 
   205     008D                     	;# 
   206     008E                     	;# 
   207     008F                     	;# 
   208     0090                     	;# 
   209     0091                     	;# 
   210     0092                     	;# 
   211     0093                     	;# 
   212     0093                     	;# 
   213     0093                     	;# 
   214     0094                     	;# 
   215     0095                     	;# 
   216     0096                     	;# 
   217     0097                     	;# 
   218     0098                     	;# 
   219     0099                     	;# 
   220     009A                     	;# 
   221     009B                     	;# 
   222     009C                     	;# 
   223     009D                     	;# 
   224     009E                     	;# 
   225     009F                     	;# 
   226     0105                     	;# 
   227     0107                     	;# 
   228     0108                     	;# 
   229     0109                     	;# 
   230     010C                     	;# 
   231     010C                     	;# 
   232     010D                     	;# 
   233     010E                     	;# 
   234     010F                     	;# 
   235     0185                     	;# 
   236     0187                     	;# 
   237     0188                     	;# 
   238     0189                     	;# 
   239     018C                     	;# 
   240     018D                     	;# 
   241     0000                     	;# 
   242     0001                     	;# 
   243     0002                     	;# 
   244     0003                     	;# 
   245     0004                     	;# 
   246     0005                     	;# 
   247     0006                     	;# 
   248     0007                     	;# 
   249     0008                     	;# 
   250     0009                     	;# 
   251     000A                     	;# 
   252     000B                     	;# 
   253     000C                     	;# 
   254     000D                     	;# 
   255     000E                     	;# 
   256     000E                     	;# 
   257     000F                     	;# 
   258     0010                     	;# 
   259     0011                     	;# 
   260     0012                     	;# 
   261     0013                     	;# 
   262     0014                     	;# 
   263     0015                     	;# 
   264     0015                     	;# 
   265     0016                     	;# 
   266     0017                     	;# 
   267     0018                     	;# 
   268     0019                     	;# 
   269     001A                     	;# 
   270     001B                     	;# 
   271     001B                     	;# 
   272     001C                     	;# 
   273     001D                     	;# 
   274     001E                     	;# 
   275     001F                     	;# 
   276     0081                     	;# 
   277     0085                     	;# 
   278     0086                     	;# 
   279     0087                     	;# 
   280     0088                     	;# 
   281     0089                     	;# 
   282     008C                     	;# 
   283     008D                     	;# 
   284     008E                     	;# 
   285     008F                     	;# 
   286     0090                     	;# 
   287     0091                     	;# 
   288     0092                     	;# 
   289     0093                     	;# 
   290     0093                     	;# 
   291     0093                     	;# 
   292     0094                     	;# 
   293     0095                     	;# 
   294     0096                     	;# 
   295     0097                     	;# 
   296     0098                     	;# 
   297     0099                     	;# 
   298     009A                     	;# 
   299     009B                     	;# 
   300     009C                     	;# 
   301     009D                     	;# 
   302     009E                     	;# 
   303     009F                     	;# 
   304     0105                     	;# 
   305     0107                     	;# 
   306     0108                     	;# 
   307     0109                     	;# 
   308     010C                     	;# 
   309     010C                     	;# 
   310     010D                     	;# 
   311     010E                     	;# 
   312     010F                     	;# 
   313     0185                     	;# 
   314     0187                     	;# 
   315     0188                     	;# 
   316     0189                     	;# 
   317     018C                     	;# 
   318     018D                     	;# 
   319     0000                     	;# 
   320     0001                     	;# 
   321     0002                     	;# 
   322     0003                     	;# 
   323     0004                     	;# 
   324     0005                     	;# 
   325     0006                     	;# 
   326     0007                     	;# 
   327     0008                     	;# 
   328     0009                     	;# 
   329     000A                     	;# 
   330     000B                     	;# 
   331     000C                     	;# 
   332     000D                     	;# 
   333     000E                     	;# 
   334     000E                     	;# 
   335     000F                     	;# 
   336     0010                     	;# 
   337     0011                     	;# 
   338     0012                     	;# 
   339     0013                     	;# 
   340     0014                     	;# 
   341     0015                     	;# 
   342     0015                     	;# 
   343     0016                     	;# 
   344     0017                     	;# 
   345     0018                     	;# 
   346     0019                     	;# 
   347     001A                     	;# 
   348     001B                     	;# 
   349     001B                     	;# 
   350     001C                     	;# 
   351     001D                     	;# 
   352     001E                     	;# 
   353     001F                     	;# 
   354     0081                     	;# 
   355     0085                     	;# 
   356     0086                     	;# 
   357     0087                     	;# 
   358     0088                     	;# 
   359     0089                     	;# 
   360     008C                     	;# 
   361     008D                     	;# 
   362     008E                     	;# 
   363     008F                     	;# 
   364     0090                     	;# 
   365     0091                     	;# 
   366     0092                     	;# 
   367     0093                     	;# 
   368     0093                     	;# 
   369     0093                     	;# 
   370     0094                     	;# 
   371     0095                     	;# 
   372     0096                     	;# 
   373     0097                     	;# 
   374     0098                     	;# 
   375     0099                     	;# 
   376     009A                     	;# 
   377     009B                     	;# 
   378     009C                     	;# 
   379     009D                     	;# 
   380     009E                     	;# 
   381     009F                     	;# 
   382     0105                     	;# 
   383     0107                     	;# 
   384     0108                     	;# 
   385     0109                     	;# 
   386     010C                     	;# 
   387     010C                     	;# 
   388     010D                     	;# 
   389     010E                     	;# 
   390     010F                     	;# 
   391     0185                     	;# 
   392     0187                     	;# 
   393     0188                     	;# 
   394     0189                     	;# 
   395     018C                     	;# 
   396     018D                     	;# 
   397     0000                     	;# 
   398     0001                     	;# 
   399     0002                     	;# 
   400     0003                     	;# 
   401     0004                     	;# 
   402     0005                     	;# 
   403     0006                     	;# 
   404     0007                     	;# 
   405     0008                     	;# 
   406     0009                     	;# 
   407     000A                     	;# 
   408     000B                     	;# 
   409     000C                     	;# 
   410     000D                     	;# 
   411     000E                     	;# 
   412     000E                     	;# 
   413     000F                     	;# 
   414     0010                     	;# 
   415     0011                     	;# 
   416     0012                     	;# 
   417     0013                     	;# 
   418     0014                     	;# 
   419     0015                     	;# 
   420     0015                     	;# 
   421     0016                     	;# 
   422     0017                     	;# 
   423     0018                     	;# 
   424     0019                     	;# 
   425     001A                     	;# 
   426     001B                     	;# 
   427     001B                     	;# 
   428     001C                     	;# 
   429     001D                     	;# 
   430     001E                     	;# 
   431     001F                     	;# 
   432     0081                     	;# 
   433     0085                     	;# 
   434     0086                     	;# 
   435     0087                     	;# 
   436     0088                     	;# 
   437     0089                     	;# 
   438     008C                     	;# 
   439     008D                     	;# 
   440     008E                     	;# 
   441     008F                     	;# 
   442     0090                     	;# 
   443     0091                     	;# 
   444     0092                     	;# 
   445     0093                     	;# 
   446     0093                     	;# 
   447     0093                     	;# 
   448     0094                     	;# 
   449     0095                     	;# 
   450     0096                     	;# 
   451     0097                     	;# 
   452     0098                     	;# 
   453     0099                     	;# 
   454     009A                     	;# 
   455     009B                     	;# 
   456     009C                     	;# 
   457     009D                     	;# 
   458     009E                     	;# 
   459     009F                     	;# 
   460     0105                     	;# 
   461     0107                     	;# 
   462     0108                     	;# 
   463     0109                     	;# 
   464     010C                     	;# 
   465     010C                     	;# 
   466     010D                     	;# 
   467     010E                     	;# 
   468     010F                     	;# 
   469     0185                     	;# 
   470     0187                     	;# 
   471     0188                     	;# 
   472     0189                     	;# 
   473     018C                     	;# 
   474     018D                     	;# 
   475                           
   476                           	psect	strings
   477     1800                     __pstrings:
   478     1800                     stringtab:
   479     1800                     __stringtab:
   480                           
   481                           ;	String table - string pointers are 1 byte each
   482     1800  1BFF               	btfsc	btemp+1,7
   483     1801  280A               	ljmp	stringcode
   484     1802  1383               	bcf	3,7
   485     1803  187F               	btfsc	btemp+1,0
   486     1804  1783               	bsf	3,7
   487     1805  0800               	movf	0,w
   488     1806  0A84               	incf	4,f
   489     1807  1903               	skipnz
   490     1808  0AFF               	incf	btemp+1,f
   491     1809  0008               	return
   492     180A                     stringcode:
   493     180A                     stringdir:
   494     180A  3018               	movlw	high stringdir
   495     180B  008A               	movwf	10
   496     180C  0804               	movf	4,w
   497     180D  0A84               	incf	4,f
   498     180E  0782               	addwf	2,f
   499     180F                     __stringbase:
   500     180F  3400               	retlw	0
   501     1810                     __end_of__stringtab:
   502     1810                     __powers_:
   503     1810  3400               	retlw	0
   504     1811  3400               	retlw	0
   505     1812  3480               	retlw	128
   506     1813  343F               	retlw	63
   507     1814  3400               	retlw	0
   508     1815  3400               	retlw	0
   509     1816  3420               	retlw	32
   510     1817  3441               	retlw	65
   511     1818  3400               	retlw	0
   512     1819  3400               	retlw	0
   513     181A  34C8               	retlw	200
   514     181B  3442               	retlw	66
   515     181C  3400               	retlw	0
   516     181D  3400               	retlw	0
   517     181E  347A               	retlw	122
   518     181F  3444               	retlw	68
   519     1820  3400               	retlw	0
   520     1821  3440               	retlw	64
   521     1822  341C               	retlw	28
   522     1823  3446               	retlw	70
   523     1824  3400               	retlw	0
   524     1825  3450               	retlw	80
   525     1826  34C3               	retlw	195
   526     1827  3447               	retlw	71
   527     1828  3400               	retlw	0
   528     1829  3424               	retlw	36
   529     182A  3474               	retlw	116
   530     182B  3449               	retlw	73
   531     182C  3480               	retlw	128
   532     182D  3496               	retlw	150
   533     182E  3418               	retlw	24
   534     182F  344B               	retlw	75
   535     1830  3420               	retlw	32
   536     1831  34BC               	retlw	188
   537     1832  34BE               	retlw	190
   538     1833  344C               	retlw	76
   539     1834  3428               	retlw	40
   540     1835  346B               	retlw	107
   541     1836  346E               	retlw	110
   542     1837  344E               	retlw	78
   543     1838  34F9               	retlw	249
   544     1839  3402               	retlw	2
   545     183A  3415               	retlw	21
   546     183B  3450               	retlw	80
   547     183C  34EC               	retlw	236
   548     183D  3478               	retlw	120
   549     183E  34AD               	retlw	173
   550     183F  3460               	retlw	96
   551     1840  34CA               	retlw	202
   552     1841  34F2               	retlw	242
   553     1842  3449               	retlw	73
   554     1843  3471               	retlw	113
   555     1844                     __end_of__powers_:
   556     1844                     __npowers_:
   557     1844  3400               	retlw	0
   558     1845  3400               	retlw	0
   559     1846  3480               	retlw	128
   560     1847  343F               	retlw	63
   561     1848  34CD               	retlw	205
   562     1849  34CC               	retlw	204
   563     184A  34CC               	retlw	204
   564     184B  343D               	retlw	61
   565     184C  340A               	retlw	10
   566     184D  34D7               	retlw	215
   567     184E  3423               	retlw	35
   568     184F  343C               	retlw	60
   569     1850  346F               	retlw	111
   570     1851  3412               	retlw	18
   571     1852  3483               	retlw	131
   572     1853  343A               	retlw	58
   573     1854  3417               	retlw	23
   574     1855  34B7               	retlw	183
   575     1856  34D1               	retlw	209
   576     1857  3438               	retlw	56
   577     1858  34AC               	retlw	172
   578     1859  34C5               	retlw	197
   579     185A  3427               	retlw	39
   580     185B  3437               	retlw	55
   581     185C  34BD               	retlw	189
   582     185D  3437               	retlw	55
   583     185E  3486               	retlw	134
   584     185F  3435               	retlw	53
   585     1860  3495               	retlw	149
   586     1861  34BF               	retlw	191
   587     1862  34D6               	retlw	214
   588     1863  3433               	retlw	51
   589     1864  3477               	retlw	119
   590     1865  34CC               	retlw	204
   591     1866  342B               	retlw	43
   592     1867  3432               	retlw	50
   593     1868  345F               	retlw	95
   594     1869  3470               	retlw	112
   595     186A  3489               	retlw	137
   596     186B  3430               	retlw	48
   597     186C  34FF               	retlw	255
   598     186D  34E6               	retlw	230
   599     186E  34DB               	retlw	219
   600     186F  342E               	retlw	46
   601     1870  3408               	retlw	8
   602     1871  34E5               	retlw	229
   603     1872  343C               	retlw	60
   604     1873  341E               	retlw	30
   605     1874  3460               	retlw	96
   606     1875  3442               	retlw	66
   607     1876  34A2               	retlw	162
   608     1877  340D               	retlw	13
   609     1878                     __end_of__npowers_:
   610     1878                     _dpowers:
   611     1878  3401               	retlw	1
   612     1879  3400               	retlw	0
   613     187A  3400               	retlw	0
   614     187B  3400               	retlw	0
   615     187C  340A               	retlw	10
   616     187D  3400               	retlw	0
   617     187E  3400               	retlw	0
   618     187F  3400               	retlw	0
   619     1880  3464               	retlw	100
   620     1881  3400               	retlw	0
   621     1882  3400               	retlw	0
   622     1883  3400               	retlw	0
   623     1884  34E8               	retlw	232
   624     1885  3403               	retlw	3
   625     1886  3400               	retlw	0
   626     1887  3400               	retlw	0
   627     1888  3410               	retlw	16
   628     1889  3427               	retlw	39
   629     188A  3400               	retlw	0
   630     188B  3400               	retlw	0
   631     188C  34A0               	retlw	160
   632     188D  3486               	retlw	134
   633     188E  3401               	retlw	1
   634     188F  3400               	retlw	0
   635     1890  3440               	retlw	64
   636     1891  3442               	retlw	66
   637     1892  340F               	retlw	15
   638     1893  3400               	retlw	0
   639     1894  3480               	retlw	128
   640     1895  3496               	retlw	150
   641     1896  3498               	retlw	152
   642     1897  3400               	retlw	0
   643     1898  3400               	retlw	0
   644     1899  34E1               	retlw	225
   645     189A  34F5               	retlw	245
   646     189B  3405               	retlw	5
   647     189C  3400               	retlw	0
   648     189D  34CA               	retlw	202
   649     189E  349A               	retlw	154
   650     189F  343B               	retlw	59
   651     18A0                     __end_of_dpowers:
   652     000B                     _INTCONbits	set	11
   653     0007                     _PORTC	set	7
   654     0006                     _PORTB	set	6
   655     000C                     _PIR1bits	set	12
   656     001A                     _RCREG	set	26
   657     0019                     _TXREG	set	25
   658     0018                     _RCSTAbits	set	24
   659     0007                     _PORTCbits	set	7
   660     0008                     _PORTD	set	8
   661     0008                     _PORTDbits	set	8
   662     001E                     _ADRESH	set	30
   663     001F                     _ADCON0bits	set	31
   664     0064                     _TXIF	set	100
   665     0043                     _RD3	set	67
   666     0047                     _RD7	set	71
   667     0046                     _RD6	set	70
   668     0045                     _RD5	set	69
   669     0044                     _RD4	set	68
   670     008C                     _PIE1bits	set	140
   671     008F                     _OSCCONbits	set	143
   672     0088                     _TRISD	set	136
   673     0087                     _TRISC	set	135
   674     0086                     _TRISB	set	134
   675     009A                     _SPBRGH	set	154
   676     0099                     _SPBRG	set	153
   677     0098                     _TXSTAbits	set	152
   678     009F                     _ADCON1bits	set	159
   679     0189                     _ANSELH	set	393
   680     0188                     _ANSEL	set	392
   681     0187                     _BAUDCTLbits	set	391
   682     18A0                     STR_4:
   683     18A0  3443               	retlw	67	;'C'
   684     18A1  3450               	retlw	80	;'P'
   685     18A2  3455               	retlw	85	;'U'
   686     18A3  343A               	retlw	58	;':'
   687     18A4  3400               	retlw	0
   688     18A5                     STR_2:
   689     18A5  3450               	retlw	80	;'P'
   690     18A6  346F               	retlw	111	;'o'
   691     18A7  3474               	retlw	116	;'t'
   692     18A8  343A               	retlw	58	;':'
   693     18A9  3400               	retlw	0
   694     18AA                     STR_5:
   695     18AA  3464               	retlw	100	;'d'
   696     18AB  3461               	retlw	97	;'a'
   697     18AC  3474               	retlw	116	;'t'
   698     18AD  3461               	retlw	97	;'a'
   699     18AE  3400               	retlw	0
   700     18AF                     STR_1:
   701     18AF  3425               	retlw	37	;'%'
   702     18B0  342E               	retlw	46	;'.'
   703     18B1  3432               	retlw	50	;'2'
   704     18B2  3466               	retlw	102	;'f'
   705     18B3  3400               	retlw	0
   706     18B4                     STR_3:
   707     18B4  3456               	retlw	86	;'V'
   708     18B5  3400               	retlw	0
   709                           
   710                           	psect	cinit
   711     000F                     start_initialization:	
   712                           ; #config settings
   713                           
   714     000F                     __initialization:
   715                           
   716                           ; Clear objects allocated to COMMON
   717     000F  01F8               	clrf	__pbssCOMMON& (0+127)
   718     0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   719     0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   720                           
   721                           ; Clear objects allocated to BANK0
   722     0012  1283               	bcf	3,5	;RP0=0, select bank0
   723     0013  1303               	bcf	3,6	;RP1=0, select bank0
   724     0014  01EC               	clrf	__pbssBANK0& (0+127)
   725                           
   726                           ; Clear objects allocated to BANK1
   727     0015  1383               	bcf	3,7	;select IRP bank0
   728     0016  30DE               	movlw	low __pbssBANK1
   729     0017  0084               	movwf	4
   730     0018  30EA               	movlw	low (__pbssBANK1+12)
   731     0019  160A  158A  2208  120A  118A  	fcall	clear_ram0
   732                           
   733                           ; Clear objects allocated to BANK3
   734     001E  1783               	bsf	3,7	;select IRP bank2
   735     001F  3090               	movlw	low __pbssBANK3
   736     0020  0084               	movwf	4
   737     0021  30A4               	movlw	low (__pbssBANK3+20)
   738     0022  160A  158A  2208  120A  118A  	fcall	clear_ram0
   739     0027                     end_of_initialization:	
   740                           ;End of C runtime variable initialization code
   741                           
   742     0027                     __end_of__initialization:
   743     0027  0183               	clrf	3
   744     0028  120A  158A  283D   	ljmp	_main	;jump to C main() function
   745                           
   746                           	psect	bssCOMMON
   747     0078                     __pbssCOMMON:
   748     0078                     _adc_result:
   749     0078                     	ds	2
   750     007A                     _opcion:
   751     007A                     	ds	1
   752                           
   753                           	psect	bssBANK0
   754     006C                     __pbssBANK0:
   755     006C                     _dato:
   756     006C                     	ds	1
   757                           
   758                           	psect	bssBANK1
   759     00DE                     __pbssBANK1:
   760     00DE                     _voltaje:
   761     00DE                     	ds	4
   762     00E2                     _lectura_adc:
   763     00E2                     	ds	4
   764     00E6                     _flag:
   765     00E6                     	ds	2
   766     00E8                     _channel:
   767     00E8                     	ds	2
   768                           
   769                           	psect	bssBANK3
   770     0190                     __pbssBANK3:
   771     0190                     _valor:
   772     0190                     	ds	20
   773                           
   774                           	psect	clrtext
   775     1A08                     clear_ram0:	
   776                           ;	Called with FSR containing the base address, and
   777                           ;	W with the last address+1
   778                           
   779     1A08  0064               	clrwdt	;clear the watchdog before getting into this loop
   780     1A09                     clrloop0:
   781     1A09  0180               	clrf	0	;clear RAM location pointed to by FSR
   782     1A0A  0A84               	incf	4,f	;increment pointer
   783     1A0B  0604               	xorwf	4,w	;XOR with final address
   784     1A0C  1903               	btfsc	3,2	;have we reached the end yet?
   785     1A0D  3400               	retlw	0	;all done for this memory range, return
   786     1A0E  0604               	xorwf	4,w	;XOR again to restore value
   787     1A0F  2A09               	goto	clrloop0	;do the next byte
   788                           
   789                           	psect	cstackBANK1
   790     00A0                     __pcstackBANK1:
   791     00A0                     ?___flsub:
   792     00A0                     ___flsub@a:	
   793                           ; 4 bytes @ 0x0
   794                           
   795                           
   796                           ; 4 bytes @ 0x0
   797     00A0                     	ds	4
   798     00A4                     ___flsub@b:
   799                           
   800                           ; 4 bytes @ 0x4
   801     00A4                     	ds	4
   802     00A8                     ?_sprintf:
   803     00A8                     ?___fldiv:	
   804                           ; 2 bytes @ 0x8
   805                           
   806     00A8                     sprintf@f:	
   807                           ; 4 bytes @ 0x8
   808                           
   809     00A8                     ___fldiv@a:	
   810                           ; 1 bytes @ 0x8
   811                           
   812                           
   813                           ; 4 bytes @ 0x8
   814     00A8                     	ds	4
   815     00AC                     ___fldiv@b:
   816                           
   817                           ; 4 bytes @ 0xC
   818     00AC                     	ds	1
   819     00AD                     ??_sprintf:
   820                           
   821                           ; 1 bytes @ 0xD
   822     00AD                     	ds	3
   823     00B0                     ??___fldiv:
   824                           
   825                           ; 1 bytes @ 0x10
   826     00B0                     	ds	2
   827     00B2                     _sprintf$1366:
   828                           
   829                           ; 4 bytes @ 0x12
   830     00B2                     	ds	3
   831     00B5                     ___fldiv@rem:
   832                           
   833                           ; 4 bytes @ 0x15
   834     00B5                     	ds	1
   835     00B6                     sprintf@ap:
   836                           
   837                           ; 1 bytes @ 0x16
   838     00B6                     	ds	1
   839     00B7                     sprintf@flag:
   840                           
   841                           ; 2 bytes @ 0x17
   842     00B7                     	ds	2
   843     00B9                     ___fldiv@sign:
   844     00B9                     sprintf@val:	
   845                           ; 1 bytes @ 0x19
   846                           
   847                           
   848                           ; 4 bytes @ 0x19
   849     00B9                     	ds	1
   850     00BA                     ___fldiv@new_exp:
   851                           
   852                           ; 2 bytes @ 0x1A
   853     00BA                     	ds	2
   854     00BC                     ___fldiv@grs:
   855                           
   856                           ; 4 bytes @ 0x1C
   857     00BC                     	ds	1
   858     00BD                     sprintf@eexp:
   859                           
   860                           ; 2 bytes @ 0x1D
   861     00BD                     	ds	2
   862     00BF                     sprintf@sp:
   863                           
   864                           ; 1 bytes @ 0x1F
   865     00BF                     	ds	1
   866     00C0                     ___fldiv@bexp:
   867     00C0                     sprintf@tmpval:	
   868                           ; 1 bytes @ 0x20
   869                           
   870                           
   871                           ; 4 bytes @ 0x20
   872     00C0                     	ds	1
   873     00C1                     ___fldiv@aexp:
   874                           
   875                           ; 1 bytes @ 0x21
   876     00C1                     	ds	1
   877     00C2                     ?_map:
   878     00C2                     map@x:	
   879                           ; 4 bytes @ 0x22
   880                           
   881                           
   882                           ; 4 bytes @ 0x22
   883     00C2                     	ds	2
   884     00C4                     sprintf@prec:
   885                           
   886                           ; 2 bytes @ 0x24
   887     00C4                     	ds	2
   888     00C6                     map@in_min:
   889     00C6                     sprintf@fval:	
   890                           ; 4 bytes @ 0x26
   891                           
   892                           
   893                           ; 4 bytes @ 0x26
   894     00C6                     	ds	4
   895     00CA                     sprintf@c:
   896     00CA                     map@in_max:	
   897                           ; 1 bytes @ 0x2A
   898                           
   899                           
   900                           ; 4 bytes @ 0x2A
   901     00CA                     	ds	4
   902     00CE                     map@out_min:
   903                           
   904                           ; 4 bytes @ 0x2E
   905     00CE                     	ds	4
   906     00D2                     map@out_max:
   907                           
   908                           ; 4 bytes @ 0x32
   909     00D2                     	ds	4
   910     00D6                     _map$1362:
   911                           
   912                           ; 4 bytes @ 0x36
   913     00D6                     	ds	4
   914     00DA                     ??_main:
   915                           
   916                           ; 1 bytes @ 0x3A
   917     00DA                     	ds	4
   918                           
   919                           	psect	cstackCOMMON
   920     0070                     __pcstackCOMMON:
   921     0070                     ?_isdigit:
   922     0070                     ?_Lcd8_Port:	
   923                           ; 1 bit 
   924                           
   925     0070                     ?_Lcd8_Cmd:	
   926                           ; 1 bytes @ 0x0
   927                           
   928     0070                     ?_Lcd8_Init:	
   929                           ; 1 bytes @ 0x0
   930                           
   931     0070                     ?_Lcd8_Write_Char:	
   932                           ; 1 bytes @ 0x0
   933                           
   934     0070                     ?_isr:	
   935                           ; 1 bytes @ 0x0
   936                           
   937     0070                     ??_isr:	
   938                           ; 1 bytes @ 0x0
   939                           
   940     0070                     ?_main:	
   941                           ; 1 bytes @ 0x0
   942                           
   943                           
   944                           ; 1 bytes @ 0x0
   945     0070                     	ds	3
   946     0073                     ??_isdigit:
   947     0073                     ??__tdiv_to_l_:	
   948                           ; 1 bytes @ 0x3
   949                           
   950     0073                     ??__div_to_l_:	
   951                           ; 1 bytes @ 0x3
   952                           
   953     0073                     ?_adc_init:	
   954                           ; 1 bytes @ 0x3
   955                           
   956     0073                     ??_Lcd8_Port:	
   957                           ; 1 bytes @ 0x3
   958                           
   959     0073                     ??___lldiv:	
   960                           ; 1 bytes @ 0x3
   961                           
   962     0073                     ??___fleq:	
   963                           ; 1 bytes @ 0x3
   964                           
   965     0073                     ??___flge:	
   966                           ; 1 bytes @ 0x3
   967                           
   968     0073                     ??___llmod:	
   969                           ; 1 bytes @ 0x3
   970                           
   971     0073                     ?__Umul8_16:	
   972                           ; 1 bytes @ 0x3
   973                           
   974     0073                     ?___wmul:	
   975                           ; 2 bytes @ 0x3
   976                           
   977     0073                     ?___awmod:	
   978                           ; 2 bytes @ 0x3
   979                           
   980     0073                     ?___lwmod:	
   981                           ; 2 bytes @ 0x3
   982                           
   983     0073                     ?___flneg:	
   984                           ; 2 bytes @ 0x3
   985                           
   986     0073                     ?___xxtofl:	
   987                           ; 4 bytes @ 0x3
   988                           
   989     0073                     Lcd8_Port@a:	
   990                           ; 4 bytes @ 0x3
   991                           
   992     0073                     __Umul8_16@multiplicand:	
   993                           ; 1 bytes @ 0x3
   994                           
   995     0073                     _isdigit$1123:	
   996                           ; 1 bytes @ 0x3
   997                           
   998     0073                     adc_init@channel:	
   999                           ; 1 bytes @ 0x3
  1000                           
  1001     0073                     ___wmul@multiplier:	
  1002                           ; 2 bytes @ 0x3
  1003                           
  1004     0073                     ___awmod@divisor:	
  1005                           ; 2 bytes @ 0x3
  1006                           
  1007     0073                     ___lwmod@divisor:	
  1008                           ; 2 bytes @ 0x3
  1009                           
  1010     0073                     ___flneg@f1:	
  1011                           ; 2 bytes @ 0x3
  1012                           
  1013     0073                     ___xxtofl@val:	
  1014                           ; 4 bytes @ 0x3
  1015                           
  1016                           
  1017                           ; 4 bytes @ 0x3
  1018     0073                     	ds	1
  1019     0074                     ??_Lcd8_Cmd:
  1020     0074                     ??_Lcd8_Write_Char:	
  1021                           ; 1 bytes @ 0x4
  1022                           
  1023     0074                     ___llmod@counter:	
  1024                           ; 1 bytes @ 0x4
  1025                           
  1026     0074                     isdigit@c:	
  1027                           ; 1 bytes @ 0x4
  1028                           
  1029                           
  1030                           ; 1 bytes @ 0x4
  1031     0074                     	ds	1
  1032     0075                     ??__Umul8_16:
  1033     0075                     ??_adc_init:	
  1034                           ; 1 bytes @ 0x5
  1035                           
  1036     0075                     Lcd8_Write_Char@a:	
  1037                           ; 1 bytes @ 0x5
  1038                           
  1039     0075                     ___wmul@multiplicand:	
  1040                           ; 1 bytes @ 0x5
  1041                           
  1042     0075                     ___awmod@dividend:	
  1043                           ; 2 bytes @ 0x5
  1044                           
  1045     0075                     ___lwmod@dividend:	
  1046                           ; 2 bytes @ 0x5
  1047                           
  1048                           
  1049                           ; 2 bytes @ 0x5
  1050     0075                     	ds	1
  1051     0076                     ?_Lcd8_Write_String:
  1052     0076                     Lcd8_Cmd@a:	
  1053                           ; 1 bytes @ 0x6
  1054                           
  1055     0076                     Lcd8_Write_String@a:	
  1056                           ; 1 bytes @ 0x6
  1057                           
  1058                           
  1059                           ; 2 bytes @ 0x6
  1060     0076                     	ds	1
  1061     0077                     ?_Lcd8_Set_Cursor:
  1062     0077                     ??___wmul:	
  1063                           ; 1 bytes @ 0x7
  1064                           
  1065     0077                     ??___awdiv:	
  1066                           ; 1 bytes @ 0x7
  1067                           
  1068     0077                     ??___awmod:	
  1069                           ; 1 bytes @ 0x7
  1070                           
  1071     0077                     ??___flneg:	
  1072                           ; 1 bytes @ 0x7
  1073                           
  1074     0077                     ??___lwmod:	
  1075                           ; 1 bytes @ 0x7
  1076                           
  1077     0077                     Lcd8_Set_Cursor@b:	
  1078                           ; 1 bytes @ 0x7
  1079                           
  1080     0077                     ___lwmod@counter:	
  1081                           ; 1 bytes @ 0x7
  1082                           
  1083                           
  1084                           ; 1 bytes @ 0x7
  1085     0077                     	ds	1
  1086     0078                     ??_map:
  1087     0078                     ??_Lcd8_Set_Cursor:	
  1088                           ; 1 bytes @ 0x8
  1089                           
  1090     0078                     ??___lwdiv:	
  1091                           ; 1 bytes @ 0x8
  1092                           
  1093     0078                     ??___flsub:	
  1094                           ; 1 bytes @ 0x8
  1095                           
  1096                           
  1097                           	psect	cstackBANK0
  1098     0020                     __pcstackBANK0:	
  1099                           ; 1 bytes @ 0x8
  1100                           
  1101     0020                     ?___fleq:
  1102     0020                     ?___flge:	
  1103                           ; 1 bit 
  1104                           
  1105     0020                     ??_Lcd8_Init:	
  1106                           ; 1 bit 
  1107                           
  1108     0020                     ??_Lcd8_Write_String:	
  1109                           ; 1 bytes @ 0x0
  1110                           
  1111     0020                     ??___xxtofl:	
  1112                           ; 1 bytes @ 0x0
  1113                           
  1114     0020                     ?___lwdiv:	
  1115                           ; 1 bytes @ 0x0
  1116                           
  1117     0020                     ?__tdiv_to_l_:	
  1118                           ; 2 bytes @ 0x0
  1119                           
  1120     0020                     ?__div_to_l_:	
  1121                           ; 4 bytes @ 0x0
  1122                           
  1123     0020                     ?___lldiv:	
  1124                           ; 4 bytes @ 0x0
  1125                           
  1126     0020                     ?___llmod:	
  1127                           ; 4 bytes @ 0x0
  1128                           
  1129     0020                     Lcd8_Set_Cursor@a:	
  1130                           ; 4 bytes @ 0x0
  1131                           
  1132     0020                     ___awmod@counter:	
  1133                           ; 1 bytes @ 0x0
  1134                           
  1135     0020                     ___wmul@product:	
  1136                           ; 1 bytes @ 0x0
  1137                           
  1138     0020                     ___lwdiv@divisor:	
  1139                           ; 2 bytes @ 0x0
  1140                           
  1141     0020                     __Umul8_16@product:	
  1142                           ; 2 bytes @ 0x0
  1143                           
  1144     0020                     ___lldiv@divisor:	
  1145                           ; 2 bytes @ 0x0
  1146                           
  1147     0020                     __div_to_l_@f1:	
  1148                           ; 4 bytes @ 0x0
  1149                           
  1150     0020                     ___fleq@ff1:	
  1151                           ; 4 bytes @ 0x0
  1152                           
  1153     0020                     ___flge@ff1:	
  1154                           ; 4 bytes @ 0x0
  1155                           
  1156     0020                     __tdiv_to_l_@f1:	
  1157                           ; 4 bytes @ 0x0
  1158                           
  1159     0020                     ___llmod@divisor:	
  1160                           ; 4 bytes @ 0x0
  1161                           
  1162                           
  1163                           ; 4 bytes @ 0x0
  1164     0020                     	ds	1
  1165     0021                     ___awmod@sign:
  1166                           
  1167                           ; 1 bytes @ 0x1
  1168     0021                     	ds	1
  1169     0022                     ?___awdiv:
  1170     0022                     ___awdiv@divisor:	
  1171                           ; 2 bytes @ 0x2
  1172                           
  1173     0022                     ___lwdiv@dividend:	
  1174                           ; 2 bytes @ 0x2
  1175                           
  1176     0022                     __Umul8_16@word_mpld:	
  1177                           ; 2 bytes @ 0x2
  1178                           
  1179                           
  1180                           ; 2 bytes @ 0x2
  1181     0022                     	ds	1
  1182     0023                     Lcd8_Write_String@i:
  1183                           
  1184                           ; 2 bytes @ 0x3
  1185     0023                     	ds	1
  1186     0024                     ___lwdiv@counter:
  1187     0024                     __Umul8_16@multiplier:	
  1188                           ; 1 bytes @ 0x4
  1189                           
  1190     0024                     ___xxtofl@sign:	
  1191                           ; 1 bytes @ 0x4
  1192                           
  1193     0024                     ___awdiv@dividend:	
  1194                           ; 1 bytes @ 0x4
  1195                           
  1196     0024                     ___lldiv@dividend:	
  1197                           ; 2 bytes @ 0x4
  1198                           
  1199     0024                     __div_to_l_@f2:	
  1200                           ; 4 bytes @ 0x4
  1201                           
  1202     0024                     ___fleq@ff2:	
  1203                           ; 4 bytes @ 0x4
  1204                           
  1205     0024                     ___flge@ff2:	
  1206                           ; 4 bytes @ 0x4
  1207                           
  1208     0024                     __tdiv_to_l_@f2:	
  1209                           ; 4 bytes @ 0x4
  1210                           
  1211     0024                     ___llmod@dividend:	
  1212                           ; 4 bytes @ 0x4
  1213                           
  1214                           
  1215                           ; 4 bytes @ 0x4
  1216     0024                     	ds	1
  1217     0025                     ___xxtofl@exp:
  1218     0025                     ___lwdiv@quotient:	
  1219                           ; 1 bytes @ 0x5
  1220                           
  1221                           
  1222                           ; 2 bytes @ 0x5
  1223     0025                     	ds	1
  1224     0026                     ___awdiv@counter:
  1225     0026                     ___xxtofl@arg:	
  1226                           ; 1 bytes @ 0x6
  1227                           
  1228                           
  1229                           ; 4 bytes @ 0x6
  1230     0026                     	ds	1
  1231     0027                     ___awdiv@sign:
  1232                           
  1233                           ; 1 bytes @ 0x7
  1234     0027                     	ds	1
  1235     0028                     ___awdiv@quotient:
  1236     0028                     ___lldiv@quotient:	
  1237                           ; 2 bytes @ 0x8
  1238                           
  1239     0028                     __div_to_l_@quot:	
  1240                           ; 4 bytes @ 0x8
  1241                           
  1242     0028                     __tdiv_to_l_@quot:	
  1243                           ; 4 bytes @ 0x8
  1244                           
  1245                           
  1246                           ; 4 bytes @ 0x8
  1247     0028                     	ds	2
  1248     002A                     ?___flmul:
  1249     002A                     ___flmul@b:	
  1250                           ; 4 bytes @ 0xA
  1251                           
  1252                           
  1253                           ; 4 bytes @ 0xA
  1254     002A                     	ds	2
  1255     002C                     ___lldiv@counter:
  1256     002C                     __div_to_l_@cntr:	
  1257                           ; 1 bytes @ 0xC
  1258                           
  1259     002C                     __tdiv_to_l_@cntr:	
  1260                           ; 1 bytes @ 0xC
  1261                           
  1262                           
  1263                           ; 1 bytes @ 0xC
  1264     002C                     	ds	1
  1265     002D                     __div_to_l_@exp1:
  1266     002D                     __tdiv_to_l_@exp1:	
  1267                           ; 1 bytes @ 0xD
  1268                           
  1269                           
  1270                           ; 1 bytes @ 0xD
  1271     002D                     	ds	1
  1272     002E                     ___flmul@a:
  1273                           
  1274                           ; 4 bytes @ 0xE
  1275     002E                     	ds	4
  1276     0032                     ??___flmul:
  1277                           
  1278                           ; 1 bytes @ 0x12
  1279     0032                     	ds	5
  1280     0037                     ___flmul@sign:
  1281                           
  1282                           ; 1 bytes @ 0x17
  1283     0037                     	ds	1
  1284     0038                     ___flmul@grs:
  1285                           
  1286                           ; 4 bytes @ 0x18
  1287     0038                     	ds	4
  1288     003C                     ___flmul@aexp:
  1289                           
  1290                           ; 1 bytes @ 0x1C
  1291     003C                     	ds	1
  1292     003D                     ___flmul@bexp:
  1293                           
  1294                           ; 1 bytes @ 0x1D
  1295     003D                     	ds	1
  1296     003E                     ___flmul@prod:
  1297                           
  1298                           ; 4 bytes @ 0x1E
  1299     003E                     	ds	4
  1300     0042                     ___flmul@temp:
  1301                           
  1302                           ; 2 bytes @ 0x22
  1303     0042                     	ds	2
  1304     0044                     ?_fround:
  1305     0044                     ?_scale:	
  1306                           ; 4 bytes @ 0x24
  1307                           
  1308                           
  1309                           ; 4 bytes @ 0x24
  1310     0044                     	ds	4
  1311     0048                     ??_fround:
  1312     0048                     ??_scale:	
  1313                           ; 1 bytes @ 0x28
  1314                           
  1315                           
  1316                           ; 1 bytes @ 0x28
  1317     0048                     	ds	7
  1318     004F                     _fround$1364:
  1319                           
  1320                           ; 4 bytes @ 0x2F
  1321     004F                     	ds	3
  1322     0052                     _scale$1365:
  1323                           
  1324                           ; 4 bytes @ 0x32
  1325     0052                     	ds	1
  1326     0053                     _fround$1363:
  1327                           
  1328                           ; 4 bytes @ 0x33
  1329     0053                     	ds	3
  1330     0056                     scale@scl:
  1331                           
  1332                           ; 1 bytes @ 0x36
  1333     0056                     	ds	1
  1334     0057                     ?___fltol:
  1335     0057                     fround@prec:	
  1336                           ; 4 bytes @ 0x37
  1337                           
  1338     0057                     ___fltol@f1:	
  1339                           ; 1 bytes @ 0x37
  1340                           
  1341                           
  1342                           ; 4 bytes @ 0x37
  1343     0057                     	ds	1
  1344     0058                     ?___fladd:
  1345     0058                     ___fladd@b:	
  1346                           ; 4 bytes @ 0x38
  1347                           
  1348                           
  1349                           ; 4 bytes @ 0x38
  1350     0058                     	ds	3
  1351     005B                     ??___fltol:
  1352                           
  1353                           ; 1 bytes @ 0x3B
  1354     005B                     	ds	1
  1355     005C                     ___fladd@a:
  1356                           
  1357                           ; 4 bytes @ 0x3C
  1358     005C                     	ds	3
  1359     005F                     ___fltol@sign1:
  1360                           
  1361                           ; 1 bytes @ 0x3F
  1362     005F                     	ds	1
  1363     0060                     ??___fladd:
  1364     0060                     ___fltol@exp1:	
  1365                           ; 1 bytes @ 0x40
  1366                           
  1367                           
  1368                           ; 1 bytes @ 0x40
  1369     0060                     	ds	8
  1370     0068                     ___fladd@signs:
  1371                           
  1372                           ; 1 bytes @ 0x48
  1373     0068                     	ds	1
  1374     0069                     ___fladd@aexp:
  1375                           
  1376                           ; 1 bytes @ 0x49
  1377     0069                     	ds	1
  1378     006A                     ___fladd@bexp:
  1379                           
  1380                           ; 1 bytes @ 0x4A
  1381     006A                     	ds	1
  1382     006B                     ___fladd@grs:
  1383                           
  1384                           ; 1 bytes @ 0x4B
  1385     006B                     	ds	1
  1386                           
  1387                           	psect	maintext
  1388     083D                     __pmaintext:	
  1389 ;;
  1390 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1391 ;;
  1392 ;; *************** function _main *****************
  1393 ;; Defined at:
  1394 ;;		line 52 in file "postlab.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;		None
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;		None
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  1    wreg      void 
  1401 ;; Registers used:
  1402 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1403 ;; Tracked objects:
  1404 ;;		On entry : B00/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1408 ;;      Params:         0       0       0       0       0
  1409 ;;      Locals:         0       0       0       0       0
  1410 ;;      Temps:          0       0       4       0       0
  1411 ;;      Totals:         0       0       4       0       0
  1412 ;;Total ram usage:        4 bytes
  1413 ;; Hardware stack levels required when called: 5
  1414 ;; This function calls:
  1415 ;;		_Lcd8_Init
  1416 ;;		_Lcd8_Set_Cursor
  1417 ;;		_Lcd8_Write_String
  1418 ;;		___xxtofl
  1419 ;;		_adc_init
  1420 ;;		_map
  1421 ;;		_sprintf
  1422 ;; This function is called by:
  1423 ;;		Startup code after reset
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427     083D                     _main:	
  1428                           ;psect for function _main
  1429                           
  1430     083D                     l4798:	
  1431                           ;incstack = 0
  1432                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1433                           
  1434                           
  1435                           ;postlab.c: 53:     ANSEL = 0x01;
  1436     083D  3001               	movlw	1
  1437     083E  1683               	bsf	3,5	;RP0=1, select bank3
  1438     083F  1703               	bsf	3,6	;RP1=1, select bank3
  1439     0840  0088               	movwf	8	;volatile
  1440     0841                     l4800:
  1441                           
  1442                           ;postlab.c: 54:     ANSELH = 0x00;
  1443     0841  0189               	clrf	9	;volatile
  1444     0842                     l4802:
  1445                           
  1446                           ;postlab.c: 56:     TRISB = 0x00;
  1447     0842  1683               	bsf	3,5	;RP0=1, select bank1
  1448     0843  1303               	bcf	3,6	;RP1=0, select bank1
  1449     0844  0186               	clrf	6	;volatile
  1450     0845                     l4804:
  1451                           
  1452                           ;postlab.c: 57:     TRISC = 0x00;
  1453     0845  0187               	clrf	7	;volatile
  1454     0846                     l4806:
  1455                           
  1456                           ;postlab.c: 58:     TRISD = 0x00;
  1457     0846  0188               	clrf	8	;volatile
  1458     0847                     l4808:
  1459                           
  1460                           ;postlab.c: 60:     PORTB = 0;
  1461     0847  1283               	bcf	3,5	;RP0=0, select bank0
  1462     0848  1303               	bcf	3,6	;RP1=0, select bank0
  1463     0849  0186               	clrf	6	;volatile
  1464     084A                     l4810:
  1465                           
  1466                           ;postlab.c: 61:     PORTC = 0;
  1467     084A  0187               	clrf	7	;volatile
  1468     084B                     l4812:
  1469                           
  1470                           ;postlab.c: 62:     PORTD = 0;
  1471     084B  0188               	clrf	8	;volatile
  1472     084C                     l4814:
  1473                           
  1474                           ;postlab.c: 65:     TXSTAbits.SYNC = 0;
  1475     084C  1683               	bsf	3,5	;RP0=1, select bank1
  1476     084D  1303               	bcf	3,6	;RP1=0, select bank1
  1477     084E  1218               	bcf	24,4	;volatile
  1478     084F                     l4816:
  1479                           
  1480                           ;postlab.c: 66:     TXSTAbits.BRGH = 1;
  1481     084F  1518               	bsf	24,2	;volatile
  1482     0850                     l4818:
  1483                           
  1484                           ;postlab.c: 67:     BAUDCTLbits.BRG16 = 1;
  1485     0850  1683               	bsf	3,5	;RP0=1, select bank3
  1486     0851  1703               	bsf	3,6	;RP1=1, select bank3
  1487     0852  1587               	bsf	7,3	;volatile
  1488     0853                     l4820:
  1489                           
  1490                           ;postlab.c: 69:     SPBRG = 207;
  1491     0853  30CF               	movlw	207
  1492     0854  1683               	bsf	3,5	;RP0=1, select bank1
  1493     0855  1303               	bcf	3,6	;RP1=0, select bank1
  1494     0856  0099               	movwf	25	;volatile
  1495                           
  1496                           ;postlab.c: 70:     SPBRGH = 0;
  1497     0857  019A               	clrf	26	;volatile
  1498     0858                     l4822:
  1499                           
  1500                           ;postlab.c: 72:     RCSTAbits.SPEN = 1;
  1501     0858  1283               	bcf	3,5	;RP0=0, select bank0
  1502     0859  1303               	bcf	3,6	;RP1=0, select bank0
  1503     085A  1798               	bsf	24,7	;volatile
  1504     085B                     l4824:
  1505                           
  1506                           ;postlab.c: 73:     RCSTAbits.RX9 = 0;
  1507     085B  1318               	bcf	24,6	;volatile
  1508     085C                     l4826:
  1509                           
  1510                           ;postlab.c: 74:     TXSTAbits.TXEN = 1;
  1511     085C  1683               	bsf	3,5	;RP0=1, select bank1
  1512     085D  1303               	bcf	3,6	;RP1=0, select bank1
  1513     085E  1698               	bsf	24,5	;volatile
  1514     085F                     l4828:
  1515                           
  1516                           ;postlab.c: 75:     RCSTAbits.CREN = 1;
  1517     085F  1283               	bcf	3,5	;RP0=0, select bank0
  1518     0860  1303               	bcf	3,6	;RP1=0, select bank0
  1519     0861  1618               	bsf	24,4	;volatile
  1520     0862                     l4830:
  1521                           
  1522                           ;postlab.c: 78:     OSCCONbits.IRCF = 0b111;
  1523     0862  3070               	movlw	112
  1524     0863  1683               	bsf	3,5	;RP0=1, select bank1
  1525     0864  1303               	bcf	3,6	;RP1=0, select bank1
  1526     0865  048F               	iorwf	15,f	;volatile
  1527     0866                     l4832:
  1528                           
  1529                           ;postlab.c: 79:     OSCCONbits.SCS = 1;
  1530     0866  140F               	bsf	15,0	;volatile
  1531     0867                     l4834:
  1532                           
  1533                           ;postlab.c: 82:     adc_init(0);
  1534     0867  3000               	movlw	0
  1535     0868  00F3               	movwf	adc_init@channel
  1536     0869  00F4               	movwf	adc_init@channel+1
  1537     086A  160A  118A  2001  120A  158A  	fcall	_adc_init
  1538     086F                     l4836:
  1539                           
  1540                           ;postlab.c: 83:     Lcd8_Init();
  1541     086F  160A  158A  24B7  120A  158A  	fcall	_Lcd8_Init
  1542     0874                     l4838:
  1543                           
  1544                           ;postlab.c: 89:     PIR1bits.RCIF = 0;
  1545     0874  1283               	bcf	3,5	;RP0=0, select bank0
  1546     0875  1303               	bcf	3,6	;RP1=0, select bank0
  1547     0876  128C               	bcf	12,5	;volatile
  1548     0877                     l4840:
  1549                           
  1550                           ;postlab.c: 90:     PIE1bits.RCIE = 1;
  1551     0877  1683               	bsf	3,5	;RP0=1, select bank1
  1552     0878  1303               	bcf	3,6	;RP1=0, select bank1
  1553     0879  168C               	bsf	12,5	;volatile
  1554     087A                     l4842:
  1555                           
  1556                           ;postlab.c: 91:     INTCONbits.PEIE = 1;
  1557     087A  170B               	bsf	11,6	;volatile
  1558     087B                     l4844:
  1559                           
  1560                           ;postlab.c: 92:     INTCONbits.GIE = 1;
  1561     087B  178B               	bsf	11,7	;volatile
  1562     087C                     l4846:
  1563                           
  1564                           ;postlab.c: 95:     {;postlab.c: 97:         if(ADCON0bits.GO == 0)
  1565     087C  1283               	bcf	3,5	;RP0=0, select bank0
  1566     087D  189F               	btfsc	31,1	;volatile
  1567     087E  2880               	goto	u7871
  1568     087F  2881               	goto	u7870
  1569     0880                     u7871:
  1570     0880  288B               	goto	l4852
  1571     0881                     u7870:
  1572     0881                     l4848:
  1573                           
  1574                           ;postlab.c: 98:         {;postlab.c: 99:             _delay((unsigned long)((50)*(800000
      +                          0/4000000.0)));
  1575     0881  3020               	movlw	32
  1576     0882  1683               	bsf	3,5	;RP0=1, select bank1
  1577     0883  1303               	bcf	3,6	;RP1=0, select bank1
  1578     0884  00DA               	movwf	??_main^(0+128)
  1579     0885                     u7907:
  1580     0885  0BDA               	decfsz	??_main^(0+128),f
  1581     0886  2885               	goto	u7907
  1582     0887  0000               	nop
  1583     0888                     l4850:
  1584                           
  1585                           ;postlab.c: 100:             ADCON0bits.GO = 1;
  1586     0888  1283               	bcf	3,5	;RP0=0, select bank0
  1587     0889  1303               	bcf	3,6	;RP1=0, select bank0
  1588     088A  149F               	bsf	31,1	;volatile
  1589     088B                     l4852:
  1590                           
  1591                           ;postlab.c: 105:         voltaje = map(ADRESH, 0, 255, 0, 5);
  1592     088B  081E               	movf	30,w	;volatile
  1593     088C  1683               	bsf	3,5	;RP0=1, select bank1
  1594     088D  1303               	bcf	3,6	;RP1=0, select bank1
  1595     088E  00DA               	movwf	??_main^(0+128)
  1596     088F  01DB               	clrf	(??_main^(0+128)+1)
  1597     0890  01DC               	clrf	(??_main^(0+128)+2)
  1598     0891  01DD               	clrf	(??_main^(0+128)+3)
  1599     0892  085D               	movf	(??_main+3)^(0+128),w
  1600     0893  00F6               	movwf	___xxtofl@val+3
  1601     0894  085C               	movf	(??_main+2)^(0+128),w
  1602     0895  00F5               	movwf	___xxtofl@val+2
  1603     0896  085B               	movf	(??_main+1)^(0+128),w
  1604     0897  00F4               	movwf	___xxtofl@val+1
  1605     0898  085A               	movf	??_main^(0+128),w
  1606     0899  00F3               	movwf	___xxtofl@val
  1607     089A  3000               	movlw	0
  1608     089B  160A  118A  201D  120A  158A  	fcall	___xxtofl
  1609     08A0  0876               	movf	?___xxtofl+3,w
  1610     08A1  1683               	bsf	3,5	;RP0=1, select bank1
  1611     08A2  1303               	bcf	3,6	;RP1=0, select bank1
  1612     08A3  00C5               	movwf	(map@x+3)^(0+128)
  1613     08A4  0875               	movf	?___xxtofl+2,w
  1614     08A5  00C4               	movwf	(map@x+2)^(0+128)
  1615     08A6  0874               	movf	?___xxtofl+1,w
  1616     08A7  00C3               	movwf	(map@x+1)^(0+128)
  1617     08A8  0873               	movf	?___xxtofl,w
  1618     08A9  00C2               	movwf	map@x^(0+128)
  1619     08AA  3000               	movlw	0
  1620     08AB  00C9               	movwf	(map@in_min+3)^(0+128)
  1621     08AC  3000               	movlw	0
  1622     08AD  00C8               	movwf	(map@in_min+2)^(0+128)
  1623     08AE  3000               	movlw	0
  1624     08AF  00C7               	movwf	(map@in_min+1)^(0+128)
  1625     08B0  3000               	movlw	0
  1626     08B1  00C6               	movwf	map@in_min^(0+128)
  1627     08B2  3043               	movlw	67
  1628     08B3  00CD               	movwf	(map@in_max+3)^(0+128)
  1629     08B4  307F               	movlw	127
  1630     08B5  00CC               	movwf	(map@in_max+2)^(0+128)
  1631     08B6  3000               	movlw	0
  1632     08B7  00CB               	movwf	(map@in_max+1)^(0+128)
  1633     08B8  3000               	movlw	0
  1634     08B9  00CA               	movwf	map@in_max^(0+128)
  1635     08BA  3000               	movlw	0
  1636     08BB  00D1               	movwf	(map@out_min+3)^(0+128)
  1637     08BC  3000               	movlw	0
  1638     08BD  00D0               	movwf	(map@out_min+2)^(0+128)
  1639     08BE  3000               	movlw	0
  1640     08BF  00CF               	movwf	(map@out_min+1)^(0+128)
  1641     08C0  3000               	movlw	0
  1642     08C1  00CE               	movwf	map@out_min^(0+128)
  1643     08C2  3040               	movlw	64
  1644     08C3  00D5               	movwf	(map@out_max+3)^(0+128)
  1645     08C4  30A0               	movlw	160
  1646     08C5  00D4               	movwf	(map@out_max+2)^(0+128)
  1647     08C6  3000               	movlw	0
  1648     08C7  00D3               	movwf	(map@out_max+1)^(0+128)
  1649     08C8  3000               	movlw	0
  1650     08C9  00D2               	movwf	map@out_max^(0+128)
  1651     08CA  160A  118A  20D7  120A  158A  	fcall	_map
  1652     08CF  1683               	bsf	3,5	;RP0=1, select bank1
  1653     08D0  1303               	bcf	3,6	;RP1=0, select bank1
  1654     08D1  0845               	movf	(?_map+3)^(0+128),w
  1655     08D2  00E1               	movwf	(_voltaje+3)^(0+128)
  1656     08D3  0844               	movf	(?_map+2)^(0+128),w
  1657     08D4  00E0               	movwf	(_voltaje+2)^(0+128)
  1658     08D5  0843               	movf	(?_map+1)^(0+128),w
  1659     08D6  00DF               	movwf	(_voltaje+1)^(0+128)
  1660     08D7  0842               	movf	?_map^(0+128),w
  1661     08D8  00DE               	movwf	_voltaje^(0+128)
  1662     08D9                     l4854:
  1663                           
  1664                           ;postlab.c: 107:         sprintf(valor, "%.2f", voltaje);
  1665     08D9  30A0               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1666     08DA  00A8               	movwf	sprintf@f^(0+128)
  1667     08DB  0861               	movf	(_voltaje+3)^(0+128),w
  1668     08DC  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1669     08DD  0860               	movf	(_voltaje+2)^(0+128),w
  1670     08DE  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1671     08DF  085F               	movf	(_voltaje+1)^(0+128),w
  1672     08E0  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1673     08E1  085E               	movf	_voltaje^(0+128),w
  1674     08E2  00A9               	movwf	(?_sprintf^(0+128)+1)
  1675     08E3  3090               	movlw	(low (_valor| (0+256)))& (0+255)
  1676     08E4  120A  118A  202B  120A  158A  	fcall	_sprintf
  1677     08E9                     l4856:
  1678                           
  1679                           ;postlab.c: 109:         Lcd8_Set_Cursor(1,2);
  1680     08E9  3002               	movlw	2
  1681     08EA  00F7               	movwf	Lcd8_Set_Cursor@b
  1682     08EB  3001               	movlw	1
  1683     08EC  160A  158A  2268  120A  158A  	fcall	_Lcd8_Set_Cursor
  1684     08F1                     l4858:
  1685                           
  1686                           ;postlab.c: 110:         Lcd8_Write_String("Pot:");
  1687     08F1  3096               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1688     08F2  00F6               	movwf	Lcd8_Write_String@a
  1689     08F3  3080               	movlw	128
  1690     08F4  00F7               	movwf	Lcd8_Write_String@a+1
  1691     08F5  160A  158A  22DA  120A  158A  	fcall	_Lcd8_Write_String
  1692     08FA                     l4860:
  1693                           
  1694                           ;postlab.c: 111:         Lcd8_Set_Cursor(2,1);
  1695     08FA  01F7               	clrf	Lcd8_Set_Cursor@b
  1696     08FB  0AF7               	incf	Lcd8_Set_Cursor@b,f
  1697     08FC  3002               	movlw	2
  1698     08FD  160A  158A  2268  120A  158A  	fcall	_Lcd8_Set_Cursor
  1699     0902                     l4862:
  1700                           
  1701                           ;postlab.c: 112:         Lcd8_Write_String(valor);
  1702     0902  3090               	movlw	(low (_valor| (0+256)))& (0+255)
  1703     0903  00F6               	movwf	Lcd8_Write_String@a
  1704     0904  3001               	movlw	1
  1705     0905  00F7               	movwf	Lcd8_Write_String@a+1
  1706     0906  160A  158A  22DA  120A  158A  	fcall	_Lcd8_Write_String
  1707     090B                     l4864:
  1708                           
  1709                           ;postlab.c: 113:         Lcd8_Set_Cursor(2,6);
  1710     090B  3006               	movlw	6
  1711     090C  00F7               	movwf	Lcd8_Set_Cursor@b
  1712     090D  3002               	movlw	2
  1713     090E  160A  158A  2268  120A  158A  	fcall	_Lcd8_Set_Cursor
  1714     0913                     l4866:
  1715                           
  1716                           ;postlab.c: 114:         Lcd8_Write_String("V");
  1717     0913  30A5               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1718     0914  00F6               	movwf	Lcd8_Write_String@a
  1719     0915  3080               	movlw	128
  1720     0916  00F7               	movwf	Lcd8_Write_String@a+1
  1721     0917  160A  158A  22DA  120A  158A  	fcall	_Lcd8_Write_String
  1722     091C                     l4868:
  1723                           
  1724                           ;postlab.c: 115:         Lcd8_Set_Cursor(1,10);
  1725     091C  300A               	movlw	10
  1726     091D  00F7               	movwf	Lcd8_Set_Cursor@b
  1727     091E  3001               	movlw	1
  1728     091F  160A  158A  2268  120A  158A  	fcall	_Lcd8_Set_Cursor
  1729     0924                     l4870:
  1730                           
  1731                           ;postlab.c: 116:         Lcd8_Write_String("CPU:");
  1732     0924  3091               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1733     0925  00F6               	movwf	Lcd8_Write_String@a
  1734     0926  3080               	movlw	128
  1735     0927  00F7               	movwf	Lcd8_Write_String@a+1
  1736     0928  160A  158A  22DA  120A  158A  	fcall	_Lcd8_Write_String
  1737     092D                     l4872:
  1738                           
  1739                           ;postlab.c: 117:         Lcd8_Set_Cursor(2,10);
  1740     092D  300A               	movlw	10
  1741     092E  00F7               	movwf	Lcd8_Set_Cursor@b
  1742     092F  3002               	movlw	2
  1743     0930  160A  158A  2268  120A  158A  	fcall	_Lcd8_Set_Cursor
  1744     0935                     l4874:
  1745                           
  1746                           ;postlab.c: 118:         Lcd8_Write_String("data");
  1747     0935  309B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1748     0936  00F6               	movwf	Lcd8_Write_String@a
  1749     0937  3080               	movlw	128
  1750     0938  00F7               	movwf	Lcd8_Write_String@a+1
  1751     0939  160A  158A  22DA  120A  158A  	fcall	_Lcd8_Write_String
  1752     093E                     l4876:
  1753                           
  1754                           ;postlab.c: 125:         if (dato == '+'){
  1755     093E  302B               	movlw	43
  1756     093F  1283               	bcf	3,5	;RP0=0, select bank0
  1757     0940  1303               	bcf	3,6	;RP1=0, select bank0
  1758     0941  066C               	xorwf	_dato,w
  1759     0942  1D03               	btfss	3,2
  1760     0943  2945               	goto	u7881
  1761     0944  2946               	goto	u7880
  1762     0945                     u7881:
  1763     0945  294C               	goto	l4882
  1764     0946                     u7880:
  1765     0946                     l4878:
  1766                           
  1767                           ;postlab.c: 126:             PORTB++;
  1768     0946  3001               	movlw	1
  1769     0947  00FF               	movwf	btemp+1
  1770     0948  087F               	movf	btemp+1,w
  1771     0949  0786               	addwf	6,f	;volatile
  1772     094A                     l4880:
  1773                           
  1774                           ;postlab.c: 127:             dato = 0;
  1775     094A  01EC               	clrf	_dato
  1776                           
  1777                           ;postlab.c: 128:         } else if (dato == '-'){
  1778     094B  287C               	goto	l4846
  1779     094C                     l4882:
  1780     094C  302D               	movlw	45
  1781     094D  066C               	xorwf	_dato,w
  1782     094E  1D03               	btfss	3,2
  1783     094F  2951               	goto	u7891
  1784     0950  2952               	goto	u7890
  1785     0951                     u7891:
  1786     0951  287C               	goto	l4846
  1787     0952                     u7890:
  1788     0952                     l4884:
  1789                           
  1790                           ;postlab.c: 129:             PORTB--;
  1791     0952  3001               	movlw	1
  1792     0953  0286               	subwf	6,f	;volatile
  1793     0954  294A               	goto	l4880
  1794     0955  120A  118A  280C   	ljmp	start
  1795     0958                     __end_of_main:
  1796                           
  1797                           	psect	text1
  1798     002B                     __ptext1:	
  1799 ;; *************** function _sprintf *****************
  1800 ;; Defined at:
  1801 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;  sp              1    wreg     PTR unsigned char 
  1804 ;;		 -> valor(20), 
  1805 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1806 ;;		 -> STR_1(5), 
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;  sp              1   31[BANK1 ] PTR unsigned char 
  1809 ;;		 -> valor(20), 
  1810 ;;  fval            4   38[BANK1 ] PTR unsigned char 
  1811 ;;  tmpval          4   32[BANK1 ] struct .
  1812 ;;  val             4   25[BANK1 ] unsigned long 
  1813 ;;  prec            2   36[BANK1 ] int 
  1814 ;;  eexp            2   29[BANK1 ] int 
  1815 ;;  flag            2   23[BANK1 ] unsigned short 
  1816 ;;  cp              2    0        PTR const unsigned char 
  1817 ;;  len             2    0        unsigned int 
  1818 ;;  width           2    0        int 
  1819 ;;  c               1   42[BANK1 ] unsigned char 
  1820 ;;  ap              1   22[BANK1 ] PTR void [1]
  1821 ;;		 -> ?_sprintf(2), 
  1822 ;;  d               1    0        unsigned char 
  1823 ;; Return value:  Size  Location     Type
  1824 ;;                  2    8[BANK1 ] int 
  1825 ;; Registers used:
  1826 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1827 ;; Tracked objects:
  1828 ;;		On entry : 0/0
  1829 ;;		On exit  : 0/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1832 ;;      Params:         0       0       5       0       0
  1833 ;;      Locals:         0       0      25       0       0
  1834 ;;      Temps:          0       0       5       0       0
  1835 ;;      Totals:         0       0      35       0       0
  1836 ;;Total ram usage:       35 bytes
  1837 ;; Hardware stack levels used: 1
  1838 ;; Hardware stack levels required when called: 4
  1839 ;; This function calls:
  1840 ;;		___awdiv
  1841 ;;		___fladd
  1842 ;;		___fleq
  1843 ;;		___flge
  1844 ;;		___flmul
  1845 ;;		___flneg
  1846 ;;		___flsub
  1847 ;;		___fltol
  1848 ;;		___lldiv
  1849 ;;		___llmod
  1850 ;;		___wmul
  1851 ;;		___xxtofl
  1852 ;;		__div_to_l_
  1853 ;;		__tdiv_to_l_
  1854 ;;		_fround
  1855 ;;		_isdigit
  1856 ;;		_scale
  1857 ;; This function is called by:
  1858 ;;		_main
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862     002B                     _sprintf:	
  1863                           ;psect for function _sprintf
  1864                           
  1865                           
  1866                           ;incstack = 0
  1867                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1868                           ;sprintf@sp stored from wreg
  1869     002B  1683               	bsf	3,5	;RP0=1, select bank1
  1870     002C  1303               	bcf	3,6	;RP1=0, select bank1
  1871     002D  00BF               	movwf	sprintf@sp^(0+128)
  1872     002E                     l4584:
  1873                           
  1874                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1875     002E  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1876     002F  00B6               	movwf	sprintf@ap^(0+128)
  1877                           
  1878                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1879     0030  2F65               	goto	l4784
  1880     0031                     l4586:
  1881                           
  1882                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1883     0031  3025               	movlw	37
  1884     0032  064A               	xorwf	sprintf@c^(0+128),w
  1885     0033  1903               	btfsc	3,2
  1886     0034  2836               	goto	u7521
  1887     0035  2837               	goto	u7520
  1888     0036                     u7521:
  1889     0036  2841               	goto	l4592
  1890     0037                     u7520:
  1891     0037                     l4588:
  1892                           
  1893                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1894     0037  083F               	movf	sprintf@sp^(0+128),w
  1895     0038  0084               	movwf	4
  1896     0039  084A               	movf	sprintf@c^(0+128),w
  1897     003A  1783               	bsf	3,7	;select IRP bank2
  1898     003B  0080               	movwf	0
  1899     003C                     l4590:
  1900     003C  3001               	movlw	1
  1901     003D  00FF               	movwf	btemp+1
  1902     003E  087F               	movf	btemp+1,w
  1903     003F  07BF               	addwf	sprintf@sp^(0+128),f
  1904                           
  1905                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  1906     0040  2F65               	goto	l4784
  1907     0041                     l4592:
  1908                           
  1909                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1910     0041  01B7               	clrf	sprintf@flag^(0+128)
  1911     0042  01B8               	clrf	(sprintf@flag+1)^(0+128)
  1912     0043                     l4594:
  1913                           
  1914                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1915     0043  0828               	movf	sprintf@f^(0+128),w
  1916     0044  0084               	movwf	4
  1917     0045  160A  158A  200A  120A  118A  	fcall	stringdir
  1918     004A  3A2E               	xorlw	46
  1919     004B  1D03               	skipz
  1920     004C  284E               	goto	u7531
  1921     004D  284F               	goto	u7530
  1922     004E                     u7531:
  1923     004E  2894               	goto	l4610
  1924     004F                     u7530:
  1925     004F                     l4596:
  1926                           
  1927                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1928     004F  1738               	bsf	(sprintf@flag^(0+128)+1),6
  1929     0050                     l4598:
  1930                           
  1931                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 630:    f++;
  1932     0050  3001               	movlw	1
  1933     0051  00FF               	movwf	btemp+1
  1934     0052  087F               	movf	btemp+1,w
  1935     0053  07A8               	addwf	sprintf@f^(0+128),f
  1936     0054                     l4600:
  1937                           
  1938                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1939     0054  01C4               	clrf	sprintf@prec^(0+128)
  1940     0055  01C5               	clrf	(sprintf@prec+1)^(0+128)
  1941                           
  1942                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1943     0056  2883               	goto	l4608
  1944     0057                     l4602:
  1945                           
  1946                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1947     0057  300A               	movlw	10
  1948     0058  00F3               	movwf	___wmul@multiplier
  1949     0059  3000               	movlw	0
  1950     005A  00F4               	movwf	___wmul@multiplier+1
  1951     005B  1683               	bsf	3,5	;RP0=1, select bank1
  1952     005C  1303               	bcf	3,6	;RP1=0, select bank1
  1953     005D  0845               	movf	(sprintf@prec+1)^(0+128),w
  1954     005E  00F6               	movwf	___wmul@multiplicand+1
  1955     005F  0844               	movf	sprintf@prec^(0+128),w
  1956     0060  00F5               	movwf	___wmul@multiplicand
  1957     0061  160A  158A  22AF  120A  118A  	fcall	___wmul
  1958     0066  0874               	movf	?___wmul+1,w
  1959     0067  1683               	bsf	3,5	;RP0=1, select bank1
  1960     0068  1303               	bcf	3,6	;RP1=0, select bank1
  1961     0069  00C5               	movwf	(sprintf@prec+1)^(0+128)
  1962     006A  0873               	movf	?___wmul,w
  1963     006B  00C4               	movwf	sprintf@prec^(0+128)
  1964     006C                     l4604:
  1965                           
  1966                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1967     006C  0828               	movf	sprintf@f^(0+128),w
  1968     006D  0084               	movwf	4
  1969     006E  160A  158A  200A  120A  118A  	fcall	stringdir
  1970     0073  3ED0               	addlw	208
  1971     0074  00AD               	movwf	??_sprintf^(0+128)
  1972     0075  30FF               	movlw	255
  1973     0076  1803               	skipnc
  1974     0077  3000               	movlw	0
  1975     0078  00AE               	movwf	(??_sprintf^(0+128)+1)
  1976     0079  082D               	movf	??_sprintf^(0+128),w
  1977     007A  07C4               	addwf	sprintf@prec^(0+128),f
  1978     007B  1803               	skipnc
  1979     007C  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  1980     007D  082E               	movf	(??_sprintf+1)^(0+128),w
  1981     007E  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  1982     007F                     l4606:
  1983     007F  3001               	movlw	1
  1984     0080  00FF               	movwf	btemp+1
  1985     0081  087F               	movf	btemp+1,w
  1986     0082  07A8               	addwf	sprintf@f^(0+128),f
  1987     0083                     l4608:
  1988                           
  1989                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1990     0083  0828               	movf	sprintf@f^(0+128),w
  1991     0084  0084               	movwf	4
  1992     0085  160A  158A  200A  120A  118A  	fcall	stringdir
  1993     008A  160A  158A  2210  120A  118A  	fcall	_isdigit
  1994     008F  1803               	btfsc	3,0
  1995     0090  2892               	goto	u7541
  1996     0091  2893               	goto	u7540
  1997     0092                     u7541:
  1998     0092  2857               	goto	l4602
  1999     0093                     u7540:
  2000     0093  289A               	goto	l4616
  2001     0094                     l4610:
  2002                           
  2003                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2004     0094  01C4               	clrf	sprintf@prec^(0+128)
  2005     0095  01C5               	clrf	(sprintf@prec+1)^(0+128)
  2006     0096                     l4612:
  2007                           
  2008                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2009     0096  1638               	bsf	(sprintf@flag^(0+128)+1),4
  2010     0097  289A               	goto	l4616
  2011     0098                     l392:	
  2012                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2013                           
  2014                           
  2015                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2016     0098  1538               	bsf	(sprintf@flag^(0+128)+1),2
  2017                           
  2018                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 690:    break;
  2019     0099  28B6               	goto	l4618
  2020     009A                     l4616:
  2021     009A  3001               	movlw	1
  2022     009B  1683               	bsf	3,5	;RP0=1, select bank1
  2023     009C  1303               	bcf	3,6	;RP1=0, select bank1
  2024     009D  07A8               	addwf	sprintf@f^(0+128),f
  2025     009E  30FF               	movlw	-1
  2026     009F  0728               	addwf	sprintf@f^(0+128),w
  2027     00A0  0084               	movwf	4
  2028     00A1  160A  158A  200A  120A  118A  	fcall	stringdir
  2029     00A6  00CA               	movwf	sprintf@c^(0+128)
  2030     00A7  00AD               	movwf	??_sprintf^(0+128)
  2031     00A8  01AE               	clrf	(??_sprintf^(0+128)+1)
  2032                           
  2033                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2034                           ; Switch size 1, requested type "simple"
  2035                           ; Number of cases is 1, Range of values is 0 to 0
  2036                           ; switch strategies available:
  2037                           ; Name         Instructions Cycles
  2038                           ; simple_byte            4     3 (average)
  2039                           ; direct_byte           11     8 (fixed)
  2040                           ; jumptable            260     6 (fixed)
  2041                           ;	Chosen strategy is simple_byte
  2042     00A9  082E               	movf	(??_sprintf+1)^(0+128),w
  2043     00AA  3A00               	xorlw	0	; case 0
  2044     00AB  1903               	skipnz
  2045     00AC  28AE               	goto	l4918
  2046     00AD  2F65               	goto	l4784
  2047     00AE                     l4918:
  2048                           
  2049                           ; Switch size 1, requested type "simple"
  2050                           ; Number of cases is 2, Range of values is 0 to 102
  2051                           ; switch strategies available:
  2052                           ; Name         Instructions Cycles
  2053                           ; simple_byte            7     4 (average)
  2054                           ; jumptable            260     6 (fixed)
  2055                           ;	Chosen strategy is simple_byte
  2056     00AE  082D               	movf	??_sprintf^(0+128),w
  2057     00AF  3A00               	xorlw	0	; case 0
  2058     00B0  1903               	skipnz
  2059     00B1  2F75               	goto	l4786
  2060     00B2  3A66               	xorlw	102	; case 102
  2061     00B3  1903               	skipnz
  2062     00B4  2898               	goto	l392
  2063     00B5  2F65               	goto	l4784
  2064     00B6                     l4618:
  2065                           
  2066                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2067     00B6  3000               	movlw	0
  2068     00B7  0537               	andwf	sprintf@flag^(0+128),w
  2069     00B8  00AD               	movwf	??_sprintf^(0+128)
  2070     00B9  3007               	movlw	7
  2071     00BA  0538               	andwf	(sprintf@flag+1)^(0+128),w
  2072     00BB  00AE               	movwf	(??_sprintf+1)^(0+128)
  2073     00BC  082D               	movf	??_sprintf^(0+128),w
  2074     00BD  042E               	iorwf	(??_sprintf^(0+128)+1),w
  2075     00BE  1903               	btfsc	3,2
  2076     00BF  28C1               	goto	u7551
  2077     00C0  28C2               	goto	u7550
  2078     00C1                     u7551:
  2079     00C1  2F22               	goto	l4766
  2080     00C2                     u7550:
  2081     00C2                     l4620:
  2082                           
  2083                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2084     00C2  1E38               	btfss	(sprintf@flag+1)^(0+128),4
  2085     00C3  28C5               	goto	u7561
  2086     00C4  28C6               	goto	u7560
  2087     00C5                     u7561:
  2088     00C5  28CA               	goto	l4624
  2089     00C6                     u7560:
  2090     00C6                     l4622:
  2091                           
  2092                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2093     00C6  3006               	movlw	6
  2094     00C7  00C4               	movwf	sprintf@prec^(0+128)
  2095     00C8  3000               	movlw	0
  2096     00C9  00C5               	movwf	(sprintf@prec^(0+128)+1)
  2097     00CA                     l4624:
  2098                           
  2099                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2100     00CA  0836               	movf	sprintf@ap^(0+128),w
  2101     00CB  0084               	movwf	4
  2102     00CC  1383               	bcf	3,7	;select IRP bank0
  2103     00CD  0800               	movf	0,w
  2104     00CE  00C6               	movwf	sprintf@fval^(0+128)
  2105     00CF  0A84               	incf	4,f
  2106     00D0  0800               	movf	0,w
  2107     00D1  00C7               	movwf	(sprintf@fval+1)^(0+128)
  2108     00D2  0A84               	incf	4,f
  2109     00D3  0800               	movf	0,w
  2110     00D4  00C8               	movwf	(sprintf@fval+2)^(0+128)
  2111     00D5  0A84               	incf	4,f
  2112     00D6  0800               	movf	0,w
  2113     00D7  00C9               	movwf	(sprintf@fval+3)^(0+128)
  2114     00D8                     l4626:
  2115     00D8  3004               	movlw	4
  2116     00D9  00FF               	movwf	btemp+1
  2117     00DA  087F               	movf	btemp+1,w
  2118     00DB  07B6               	addwf	sprintf@ap^(0+128),f
  2119     00DC                     l4628:
  2120                           
  2121                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2122     00DC  0849               	movf	(sprintf@fval+3)^(0+128),w
  2123     00DD  1283               	bcf	3,5	;RP0=0, select bank0
  2124     00DE  1303               	bcf	3,6	;RP1=0, select bank0
  2125     00DF  00A3               	movwf	___flge@ff1+3
  2126     00E0  1683               	bsf	3,5	;RP0=1, select bank1
  2127     00E1  1303               	bcf	3,6	;RP1=0, select bank1
  2128     00E2  0848               	movf	(sprintf@fval+2)^(0+128),w
  2129     00E3  1283               	bcf	3,5	;RP0=0, select bank0
  2130     00E4  1303               	bcf	3,6	;RP1=0, select bank0
  2131     00E5  00A2               	movwf	___flge@ff1+2
  2132     00E6  1683               	bsf	3,5	;RP0=1, select bank1
  2133     00E7  1303               	bcf	3,6	;RP1=0, select bank1
  2134     00E8  0847               	movf	(sprintf@fval+1)^(0+128),w
  2135     00E9  1283               	bcf	3,5	;RP0=0, select bank0
  2136     00EA  1303               	bcf	3,6	;RP1=0, select bank0
  2137     00EB  00A1               	movwf	___flge@ff1+1
  2138     00EC  1683               	bsf	3,5	;RP0=1, select bank1
  2139     00ED  1303               	bcf	3,6	;RP1=0, select bank1
  2140     00EE  0846               	movf	sprintf@fval^(0+128),w
  2141     00EF  1283               	bcf	3,5	;RP0=0, select bank0
  2142     00F0  1303               	bcf	3,6	;RP1=0, select bank0
  2143     00F1  00A0               	movwf	___flge@ff1
  2144     00F2  3000               	movlw	0
  2145     00F3  00A7               	movwf	___flge@ff2+3
  2146     00F4  3000               	movlw	0
  2147     00F5  00A6               	movwf	___flge@ff2+2
  2148     00F6  3000               	movlw	0
  2149     00F7  00A5               	movwf	___flge@ff2+1
  2150     00F8  3000               	movlw	0
  2151     00F9  00A4               	movwf	___flge@ff2
  2152     00FA  160A  158A  25ED  120A  118A  	fcall	___flge
  2153     00FF  1803               	btfsc	3,0
  2154     0100  2902               	goto	u7571
  2155     0101  2903               	goto	u7570
  2156     0102                     u7571:
  2157     0102  2920               	goto	l4634
  2158     0103                     u7570:
  2159     0103                     l4630:
  2160                           
  2161                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2162     0103  1683               	bsf	3,5	;RP0=1, select bank1
  2163     0104  1303               	bcf	3,6	;RP1=0, select bank1
  2164     0105  0849               	movf	(sprintf@fval+3)^(0+128),w
  2165     0106  00F6               	movwf	___flneg@f1+3
  2166     0107  0848               	movf	(sprintf@fval+2)^(0+128),w
  2167     0108  00F5               	movwf	___flneg@f1+2
  2168     0109  0847               	movf	(sprintf@fval+1)^(0+128),w
  2169     010A  00F4               	movwf	___flneg@f1+1
  2170     010B  0846               	movf	sprintf@fval^(0+128),w
  2171     010C  00F3               	movwf	___flneg@f1
  2172     010D  120A  118A  27F2  120A  118A  	fcall	___flneg
  2173     0112  0876               	movf	?___flneg+3,w
  2174     0113  1683               	bsf	3,5	;RP0=1, select bank1
  2175     0114  1303               	bcf	3,6	;RP1=0, select bank1
  2176     0115  00C9               	movwf	(sprintf@fval+3)^(0+128)
  2177     0116  0875               	movf	?___flneg+2,w
  2178     0117  00C8               	movwf	(sprintf@fval+2)^(0+128)
  2179     0118  0874               	movf	?___flneg+1,w
  2180     0119  00C7               	movwf	(sprintf@fval+1)^(0+128)
  2181     011A  0873               	movf	?___flneg,w
  2182     011B  00C6               	movwf	sprintf@fval^(0+128)
  2183     011C                     l4632:
  2184                           
  2185                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2186     011C  3003               	movlw	3
  2187     011D  04B7               	iorwf	sprintf@flag^(0+128),f
  2188     011E  3000               	movlw	0
  2189     011F  04B8               	iorwf	(sprintf@flag+1)^(0+128),f
  2190     0120                     l4634:
  2191                           
  2192                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2193     0120  1683               	bsf	3,5	;RP0=1, select bank1
  2194     0121  1303               	bcf	3,6	;RP1=0, select bank1
  2195     0122  01BD               	clrf	sprintf@eexp^(0+128)
  2196     0123  01BE               	clrf	(sprintf@eexp+1)^(0+128)
  2197     0124                     l4636:
  2198                           
  2199                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2200     0124  0849               	movf	(sprintf@fval+3)^(0+128),w
  2201     0125  1283               	bcf	3,5	;RP0=0, select bank0
  2202     0126  1303               	bcf	3,6	;RP1=0, select bank0
  2203     0127  00A3               	movwf	___fleq@ff1+3
  2204     0128  1683               	bsf	3,5	;RP0=1, select bank1
  2205     0129  1303               	bcf	3,6	;RP1=0, select bank1
  2206     012A  0848               	movf	(sprintf@fval+2)^(0+128),w
  2207     012B  1283               	bcf	3,5	;RP0=0, select bank0
  2208     012C  1303               	bcf	3,6	;RP1=0, select bank0
  2209     012D  00A2               	movwf	___fleq@ff1+2
  2210     012E  1683               	bsf	3,5	;RP0=1, select bank1
  2211     012F  1303               	bcf	3,6	;RP1=0, select bank1
  2212     0130  0847               	movf	(sprintf@fval+1)^(0+128),w
  2213     0131  1283               	bcf	3,5	;RP0=0, select bank0
  2214     0132  1303               	bcf	3,6	;RP1=0, select bank0
  2215     0133  00A1               	movwf	___fleq@ff1+1
  2216     0134  1683               	bsf	3,5	;RP0=1, select bank1
  2217     0135  1303               	bcf	3,6	;RP1=0, select bank1
  2218     0136  0846               	movf	sprintf@fval^(0+128),w
  2219     0137  1283               	bcf	3,5	;RP0=0, select bank0
  2220     0138  1303               	bcf	3,6	;RP1=0, select bank0
  2221     0139  00A0               	movwf	___fleq@ff1
  2222     013A  3000               	movlw	0
  2223     013B  00A7               	movwf	___fleq@ff2+3
  2224     013C  3000               	movlw	0
  2225     013D  00A6               	movwf	___fleq@ff2+2
  2226     013E  3000               	movlw	0
  2227     013F  00A5               	movwf	___fleq@ff2+1
  2228     0140  3000               	movlw	0
  2229     0141  00A4               	movwf	___fleq@ff2
  2230     0142  160A  158A  23B6  120A  118A  	fcall	___fleq
  2231     0147  1803               	btfsc	3,0
  2232     0148  294A               	goto	u7581
  2233     0149  294B               	goto	u7580
  2234     014A                     u7581:
  2235     014A  2A67               	goto	l4662
  2236     014B                     u7580:
  2237     014B                     l4638:
  2238                           
  2239                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2240     014B  1003               	clrc
  2241     014C  1683               	bsf	3,5	;RP0=1, select bank1
  2242     014D  1303               	bcf	3,6	;RP1=0, select bank1
  2243     014E  0D48               	rlf	(sprintf@fval+2)^(0+128),w
  2244     014F  0D49               	rlf	(sprintf@fval+3)^(0+128),w
  2245     0150  3E82               	addlw	130
  2246     0151  00BD               	movwf	sprintf@eexp^(0+128)
  2247     0152  30FF               	movlw	255
  2248     0153  1803               	skipnc
  2249     0154  3000               	movlw	0
  2250     0155  00BE               	movwf	(sprintf@eexp^(0+128)+1)
  2251     0156                     l4640:
  2252                           
  2253                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2254     0156  30FF               	movlw	255
  2255     0157  07BD               	addwf	sprintf@eexp^(0+128),f
  2256     0158  1803               	skipnc
  2257     0159  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2258     015A  30FF               	movlw	255
  2259     015B  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2260     015C                     l4642:
  2261                           
  2262                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2263     015C  3003               	movlw	3
  2264     015D  00F3               	movwf	___wmul@multiplier
  2265     015E  3000               	movlw	0
  2266     015F  00F4               	movwf	___wmul@multiplier+1
  2267     0160  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2268     0161  00F6               	movwf	___wmul@multiplicand+1
  2269     0162  083D               	movf	sprintf@eexp^(0+128),w
  2270     0163  00F5               	movwf	___wmul@multiplicand
  2271     0164  160A  158A  22AF  120A  118A  	fcall	___wmul
  2272     0169  0874               	movf	?___wmul+1,w
  2273     016A  1683               	bsf	3,5	;RP0=1, select bank1
  2274     016B  1303               	bcf	3,6	;RP1=0, select bank1
  2275     016C  00BE               	movwf	(sprintf@eexp+1)^(0+128)
  2276     016D  0873               	movf	?___wmul,w
  2277     016E  00BD               	movwf	sprintf@eexp^(0+128)
  2278     016F                     l4644:
  2279                           
  2280                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2281     016F  300A               	movlw	10
  2282     0170  1283               	bcf	3,5	;RP0=0, select bank0
  2283     0171  1303               	bcf	3,6	;RP1=0, select bank0
  2284     0172  00A2               	movwf	___awdiv@divisor
  2285     0173  3000               	movlw	0
  2286     0174  00A3               	movwf	___awdiv@divisor+1
  2287     0175  1683               	bsf	3,5	;RP0=1, select bank1
  2288     0176  1303               	bcf	3,6	;RP1=0, select bank1
  2289     0177  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2290     0178  1283               	bcf	3,5	;RP0=0, select bank0
  2291     0179  1303               	bcf	3,6	;RP1=0, select bank0
  2292     017A  00A5               	movwf	___awdiv@dividend+1
  2293     017B  1683               	bsf	3,5	;RP0=1, select bank1
  2294     017C  1303               	bcf	3,6	;RP1=0, select bank1
  2295     017D  083D               	movf	sprintf@eexp^(0+128),w
  2296     017E  1283               	bcf	3,5	;RP0=0, select bank0
  2297     017F  1303               	bcf	3,6	;RP1=0, select bank0
  2298     0180  00A4               	movwf	___awdiv@dividend
  2299     0181  160A  158A  2584  120A  118A  	fcall	___awdiv
  2300     0186  1283               	bcf	3,5	;RP0=0, select bank0
  2301     0187  1303               	bcf	3,6	;RP1=0, select bank0
  2302     0188  0823               	movf	?___awdiv+1,w
  2303     0189  1683               	bsf	3,5	;RP0=1, select bank1
  2304     018A  1303               	bcf	3,6	;RP1=0, select bank1
  2305     018B  00BE               	movwf	(sprintf@eexp+1)^(0+128)
  2306     018C  1283               	bcf	3,5	;RP0=0, select bank0
  2307     018D  1303               	bcf	3,6	;RP1=0, select bank0
  2308     018E  0822               	movf	?___awdiv,w
  2309     018F  1683               	bsf	3,5	;RP0=1, select bank1
  2310     0190  1303               	bcf	3,6	;RP1=0, select bank1
  2311     0191  00BD               	movwf	sprintf@eexp^(0+128)
  2312     0192                     l4646:
  2313                           
  2314                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2315     0192  1FBE               	btfss	(sprintf@eexp+1)^(0+128),7
  2316     0193  2995               	goto	u7591
  2317     0194  2996               	goto	u7590
  2318     0195                     u7591:
  2319     0195  299C               	goto	l4650
  2320     0196                     u7590:
  2321     0196                     l4648:
  2322                           
  2323                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2324     0196  30FF               	movlw	255
  2325     0197  07BD               	addwf	sprintf@eexp^(0+128),f
  2326     0198  1803               	skipnc
  2327     0199  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2328     019A  30FF               	movlw	255
  2329     019B  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2330     019C                     l4650:
  2331                           
  2332                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2333     019C  033D               	decf	sprintf@eexp^(0+128),w
  2334     019D  3AFF               	xorlw	255
  2335     019E  120A  158A  249D  120A  118A  	fcall	_scale
  2336     01A3  1283               	bcf	3,5	;RP0=0, select bank0
  2337     01A4  1303               	bcf	3,6	;RP1=0, select bank0
  2338     01A5  0847               	movf	?_scale+3,w
  2339     01A6  1683               	bsf	3,5	;RP0=1, select bank1
  2340     01A7  1303               	bcf	3,6	;RP1=0, select bank1
  2341     01A8  00C3               	movwf	(sprintf@tmpval+3)^(0+128)
  2342     01A9  1283               	bcf	3,5	;RP0=0, select bank0
  2343     01AA  1303               	bcf	3,6	;RP1=0, select bank0
  2344     01AB  0846               	movf	?_scale+2,w
  2345     01AC  1683               	bsf	3,5	;RP0=1, select bank1
  2346     01AD  1303               	bcf	3,6	;RP1=0, select bank1
  2347     01AE  00C2               	movwf	(sprintf@tmpval+2)^(0+128)
  2348     01AF  1283               	bcf	3,5	;RP0=0, select bank0
  2349     01B0  1303               	bcf	3,6	;RP1=0, select bank0
  2350     01B1  0845               	movf	?_scale+1,w
  2351     01B2  1683               	bsf	3,5	;RP0=1, select bank1
  2352     01B3  1303               	bcf	3,6	;RP1=0, select bank1
  2353     01B4  00C1               	movwf	(sprintf@tmpval+1)^(0+128)
  2354     01B5  1283               	bcf	3,5	;RP0=0, select bank0
  2355     01B6  1303               	bcf	3,6	;RP1=0, select bank0
  2356     01B7  0844               	movf	?_scale,w
  2357     01B8  1683               	bsf	3,5	;RP0=1, select bank1
  2358     01B9  1303               	bcf	3,6	;RP1=0, select bank1
  2359     01BA  00C0               	movwf	sprintf@tmpval^(0+128)
  2360     01BB                     l4652:
  2361                           
  2362                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2363     01BB  0849               	movf	(sprintf@fval+3)^(0+128),w
  2364     01BC  1283               	bcf	3,5	;RP0=0, select bank0
  2365     01BD  1303               	bcf	3,6	;RP1=0, select bank0
  2366     01BE  00AD               	movwf	___flmul@b+3
  2367     01BF  1683               	bsf	3,5	;RP0=1, select bank1
  2368     01C0  1303               	bcf	3,6	;RP1=0, select bank1
  2369     01C1  0848               	movf	(sprintf@fval+2)^(0+128),w
  2370     01C2  1283               	bcf	3,5	;RP0=0, select bank0
  2371     01C3  1303               	bcf	3,6	;RP1=0, select bank0
  2372     01C4  00AC               	movwf	___flmul@b+2
  2373     01C5  1683               	bsf	3,5	;RP0=1, select bank1
  2374     01C6  1303               	bcf	3,6	;RP1=0, select bank1
  2375     01C7  0847               	movf	(sprintf@fval+1)^(0+128),w
  2376     01C8  1283               	bcf	3,5	;RP0=0, select bank0
  2377     01C9  1303               	bcf	3,6	;RP1=0, select bank0
  2378     01CA  00AB               	movwf	___flmul@b+1
  2379     01CB  1683               	bsf	3,5	;RP0=1, select bank1
  2380     01CC  1303               	bcf	3,6	;RP1=0, select bank1
  2381     01CD  0846               	movf	sprintf@fval^(0+128),w
  2382     01CE  1283               	bcf	3,5	;RP0=0, select bank0
  2383     01CF  1303               	bcf	3,6	;RP1=0, select bank0
  2384     01D0  00AA               	movwf	___flmul@b
  2385     01D1  1683               	bsf	3,5	;RP0=1, select bank1
  2386     01D2  1303               	bcf	3,6	;RP1=0, select bank1
  2387     01D3  0843               	movf	(sprintf@tmpval+3)^(0+128),w
  2388     01D4  1283               	bcf	3,5	;RP0=0, select bank0
  2389     01D5  1303               	bcf	3,6	;RP1=0, select bank0
  2390     01D6  00B1               	movwf	___flmul@a+3
  2391     01D7  1683               	bsf	3,5	;RP0=1, select bank1
  2392     01D8  1303               	bcf	3,6	;RP1=0, select bank1
  2393     01D9  0842               	movf	(sprintf@tmpval+2)^(0+128),w
  2394     01DA  1283               	bcf	3,5	;RP0=0, select bank0
  2395     01DB  1303               	bcf	3,6	;RP1=0, select bank0
  2396     01DC  00B0               	movwf	___flmul@a+2
  2397     01DD  1683               	bsf	3,5	;RP0=1, select bank1
  2398     01DE  1303               	bcf	3,6	;RP1=0, select bank1
  2399     01DF  0841               	movf	(sprintf@tmpval+1)^(0+128),w
  2400     01E0  1283               	bcf	3,5	;RP0=0, select bank0
  2401     01E1  1303               	bcf	3,6	;RP1=0, select bank0
  2402     01E2  00AF               	movwf	___flmul@a+1
  2403     01E3  1683               	bsf	3,5	;RP0=1, select bank1
  2404     01E4  1303               	bcf	3,6	;RP1=0, select bank1
  2405     01E5  0840               	movf	sprintf@tmpval^(0+128),w
  2406     01E6  1283               	bcf	3,5	;RP0=0, select bank0
  2407     01E7  1303               	bcf	3,6	;RP1=0, select bank0
  2408     01E8  00AE               	movwf	___flmul@a
  2409     01E9  120A  158A  2158  120A  118A  	fcall	___flmul
  2410     01EE  1283               	bcf	3,5	;RP0=0, select bank0
  2411     01EF  1303               	bcf	3,6	;RP1=0, select bank0
  2412     01F0  082D               	movf	?___flmul+3,w
  2413     01F1  1683               	bsf	3,5	;RP0=1, select bank1
  2414     01F2  1303               	bcf	3,6	;RP1=0, select bank1
  2415     01F3  00C3               	movwf	(sprintf@tmpval+3)^(0+128)
  2416     01F4  1283               	bcf	3,5	;RP0=0, select bank0
  2417     01F5  1303               	bcf	3,6	;RP1=0, select bank0
  2418     01F6  082C               	movf	?___flmul+2,w
  2419     01F7  1683               	bsf	3,5	;RP0=1, select bank1
  2420     01F8  1303               	bcf	3,6	;RP1=0, select bank1
  2421     01F9  00C2               	movwf	(sprintf@tmpval+2)^(0+128)
  2422     01FA  1283               	bcf	3,5	;RP0=0, select bank0
  2423     01FB  1303               	bcf	3,6	;RP1=0, select bank0
  2424     01FC  082B               	movf	?___flmul+1,w
  2425     01FD  1683               	bsf	3,5	;RP0=1, select bank1
  2426     01FE  1303               	bcf	3,6	;RP1=0, select bank1
  2427     01FF  00C1               	movwf	(sprintf@tmpval+1)^(0+128)
  2428     0200  1283               	bcf	3,5	;RP0=0, select bank0
  2429     0201  1303               	bcf	3,6	;RP1=0, select bank0
  2430     0202  082A               	movf	?___flmul,w
  2431     0203  1683               	bsf	3,5	;RP0=1, select bank1
  2432     0204  1303               	bcf	3,6	;RP1=0, select bank1
  2433     0205  00C0               	movwf	sprintf@tmpval^(0+128)
  2434     0206                     l4654:
  2435                           
  2436                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2437     0206  0843               	movf	(sprintf@tmpval+3)^(0+128),w
  2438     0207  1283               	bcf	3,5	;RP0=0, select bank0
  2439     0208  1303               	bcf	3,6	;RP1=0, select bank0
  2440     0209  00A3               	movwf	___flge@ff1+3
  2441     020A  1683               	bsf	3,5	;RP0=1, select bank1
  2442     020B  1303               	bcf	3,6	;RP1=0, select bank1
  2443     020C  0842               	movf	(sprintf@tmpval+2)^(0+128),w
  2444     020D  1283               	bcf	3,5	;RP0=0, select bank0
  2445     020E  1303               	bcf	3,6	;RP1=0, select bank0
  2446     020F  00A2               	movwf	___flge@ff1+2
  2447     0210  1683               	bsf	3,5	;RP0=1, select bank1
  2448     0211  1303               	bcf	3,6	;RP1=0, select bank1
  2449     0212  0841               	movf	(sprintf@tmpval+1)^(0+128),w
  2450     0213  1283               	bcf	3,5	;RP0=0, select bank0
  2451     0214  1303               	bcf	3,6	;RP1=0, select bank0
  2452     0215  00A1               	movwf	___flge@ff1+1
  2453     0216  1683               	bsf	3,5	;RP0=1, select bank1
  2454     0217  1303               	bcf	3,6	;RP1=0, select bank1
  2455     0218  0840               	movf	sprintf@tmpval^(0+128),w
  2456     0219  1283               	bcf	3,5	;RP0=0, select bank0
  2457     021A  1303               	bcf	3,6	;RP1=0, select bank0
  2458     021B  00A0               	movwf	___flge@ff1
  2459     021C  303F               	movlw	63
  2460     021D  00A7               	movwf	___flge@ff2+3
  2461     021E  3080               	movlw	128
  2462     021F  00A6               	movwf	___flge@ff2+2
  2463     0220  3000               	movlw	0
  2464     0221  00A5               	movwf	___flge@ff2+1
  2465     0222  3000               	movlw	0
  2466     0223  00A4               	movwf	___flge@ff2
  2467     0224  160A  158A  25ED  120A  118A  	fcall	___flge
  2468     0229  1803               	btfsc	3,0
  2469     022A  2A2C               	goto	u7601
  2470     022B  2A2D               	goto	u7600
  2471     022C                     u7601:
  2472     022C  2A36               	goto	l4658
  2473     022D                     u7600:
  2474     022D                     l4656:
  2475                           
  2476                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2477     022D  30FF               	movlw	255
  2478     022E  1683               	bsf	3,5	;RP0=1, select bank1
  2479     022F  1303               	bcf	3,6	;RP1=0, select bank1
  2480     0230  07BD               	addwf	sprintf@eexp^(0+128),f
  2481     0231  1803               	skipnc
  2482     0232  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2483     0233  30FF               	movlw	255
  2484     0234  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2485     0235  2A67               	goto	l4662
  2486     0236                     l4658:
  2487     0236  1683               	bsf	3,5	;RP0=1, select bank1
  2488     0237  1303               	bcf	3,6	;RP1=0, select bank1
  2489     0238  0843               	movf	(sprintf@tmpval+3)^(0+128),w
  2490     0239  1283               	bcf	3,5	;RP0=0, select bank0
  2491     023A  1303               	bcf	3,6	;RP1=0, select bank0
  2492     023B  00A3               	movwf	___flge@ff1+3
  2493     023C  1683               	bsf	3,5	;RP0=1, select bank1
  2494     023D  1303               	bcf	3,6	;RP1=0, select bank1
  2495     023E  0842               	movf	(sprintf@tmpval+2)^(0+128),w
  2496     023F  1283               	bcf	3,5	;RP0=0, select bank0
  2497     0240  1303               	bcf	3,6	;RP1=0, select bank0
  2498     0241  00A2               	movwf	___flge@ff1+2
  2499     0242  1683               	bsf	3,5	;RP0=1, select bank1
  2500     0243  1303               	bcf	3,6	;RP1=0, select bank1
  2501     0244  0841               	movf	(sprintf@tmpval+1)^(0+128),w
  2502     0245  1283               	bcf	3,5	;RP0=0, select bank0
  2503     0246  1303               	bcf	3,6	;RP1=0, select bank0
  2504     0247  00A1               	movwf	___flge@ff1+1
  2505     0248  1683               	bsf	3,5	;RP0=1, select bank1
  2506     0249  1303               	bcf	3,6	;RP1=0, select bank1
  2507     024A  0840               	movf	sprintf@tmpval^(0+128),w
  2508     024B  1283               	bcf	3,5	;RP0=0, select bank0
  2509     024C  1303               	bcf	3,6	;RP1=0, select bank0
  2510     024D  00A0               	movwf	___flge@ff1
  2511     024E  3041               	movlw	65
  2512     024F  00A7               	movwf	___flge@ff2+3
  2513     0250  3020               	movlw	32
  2514     0251  00A6               	movwf	___flge@ff2+2
  2515     0252  3000               	movlw	0
  2516     0253  00A5               	movwf	___flge@ff2+1
  2517     0254  3000               	movlw	0
  2518     0255  00A4               	movwf	___flge@ff2
  2519     0256  160A  158A  25ED  120A  118A  	fcall	___flge
  2520     025B  1C03               	btfss	3,0
  2521     025C  2A5E               	goto	u7611
  2522     025D  2A5F               	goto	u7610
  2523     025E                     u7611:
  2524     025E  2A67               	goto	l4662
  2525     025F                     u7610:
  2526     025F                     l4660:
  2527                           
  2528                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2529     025F  3001               	movlw	1
  2530     0260  1683               	bsf	3,5	;RP0=1, select bank1
  2531     0261  1303               	bcf	3,6	;RP1=0, select bank1
  2532     0262  07BD               	addwf	sprintf@eexp^(0+128),f
  2533     0263  1803               	skipnc
  2534     0264  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2535     0265  3000               	movlw	0
  2536     0266  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2537     0267                     l4662:
  2538                           
  2539                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2540     0267  1683               	bsf	3,5	;RP0=1, select bank1
  2541     0268  1303               	bcf	3,6	;RP1=0, select bank1
  2542     0269  0845               	movf	(sprintf@prec+1)^(0+128),w
  2543     026A  3A80               	xorlw	128
  2544     026B  00FF               	movwf	btemp+1
  2545     026C  3080               	movlw	128
  2546     026D  027F               	subwf	btemp+1,w
  2547     026E  1D03               	skipz
  2548     026F  2A72               	goto	u7625
  2549     0270  300D               	movlw	13
  2550     0271  0244               	subwf	sprintf@prec^(0+128),w
  2551     0272                     u7625:
  2552     0272  1803               	skipnc
  2553     0273  2A75               	goto	u7621
  2554     0274  2A76               	goto	u7620
  2555     0275                     u7621:
  2556     0275  2ABD               	goto	l4666
  2557     0276                     u7620:
  2558     0276                     l4664:
  2559                           
  2560                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2561     0276  1683               	bsf	3,5	;RP0=1, select bank1
  2562     0277  1303               	bcf	3,6	;RP1=0, select bank1
  2563     0278  0844               	movf	sprintf@prec^(0+128),w
  2564     0279  160A  118A  239B  120A  118A  	fcall	_fround
  2565     027E  1283               	bcf	3,5	;RP0=0, select bank0
  2566     027F  1303               	bcf	3,6	;RP1=0, select bank0
  2567     0280  0847               	movf	?_fround+3,w
  2568     0281  00DB               	movwf	___fladd@b+3
  2569     0282  0846               	movf	?_fround+2,w
  2570     0283  00DA               	movwf	___fladd@b+2
  2571     0284  0845               	movf	?_fround+1,w
  2572     0285  00D9               	movwf	___fladd@b+1
  2573     0286  0844               	movf	?_fround,w
  2574     0287  00D8               	movwf	___fladd@b
  2575     0288  1683               	bsf	3,5	;RP0=1, select bank1
  2576     0289  1303               	bcf	3,6	;RP1=0, select bank1
  2577     028A  0849               	movf	(sprintf@fval+3)^(0+128),w
  2578     028B  1283               	bcf	3,5	;RP0=0, select bank0
  2579     028C  1303               	bcf	3,6	;RP1=0, select bank0
  2580     028D  00DF               	movwf	___fladd@a+3
  2581     028E  1683               	bsf	3,5	;RP0=1, select bank1
  2582     028F  1303               	bcf	3,6	;RP1=0, select bank1
  2583     0290  0848               	movf	(sprintf@fval+2)^(0+128),w
  2584     0291  1283               	bcf	3,5	;RP0=0, select bank0
  2585     0292  1303               	bcf	3,6	;RP1=0, select bank0
  2586     0293  00DE               	movwf	___fladd@a+2
  2587     0294  1683               	bsf	3,5	;RP0=1, select bank1
  2588     0295  1303               	bcf	3,6	;RP1=0, select bank1
  2589     0296  0847               	movf	(sprintf@fval+1)^(0+128),w
  2590     0297  1283               	bcf	3,5	;RP0=0, select bank0
  2591     0298  1303               	bcf	3,6	;RP1=0, select bank0
  2592     0299  00DD               	movwf	___fladd@a+1
  2593     029A  1683               	bsf	3,5	;RP0=1, select bank1
  2594     029B  1303               	bcf	3,6	;RP1=0, select bank1
  2595     029C  0846               	movf	sprintf@fval^(0+128),w
  2596     029D  1283               	bcf	3,5	;RP0=0, select bank0
  2597     029E  1303               	bcf	3,6	;RP1=0, select bank0
  2598     029F  00DC               	movwf	___fladd@a
  2599     02A0  160A  118A  25A8  120A  118A  	fcall	___fladd
  2600     02A5  1283               	bcf	3,5	;RP0=0, select bank0
  2601     02A6  1303               	bcf	3,6	;RP1=0, select bank0
  2602     02A7  085B               	movf	?___fladd+3,w
  2603     02A8  1683               	bsf	3,5	;RP0=1, select bank1
  2604     02A9  1303               	bcf	3,6	;RP1=0, select bank1
  2605     02AA  00C9               	movwf	(sprintf@fval+3)^(0+128)
  2606     02AB  1283               	bcf	3,5	;RP0=0, select bank0
  2607     02AC  1303               	bcf	3,6	;RP1=0, select bank0
  2608     02AD  085A               	movf	?___fladd+2,w
  2609     02AE  1683               	bsf	3,5	;RP0=1, select bank1
  2610     02AF  1303               	bcf	3,6	;RP1=0, select bank1
  2611     02B0  00C8               	movwf	(sprintf@fval+2)^(0+128)
  2612     02B1  1283               	bcf	3,5	;RP0=0, select bank0
  2613     02B2  1303               	bcf	3,6	;RP1=0, select bank0
  2614     02B3  0859               	movf	?___fladd+1,w
  2615     02B4  1683               	bsf	3,5	;RP0=1, select bank1
  2616     02B5  1303               	bcf	3,6	;RP1=0, select bank1
  2617     02B6  00C7               	movwf	(sprintf@fval+1)^(0+128)
  2618     02B7  1283               	bcf	3,5	;RP0=0, select bank0
  2619     02B8  1303               	bcf	3,6	;RP1=0, select bank0
  2620     02B9  0858               	movf	?___fladd,w
  2621     02BA  1683               	bsf	3,5	;RP0=1, select bank1
  2622     02BB  1303               	bcf	3,6	;RP1=0, select bank1
  2623     02BC  00C6               	movwf	sprintf@fval^(0+128)
  2624     02BD                     l4666:
  2625                           
  2626                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2627     02BD  1683               	bsf	3,5	;RP0=1, select bank1
  2628     02BE  1303               	bcf	3,6	;RP1=0, select bank1
  2629     02BF  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2630     02C0  3A80               	xorlw	128
  2631     02C1  00FF               	movwf	btemp+1
  2632     02C2  3080               	movlw	128
  2633     02C3  027F               	subwf	btemp+1,w
  2634     02C4  1D03               	skipz
  2635     02C5  2AC8               	goto	u7635
  2636     02C6  300A               	movlw	10
  2637     02C7  023D               	subwf	sprintf@eexp^(0+128),w
  2638     02C8                     u7635:
  2639     02C8  1803               	skipnc
  2640     02C9  2ACB               	goto	u7631
  2641     02CA  2ACC               	goto	u7630
  2642     02CB                     u7631:
  2643     02CB  2B2B               	goto	l4674
  2644     02CC                     u7630:
  2645     02CC                     l4668:
  2646     02CC  1683               	bsf	3,5	;RP0=1, select bank1
  2647     02CD  1303               	bcf	3,6	;RP1=0, select bank1
  2648     02CE  0849               	movf	(sprintf@fval+3)^(0+128),w
  2649     02CF  1283               	bcf	3,5	;RP0=0, select bank0
  2650     02D0  1303               	bcf	3,6	;RP1=0, select bank0
  2651     02D1  00A3               	movwf	___fleq@ff1+3
  2652     02D2  1683               	bsf	3,5	;RP0=1, select bank1
  2653     02D3  1303               	bcf	3,6	;RP1=0, select bank1
  2654     02D4  0848               	movf	(sprintf@fval+2)^(0+128),w
  2655     02D5  1283               	bcf	3,5	;RP0=0, select bank0
  2656     02D6  1303               	bcf	3,6	;RP1=0, select bank0
  2657     02D7  00A2               	movwf	___fleq@ff1+2
  2658     02D8  1683               	bsf	3,5	;RP0=1, select bank1
  2659     02D9  1303               	bcf	3,6	;RP1=0, select bank1
  2660     02DA  0847               	movf	(sprintf@fval+1)^(0+128),w
  2661     02DB  1283               	bcf	3,5	;RP0=0, select bank0
  2662     02DC  1303               	bcf	3,6	;RP1=0, select bank0
  2663     02DD  00A1               	movwf	___fleq@ff1+1
  2664     02DE  1683               	bsf	3,5	;RP0=1, select bank1
  2665     02DF  1303               	bcf	3,6	;RP1=0, select bank1
  2666     02E0  0846               	movf	sprintf@fval^(0+128),w
  2667     02E1  1283               	bcf	3,5	;RP0=0, select bank0
  2668     02E2  1303               	bcf	3,6	;RP1=0, select bank0
  2669     02E3  00A0               	movwf	___fleq@ff1
  2670     02E4  3000               	movlw	0
  2671     02E5  00A7               	movwf	___fleq@ff2+3
  2672     02E6  3000               	movlw	0
  2673     02E7  00A6               	movwf	___fleq@ff2+2
  2674     02E8  3000               	movlw	0
  2675     02E9  00A5               	movwf	___fleq@ff2+1
  2676     02EA  3000               	movlw	0
  2677     02EB  00A4               	movwf	___fleq@ff2
  2678     02EC  160A  158A  23B6  120A  118A  	fcall	___fleq
  2679     02F1  1803               	btfsc	3,0
  2680     02F2  2AF4               	goto	u7641
  2681     02F3  2AF5               	goto	u7640
  2682     02F4                     u7641:
  2683     02F4  2BD7               	goto	l4688
  2684     02F5                     u7640:
  2685     02F5                     l4670:
  2686     02F5  1683               	bsf	3,5	;RP0=1, select bank1
  2687     02F6  1303               	bcf	3,6	;RP1=0, select bank1
  2688     02F7  0849               	movf	(sprintf@fval+3)^(0+128),w
  2689     02F8  1283               	bcf	3,5	;RP0=0, select bank0
  2690     02F9  1303               	bcf	3,6	;RP1=0, select bank0
  2691     02FA  00DA               	movwf	___fltol@f1+3
  2692     02FB  1683               	bsf	3,5	;RP0=1, select bank1
  2693     02FC  1303               	bcf	3,6	;RP1=0, select bank1
  2694     02FD  0848               	movf	(sprintf@fval+2)^(0+128),w
  2695     02FE  1283               	bcf	3,5	;RP0=0, select bank0
  2696     02FF  1303               	bcf	3,6	;RP1=0, select bank0
  2697     0300  00D9               	movwf	___fltol@f1+2
  2698     0301  1683               	bsf	3,5	;RP0=1, select bank1
  2699     0302  1303               	bcf	3,6	;RP1=0, select bank1
  2700     0303  0847               	movf	(sprintf@fval+1)^(0+128),w
  2701     0304  1283               	bcf	3,5	;RP0=0, select bank0
  2702     0305  1303               	bcf	3,6	;RP1=0, select bank0
  2703     0306  00D8               	movwf	___fltol@f1+1
  2704     0307  1683               	bsf	3,5	;RP0=1, select bank1
  2705     0308  1303               	bcf	3,6	;RP1=0, select bank1
  2706     0309  0846               	movf	sprintf@fval^(0+128),w
  2707     030A  1283               	bcf	3,5	;RP0=0, select bank0
  2708     030B  1303               	bcf	3,6	;RP1=0, select bank0
  2709     030C  00D7               	movwf	___fltol@f1
  2710     030D  120A  118A  277A  120A  118A  	fcall	___fltol
  2711     0312  1283               	bcf	3,5	;RP0=0, select bank0
  2712     0313  1303               	bcf	3,6	;RP1=0, select bank0
  2713     0314  085A               	movf	?___fltol+3,w
  2714     0315  0459               	iorwf	?___fltol+2,w
  2715     0316  0458               	iorwf	?___fltol+1,w
  2716     0317  0457               	iorwf	?___fltol,w
  2717     0318  1D03               	skipz
  2718     0319  2B1B               	goto	u7651
  2719     031A  2B1C               	goto	u7650
  2720     031B                     u7651:
  2721     031B  2BD7               	goto	l4688
  2722     031C                     u7650:
  2723     031C                     l4672:
  2724     031C  1683               	bsf	3,5	;RP0=1, select bank1
  2725     031D  1303               	bcf	3,6	;RP1=0, select bank1
  2726     031E  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2727     031F  3A80               	xorlw	128
  2728     0320  00FF               	movwf	btemp+1
  2729     0321  3080               	movlw	128
  2730     0322  027F               	subwf	btemp+1,w
  2731     0323  1D03               	skipz
  2732     0324  2B27               	goto	u7665
  2733     0325  3002               	movlw	2
  2734     0326  023D               	subwf	sprintf@eexp^(0+128),w
  2735     0327                     u7665:
  2736     0327  1C03               	skipc
  2737     0328  2B2A               	goto	u7661
  2738     0329  2B2B               	goto	u7660
  2739     032A                     u7661:
  2740     032A  2BD7               	goto	l4688
  2741     032B                     u7660:
  2742     032B                     l4674:
  2743                           
  2744                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2745     032B  1683               	bsf	3,5	;RP0=1, select bank1
  2746     032C  1303               	bcf	3,6	;RP1=0, select bank1
  2747     032D  0843               	movf	(sprintf@tmpval+3)^(0+128),w
  2748     032E  1283               	bcf	3,5	;RP0=0, select bank0
  2749     032F  1303               	bcf	3,6	;RP1=0, select bank0
  2750     0330  00A3               	movwf	___flge@ff1+3
  2751     0331  1683               	bsf	3,5	;RP0=1, select bank1
  2752     0332  1303               	bcf	3,6	;RP1=0, select bank1
  2753     0333  0842               	movf	(sprintf@tmpval+2)^(0+128),w
  2754     0334  1283               	bcf	3,5	;RP0=0, select bank0
  2755     0335  1303               	bcf	3,6	;RP1=0, select bank0
  2756     0336  00A2               	movwf	___flge@ff1+2
  2757     0337  1683               	bsf	3,5	;RP0=1, select bank1
  2758     0338  1303               	bcf	3,6	;RP1=0, select bank1
  2759     0339  0841               	movf	(sprintf@tmpval+1)^(0+128),w
  2760     033A  1283               	bcf	3,5	;RP0=0, select bank0
  2761     033B  1303               	bcf	3,6	;RP1=0, select bank0
  2762     033C  00A1               	movwf	___flge@ff1+1
  2763     033D  1683               	bsf	3,5	;RP0=1, select bank1
  2764     033E  1303               	bcf	3,6	;RP1=0, select bank1
  2765     033F  0840               	movf	sprintf@tmpval^(0+128),w
  2766     0340  1283               	bcf	3,5	;RP0=0, select bank0
  2767     0341  1303               	bcf	3,6	;RP1=0, select bank0
  2768     0342  00A0               	movwf	___flge@ff1
  2769     0343  3040               	movlw	64
  2770     0344  00A7               	movwf	___flge@ff2+3
  2771     0345  3089               	movlw	137
  2772     0346  00A6               	movwf	___flge@ff2+2
  2773     0347  3070               	movlw	112
  2774     0348  00A5               	movwf	___flge@ff2+1
  2775     0349  305F               	movlw	95
  2776     034A  00A4               	movwf	___flge@ff2
  2777     034B  160A  158A  25ED  120A  118A  	fcall	___flge
  2778     0350  1803               	btfsc	3,0
  2779     0351  2B53               	goto	u7671
  2780     0352  2B54               	goto	u7670
  2781     0353                     u7671:
  2782     0353  2B5D               	goto	l4678
  2783     0354                     u7670:
  2784     0354                     l4676:
  2785                           
  2786                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2787     0354  30F7               	movlw	247
  2788     0355  1683               	bsf	3,5	;RP0=1, select bank1
  2789     0356  1303               	bcf	3,6	;RP1=0, select bank1
  2790     0357  07BD               	addwf	sprintf@eexp^(0+128),f
  2791     0358  1803               	skipnc
  2792     0359  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2793     035A  30FF               	movlw	255
  2794     035B  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2795                           
  2796                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2797     035C  2B65               	goto	l4680
  2798     035D                     l4678:
  2799                           
  2800                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2801     035D  30F8               	movlw	248
  2802     035E  1683               	bsf	3,5	;RP0=1, select bank1
  2803     035F  1303               	bcf	3,6	;RP1=0, select bank1
  2804     0360  07BD               	addwf	sprintf@eexp^(0+128),f
  2805     0361  1803               	skipnc
  2806     0362  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2807     0363  30FF               	movlw	255
  2808     0364  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2809     0365                     l4680:
  2810                           
  2811                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2812     0365  083D               	movf	sprintf@eexp^(0+128),w
  2813     0366  120A  158A  249D  120A  118A  	fcall	_scale
  2814     036B  1283               	bcf	3,5	;RP0=0, select bank0
  2815     036C  1303               	bcf	3,6	;RP1=0, select bank0
  2816     036D  0847               	movf	?_scale+3,w
  2817     036E  1683               	bsf	3,5	;RP0=1, select bank1
  2818     036F  1303               	bcf	3,6	;RP1=0, select bank1
  2819     0370  00C3               	movwf	(sprintf@tmpval+3)^(0+128)
  2820     0371  1283               	bcf	3,5	;RP0=0, select bank0
  2821     0372  1303               	bcf	3,6	;RP1=0, select bank0
  2822     0373  0846               	movf	?_scale+2,w
  2823     0374  1683               	bsf	3,5	;RP0=1, select bank1
  2824     0375  1303               	bcf	3,6	;RP1=0, select bank1
  2825     0376  00C2               	movwf	(sprintf@tmpval+2)^(0+128)
  2826     0377  1283               	bcf	3,5	;RP0=0, select bank0
  2827     0378  1303               	bcf	3,6	;RP1=0, select bank0
  2828     0379  0845               	movf	?_scale+1,w
  2829     037A  1683               	bsf	3,5	;RP0=1, select bank1
  2830     037B  1303               	bcf	3,6	;RP1=0, select bank1
  2831     037C  00C1               	movwf	(sprintf@tmpval+1)^(0+128)
  2832     037D  1283               	bcf	3,5	;RP0=0, select bank0
  2833     037E  1303               	bcf	3,6	;RP1=0, select bank0
  2834     037F  0844               	movf	?_scale,w
  2835     0380  1683               	bsf	3,5	;RP0=1, select bank1
  2836     0381  1303               	bcf	3,6	;RP1=0, select bank1
  2837     0382  00C0               	movwf	sprintf@tmpval^(0+128)
  2838     0383                     l4682:
  2839     0383  0849               	movf	(sprintf@fval+3)^(0+128),w
  2840     0384  1283               	bcf	3,5	;RP0=0, select bank0
  2841     0385  1303               	bcf	3,6	;RP1=0, select bank0
  2842     0386  00A3               	movwf	__div_to_l_@f1+3
  2843     0387  1683               	bsf	3,5	;RP0=1, select bank1
  2844     0388  1303               	bcf	3,6	;RP1=0, select bank1
  2845     0389  0848               	movf	(sprintf@fval+2)^(0+128),w
  2846     038A  1283               	bcf	3,5	;RP0=0, select bank0
  2847     038B  1303               	bcf	3,6	;RP1=0, select bank0
  2848     038C  00A2               	movwf	__div_to_l_@f1+2
  2849     038D  1683               	bsf	3,5	;RP0=1, select bank1
  2850     038E  1303               	bcf	3,6	;RP1=0, select bank1
  2851     038F  0847               	movf	(sprintf@fval+1)^(0+128),w
  2852     0390  1283               	bcf	3,5	;RP0=0, select bank0
  2853     0391  1303               	bcf	3,6	;RP1=0, select bank0
  2854     0392  00A1               	movwf	__div_to_l_@f1+1
  2855     0393  1683               	bsf	3,5	;RP0=1, select bank1
  2856     0394  1303               	bcf	3,6	;RP1=0, select bank1
  2857     0395  0846               	movf	sprintf@fval^(0+128),w
  2858     0396  1283               	bcf	3,5	;RP0=0, select bank0
  2859     0397  1303               	bcf	3,6	;RP1=0, select bank0
  2860     0398  00A0               	movwf	__div_to_l_@f1
  2861     0399  1683               	bsf	3,5	;RP0=1, select bank1
  2862     039A  1303               	bcf	3,6	;RP1=0, select bank1
  2863     039B  0843               	movf	(sprintf@tmpval+3)^(0+128),w
  2864     039C  1283               	bcf	3,5	;RP0=0, select bank0
  2865     039D  1303               	bcf	3,6	;RP1=0, select bank0
  2866     039E  00A7               	movwf	__div_to_l_@f2+3
  2867     039F  1683               	bsf	3,5	;RP0=1, select bank1
  2868     03A0  1303               	bcf	3,6	;RP1=0, select bank1
  2869     03A1  0842               	movf	(sprintf@tmpval+2)^(0+128),w
  2870     03A2  1283               	bcf	3,5	;RP0=0, select bank0
  2871     03A3  1303               	bcf	3,6	;RP1=0, select bank0
  2872     03A4  00A6               	movwf	__div_to_l_@f2+2
  2873     03A5  1683               	bsf	3,5	;RP0=1, select bank1
  2874     03A6  1303               	bcf	3,6	;RP1=0, select bank1
  2875     03A7  0841               	movf	(sprintf@tmpval+1)^(0+128),w
  2876     03A8  1283               	bcf	3,5	;RP0=0, select bank0
  2877     03A9  1303               	bcf	3,6	;RP1=0, select bank0
  2878     03AA  00A5               	movwf	__div_to_l_@f2+1
  2879     03AB  1683               	bsf	3,5	;RP0=1, select bank1
  2880     03AC  1303               	bcf	3,6	;RP1=0, select bank1
  2881     03AD  0840               	movf	sprintf@tmpval^(0+128),w
  2882     03AE  1283               	bcf	3,5	;RP0=0, select bank0
  2883     03AF  1303               	bcf	3,6	;RP1=0, select bank0
  2884     03B0  00A4               	movwf	__div_to_l_@f2
  2885     03B1  160A  158A  2748  120A  118A  	fcall	__div_to_l_
  2886     03B6  1283               	bcf	3,5	;RP0=0, select bank0
  2887     03B7  1303               	bcf	3,6	;RP1=0, select bank0
  2888     03B8  0823               	movf	?__div_to_l_+3,w
  2889     03B9  1683               	bsf	3,5	;RP0=1, select bank1
  2890     03BA  1303               	bcf	3,6	;RP1=0, select bank1
  2891     03BB  00BC               	movwf	(sprintf@val+3)^(0+128)
  2892     03BC  1283               	bcf	3,5	;RP0=0, select bank0
  2893     03BD  1303               	bcf	3,6	;RP1=0, select bank0
  2894     03BE  0822               	movf	?__div_to_l_+2,w
  2895     03BF  1683               	bsf	3,5	;RP0=1, select bank1
  2896     03C0  1303               	bcf	3,6	;RP1=0, select bank1
  2897     03C1  00BB               	movwf	(sprintf@val+2)^(0+128)
  2898     03C2  1283               	bcf	3,5	;RP0=0, select bank0
  2899     03C3  1303               	bcf	3,6	;RP1=0, select bank0
  2900     03C4  0821               	movf	?__div_to_l_+1,w
  2901     03C5  1683               	bsf	3,5	;RP0=1, select bank1
  2902     03C6  1303               	bcf	3,6	;RP1=0, select bank1
  2903     03C7  00BA               	movwf	(sprintf@val+1)^(0+128)
  2904     03C8  1283               	bcf	3,5	;RP0=0, select bank0
  2905     03C9  1303               	bcf	3,6	;RP1=0, select bank0
  2906     03CA  0820               	movf	?__div_to_l_,w
  2907     03CB  1683               	bsf	3,5	;RP0=1, select bank1
  2908     03CC  1303               	bcf	3,6	;RP1=0, select bank1
  2909     03CD  00B9               	movwf	sprintf@val^(0+128)
  2910     03CE                     l4686:
  2911                           
  2912                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2913     03CE  3000               	movlw	0
  2914     03CF  00C9               	movwf	(sprintf@fval+3)^(0+128)
  2915     03D0  3000               	movlw	0
  2916     03D1  00C8               	movwf	(sprintf@fval+2)^(0+128)
  2917     03D2  3000               	movlw	0
  2918     03D3  00C7               	movwf	(sprintf@fval+1)^(0+128)
  2919     03D4  3000               	movlw	0
  2920     03D5  00C6               	movwf	sprintf@fval^(0+128)
  2921                           
  2922                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2923     03D6  2C3D               	goto	l4692
  2924     03D7                     l4688:
  2925                           
  2926                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2927     03D7  1683               	bsf	3,5	;RP0=1, select bank1
  2928     03D8  1303               	bcf	3,6	;RP1=0, select bank1
  2929     03D9  0849               	movf	(sprintf@fval+3)^(0+128),w
  2930     03DA  1283               	bcf	3,5	;RP0=0, select bank0
  2931     03DB  1303               	bcf	3,6	;RP1=0, select bank0
  2932     03DC  00DA               	movwf	___fltol@f1+3
  2933     03DD  1683               	bsf	3,5	;RP0=1, select bank1
  2934     03DE  1303               	bcf	3,6	;RP1=0, select bank1
  2935     03DF  0848               	movf	(sprintf@fval+2)^(0+128),w
  2936     03E0  1283               	bcf	3,5	;RP0=0, select bank0
  2937     03E1  1303               	bcf	3,6	;RP1=0, select bank0
  2938     03E2  00D9               	movwf	___fltol@f1+2
  2939     03E3  1683               	bsf	3,5	;RP0=1, select bank1
  2940     03E4  1303               	bcf	3,6	;RP1=0, select bank1
  2941     03E5  0847               	movf	(sprintf@fval+1)^(0+128),w
  2942     03E6  1283               	bcf	3,5	;RP0=0, select bank0
  2943     03E7  1303               	bcf	3,6	;RP1=0, select bank0
  2944     03E8  00D8               	movwf	___fltol@f1+1
  2945     03E9  1683               	bsf	3,5	;RP0=1, select bank1
  2946     03EA  1303               	bcf	3,6	;RP1=0, select bank1
  2947     03EB  0846               	movf	sprintf@fval^(0+128),w
  2948     03EC  1283               	bcf	3,5	;RP0=0, select bank0
  2949     03ED  1303               	bcf	3,6	;RP1=0, select bank0
  2950     03EE  00D7               	movwf	___fltol@f1
  2951     03EF  120A  118A  277A  120A  118A  	fcall	___fltol
  2952     03F4  1283               	bcf	3,5	;RP0=0, select bank0
  2953     03F5  1303               	bcf	3,6	;RP1=0, select bank0
  2954     03F6  085A               	movf	?___fltol+3,w
  2955     03F7  1683               	bsf	3,5	;RP0=1, select bank1
  2956     03F8  1303               	bcf	3,6	;RP1=0, select bank1
  2957     03F9  00BC               	movwf	(sprintf@val+3)^(0+128)
  2958     03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2959     03FB  1303               	bcf	3,6	;RP1=0, select bank0
  2960     03FC  0859               	movf	?___fltol+2,w
  2961     03FD  1683               	bsf	3,5	;RP0=1, select bank1
  2962     03FE  1303               	bcf	3,6	;RP1=0, select bank1
  2963     03FF  00BB               	movwf	(sprintf@val+2)^(0+128)
  2964     0400  1283               	bcf	3,5	;RP0=0, select bank0
  2965     0401  1303               	bcf	3,6	;RP1=0, select bank0
  2966     0402  0858               	movf	?___fltol+1,w
  2967     0403  1683               	bsf	3,5	;RP0=1, select bank1
  2968     0404  1303               	bcf	3,6	;RP1=0, select bank1
  2969     0405  00BA               	movwf	(sprintf@val+1)^(0+128)
  2970     0406  1283               	bcf	3,5	;RP0=0, select bank0
  2971     0407  1303               	bcf	3,6	;RP1=0, select bank0
  2972     0408  0857               	movf	?___fltol,w
  2973     0409  1683               	bsf	3,5	;RP0=1, select bank1
  2974     040A  1303               	bcf	3,6	;RP1=0, select bank1
  2975     040B  00B9               	movwf	sprintf@val^(0+128)
  2976                           
  2977                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2978     040C  083C               	movf	(sprintf@val+3)^(0+128),w
  2979     040D  00F6               	movwf	___xxtofl@val+3
  2980     040E  083B               	movf	(sprintf@val+2)^(0+128),w
  2981     040F  00F5               	movwf	___xxtofl@val+2
  2982     0410  083A               	movf	(sprintf@val+1)^(0+128),w
  2983     0411  00F4               	movwf	___xxtofl@val+1
  2984     0412  0839               	movf	sprintf@val^(0+128),w
  2985     0413  00F3               	movwf	___xxtofl@val
  2986     0414  3000               	movlw	0
  2987     0415  160A  118A  201D  120A  118A  	fcall	___xxtofl
  2988     041A  0876               	movf	?___xxtofl+3,w
  2989     041B  1683               	bsf	3,5	;RP0=1, select bank1
  2990     041C  1303               	bcf	3,6	;RP1=0, select bank1
  2991     041D  00A3               	movwf	(___flsub@a+3)^(0+128)
  2992     041E  0875               	movf	?___xxtofl+2,w
  2993     041F  00A2               	movwf	(___flsub@a+2)^(0+128)
  2994     0420  0874               	movf	?___xxtofl+1,w
  2995     0421  00A1               	movwf	(___flsub@a+1)^(0+128)
  2996     0422  0873               	movf	?___xxtofl,w
  2997     0423  00A0               	movwf	___flsub@a^(0+128)
  2998     0424  0849               	movf	(sprintf@fval+3)^(0+128),w
  2999     0425  00A7               	movwf	(___flsub@b+3)^(0+128)
  3000     0426  0848               	movf	(sprintf@fval+2)^(0+128),w
  3001     0427  00A6               	movwf	(___flsub@b+2)^(0+128)
  3002     0428  0847               	movf	(sprintf@fval+1)^(0+128),w
  3003     0429  00A5               	movwf	(___flsub@b+1)^(0+128)
  3004     042A  0846               	movf	sprintf@fval^(0+128),w
  3005     042B  00A4               	movwf	___flsub@b^(0+128)
  3006     042C  160A  158A  2366  120A  118A  	fcall	___flsub
  3007     0431  1683               	bsf	3,5	;RP0=1, select bank1
  3008     0432  1303               	bcf	3,6	;RP1=0, select bank1
  3009     0433  0823               	movf	(?___flsub+3)^(0+128),w
  3010     0434  00C9               	movwf	(sprintf@fval+3)^(0+128)
  3011     0435  0822               	movf	(?___flsub+2)^(0+128),w
  3012     0436  00C8               	movwf	(sprintf@fval+2)^(0+128)
  3013     0437  0821               	movf	(?___flsub+1)^(0+128),w
  3014     0438  00C7               	movwf	(sprintf@fval+1)^(0+128)
  3015     0439  0820               	movf	?___flsub^(0+128),w
  3016     043A  00C6               	movwf	sprintf@fval^(0+128)
  3017     043B                     l4690:
  3018                           
  3019                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  3020     043B  01BD               	clrf	sprintf@eexp^(0+128)
  3021     043C  01BE               	clrf	(sprintf@eexp+1)^(0+128)
  3022     043D                     l4692:
  3023                           
  3024                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3025     043D  01CA               	clrf	sprintf@c^(0+128)
  3026     043E  0ACA               	incf	sprintf@c^(0+128),f
  3027     043F                     l4698:
  3028                           
  3029                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  3030     043F  084A               	movf	sprintf@c^(0+128),w
  3031     0440  00AD               	movwf	??_sprintf^(0+128)
  3032     0441  3001               	movlw	1
  3033     0442                     u7685:
  3034     0442  1003               	clrc
  3035     0443  0DAD               	rlf	??_sprintf^(0+128),f
  3036     0444  3EFF               	addlw	-1
  3037     0445  1D03               	skipz
  3038     0446  2C42               	goto	u7685
  3039     0447  1003               	clrc
  3040     0448  0D2D               	rlf	??_sprintf^(0+128),w
  3041     0449  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3042     044A  0084               	movwf	4
  3043     044B  160A  158A  200A  120A  118A  	fcall	stringdir
  3044     0450  00AE               	movwf	(??_sprintf+1)^(0+128)
  3045     0451  160A  158A  200A  120A  118A  	fcall	stringdir
  3046     0456  00AF               	movwf	((??_sprintf+1)^(0+128)+1)
  3047     0457  160A  158A  200A  120A  118A  	fcall	stringdir
  3048     045C  00B0               	movwf	((??_sprintf+1)^(0+128)+2)
  3049     045D  160A  158A  200A  120A  118A  	fcall	stringdir
  3050     0462  00B1               	movwf	((??_sprintf+1)^(0+128)+3)
  3051     0463  0831               	movf	(??_sprintf+4)^(0+128),w
  3052     0464  023C               	subwf	(sprintf@val+3)^(0+128),w
  3053     0465  1D03               	skipz
  3054     0466  2C71               	goto	u7695
  3055     0467  0830               	movf	(??_sprintf+3)^(0+128),w
  3056     0468  023B               	subwf	(sprintf@val+2)^(0+128),w
  3057     0469  1D03               	skipz
  3058     046A  2C71               	goto	u7695
  3059     046B  082F               	movf	(??_sprintf+2)^(0+128),w
  3060     046C  023A               	subwf	(sprintf@val+1)^(0+128),w
  3061     046D  1D03               	skipz
  3062     046E  2C71               	goto	u7695
  3063     046F  082E               	movf	(??_sprintf+1)^(0+128),w
  3064     0470  0239               	subwf	sprintf@val^(0+128),w
  3065     0471                     u7695:
  3066     0471  1803               	skipnc
  3067     0472  2C74               	goto	u7691
  3068     0473  2C75               	goto	u7690
  3069     0474                     u7691:
  3070     0474  2C76               	goto	l4702
  3071     0475                     u7690:
  3072     0475  2C80               	goto	l4706
  3073     0476                     l4702:
  3074     0476  3001               	movlw	1
  3075     0477  00FF               	movwf	btemp+1
  3076     0478  087F               	movf	btemp+1,w
  3077     0479  07CA               	addwf	sprintf@c^(0+128),f
  3078     047A                     l4704:
  3079     047A  300A               	movlw	10
  3080     047B  064A               	xorwf	sprintf@c^(0+128),w
  3081     047C  1D03               	btfss	3,2
  3082     047D  2C7F               	goto	u7701
  3083     047E  2C80               	goto	u7700
  3084     047F                     u7701:
  3085     047F  2C3F               	goto	l4698
  3086     0480                     u7700:
  3087     0480                     l4706:
  3088                           
  3089                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  3090     0480  3003               	movlw	3
  3091     0481  0537               	andwf	sprintf@flag^(0+128),w
  3092     0482  00AD               	movwf	??_sprintf^(0+128)
  3093     0483  3000               	movlw	0
  3094     0484  0538               	andwf	(sprintf@flag+1)^(0+128),w
  3095     0485  00AE               	movwf	(??_sprintf+1)^(0+128)
  3096     0486  082D               	movf	??_sprintf^(0+128),w
  3097     0487  042E               	iorwf	(??_sprintf^(0+128)+1),w
  3098     0488  1903               	btfsc	3,2
  3099     0489  2C8B               	goto	u7711
  3100     048A  2C8C               	goto	u7710
  3101     048B                     u7711:
  3102     048B  2D37               	goto	l4720
  3103     048C                     u7710:
  3104     048C                     l4708:
  3105                           
  3106                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3107     048C  083F               	movf	sprintf@sp^(0+128),w
  3108     048D  0084               	movwf	4
  3109     048E  302D               	movlw	45
  3110     048F  1783               	bsf	3,7	;select IRP bank2
  3111     0490  0080               	movwf	0
  3112     0491                     l4710:
  3113     0491  3001               	movlw	1
  3114     0492  00FF               	movwf	btemp+1
  3115     0493  087F               	movf	btemp+1,w
  3116     0494  07BF               	addwf	sprintf@sp^(0+128),f
  3117     0495  2D37               	goto	l4720
  3118     0496                     l4712:
  3119                           
  3120                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3121     0496  084A               	movf	sprintf@c^(0+128),w
  3122     0497  00AD               	movwf	??_sprintf^(0+128)
  3123     0498  3001               	movlw	1
  3124     0499                     u7725:
  3125     0499  1003               	clrc
  3126     049A  0DAD               	rlf	??_sprintf^(0+128),f
  3127     049B  3EFF               	addlw	-1
  3128     049C  1D03               	skipz
  3129     049D  2C99               	goto	u7725
  3130     049E  1003               	clrc
  3131     049F  0D2D               	rlf	??_sprintf^(0+128),w
  3132     04A0  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3133     04A1  0084               	movwf	4
  3134     04A2  160A  158A  200A  120A  118A  	fcall	stringdir
  3135     04A7  1283               	bcf	3,5	;RP0=0, select bank0
  3136     04A8  1303               	bcf	3,6	;RP1=0, select bank0
  3137     04A9  00A0               	movwf	___lldiv@divisor
  3138     04AA  160A  158A  200A  120A  118A  	fcall	stringdir
  3139     04AF  00A1               	movwf	___lldiv@divisor+1
  3140     04B0  160A  158A  200A  120A  118A  	fcall	stringdir
  3141     04B5  00A2               	movwf	___lldiv@divisor+2
  3142     04B6  160A  158A  200A  120A  118A  	fcall	stringdir
  3143     04BB  00A3               	movwf	___lldiv@divisor+3
  3144     04BC  1683               	bsf	3,5	;RP0=1, select bank1
  3145     04BD  1303               	bcf	3,6	;RP1=0, select bank1
  3146     04BE  083C               	movf	(sprintf@val+3)^(0+128),w
  3147     04BF  1283               	bcf	3,5	;RP0=0, select bank0
  3148     04C0  1303               	bcf	3,6	;RP1=0, select bank0
  3149     04C1  00A7               	movwf	___lldiv@dividend+3
  3150     04C2  1683               	bsf	3,5	;RP0=1, select bank1
  3151     04C3  1303               	bcf	3,6	;RP1=0, select bank1
  3152     04C4  083B               	movf	(sprintf@val+2)^(0+128),w
  3153     04C5  1283               	bcf	3,5	;RP0=0, select bank0
  3154     04C6  1303               	bcf	3,6	;RP1=0, select bank0
  3155     04C7  00A6               	movwf	___lldiv@dividend+2
  3156     04C8  1683               	bsf	3,5	;RP0=1, select bank1
  3157     04C9  1303               	bcf	3,6	;RP1=0, select bank1
  3158     04CA  083A               	movf	(sprintf@val+1)^(0+128),w
  3159     04CB  1283               	bcf	3,5	;RP0=0, select bank0
  3160     04CC  1303               	bcf	3,6	;RP1=0, select bank0
  3161     04CD  00A5               	movwf	___lldiv@dividend+1
  3162     04CE  1683               	bsf	3,5	;RP0=1, select bank1
  3163     04CF  1303               	bcf	3,6	;RP1=0, select bank1
  3164     04D0  0839               	movf	sprintf@val^(0+128),w
  3165     04D1  1283               	bcf	3,5	;RP0=0, select bank0
  3166     04D2  1303               	bcf	3,6	;RP1=0, select bank0
  3167     04D3  00A4               	movwf	___lldiv@dividend
  3168     04D4  160A  158A  251C  120A  118A  	fcall	___lldiv
  3169     04D9  1283               	bcf	3,5	;RP0=0, select bank0
  3170     04DA  1303               	bcf	3,6	;RP1=0, select bank0
  3171     04DB  0823               	movf	?___lldiv+3,w
  3172     04DC  1683               	bsf	3,5	;RP0=1, select bank1
  3173     04DD  1303               	bcf	3,6	;RP1=0, select bank1
  3174     04DE  00C3               	movwf	(sprintf@tmpval+3)^(0+128)
  3175     04DF  1283               	bcf	3,5	;RP0=0, select bank0
  3176     04E0  1303               	bcf	3,6	;RP1=0, select bank0
  3177     04E1  0822               	movf	?___lldiv+2,w
  3178     04E2  1683               	bsf	3,5	;RP0=1, select bank1
  3179     04E3  1303               	bcf	3,6	;RP1=0, select bank1
  3180     04E4  00C2               	movwf	(sprintf@tmpval+2)^(0+128)
  3181     04E5  1283               	bcf	3,5	;RP0=0, select bank0
  3182     04E6  1303               	bcf	3,6	;RP1=0, select bank0
  3183     04E7  0821               	movf	?___lldiv+1,w
  3184     04E8  1683               	bsf	3,5	;RP0=1, select bank1
  3185     04E9  1303               	bcf	3,6	;RP1=0, select bank1
  3186     04EA  00C1               	movwf	(sprintf@tmpval+1)^(0+128)
  3187     04EB  1283               	bcf	3,5	;RP0=0, select bank0
  3188     04EC  1303               	bcf	3,6	;RP1=0, select bank0
  3189     04ED  0820               	movf	?___lldiv,w
  3190     04EE  1683               	bsf	3,5	;RP0=1, select bank1
  3191     04EF  1303               	bcf	3,6	;RP1=0, select bank1
  3192     04F0  00C0               	movwf	sprintf@tmpval^(0+128)
  3193     04F1                     l4714:
  3194                           
  3195                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3196     04F1  3000               	movlw	0
  3197     04F2  1283               	bcf	3,5	;RP0=0, select bank0
  3198     04F3  1303               	bcf	3,6	;RP1=0, select bank0
  3199     04F4  00A3               	movwf	___llmod@divisor+3
  3200     04F5  3000               	movlw	0
  3201     04F6  00A2               	movwf	___llmod@divisor+2
  3202     04F7  3000               	movlw	0
  3203     04F8  00A1               	movwf	___llmod@divisor+1
  3204     04F9  300A               	movlw	10
  3205     04FA  00A0               	movwf	___llmod@divisor
  3206     04FB  1683               	bsf	3,5	;RP0=1, select bank1
  3207     04FC  1303               	bcf	3,6	;RP1=0, select bank1
  3208     04FD  0843               	movf	(sprintf@tmpval+3)^(0+128),w
  3209     04FE  1283               	bcf	3,5	;RP0=0, select bank0
  3210     04FF  1303               	bcf	3,6	;RP1=0, select bank0
  3211     0500  00A7               	movwf	___llmod@dividend+3
  3212     0501  1683               	bsf	3,5	;RP0=1, select bank1
  3213     0502  1303               	bcf	3,6	;RP1=0, select bank1
  3214     0503  0842               	movf	(sprintf@tmpval+2)^(0+128),w
  3215     0504  1283               	bcf	3,5	;RP0=0, select bank0
  3216     0505  1303               	bcf	3,6	;RP1=0, select bank0
  3217     0506  00A6               	movwf	___llmod@dividend+2
  3218     0507  1683               	bsf	3,5	;RP0=1, select bank1
  3219     0508  1303               	bcf	3,6	;RP1=0, select bank1
  3220     0509  0841               	movf	(sprintf@tmpval+1)^(0+128),w
  3221     050A  1283               	bcf	3,5	;RP0=0, select bank0
  3222     050B  1303               	bcf	3,6	;RP1=0, select bank0
  3223     050C  00A5               	movwf	___llmod@dividend+1
  3224     050D  1683               	bsf	3,5	;RP0=1, select bank1
  3225     050E  1303               	bcf	3,6	;RP1=0, select bank1
  3226     050F  0840               	movf	sprintf@tmpval^(0+128),w
  3227     0510  1283               	bcf	3,5	;RP0=0, select bank0
  3228     0511  1303               	bcf	3,6	;RP1=0, select bank0
  3229     0512  00A4               	movwf	___llmod@dividend
  3230     0513  160A  158A  2406  120A  118A  	fcall	___llmod
  3231     0518  1283               	bcf	3,5	;RP0=0, select bank0
  3232     0519  1303               	bcf	3,6	;RP1=0, select bank0
  3233     051A  0823               	movf	?___llmod+3,w
  3234     051B  1683               	bsf	3,5	;RP0=1, select bank1
  3235     051C  1303               	bcf	3,6	;RP1=0, select bank1
  3236     051D  00C3               	movwf	(sprintf@tmpval+3)^(0+128)
  3237     051E  1283               	bcf	3,5	;RP0=0, select bank0
  3238     051F  1303               	bcf	3,6	;RP1=0, select bank0
  3239     0520  0822               	movf	?___llmod+2,w
  3240     0521  1683               	bsf	3,5	;RP0=1, select bank1
  3241     0522  1303               	bcf	3,6	;RP1=0, select bank1
  3242     0523  00C2               	movwf	(sprintf@tmpval+2)^(0+128)
  3243     0524  1283               	bcf	3,5	;RP0=0, select bank0
  3244     0525  1303               	bcf	3,6	;RP1=0, select bank0
  3245     0526  0821               	movf	?___llmod+1,w
  3246     0527  1683               	bsf	3,5	;RP0=1, select bank1
  3247     0528  1303               	bcf	3,6	;RP1=0, select bank1
  3248     0529  00C1               	movwf	(sprintf@tmpval+1)^(0+128)
  3249     052A  1283               	bcf	3,5	;RP0=0, select bank0
  3250     052B  1303               	bcf	3,6	;RP1=0, select bank0
  3251     052C  0820               	movf	?___llmod,w
  3252     052D  1683               	bsf	3,5	;RP0=1, select bank1
  3253     052E  1303               	bcf	3,6	;RP1=0, select bank1
  3254     052F  00C0               	movwf	sprintf@tmpval^(0+128)
  3255     0530                     l4716:
  3256                           
  3257                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3258     0530  083F               	movf	sprintf@sp^(0+128),w
  3259     0531  0084               	movwf	4
  3260     0532  0840               	movf	sprintf@tmpval^(0+128),w
  3261     0533  3E30               	addlw	48
  3262     0534  1783               	bsf	3,7	;select IRP bank2
  3263     0535  0080               	movwf	0
  3264     0536  2C91               	goto	l4710
  3265     0537                     l4720:
  3266                           
  3267                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3268     0537  3001               	movlw	1
  3269     0538  02CA               	subwf	sprintf@c^(0+128),f
  3270     0539  0A4A               	incf	sprintf@c^(0+128),w
  3271     053A  1D03               	btfss	3,2
  3272     053B  2D3D               	goto	u7731
  3273     053C  2D3E               	goto	u7730
  3274     053D                     u7731:
  3275     053D  2C96               	goto	l4712
  3276     053E                     u7730:
  3277     053E  2D50               	goto	l4728
  3278     053F                     l4722:
  3279                           
  3280                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3281     053F  1683               	bsf	3,5	;RP0=1, select bank1
  3282     0540  1303               	bcf	3,6	;RP1=0, select bank1
  3283     0541  083F               	movf	sprintf@sp^(0+128),w
  3284     0542  0084               	movwf	4
  3285     0543  3030               	movlw	48
  3286     0544  1783               	bsf	3,7	;select IRP bank2
  3287     0545  0080               	movwf	0
  3288     0546                     l4724:
  3289     0546  3001               	movlw	1
  3290     0547  00FF               	movwf	btemp+1
  3291     0548  087F               	movf	btemp+1,w
  3292     0549  07BF               	addwf	sprintf@sp^(0+128),f
  3293     054A                     l4726:
  3294                           
  3295                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3296     054A  30FF               	movlw	255
  3297     054B  07BD               	addwf	sprintf@eexp^(0+128),f
  3298     054C  1803               	skipnc
  3299     054D  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  3300     054E  30FF               	movlw	255
  3301     054F  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  3302     0550                     l4728:
  3303                           
  3304                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3305     0550  083E               	movf	(sprintf@eexp+1)^(0+128),w
  3306     0551  3A80               	xorlw	128
  3307     0552  00FF               	movwf	btemp+1
  3308     0553  3080               	movlw	128
  3309     0554  027F               	subwf	btemp+1,w
  3310     0555  1D03               	skipz
  3311     0556  2D59               	goto	u7745
  3312     0557  3001               	movlw	1
  3313     0558  023D               	subwf	sprintf@eexp^(0+128),w
  3314     0559                     u7745:
  3315     0559  1803               	skipnc
  3316     055A  2D5C               	goto	u7741
  3317     055B  2D5D               	goto	u7740
  3318     055C                     u7741:
  3319     055C  2D3F               	goto	l4722
  3320     055D                     u7740:
  3321     055D                     l4730:
  3322                           
  3323                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3324     055D  1683               	bsf	3,5	;RP0=1, select bank1
  3325     055E  1303               	bcf	3,6	;RP1=0, select bank1
  3326     055F  0845               	movf	(sprintf@prec+1)^(0+128),w
  3327     0560  3A80               	xorlw	128
  3328     0561  00FF               	movwf	btemp+1
  3329     0562  3080               	movlw	128
  3330     0563  027F               	subwf	btemp+1,w
  3331     0564  1D03               	skipz
  3332     0565  2D68               	goto	u7755
  3333     0566  3009               	movlw	9
  3334     0567  0244               	subwf	sprintf@prec^(0+128),w
  3335     0568                     u7755:
  3336     0568  1C03               	skipc
  3337     0569  2D6B               	goto	u7751
  3338     056A  2D6C               	goto	u7750
  3339     056B                     u7751:
  3340     056B  2D71               	goto	l4734
  3341     056C                     u7750:
  3342     056C                     l4732:
  3343                           
  3344                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3345     056C  3008               	movlw	8
  3346     056D  1683               	bsf	3,5	;RP0=1, select bank1
  3347     056E  1303               	bcf	3,6	;RP1=0, select bank1
  3348     056F  00CA               	movwf	sprintf@c^(0+128)
  3349     0570  2D75               	goto	l425
  3350     0571                     l4734:
  3351                           
  3352                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3353     0571  1683               	bsf	3,5	;RP0=1, select bank1
  3354     0572  1303               	bcf	3,6	;RP1=0, select bank1
  3355     0573  0844               	movf	sprintf@prec^(0+128),w
  3356     0574  00CA               	movwf	sprintf@c^(0+128)
  3357     0575                     l425:
  3358                           
  3359                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3360     0575  084A               	movf	sprintf@c^(0+128),w
  3361     0576  00AD               	movwf	??_sprintf^(0+128)
  3362     0577  01AE               	clrf	(??_sprintf^(0+128)+1)
  3363     0578  082D               	movf	??_sprintf^(0+128),w
  3364     0579  02C4               	subwf	sprintf@prec^(0+128),f
  3365     057A  082E               	movf	(??_sprintf+1)^(0+128),w
  3366     057B  1C03               	skipc
  3367     057C  03C5               	decf	(sprintf@prec+1)^(0+128),f
  3368     057D  02C5               	subwf	(sprintf@prec+1)^(0+128),f
  3369     057E                     l4736:
  3370                           
  3371                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3372     057E  084A               	movf	sprintf@c^(0+128),w
  3373     057F  1903               	btfsc	3,2
  3374     0580  2D82               	goto	u7761
  3375     0581  2D83               	goto	u7760
  3376     0582                     u7761:
  3377     0582  2D8C               	goto	l4742
  3378     0583                     u7760:
  3379     0583                     l4738:
  3380                           
  3381                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3382     0583  083F               	movf	sprintf@sp^(0+128),w
  3383     0584  0084               	movwf	4
  3384     0585  302E               	movlw	46
  3385     0586  1783               	bsf	3,7	;select IRP bank2
  3386     0587  0080               	movwf	0
  3387     0588                     l4740:
  3388     0588  3001               	movlw	1
  3389     0589  00FF               	movwf	btemp+1
  3390     058A  087F               	movf	btemp+1,w
  3391     058B  07BF               	addwf	sprintf@sp^(0+128),f
  3392     058C                     l4742:
  3393                           
  3394                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3395     058C  084A               	movf	sprintf@c^(0+128),w
  3396     058D  120A  158A  249D  120A  118A  	fcall	_scale
  3397     0592  1283               	bcf	3,5	;RP0=0, select bank0
  3398     0593  1303               	bcf	3,6	;RP1=0, select bank0
  3399     0594  0847               	movf	?_scale+3,w
  3400     0595  1683               	bsf	3,5	;RP0=1, select bank1
  3401     0596  1303               	bcf	3,6	;RP1=0, select bank1
  3402     0597  00B5               	movwf	(_sprintf$1366+3)^(0+128)
  3403     0598  1283               	bcf	3,5	;RP0=0, select bank0
  3404     0599  1303               	bcf	3,6	;RP1=0, select bank0
  3405     059A  0846               	movf	?_scale+2,w
  3406     059B  1683               	bsf	3,5	;RP0=1, select bank1
  3407     059C  1303               	bcf	3,6	;RP1=0, select bank1
  3408     059D  00B4               	movwf	(_sprintf$1366+2)^(0+128)
  3409     059E  1283               	bcf	3,5	;RP0=0, select bank0
  3410     059F  1303               	bcf	3,6	;RP1=0, select bank0
  3411     05A0  0845               	movf	?_scale+1,w
  3412     05A1  1683               	bsf	3,5	;RP0=1, select bank1
  3413     05A2  1303               	bcf	3,6	;RP1=0, select bank1
  3414     05A3  00B3               	movwf	(_sprintf$1366+1)^(0+128)
  3415     05A4  1283               	bcf	3,5	;RP0=0, select bank0
  3416     05A5  1303               	bcf	3,6	;RP1=0, select bank0
  3417     05A6  0844               	movf	?_scale,w
  3418     05A7  1683               	bsf	3,5	;RP0=1, select bank1
  3419     05A8  1303               	bcf	3,6	;RP1=0, select bank1
  3420     05A9  00B2               	movwf	_sprintf$1366^(0+128)
  3421     05AA                     l4744:
  3422                           
  3423                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3424     05AA  0835               	movf	(_sprintf$1366+3)^(0+128),w
  3425     05AB  1283               	bcf	3,5	;RP0=0, select bank0
  3426     05AC  1303               	bcf	3,6	;RP1=0, select bank0
  3427     05AD  00B1               	movwf	___flmul@a+3
  3428     05AE  1683               	bsf	3,5	;RP0=1, select bank1
  3429     05AF  1303               	bcf	3,6	;RP1=0, select bank1
  3430     05B0  0834               	movf	(_sprintf$1366+2)^(0+128),w
  3431     05B1  1283               	bcf	3,5	;RP0=0, select bank0
  3432     05B2  1303               	bcf	3,6	;RP1=0, select bank0
  3433     05B3  00B0               	movwf	___flmul@a+2
  3434     05B4  1683               	bsf	3,5	;RP0=1, select bank1
  3435     05B5  1303               	bcf	3,6	;RP1=0, select bank1
  3436     05B6  0833               	movf	(_sprintf$1366+1)^(0+128),w
  3437     05B7  1283               	bcf	3,5	;RP0=0, select bank0
  3438     05B8  1303               	bcf	3,6	;RP1=0, select bank0
  3439     05B9  00AF               	movwf	___flmul@a+1
  3440     05BA  1683               	bsf	3,5	;RP0=1, select bank1
  3441     05BB  1303               	bcf	3,6	;RP1=0, select bank1
  3442     05BC  0832               	movf	_sprintf$1366^(0+128),w
  3443     05BD  1283               	bcf	3,5	;RP0=0, select bank0
  3444     05BE  1303               	bcf	3,6	;RP1=0, select bank0
  3445     05BF  00AE               	movwf	___flmul@a
  3446     05C0  1683               	bsf	3,5	;RP0=1, select bank1
  3447     05C1  1303               	bcf	3,6	;RP1=0, select bank1
  3448     05C2  0849               	movf	(sprintf@fval+3)^(0+128),w
  3449     05C3  1283               	bcf	3,5	;RP0=0, select bank0
  3450     05C4  1303               	bcf	3,6	;RP1=0, select bank0
  3451     05C5  00AD               	movwf	___flmul@b+3
  3452     05C6  1683               	bsf	3,5	;RP0=1, select bank1
  3453     05C7  1303               	bcf	3,6	;RP1=0, select bank1
  3454     05C8  0848               	movf	(sprintf@fval+2)^(0+128),w
  3455     05C9  1283               	bcf	3,5	;RP0=0, select bank0
  3456     05CA  1303               	bcf	3,6	;RP1=0, select bank0
  3457     05CB  00AC               	movwf	___flmul@b+2
  3458     05CC  1683               	bsf	3,5	;RP0=1, select bank1
  3459     05CD  1303               	bcf	3,6	;RP1=0, select bank1
  3460     05CE  0847               	movf	(sprintf@fval+1)^(0+128),w
  3461     05CF  1283               	bcf	3,5	;RP0=0, select bank0
  3462     05D0  1303               	bcf	3,6	;RP1=0, select bank0
  3463     05D1  00AB               	movwf	___flmul@b+1
  3464     05D2  1683               	bsf	3,5	;RP0=1, select bank1
  3465     05D3  1303               	bcf	3,6	;RP1=0, select bank1
  3466     05D4  0846               	movf	sprintf@fval^(0+128),w
  3467     05D5  1283               	bcf	3,5	;RP0=0, select bank0
  3468     05D6  1303               	bcf	3,6	;RP1=0, select bank0
  3469     05D7  00AA               	movwf	___flmul@b
  3470     05D8  120A  158A  2158  120A  118A  	fcall	___flmul
  3471     05DD  1283               	bcf	3,5	;RP0=0, select bank0
  3472     05DE  1303               	bcf	3,6	;RP1=0, select bank0
  3473     05DF  082D               	movf	?___flmul+3,w
  3474     05E0  00DA               	movwf	___fltol@f1+3
  3475     05E1  082C               	movf	?___flmul+2,w
  3476     05E2  00D9               	movwf	___fltol@f1+2
  3477     05E3  082B               	movf	?___flmul+1,w
  3478     05E4  00D8               	movwf	___fltol@f1+1
  3479     05E5  082A               	movf	?___flmul,w
  3480     05E6  00D7               	movwf	___fltol@f1
  3481     05E7  120A  118A  277A  120A  118A  	fcall	___fltol
  3482     05EC  1283               	bcf	3,5	;RP0=0, select bank0
  3483     05ED  1303               	bcf	3,6	;RP1=0, select bank0
  3484     05EE  085A               	movf	?___fltol+3,w
  3485     05EF  1683               	bsf	3,5	;RP0=1, select bank1
  3486     05F0  1303               	bcf	3,6	;RP1=0, select bank1
  3487     05F1  00BC               	movwf	(sprintf@val+3)^(0+128)
  3488     05F2  1283               	bcf	3,5	;RP0=0, select bank0
  3489     05F3  1303               	bcf	3,6	;RP1=0, select bank0
  3490     05F4  0859               	movf	?___fltol+2,w
  3491     05F5  1683               	bsf	3,5	;RP0=1, select bank1
  3492     05F6  1303               	bcf	3,6	;RP1=0, select bank1
  3493     05F7  00BB               	movwf	(sprintf@val+2)^(0+128)
  3494     05F8  1283               	bcf	3,5	;RP0=0, select bank0
  3495     05F9  1303               	bcf	3,6	;RP1=0, select bank0
  3496     05FA  0858               	movf	?___fltol+1,w
  3497     05FB  1683               	bsf	3,5	;RP0=1, select bank1
  3498     05FC  1303               	bcf	3,6	;RP1=0, select bank1
  3499     05FD  00BA               	movwf	(sprintf@val+1)^(0+128)
  3500     05FE  1283               	bcf	3,5	;RP0=0, select bank0
  3501     05FF  1303               	bcf	3,6	;RP1=0, select bank0
  3502     0600  0857               	movf	?___fltol,w
  3503     0601  1683               	bsf	3,5	;RP0=1, select bank1
  3504     0602  1303               	bcf	3,6	;RP1=0, select bank1
  3505     0603  00B9               	movwf	sprintf@val^(0+128)
  3506                           
  3507                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3508     0604  2F04               	goto	l4756
  3509     0605                     l4746:
  3510                           
  3511                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3512     0605  084A               	movf	sprintf@c^(0+128),w
  3513     0606  00AD               	movwf	??_sprintf^(0+128)
  3514     0607  3001               	movlw	1
  3515     0608                     u7775:
  3516     0608  1003               	clrc
  3517     0609  0DAD               	rlf	??_sprintf^(0+128),f
  3518     060A  3EFF               	addlw	-1
  3519     060B  1D03               	skipz
  3520     060C  2E08               	goto	u7775
  3521     060D  1003               	clrc
  3522     060E  0D2D               	rlf	??_sprintf^(0+128),w
  3523     060F  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3524     0610  0084               	movwf	4
  3525     0611  160A  158A  200A  120A  118A  	fcall	stringdir
  3526     0616  1283               	bcf	3,5	;RP0=0, select bank0
  3527     0617  1303               	bcf	3,6	;RP1=0, select bank0
  3528     0618  00A0               	movwf	___lldiv@divisor
  3529     0619  160A  158A  200A  120A  118A  	fcall	stringdir
  3530     061E  00A1               	movwf	___lldiv@divisor+1
  3531     061F  160A  158A  200A  120A  118A  	fcall	stringdir
  3532     0624  00A2               	movwf	___lldiv@divisor+2
  3533     0625  160A  158A  200A  120A  118A  	fcall	stringdir
  3534     062A  00A3               	movwf	___lldiv@divisor+3
  3535     062B  1683               	bsf	3,5	;RP0=1, select bank1
  3536     062C  1303               	bcf	3,6	;RP1=0, select bank1
  3537     062D  083C               	movf	(sprintf@val+3)^(0+128),w
  3538     062E  1283               	bcf	3,5	;RP0=0, select bank0
  3539     062F  1303               	bcf	3,6	;RP1=0, select bank0
  3540     0630  00A7               	movwf	___lldiv@dividend+3
  3541     0631  1683               	bsf	3,5	;RP0=1, select bank1
  3542     0632  1303               	bcf	3,6	;RP1=0, select bank1
  3543     0633  083B               	movf	(sprintf@val+2)^(0+128),w
  3544     0634  1283               	bcf	3,5	;RP0=0, select bank0
  3545     0635  1303               	bcf	3,6	;RP1=0, select bank0
  3546     0636  00A6               	movwf	___lldiv@dividend+2
  3547     0637  1683               	bsf	3,5	;RP0=1, select bank1
  3548     0638  1303               	bcf	3,6	;RP1=0, select bank1
  3549     0639  083A               	movf	(sprintf@val+1)^(0+128),w
  3550     063A  1283               	bcf	3,5	;RP0=0, select bank0
  3551     063B  1303               	bcf	3,6	;RP1=0, select bank0
  3552     063C  00A5               	movwf	___lldiv@dividend+1
  3553     063D  1683               	bsf	3,5	;RP0=1, select bank1
  3554     063E  1303               	bcf	3,6	;RP1=0, select bank1
  3555     063F  0839               	movf	sprintf@val^(0+128),w
  3556     0640  1283               	bcf	3,5	;RP0=0, select bank0
  3557     0641  1303               	bcf	3,6	;RP1=0, select bank0
  3558     0642  00A4               	movwf	___lldiv@dividend
  3559     0643  160A  158A  251C  120A  118A  	fcall	___lldiv
  3560     0648  1283               	bcf	3,5	;RP0=0, select bank0
  3561     0649  1303               	bcf	3,6	;RP1=0, select bank0
  3562     064A  0823               	movf	?___lldiv+3,w
  3563     064B  1683               	bsf	3,5	;RP0=1, select bank1
  3564     064C  1303               	bcf	3,6	;RP1=0, select bank1
  3565     064D  00C3               	movwf	(sprintf@tmpval+3)^(0+128)
  3566     064E  1283               	bcf	3,5	;RP0=0, select bank0
  3567     064F  1303               	bcf	3,6	;RP1=0, select bank0
  3568     0650  0822               	movf	?___lldiv+2,w
  3569     0651  1683               	bsf	3,5	;RP0=1, select bank1
  3570     0652  1303               	bcf	3,6	;RP1=0, select bank1
  3571     0653  00C2               	movwf	(sprintf@tmpval+2)^(0+128)
  3572     0654  1283               	bcf	3,5	;RP0=0, select bank0
  3573     0655  1303               	bcf	3,6	;RP1=0, select bank0
  3574     0656  0821               	movf	?___lldiv+1,w
  3575     0657  1683               	bsf	3,5	;RP0=1, select bank1
  3576     0658  1303               	bcf	3,6	;RP1=0, select bank1
  3577     0659  00C1               	movwf	(sprintf@tmpval+1)^(0+128)
  3578     065A  1283               	bcf	3,5	;RP0=0, select bank0
  3579     065B  1303               	bcf	3,6	;RP1=0, select bank0
  3580     065C  0820               	movf	?___lldiv,w
  3581     065D  1683               	bsf	3,5	;RP0=1, select bank1
  3582     065E  1303               	bcf	3,6	;RP1=0, select bank1
  3583     065F  00C0               	movwf	sprintf@tmpval^(0+128)
  3584     0660                     l4748:
  3585                           
  3586                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3587     0660  3000               	movlw	0
  3588     0661  1283               	bcf	3,5	;RP0=0, select bank0
  3589     0662  1303               	bcf	3,6	;RP1=0, select bank0
  3590     0663  00A3               	movwf	___llmod@divisor+3
  3591     0664  3000               	movlw	0
  3592     0665  00A2               	movwf	___llmod@divisor+2
  3593     0666  3000               	movlw	0
  3594     0667  00A1               	movwf	___llmod@divisor+1
  3595     0668  300A               	movlw	10
  3596     0669  00A0               	movwf	___llmod@divisor
  3597     066A  1683               	bsf	3,5	;RP0=1, select bank1
  3598     066B  1303               	bcf	3,6	;RP1=0, select bank1
  3599     066C  0843               	movf	(sprintf@tmpval+3)^(0+128),w
  3600     066D  1283               	bcf	3,5	;RP0=0, select bank0
  3601     066E  1303               	bcf	3,6	;RP1=0, select bank0
  3602     066F  00A7               	movwf	___llmod@dividend+3
  3603     0670  1683               	bsf	3,5	;RP0=1, select bank1
  3604     0671  1303               	bcf	3,6	;RP1=0, select bank1
  3605     0672  0842               	movf	(sprintf@tmpval+2)^(0+128),w
  3606     0673  1283               	bcf	3,5	;RP0=0, select bank0
  3607     0674  1303               	bcf	3,6	;RP1=0, select bank0
  3608     0675  00A6               	movwf	___llmod@dividend+2
  3609     0676  1683               	bsf	3,5	;RP0=1, select bank1
  3610     0677  1303               	bcf	3,6	;RP1=0, select bank1
  3611     0678  0841               	movf	(sprintf@tmpval+1)^(0+128),w
  3612     0679  1283               	bcf	3,5	;RP0=0, select bank0
  3613     067A  1303               	bcf	3,6	;RP1=0, select bank0
  3614     067B  00A5               	movwf	___llmod@dividend+1
  3615     067C  1683               	bsf	3,5	;RP0=1, select bank1
  3616     067D  1303               	bcf	3,6	;RP1=0, select bank1
  3617     067E  0840               	movf	sprintf@tmpval^(0+128),w
  3618     067F  1283               	bcf	3,5	;RP0=0, select bank0
  3619     0680  1303               	bcf	3,6	;RP1=0, select bank0
  3620     0681  00A4               	movwf	___llmod@dividend
  3621     0682  160A  158A  2406  120A  118A  	fcall	___llmod
  3622     0687  1283               	bcf	3,5	;RP0=0, select bank0
  3623     0688  1303               	bcf	3,6	;RP1=0, select bank0
  3624     0689  0823               	movf	?___llmod+3,w
  3625     068A  1683               	bsf	3,5	;RP0=1, select bank1
  3626     068B  1303               	bcf	3,6	;RP1=0, select bank1
  3627     068C  00C3               	movwf	(sprintf@tmpval+3)^(0+128)
  3628     068D  1283               	bcf	3,5	;RP0=0, select bank0
  3629     068E  1303               	bcf	3,6	;RP1=0, select bank0
  3630     068F  0822               	movf	?___llmod+2,w
  3631     0690  1683               	bsf	3,5	;RP0=1, select bank1
  3632     0691  1303               	bcf	3,6	;RP1=0, select bank1
  3633     0692  00C2               	movwf	(sprintf@tmpval+2)^(0+128)
  3634     0693  1283               	bcf	3,5	;RP0=0, select bank0
  3635     0694  1303               	bcf	3,6	;RP1=0, select bank0
  3636     0695  0821               	movf	?___llmod+1,w
  3637     0696  1683               	bsf	3,5	;RP0=1, select bank1
  3638     0697  1303               	bcf	3,6	;RP1=0, select bank1
  3639     0698  00C1               	movwf	(sprintf@tmpval+1)^(0+128)
  3640     0699  1283               	bcf	3,5	;RP0=0, select bank0
  3641     069A  1303               	bcf	3,6	;RP1=0, select bank0
  3642     069B  0820               	movf	?___llmod,w
  3643     069C  1683               	bsf	3,5	;RP0=1, select bank1
  3644     069D  1303               	bcf	3,6	;RP1=0, select bank1
  3645     069E  00C0               	movwf	sprintf@tmpval^(0+128)
  3646     069F                     l4750:
  3647                           
  3648                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3649     069F  083F               	movf	sprintf@sp^(0+128),w
  3650     06A0  0084               	movwf	4
  3651     06A1  0840               	movf	sprintf@tmpval^(0+128),w
  3652     06A2  3E30               	addlw	48
  3653     06A3  1783               	bsf	3,7	;select IRP bank2
  3654     06A4  0080               	movwf	0
  3655     06A5                     l4752:
  3656     06A5  3001               	movlw	1
  3657     06A6  00FF               	movwf	btemp+1
  3658     06A7  087F               	movf	btemp+1,w
  3659     06A8  07BF               	addwf	sprintf@sp^(0+128),f
  3660     06A9                     l4754:
  3661                           
  3662                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3663     06A9  084A               	movf	sprintf@c^(0+128),w
  3664     06AA  00AD               	movwf	??_sprintf^(0+128)
  3665     06AB  3001               	movlw	1
  3666     06AC                     u7785:
  3667     06AC  1003               	clrc
  3668     06AD  0DAD               	rlf	??_sprintf^(0+128),f
  3669     06AE  3EFF               	addlw	-1
  3670     06AF  1D03               	skipz
  3671     06B0  2EAC               	goto	u7785
  3672     06B1  1003               	clrc
  3673     06B2  0D2D               	rlf	??_sprintf^(0+128),w
  3674     06B3  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3675     06B4  0084               	movwf	4
  3676     06B5  160A  158A  200A  120A  118A  	fcall	stringdir
  3677     06BA  1283               	bcf	3,5	;RP0=0, select bank0
  3678     06BB  1303               	bcf	3,6	;RP1=0, select bank0
  3679     06BC  00A0               	movwf	___llmod@divisor
  3680     06BD  160A  158A  200A  120A  118A  	fcall	stringdir
  3681     06C2  00A1               	movwf	___llmod@divisor+1
  3682     06C3  160A  158A  200A  120A  118A  	fcall	stringdir
  3683     06C8  00A2               	movwf	___llmod@divisor+2
  3684     06C9  160A  158A  200A  120A  118A  	fcall	stringdir
  3685     06CE  00A3               	movwf	___llmod@divisor+3
  3686     06CF  1683               	bsf	3,5	;RP0=1, select bank1
  3687     06D0  1303               	bcf	3,6	;RP1=0, select bank1
  3688     06D1  083C               	movf	(sprintf@val+3)^(0+128),w
  3689     06D2  1283               	bcf	3,5	;RP0=0, select bank0
  3690     06D3  1303               	bcf	3,6	;RP1=0, select bank0
  3691     06D4  00A7               	movwf	___llmod@dividend+3
  3692     06D5  1683               	bsf	3,5	;RP0=1, select bank1
  3693     06D6  1303               	bcf	3,6	;RP1=0, select bank1
  3694     06D7  083B               	movf	(sprintf@val+2)^(0+128),w
  3695     06D8  1283               	bcf	3,5	;RP0=0, select bank0
  3696     06D9  1303               	bcf	3,6	;RP1=0, select bank0
  3697     06DA  00A6               	movwf	___llmod@dividend+2
  3698     06DB  1683               	bsf	3,5	;RP0=1, select bank1
  3699     06DC  1303               	bcf	3,6	;RP1=0, select bank1
  3700     06DD  083A               	movf	(sprintf@val+1)^(0+128),w
  3701     06DE  1283               	bcf	3,5	;RP0=0, select bank0
  3702     06DF  1303               	bcf	3,6	;RP1=0, select bank0
  3703     06E0  00A5               	movwf	___llmod@dividend+1
  3704     06E1  1683               	bsf	3,5	;RP0=1, select bank1
  3705     06E2  1303               	bcf	3,6	;RP1=0, select bank1
  3706     06E3  0839               	movf	sprintf@val^(0+128),w
  3707     06E4  1283               	bcf	3,5	;RP0=0, select bank0
  3708     06E5  1303               	bcf	3,6	;RP1=0, select bank0
  3709     06E6  00A4               	movwf	___llmod@dividend
  3710     06E7  160A  158A  2406  120A  118A  	fcall	___llmod
  3711     06EC  1283               	bcf	3,5	;RP0=0, select bank0
  3712     06ED  1303               	bcf	3,6	;RP1=0, select bank0
  3713     06EE  0823               	movf	?___llmod+3,w
  3714     06EF  1683               	bsf	3,5	;RP0=1, select bank1
  3715     06F0  1303               	bcf	3,6	;RP1=0, select bank1
  3716     06F1  00BC               	movwf	(sprintf@val+3)^(0+128)
  3717     06F2  1283               	bcf	3,5	;RP0=0, select bank0
  3718     06F3  1303               	bcf	3,6	;RP1=0, select bank0
  3719     06F4  0822               	movf	?___llmod+2,w
  3720     06F5  1683               	bsf	3,5	;RP0=1, select bank1
  3721     06F6  1303               	bcf	3,6	;RP1=0, select bank1
  3722     06F7  00BB               	movwf	(sprintf@val+2)^(0+128)
  3723     06F8  1283               	bcf	3,5	;RP0=0, select bank0
  3724     06F9  1303               	bcf	3,6	;RP1=0, select bank0
  3725     06FA  0821               	movf	?___llmod+1,w
  3726     06FB  1683               	bsf	3,5	;RP0=1, select bank1
  3727     06FC  1303               	bcf	3,6	;RP1=0, select bank1
  3728     06FD  00BA               	movwf	(sprintf@val+1)^(0+128)
  3729     06FE  1283               	bcf	3,5	;RP0=0, select bank0
  3730     06FF  1303               	bcf	3,6	;RP1=0, select bank0
  3731     0700  0820               	movf	?___llmod,w
  3732     0701  1683               	bsf	3,5	;RP0=1, select bank1
  3733     0702  1303               	bcf	3,6	;RP1=0, select bank1
  3734     0703  00B9               	movwf	sprintf@val^(0+128)
  3735     0704                     l4756:
  3736                           
  3737                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3738     0704  3001               	movlw	1
  3739     0705  02CA               	subwf	sprintf@c^(0+128),f
  3740     0706  0A4A               	incf	sprintf@c^(0+128),w
  3741     0707  1D03               	btfss	3,2
  3742     0708  2F0A               	goto	u7791
  3743     0709  2F0B               	goto	u7790
  3744     070A                     u7791:
  3745     070A  2E05               	goto	l4746
  3746     070B                     u7790:
  3747     070B  2F1B               	goto	l4764
  3748     070C                     l4758:
  3749                           
  3750                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3751     070C  083F               	movf	sprintf@sp^(0+128),w
  3752     070D  0084               	movwf	4
  3753     070E  3030               	movlw	48
  3754     070F  1783               	bsf	3,7	;select IRP bank2
  3755     0710  0080               	movwf	0
  3756     0711                     l4760:
  3757     0711  3001               	movlw	1
  3758     0712  00FF               	movwf	btemp+1
  3759     0713  087F               	movf	btemp+1,w
  3760     0714  07BF               	addwf	sprintf@sp^(0+128),f
  3761     0715                     l4762:
  3762                           
  3763                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3764     0715  30FF               	movlw	255
  3765     0716  07C4               	addwf	sprintf@prec^(0+128),f
  3766     0717  1803               	skipnc
  3767     0718  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  3768     0719  30FF               	movlw	255
  3769     071A  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  3770     071B                     l4764:
  3771                           
  3772                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3773     071B  0844               	movf	sprintf@prec^(0+128),w
  3774     071C  0445               	iorwf	(sprintf@prec+1)^(0+128),w
  3775     071D  1D03               	btfss	3,2
  3776     071E  2F20               	goto	u7801
  3777     071F  2F21               	goto	u7800
  3778     0720                     u7801:
  3779     0720  2F0C               	goto	l4758
  3780     0721                     u7800:
  3781     0721  2F65               	goto	l4784
  3782     0722                     l4766:
  3783                           
  3784                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3785     0722  0844               	movf	sprintf@prec^(0+128),w
  3786     0723  0445               	iorwf	(sprintf@prec+1)^(0+128),w
  3787     0724  1D03               	btfss	3,2
  3788     0725  2F27               	goto	u7811
  3789     0726  2F28               	goto	u7810
  3790     0727                     u7811:
  3791     0727  2F36               	goto	l433
  3792     0728                     u7810:
  3793     0728                     l4768:
  3794     0728  083C               	movf	(sprintf@val+3)^(0+128),w
  3795     0729  043B               	iorwf	(sprintf@val+2)^(0+128),w
  3796     072A  043A               	iorwf	(sprintf@val+1)^(0+128),w
  3797     072B  0439               	iorwf	sprintf@val^(0+128),w
  3798     072C  1D03               	skipz
  3799     072D  2F2F               	goto	u7821
  3800     072E  2F30               	goto	u7820
  3801     072F                     u7821:
  3802     072F  2F36               	goto	l433
  3803     0730                     u7820:
  3804     0730                     l4770:
  3805                           
  3806                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3807     0730  3001               	movlw	1
  3808     0731  07C4               	addwf	sprintf@prec^(0+128),f
  3809     0732  1803               	skipnc
  3810     0733  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  3811     0734  3000               	movlw	0
  3812     0735  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  3813     0736                     l433:
  3814                           
  3815                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3816     0736  0845               	movf	(sprintf@prec+1)^(0+128),w
  3817     0737  3A80               	xorlw	128
  3818     0738  3C80               	sublw	128
  3819     0739  1D03               	skipz
  3820     073A  2F3D               	goto	u7835
  3821     073B  0844               	movf	sprintf@prec^(0+128),w
  3822     073C  024A               	subwf	sprintf@c^(0+128),w
  3823     073D                     u7835:
  3824     073D  1803               	skipnc
  3825     073E  2F40               	goto	u7831
  3826     073F  2F41               	goto	u7830
  3827     0740                     u7831:
  3828     0740  2F42               	goto	l4774
  3829     0741                     u7830:
  3830     0741                     l4772:
  3831     0741  2F51               	goto	l4778
  3832     0742                     l4774:
  3833     0742  1683               	bsf	3,5	;RP0=1, select bank1
  3834     0743  1303               	bcf	3,6	;RP1=0, select bank1
  3835     0744  0845               	movf	(sprintf@prec+1)^(0+128),w
  3836     0745  3A80               	xorlw	128
  3837     0746  00AD               	movwf	??_sprintf^(0+128)
  3838     0747  3080               	movlw	128
  3839     0748  022D               	subwf	??_sprintf^(0+128),w
  3840     0749  1D03               	skipz
  3841     074A  2F4D               	goto	u7845
  3842     074B  084A               	movf	sprintf@c^(0+128),w
  3843     074C  0244               	subwf	sprintf@prec^(0+128),w
  3844     074D                     u7845:
  3845     074D  1803               	skipnc
  3846     074E  2F50               	goto	u7841
  3847     074F  2F51               	goto	u7840
  3848     0750                     u7841:
  3849     0750  2F51               	goto	l4778
  3850     0751                     u7840:
  3851     0751                     l4776:
  3852     0751                     l4778:
  3853                           
  3854                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3855     0751  3003               	movlw	3
  3856     0752  1683               	bsf	3,5	;RP0=1, select bank1
  3857     0753  1303               	bcf	3,6	;RP1=0, select bank1
  3858     0754  0537               	andwf	sprintf@flag^(0+128),w
  3859     0755  00AD               	movwf	??_sprintf^(0+128)
  3860     0756  3000               	movlw	0
  3861     0757  0538               	andwf	(sprintf@flag+1)^(0+128),w
  3862     0758  00AE               	movwf	(??_sprintf+1)^(0+128)
  3863     0759  082D               	movf	??_sprintf^(0+128),w
  3864     075A  042E               	iorwf	(??_sprintf^(0+128)+1),w
  3865     075B  1903               	btfsc	3,2
  3866     075C  2F5E               	goto	u7851
  3867     075D  2F5F               	goto	u7850
  3868     075E                     u7851:
  3869     075E  2F65               	goto	l4784
  3870     075F                     u7850:
  3871     075F                     l4780:
  3872                           
  3873                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3874     075F  083F               	movf	sprintf@sp^(0+128),w
  3875     0760  0084               	movwf	4
  3876     0761  302D               	movlw	45
  3877     0762  1783               	bsf	3,7	;select IRP bank2
  3878     0763  0080               	movwf	0
  3879     0764  283C               	goto	l4590
  3880     0765                     l4784:
  3881                           
  3882                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3883     0765  3001               	movlw	1
  3884     0766  07A8               	addwf	sprintf@f^(0+128),f
  3885     0767  30FF               	movlw	-1
  3886     0768  0728               	addwf	sprintf@f^(0+128),w
  3887     0769  0084               	movwf	4
  3888     076A  160A  158A  200A  120A  118A  	fcall	stringdir
  3889     076F  00CA               	movwf	sprintf@c^(0+128)
  3890     0770  084A               	movf	sprintf@c^(0+128),w
  3891     0771  1D03               	btfss	3,2
  3892     0772  2F74               	goto	u7861
  3893     0773  2F75               	goto	u7860
  3894     0774                     u7861:
  3895     0774  2831               	goto	l4586
  3896     0775                     u7860:
  3897     0775                     l4786:
  3898                           
  3899                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3900     0775  083F               	movf	sprintf@sp^(0+128),w
  3901     0776  0084               	movwf	4
  3902     0777  1783               	bsf	3,7	;select IRP bank2
  3903     0778  0180               	clrf	0
  3904     0779                     l439:
  3905     0779  0008               	return
  3906     077A                     __end_of_sprintf:
  3907                           
  3908                           	psect	text2
  3909     0C9D                     __ptext2:	
  3910 ;; *************** function _scale *****************
  3911 ;; Defined at:
  3912 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  3913 ;; Parameters:    Size  Location     Type
  3914 ;;  scl             1    wreg     char 
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;  scl             1   54[BANK0 ] char 
  3917 ;; Return value:  Size  Location     Type
  3918 ;;                  4   36[BANK0 ] char 
  3919 ;; Registers used:
  3920 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3926 ;;      Params:         0       4       0       0       0
  3927 ;;      Locals:         0       5       0       0       0
  3928 ;;      Temps:          0      10       0       0       0
  3929 ;;      Totals:         0      19       0       0       0
  3930 ;;Total ram usage:       19 bytes
  3931 ;; Hardware stack levels used: 1
  3932 ;; Hardware stack levels required when called: 3
  3933 ;; This function calls:
  3934 ;;		___awdiv
  3935 ;;		___awmod
  3936 ;;		___flmul
  3937 ;; This function is called by:
  3938 ;;		_sprintf
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942     0C9D                     _scale:	
  3943                           ;psect for function _scale
  3944                           
  3945                           
  3946                           ;incstack = 0
  3947                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3948                           ;scale@scl stored from wreg
  3949     0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  3950     0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  3951     0C9F  00D6               	movwf	scale@scl
  3952     0CA0                     l4106:
  3953                           
  3954                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3955     0CA0  1FD6               	btfss	scale@scl,7
  3956     0CA1  2CA3               	goto	u6341
  3957     0CA2  2CA4               	goto	u6340
  3958     0CA3                     u6341:
  3959     0CA3  2E53               	goto	l4128
  3960     0CA4                     u6340:
  3961     0CA4                     l4108:
  3962                           
  3963                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3964     0CA4  09D6               	comf	scale@scl,f
  3965     0CA5  0AD6               	incf	scale@scl,f
  3966     0CA6                     l4110:
  3967                           
  3968                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3969     0CA6  0856               	movf	scale@scl,w
  3970     0CA7  3A80               	xorlw	128
  3971     0CA8  3E12               	addlw	-238
  3972     0CA9  1C03               	skipc
  3973     0CAA  2CAC               	goto	u6351
  3974     0CAB  2CAD               	goto	u6350
  3975     0CAC                     u6351:
  3976     0CAC  2D97               	goto	l4118
  3977     0CAD                     u6350:
  3978     0CAD                     l4112:
  3979                           
  3980                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3981     0CAD  300A               	movlw	10
  3982     0CAE  00A2               	movwf	___awdiv@divisor
  3983     0CAF  3000               	movlw	0
  3984     0CB0  00A3               	movwf	___awdiv@divisor+1
  3985     0CB1  0856               	movf	scale@scl,w
  3986     0CB2  00F5               	movwf	___awmod@dividend
  3987     0CB3  01F6               	clrf	___awmod@dividend+1
  3988     0CB4  1BF5               	btfsc	___awmod@dividend,7
  3989     0CB5  03F6               	decf	___awmod@dividend+1,f
  3990     0CB6  3064               	movlw	100
  3991     0CB7  00F3               	movwf	___awmod@divisor
  3992     0CB8  3000               	movlw	0
  3993     0CB9  00F4               	movwf	___awmod@divisor+1
  3994     0CBA  160A  158A  245C  120A  158A  	fcall	___awmod
  3995     0CBF  0874               	movf	?___awmod+1,w
  3996     0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  3997     0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  3998     0CC2  00A5               	movwf	___awdiv@dividend+1
  3999     0CC3  0873               	movf	?___awmod,w
  4000     0CC4  00A4               	movwf	___awdiv@dividend
  4001     0CC5  160A  158A  2584  120A  158A  	fcall	___awdiv
  4002     0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  4003     0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  4004     0CCC  0822               	movf	?___awdiv,w
  4005     0CCD  00C8               	movwf	??_scale
  4006     0CCE  3001               	movlw	1
  4007     0CCF                     u6365:
  4008     0CCF  1003               	clrc
  4009     0CD0  0DC8               	rlf	??_scale,f
  4010     0CD1  3EFF               	addlw	-1
  4011     0CD2  1D03               	skipz
  4012     0CD3  2CCF               	goto	u6365
  4013     0CD4  1003               	clrc
  4014     0CD5  0D48               	rlf	??_scale,w
  4015     0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4016     0CD7  0084               	movwf	4
  4017     0CD8  160A  158A  200A  120A  158A  	fcall	stringdir
  4018     0CDD  00C9               	movwf	??_scale+1
  4019     0CDE  160A  158A  200A  120A  158A  	fcall	stringdir
  4020     0CE3  00CA               	movwf	??_scale+2
  4021     0CE4  160A  158A  200A  120A  158A  	fcall	stringdir
  4022     0CE9  00CB               	movwf	??_scale+3
  4023     0CEA  160A  158A  200A  120A  158A  	fcall	stringdir
  4024     0CEF  00CC               	movwf	??_scale+4
  4025     0CF0  084C               	movf	??_scale+4,w
  4026     0CF1  00AD               	movwf	___flmul@b+3
  4027     0CF2  084B               	movf	??_scale+3,w
  4028     0CF3  00AC               	movwf	___flmul@b+2
  4029     0CF4  084A               	movf	??_scale+2,w
  4030     0CF5  00AB               	movwf	___flmul@b+1
  4031     0CF6  0849               	movf	??_scale+1,w
  4032     0CF7  00AA               	movwf	___flmul@b
  4033     0CF8  3064               	movlw	100
  4034     0CF9  00A2               	movwf	___awdiv@divisor
  4035     0CFA  3000               	movlw	0
  4036     0CFB  00A3               	movwf	___awdiv@divisor+1
  4037     0CFC  0856               	movf	scale@scl,w
  4038     0CFD  00A4               	movwf	___awdiv@dividend
  4039     0CFE  01A5               	clrf	___awdiv@dividend+1
  4040     0CFF  1BA4               	btfsc	___awdiv@dividend,7
  4041     0D00  03A5               	decf	___awdiv@dividend+1,f
  4042     0D01  160A  158A  2584  120A  158A  	fcall	___awdiv
  4043     0D06  1283               	bcf	3,5	;RP0=0, select bank0
  4044     0D07  1303               	bcf	3,6	;RP1=0, select bank0
  4045     0D08  0822               	movf	?___awdiv,w
  4046     0D09  00CD               	movwf	??_scale+5
  4047     0D0A  3001               	movlw	1
  4048     0D0B                     u6375:
  4049     0D0B  1003               	clrc
  4050     0D0C  0DCD               	rlf	??_scale+5,f
  4051     0D0D  3EFF               	addlw	-1
  4052     0D0E  1D03               	skipz
  4053     0D0F  2D0B               	goto	u6375
  4054     0D10  1003               	clrc
  4055     0D11  0D4D               	rlf	??_scale+5,w
  4056     0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4057     0D13  0084               	movwf	4
  4058     0D14  160A  158A  200A  120A  158A  	fcall	stringdir
  4059     0D19  00CE               	movwf	??_scale+6
  4060     0D1A  160A  158A  200A  120A  158A  	fcall	stringdir
  4061     0D1F  00CF               	movwf	??_scale+7
  4062     0D20  160A  158A  200A  120A  158A  	fcall	stringdir
  4063     0D25  00D0               	movwf	??_scale+8
  4064     0D26  160A  158A  200A  120A  158A  	fcall	stringdir
  4065     0D2B  00D1               	movwf	??_scale+9
  4066     0D2C  0851               	movf	??_scale+9,w
  4067     0D2D  00B1               	movwf	___flmul@a+3
  4068     0D2E  0850               	movf	??_scale+8,w
  4069     0D2F  00B0               	movwf	___flmul@a+2
  4070     0D30  084F               	movf	??_scale+7,w
  4071     0D31  00AF               	movwf	___flmul@a+1
  4072     0D32  084E               	movf	??_scale+6,w
  4073     0D33  00AE               	movwf	___flmul@a
  4074     0D34  120A  158A  2158  120A  158A  	fcall	___flmul
  4075     0D39  1283               	bcf	3,5	;RP0=0, select bank0
  4076     0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  4077     0D3B  082D               	movf	?___flmul+3,w
  4078     0D3C  00D5               	movwf	_scale$1365+3
  4079     0D3D  082C               	movf	?___flmul+2,w
  4080     0D3E  00D4               	movwf	_scale$1365+2
  4081     0D3F  082B               	movf	?___flmul+1,w
  4082     0D40  00D3               	movwf	_scale$1365+1
  4083     0D41  082A               	movf	?___flmul,w
  4084     0D42  00D2               	movwf	_scale$1365
  4085                           
  4086                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4087     0D43  300A               	movlw	10
  4088     0D44  00F3               	movwf	___awmod@divisor
  4089     0D45  3000               	movlw	0
  4090     0D46  00F4               	movwf	___awmod@divisor+1
  4091     0D47  0856               	movf	scale@scl,w
  4092     0D48  00F5               	movwf	___awmod@dividend
  4093     0D49  01F6               	clrf	___awmod@dividend+1
  4094     0D4A  1BF5               	btfsc	___awmod@dividend,7
  4095     0D4B  03F6               	decf	___awmod@dividend+1,f
  4096     0D4C  160A  158A  245C  120A  158A  	fcall	___awmod
  4097     0D51  0873               	movf	?___awmod,w
  4098     0D52  1283               	bcf	3,5	;RP0=0, select bank0
  4099     0D53  1303               	bcf	3,6	;RP1=0, select bank0
  4100     0D54  00C8               	movwf	??_scale
  4101     0D55  3001               	movlw	1
  4102     0D56                     u6385:
  4103     0D56  1003               	clrc
  4104     0D57  0DC8               	rlf	??_scale,f
  4105     0D58  3EFF               	addlw	-1
  4106     0D59  1D03               	skipz
  4107     0D5A  2D56               	goto	u6385
  4108     0D5B  1003               	clrc
  4109     0D5C  0D48               	rlf	??_scale,w
  4110     0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4111     0D5E  0084               	movwf	4
  4112     0D5F  160A  158A  200A  120A  158A  	fcall	stringdir
  4113     0D64  00C9               	movwf	??_scale+1
  4114     0D65  160A  158A  200A  120A  158A  	fcall	stringdir
  4115     0D6A  00CA               	movwf	??_scale+2
  4116     0D6B  160A  158A  200A  120A  158A  	fcall	stringdir
  4117     0D70  00CB               	movwf	??_scale+3
  4118     0D71  160A  158A  200A  120A  158A  	fcall	stringdir
  4119     0D76  00CC               	movwf	??_scale+4
  4120     0D77  084C               	movf	??_scale+4,w
  4121     0D78  00AD               	movwf	___flmul@b+3
  4122     0D79  084B               	movf	??_scale+3,w
  4123     0D7A  00AC               	movwf	___flmul@b+2
  4124     0D7B  084A               	movf	??_scale+2,w
  4125     0D7C  00AB               	movwf	___flmul@b+1
  4126     0D7D  0849               	movf	??_scale+1,w
  4127     0D7E  00AA               	movwf	___flmul@b
  4128     0D7F  0855               	movf	_scale$1365+3,w
  4129     0D80  00B1               	movwf	___flmul@a+3
  4130     0D81  0854               	movf	_scale$1365+2,w
  4131     0D82  00B0               	movwf	___flmul@a+2
  4132     0D83  0853               	movf	_scale$1365+1,w
  4133     0D84  00AF               	movwf	___flmul@a+1
  4134     0D85  0852               	movf	_scale$1365,w
  4135     0D86  00AE               	movwf	___flmul@a
  4136     0D87  120A  158A  2158  120A  158A  	fcall	___flmul
  4137     0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  4138     0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  4139     0D8E  082D               	movf	?___flmul+3,w
  4140     0D8F  00C7               	movwf	?_scale+3
  4141     0D90  082C               	movf	?___flmul+2,w
  4142     0D91  00C6               	movwf	?_scale+2
  4143     0D92  082B               	movf	?___flmul+1,w
  4144     0D93  00C5               	movwf	?_scale+1
  4145     0D94  082A               	movf	?___flmul,w
  4146     0D95  00C4               	movwf	?_scale
  4147     0D96  2FFF               	goto	l373
  4148     0D97                     l4118:
  4149     0D97  0856               	movf	scale@scl,w
  4150     0D98  3A80               	xorlw	128
  4151     0D99  3E75               	addlw	-139
  4152     0D9A  1C03               	skipc
  4153     0D9B  2D9D               	goto	u6391
  4154     0D9C  2D9E               	goto	u6390
  4155     0D9D                     u6391:
  4156     0D9D  2E26               	goto	l4124
  4157     0D9E                     u6390:
  4158     0D9E                     l4120:
  4159                           
  4160                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4161     0D9E  300A               	movlw	10
  4162     0D9F  00F3               	movwf	___awmod@divisor
  4163     0DA0  3000               	movlw	0
  4164     0DA1  00F4               	movwf	___awmod@divisor+1
  4165     0DA2  0856               	movf	scale@scl,w
  4166     0DA3  00F5               	movwf	___awmod@dividend
  4167     0DA4  01F6               	clrf	___awmod@dividend+1
  4168     0DA5  1BF5               	btfsc	___awmod@dividend,7
  4169     0DA6  03F6               	decf	___awmod@dividend+1,f
  4170     0DA7  160A  158A  245C  120A  158A  	fcall	___awmod
  4171     0DAC  0873               	movf	?___awmod,w
  4172     0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  4173     0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  4174     0DAF  00C8               	movwf	??_scale
  4175     0DB0  3001               	movlw	1
  4176     0DB1                     u6405:
  4177     0DB1  1003               	clrc
  4178     0DB2  0DC8               	rlf	??_scale,f
  4179     0DB3  3EFF               	addlw	-1
  4180     0DB4  1D03               	skipz
  4181     0DB5  2DB1               	goto	u6405
  4182     0DB6  1003               	clrc
  4183     0DB7  0D48               	rlf	??_scale,w
  4184     0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4185     0DB9  0084               	movwf	4
  4186     0DBA  160A  158A  200A  120A  158A  	fcall	stringdir
  4187     0DBF  00C9               	movwf	??_scale+1
  4188     0DC0  160A  158A  200A  120A  158A  	fcall	stringdir
  4189     0DC5  00CA               	movwf	??_scale+2
  4190     0DC6  160A  158A  200A  120A  158A  	fcall	stringdir
  4191     0DCB  00CB               	movwf	??_scale+3
  4192     0DCC  160A  158A  200A  120A  158A  	fcall	stringdir
  4193     0DD1  00CC               	movwf	??_scale+4
  4194     0DD2  084C               	movf	??_scale+4,w
  4195     0DD3  00AD               	movwf	___flmul@b+3
  4196     0DD4  084B               	movf	??_scale+3,w
  4197     0DD5  00AC               	movwf	___flmul@b+2
  4198     0DD6  084A               	movf	??_scale+2,w
  4199     0DD7  00AB               	movwf	___flmul@b+1
  4200     0DD8  0849               	movf	??_scale+1,w
  4201     0DD9  00AA               	movwf	___flmul@b
  4202     0DDA  300A               	movlw	10
  4203     0DDB  00A2               	movwf	___awdiv@divisor
  4204     0DDC  3000               	movlw	0
  4205     0DDD  00A3               	movwf	___awdiv@divisor+1
  4206     0DDE  0856               	movf	scale@scl,w
  4207     0DDF  00A4               	movwf	___awdiv@dividend
  4208     0DE0  01A5               	clrf	___awdiv@dividend+1
  4209     0DE1  1BA4               	btfsc	___awdiv@dividend,7
  4210     0DE2  03A5               	decf	___awdiv@dividend+1,f
  4211     0DE3  160A  158A  2584  120A  158A  	fcall	___awdiv
  4212     0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  4213     0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  4214     0DEA  0822               	movf	?___awdiv,w
  4215     0DEB  00CD               	movwf	??_scale+5
  4216     0DEC  3001               	movlw	1
  4217     0DED                     u6415:
  4218     0DED  1003               	clrc
  4219     0DEE  0DCD               	rlf	??_scale+5,f
  4220     0DEF  3EFF               	addlw	-1
  4221     0DF0  1D03               	skipz
  4222     0DF1  2DED               	goto	u6415
  4223     0DF2  1003               	clrc
  4224     0DF3  0D4D               	rlf	??_scale+5,w
  4225     0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4226     0DF5  0084               	movwf	4
  4227     0DF6  160A  158A  200A  120A  158A  	fcall	stringdir
  4228     0DFB  00CE               	movwf	??_scale+6
  4229     0DFC  160A  158A  200A  120A  158A  	fcall	stringdir
  4230     0E01  00CF               	movwf	??_scale+7
  4231     0E02  160A  158A  200A  120A  158A  	fcall	stringdir
  4232     0E07  00D0               	movwf	??_scale+8
  4233     0E08  160A  158A  200A  120A  158A  	fcall	stringdir
  4234     0E0D  00D1               	movwf	??_scale+9
  4235     0E0E  0851               	movf	??_scale+9,w
  4236     0E0F  00B1               	movwf	___flmul@a+3
  4237     0E10  0850               	movf	??_scale+8,w
  4238     0E11  00B0               	movwf	___flmul@a+2
  4239     0E12  084F               	movf	??_scale+7,w
  4240     0E13  00AF               	movwf	___flmul@a+1
  4241     0E14  084E               	movf	??_scale+6,w
  4242     0E15  00AE               	movwf	___flmul@a
  4243     0E16  120A  158A  2158  120A  158A  	fcall	___flmul
  4244     0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  4245     0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  4246     0E1D  082D               	movf	?___flmul+3,w
  4247     0E1E  00C7               	movwf	?_scale+3
  4248     0E1F  082C               	movf	?___flmul+2,w
  4249     0E20  00C6               	movwf	?_scale+2
  4250     0E21  082B               	movf	?___flmul+1,w
  4251     0E22  00C5               	movwf	?_scale+1
  4252     0E23  082A               	movf	?___flmul,w
  4253     0E24  00C4               	movwf	?_scale
  4254     0E25  2FFF               	goto	l373
  4255     0E26                     l4124:
  4256                           
  4257                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4258     0E26  0856               	movf	scale@scl,w
  4259     0E27  00C8               	movwf	??_scale
  4260     0E28  3001               	movlw	1
  4261     0E29                     u6425:
  4262     0E29  1003               	clrc
  4263     0E2A  0DC8               	rlf	??_scale,f
  4264     0E2B  3EFF               	addlw	-1
  4265     0E2C  1D03               	skipz
  4266     0E2D  2E29               	goto	u6425
  4267     0E2E  1003               	clrc
  4268     0E2F  0D48               	rlf	??_scale,w
  4269     0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4270     0E31  0084               	movwf	4
  4271     0E32  160A  158A  200A  120A  158A  	fcall	stringdir
  4272     0E37  00C9               	movwf	??_scale+1
  4273     0E38  160A  158A  200A  120A  158A  	fcall	stringdir
  4274     0E3D  00CA               	movwf	??_scale+2
  4275     0E3E  160A  158A  200A  120A  158A  	fcall	stringdir
  4276     0E43  00CB               	movwf	??_scale+3
  4277     0E44  160A  158A  200A  120A  158A  	fcall	stringdir
  4278     0E49  00CC               	movwf	??_scale+4
  4279     0E4A  084C               	movf	??_scale+4,w
  4280     0E4B  00C7               	movwf	?_scale+3
  4281     0E4C  084B               	movf	??_scale+3,w
  4282     0E4D  00C6               	movwf	?_scale+2
  4283     0E4E  084A               	movf	??_scale+2,w
  4284     0E4F  00C5               	movwf	?_scale+1
  4285     0E50  0849               	movf	??_scale+1,w
  4286     0E51  00C4               	movwf	?_scale
  4287     0E52  2FFF               	goto	l373
  4288     0E53                     l4128:
  4289                           
  4290                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4291     0E53  0856               	movf	scale@scl,w
  4292     0E54  3A80               	xorlw	128
  4293     0E55  3E12               	addlw	-238
  4294     0E56  1C03               	skipc
  4295     0E57  2E59               	goto	u6431
  4296     0E58  2E5A               	goto	u6430
  4297     0E59                     u6431:
  4298     0E59  2F44               	goto	l4136
  4299     0E5A                     u6430:
  4300     0E5A                     l4130:
  4301                           
  4302                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4303     0E5A  300A               	movlw	10
  4304     0E5B  00A2               	movwf	___awdiv@divisor
  4305     0E5C  3000               	movlw	0
  4306     0E5D  00A3               	movwf	___awdiv@divisor+1
  4307     0E5E  0856               	movf	scale@scl,w
  4308     0E5F  00F5               	movwf	___awmod@dividend
  4309     0E60  01F6               	clrf	___awmod@dividend+1
  4310     0E61  1BF5               	btfsc	___awmod@dividend,7
  4311     0E62  03F6               	decf	___awmod@dividend+1,f
  4312     0E63  3064               	movlw	100
  4313     0E64  00F3               	movwf	___awmod@divisor
  4314     0E65  3000               	movlw	0
  4315     0E66  00F4               	movwf	___awmod@divisor+1
  4316     0E67  160A  158A  245C  120A  158A  	fcall	___awmod
  4317     0E6C  0874               	movf	?___awmod+1,w
  4318     0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  4319     0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  4320     0E6F  00A5               	movwf	___awdiv@dividend+1
  4321     0E70  0873               	movf	?___awmod,w
  4322     0E71  00A4               	movwf	___awdiv@dividend
  4323     0E72  160A  158A  2584  120A  158A  	fcall	___awdiv
  4324     0E77  1283               	bcf	3,5	;RP0=0, select bank0
  4325     0E78  1303               	bcf	3,6	;RP1=0, select bank0
  4326     0E79  0822               	movf	?___awdiv,w
  4327     0E7A  00C8               	movwf	??_scale
  4328     0E7B  3001               	movlw	1
  4329     0E7C                     u6445:
  4330     0E7C  1003               	clrc
  4331     0E7D  0DC8               	rlf	??_scale,f
  4332     0E7E  3EFF               	addlw	-1
  4333     0E7F  1D03               	skipz
  4334     0E80  2E7C               	goto	u6445
  4335     0E81  1003               	clrc
  4336     0E82  0D48               	rlf	??_scale,w
  4337     0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4338     0E84  0084               	movwf	4
  4339     0E85  160A  158A  200A  120A  158A  	fcall	stringdir
  4340     0E8A  00C9               	movwf	??_scale+1
  4341     0E8B  160A  158A  200A  120A  158A  	fcall	stringdir
  4342     0E90  00CA               	movwf	??_scale+2
  4343     0E91  160A  158A  200A  120A  158A  	fcall	stringdir
  4344     0E96  00CB               	movwf	??_scale+3
  4345     0E97  160A  158A  200A  120A  158A  	fcall	stringdir
  4346     0E9C  00CC               	movwf	??_scale+4
  4347     0E9D  084C               	movf	??_scale+4,w
  4348     0E9E  00AD               	movwf	___flmul@b+3
  4349     0E9F  084B               	movf	??_scale+3,w
  4350     0EA0  00AC               	movwf	___flmul@b+2
  4351     0EA1  084A               	movf	??_scale+2,w
  4352     0EA2  00AB               	movwf	___flmul@b+1
  4353     0EA3  0849               	movf	??_scale+1,w
  4354     0EA4  00AA               	movwf	___flmul@b
  4355     0EA5  3064               	movlw	100
  4356     0EA6  00A2               	movwf	___awdiv@divisor
  4357     0EA7  3000               	movlw	0
  4358     0EA8  00A3               	movwf	___awdiv@divisor+1
  4359     0EA9  0856               	movf	scale@scl,w
  4360     0EAA  00A4               	movwf	___awdiv@dividend
  4361     0EAB  01A5               	clrf	___awdiv@dividend+1
  4362     0EAC  1BA4               	btfsc	___awdiv@dividend,7
  4363     0EAD  03A5               	decf	___awdiv@dividend+1,f
  4364     0EAE  160A  158A  2584  120A  158A  	fcall	___awdiv
  4365     0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  4366     0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  4367     0EB5  0822               	movf	?___awdiv,w
  4368     0EB6  00CD               	movwf	??_scale+5
  4369     0EB7  3001               	movlw	1
  4370     0EB8                     u6455:
  4371     0EB8  1003               	clrc
  4372     0EB9  0DCD               	rlf	??_scale+5,f
  4373     0EBA  3EFF               	addlw	-1
  4374     0EBB  1D03               	skipz
  4375     0EBC  2EB8               	goto	u6455
  4376     0EBD  1003               	clrc
  4377     0EBE  0D4D               	rlf	??_scale+5,w
  4378     0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4379     0EC0  0084               	movwf	4
  4380     0EC1  160A  158A  200A  120A  158A  	fcall	stringdir
  4381     0EC6  00CE               	movwf	??_scale+6
  4382     0EC7  160A  158A  200A  120A  158A  	fcall	stringdir
  4383     0ECC  00CF               	movwf	??_scale+7
  4384     0ECD  160A  158A  200A  120A  158A  	fcall	stringdir
  4385     0ED2  00D0               	movwf	??_scale+8
  4386     0ED3  160A  158A  200A  120A  158A  	fcall	stringdir
  4387     0ED8  00D1               	movwf	??_scale+9
  4388     0ED9  0851               	movf	??_scale+9,w
  4389     0EDA  00B1               	movwf	___flmul@a+3
  4390     0EDB  0850               	movf	??_scale+8,w
  4391     0EDC  00B0               	movwf	___flmul@a+2
  4392     0EDD  084F               	movf	??_scale+7,w
  4393     0EDE  00AF               	movwf	___flmul@a+1
  4394     0EDF  084E               	movf	??_scale+6,w
  4395     0EE0  00AE               	movwf	___flmul@a
  4396     0EE1  120A  158A  2158  120A  158A  	fcall	___flmul
  4397     0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  4398     0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  4399     0EE8  082D               	movf	?___flmul+3,w
  4400     0EE9  00D5               	movwf	_scale$1365+3
  4401     0EEA  082C               	movf	?___flmul+2,w
  4402     0EEB  00D4               	movwf	_scale$1365+2
  4403     0EEC  082B               	movf	?___flmul+1,w
  4404     0EED  00D3               	movwf	_scale$1365+1
  4405     0EEE  082A               	movf	?___flmul,w
  4406     0EEF  00D2               	movwf	_scale$1365
  4407                           
  4408                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4409     0EF0  300A               	movlw	10
  4410     0EF1  00F3               	movwf	___awmod@divisor
  4411     0EF2  3000               	movlw	0
  4412     0EF3  00F4               	movwf	___awmod@divisor+1
  4413     0EF4  0856               	movf	scale@scl,w
  4414     0EF5  00F5               	movwf	___awmod@dividend
  4415     0EF6  01F6               	clrf	___awmod@dividend+1
  4416     0EF7  1BF5               	btfsc	___awmod@dividend,7
  4417     0EF8  03F6               	decf	___awmod@dividend+1,f
  4418     0EF9  160A  158A  245C  120A  158A  	fcall	___awmod
  4419     0EFE  0873               	movf	?___awmod,w
  4420     0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4421     0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4422     0F01  00C8               	movwf	??_scale
  4423     0F02  3001               	movlw	1
  4424     0F03                     u6465:
  4425     0F03  1003               	clrc
  4426     0F04  0DC8               	rlf	??_scale,f
  4427     0F05  3EFF               	addlw	-1
  4428     0F06  1D03               	skipz
  4429     0F07  2F03               	goto	u6465
  4430     0F08  1003               	clrc
  4431     0F09  0D48               	rlf	??_scale,w
  4432     0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4433     0F0B  0084               	movwf	4
  4434     0F0C  160A  158A  200A  120A  158A  	fcall	stringdir
  4435     0F11  00C9               	movwf	??_scale+1
  4436     0F12  160A  158A  200A  120A  158A  	fcall	stringdir
  4437     0F17  00CA               	movwf	??_scale+2
  4438     0F18  160A  158A  200A  120A  158A  	fcall	stringdir
  4439     0F1D  00CB               	movwf	??_scale+3
  4440     0F1E  160A  158A  200A  120A  158A  	fcall	stringdir
  4441     0F23  00CC               	movwf	??_scale+4
  4442     0F24  084C               	movf	??_scale+4,w
  4443     0F25  00AD               	movwf	___flmul@b+3
  4444     0F26  084B               	movf	??_scale+3,w
  4445     0F27  00AC               	movwf	___flmul@b+2
  4446     0F28  084A               	movf	??_scale+2,w
  4447     0F29  00AB               	movwf	___flmul@b+1
  4448     0F2A  0849               	movf	??_scale+1,w
  4449     0F2B  00AA               	movwf	___flmul@b
  4450     0F2C  0855               	movf	_scale$1365+3,w
  4451     0F2D  00B1               	movwf	___flmul@a+3
  4452     0F2E  0854               	movf	_scale$1365+2,w
  4453     0F2F  00B0               	movwf	___flmul@a+2
  4454     0F30  0853               	movf	_scale$1365+1,w
  4455     0F31  00AF               	movwf	___flmul@a+1
  4456     0F32  0852               	movf	_scale$1365,w
  4457     0F33  00AE               	movwf	___flmul@a
  4458     0F34  120A  158A  2158  120A  158A  	fcall	___flmul
  4459     0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4460     0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4461     0F3B  082D               	movf	?___flmul+3,w
  4462     0F3C  00C7               	movwf	?_scale+3
  4463     0F3D  082C               	movf	?___flmul+2,w
  4464     0F3E  00C6               	movwf	?_scale+2
  4465     0F3F  082B               	movf	?___flmul+1,w
  4466     0F40  00C5               	movwf	?_scale+1
  4467     0F41  082A               	movf	?___flmul,w
  4468     0F42  00C4               	movwf	?_scale
  4469     0F43  2FFF               	goto	l373
  4470     0F44                     l4136:
  4471     0F44  0856               	movf	scale@scl,w
  4472     0F45  3A80               	xorlw	128
  4473     0F46  3E75               	addlw	-139
  4474     0F47  1C03               	skipc
  4475     0F48  2F4A               	goto	u6471
  4476     0F49  2F4B               	goto	u6470
  4477     0F4A                     u6471:
  4478     0F4A  2FD3               	goto	l4142
  4479     0F4B                     u6470:
  4480     0F4B                     l4138:
  4481                           
  4482                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4483     0F4B  300A               	movlw	10
  4484     0F4C  00F3               	movwf	___awmod@divisor
  4485     0F4D  3000               	movlw	0
  4486     0F4E  00F4               	movwf	___awmod@divisor+1
  4487     0F4F  0856               	movf	scale@scl,w
  4488     0F50  00F5               	movwf	___awmod@dividend
  4489     0F51  01F6               	clrf	___awmod@dividend+1
  4490     0F52  1BF5               	btfsc	___awmod@dividend,7
  4491     0F53  03F6               	decf	___awmod@dividend+1,f
  4492     0F54  160A  158A  245C  120A  158A  	fcall	___awmod
  4493     0F59  0873               	movf	?___awmod,w
  4494     0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4495     0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  4496     0F5C  00C8               	movwf	??_scale
  4497     0F5D  3001               	movlw	1
  4498     0F5E                     u6485:
  4499     0F5E  1003               	clrc
  4500     0F5F  0DC8               	rlf	??_scale,f
  4501     0F60  3EFF               	addlw	-1
  4502     0F61  1D03               	skipz
  4503     0F62  2F5E               	goto	u6485
  4504     0F63  1003               	clrc
  4505     0F64  0D48               	rlf	??_scale,w
  4506     0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4507     0F66  0084               	movwf	4
  4508     0F67  160A  158A  200A  120A  158A  	fcall	stringdir
  4509     0F6C  00C9               	movwf	??_scale+1
  4510     0F6D  160A  158A  200A  120A  158A  	fcall	stringdir
  4511     0F72  00CA               	movwf	??_scale+2
  4512     0F73  160A  158A  200A  120A  158A  	fcall	stringdir
  4513     0F78  00CB               	movwf	??_scale+3
  4514     0F79  160A  158A  200A  120A  158A  	fcall	stringdir
  4515     0F7E  00CC               	movwf	??_scale+4
  4516     0F7F  084C               	movf	??_scale+4,w
  4517     0F80  00AD               	movwf	___flmul@b+3
  4518     0F81  084B               	movf	??_scale+3,w
  4519     0F82  00AC               	movwf	___flmul@b+2
  4520     0F83  084A               	movf	??_scale+2,w
  4521     0F84  00AB               	movwf	___flmul@b+1
  4522     0F85  0849               	movf	??_scale+1,w
  4523     0F86  00AA               	movwf	___flmul@b
  4524     0F87  300A               	movlw	10
  4525     0F88  00A2               	movwf	___awdiv@divisor
  4526     0F89  3000               	movlw	0
  4527     0F8A  00A3               	movwf	___awdiv@divisor+1
  4528     0F8B  0856               	movf	scale@scl,w
  4529     0F8C  00A4               	movwf	___awdiv@dividend
  4530     0F8D  01A5               	clrf	___awdiv@dividend+1
  4531     0F8E  1BA4               	btfsc	___awdiv@dividend,7
  4532     0F8F  03A5               	decf	___awdiv@dividend+1,f
  4533     0F90  160A  158A  2584  120A  158A  	fcall	___awdiv
  4534     0F95  1283               	bcf	3,5	;RP0=0, select bank0
  4535     0F96  1303               	bcf	3,6	;RP1=0, select bank0
  4536     0F97  0822               	movf	?___awdiv,w
  4537     0F98  00CD               	movwf	??_scale+5
  4538     0F99  3001               	movlw	1
  4539     0F9A                     u6495:
  4540     0F9A  1003               	clrc
  4541     0F9B  0DCD               	rlf	??_scale+5,f
  4542     0F9C  3EFF               	addlw	-1
  4543     0F9D  1D03               	skipz
  4544     0F9E  2F9A               	goto	u6495
  4545     0F9F  1003               	clrc
  4546     0FA0  0D4D               	rlf	??_scale+5,w
  4547     0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4548     0FA2  0084               	movwf	4
  4549     0FA3  160A  158A  200A  120A  158A  	fcall	stringdir
  4550     0FA8  00CE               	movwf	??_scale+6
  4551     0FA9  160A  158A  200A  120A  158A  	fcall	stringdir
  4552     0FAE  00CF               	movwf	??_scale+7
  4553     0FAF  160A  158A  200A  120A  158A  	fcall	stringdir
  4554     0FB4  00D0               	movwf	??_scale+8
  4555     0FB5  160A  158A  200A  120A  158A  	fcall	stringdir
  4556     0FBA  00D1               	movwf	??_scale+9
  4557     0FBB  0851               	movf	??_scale+9,w
  4558     0FBC  00B1               	movwf	___flmul@a+3
  4559     0FBD  0850               	movf	??_scale+8,w
  4560     0FBE  00B0               	movwf	___flmul@a+2
  4561     0FBF  084F               	movf	??_scale+7,w
  4562     0FC0  00AF               	movwf	___flmul@a+1
  4563     0FC1  084E               	movf	??_scale+6,w
  4564     0FC2  00AE               	movwf	___flmul@a
  4565     0FC3  120A  158A  2158  120A  158A  	fcall	___flmul
  4566     0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4567     0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4568     0FCA  082D               	movf	?___flmul+3,w
  4569     0FCB  00C7               	movwf	?_scale+3
  4570     0FCC  082C               	movf	?___flmul+2,w
  4571     0FCD  00C6               	movwf	?_scale+2
  4572     0FCE  082B               	movf	?___flmul+1,w
  4573     0FCF  00C5               	movwf	?_scale+1
  4574     0FD0  082A               	movf	?___flmul,w
  4575     0FD1  00C4               	movwf	?_scale
  4576     0FD2  2FFF               	goto	l373
  4577     0FD3                     l4142:
  4578                           
  4579                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4580     0FD3  0856               	movf	scale@scl,w
  4581     0FD4  00C8               	movwf	??_scale
  4582     0FD5  3001               	movlw	1
  4583     0FD6                     u6505:
  4584     0FD6  1003               	clrc
  4585     0FD7  0DC8               	rlf	??_scale,f
  4586     0FD8  3EFF               	addlw	-1
  4587     0FD9  1D03               	skipz
  4588     0FDA  2FD6               	goto	u6505
  4589     0FDB  1003               	clrc
  4590     0FDC  0D48               	rlf	??_scale,w
  4591     0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4592     0FDE  0084               	movwf	4
  4593     0FDF  160A  158A  200A  120A  158A  	fcall	stringdir
  4594     0FE4  00C9               	movwf	??_scale+1
  4595     0FE5  160A  158A  200A  120A  158A  	fcall	stringdir
  4596     0FEA  00CA               	movwf	??_scale+2
  4597     0FEB  160A  158A  200A  120A  158A  	fcall	stringdir
  4598     0FF0  00CB               	movwf	??_scale+3
  4599     0FF1  160A  158A  200A  120A  158A  	fcall	stringdir
  4600     0FF6  00CC               	movwf	??_scale+4
  4601     0FF7  084C               	movf	??_scale+4,w
  4602     0FF8  00C7               	movwf	?_scale+3
  4603     0FF9  084B               	movf	??_scale+3,w
  4604     0FFA  00C6               	movwf	?_scale+2
  4605     0FFB  084A               	movf	??_scale+2,w
  4606     0FFC  00C5               	movwf	?_scale+1
  4607     0FFD  0849               	movf	??_scale+1,w
  4608     0FFE  00C4               	movwf	?_scale
  4609     0FFF                     l373:
  4610     0FFF  0008               	return
  4611     1000                     __end_of_scale:
  4612                           
  4613                           	psect	text3
  4614     1C5C                     __ptext3:	
  4615 ;; *************** function ___awmod *****************
  4616 ;; Defined at:
  4617 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  4618 ;; Parameters:    Size  Location     Type
  4619 ;;  divisor         2    3[COMMON] int 
  4620 ;;  dividend        2    5[COMMON] int 
  4621 ;; Auto vars:     Size  Location     Type
  4622 ;;  sign            1    1[BANK0 ] unsigned char 
  4623 ;;  counter         1    0[BANK0 ] unsigned char 
  4624 ;; Return value:  Size  Location     Type
  4625 ;;                  2    3[COMMON] int 
  4626 ;; Registers used:
  4627 ;;		wreg, status,2, status,0, btemp+1
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4633 ;;      Params:         4       0       0       0       0
  4634 ;;      Locals:         0       2       0       0       0
  4635 ;;      Temps:          0       0       0       0       0
  4636 ;;      Totals:         4       2       0       0       0
  4637 ;;Total ram usage:        6 bytes
  4638 ;; Hardware stack levels used: 1
  4639 ;; Hardware stack levels required when called: 1
  4640 ;; This function calls:
  4641 ;;		Nothing
  4642 ;; This function is called by:
  4643 ;;		_scale
  4644 ;; This function uses a non-reentrant model
  4645 ;;
  4646                           
  4647     1C5C                     ___awmod:	
  4648                           ;psect for function ___awmod
  4649                           
  4650     1C5C                     l4004:	
  4651                           ;incstack = 0
  4652                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  4653                           
  4654     1C5C  1283               	bcf	3,5	;RP0=0, select bank0
  4655     1C5D  1303               	bcf	3,6	;RP1=0, select bank0
  4656     1C5E  01A1               	clrf	___awmod@sign
  4657     1C5F                     l4006:
  4658     1C5F  1FF6               	btfss	___awmod@dividend+1,7
  4659     1C60  2C62               	goto	u6101
  4660     1C61  2C63               	goto	u6100
  4661     1C62                     u6101:
  4662     1C62  2C6A               	goto	l4012
  4663     1C63                     u6100:
  4664     1C63                     l4008:
  4665     1C63  09F5               	comf	___awmod@dividend,f
  4666     1C64  09F6               	comf	___awmod@dividend+1,f
  4667     1C65  0AF5               	incf	___awmod@dividend,f
  4668     1C66  1903               	skipnz
  4669     1C67  0AF6               	incf	___awmod@dividend+1,f
  4670     1C68                     l4010:
  4671     1C68  01A1               	clrf	___awmod@sign
  4672     1C69  0AA1               	incf	___awmod@sign,f
  4673     1C6A                     l4012:
  4674     1C6A  1FF4               	btfss	___awmod@divisor+1,7
  4675     1C6B  2C6D               	goto	u6111
  4676     1C6C  2C6E               	goto	u6110
  4677     1C6D                     u6111:
  4678     1C6D  2C73               	goto	l4016
  4679     1C6E                     u6110:
  4680     1C6E                     l4014:
  4681     1C6E  09F3               	comf	___awmod@divisor,f
  4682     1C6F  09F4               	comf	___awmod@divisor+1,f
  4683     1C70  0AF3               	incf	___awmod@divisor,f
  4684     1C71  1903               	skipnz
  4685     1C72  0AF4               	incf	___awmod@divisor+1,f
  4686     1C73                     l4016:
  4687     1C73  0873               	movf	___awmod@divisor,w
  4688     1C74  0474               	iorwf	___awmod@divisor+1,w
  4689     1C75  1903               	btfsc	3,2
  4690     1C76  2C78               	goto	u6121
  4691     1C77  2C79               	goto	u6120
  4692     1C78                     u6121:
  4693     1C78  2CA8               	goto	l4034
  4694     1C79                     u6120:
  4695     1C79                     l4018:
  4696     1C79  01A0               	clrf	___awmod@counter
  4697     1C7A  0AA0               	incf	___awmod@counter,f
  4698     1C7B  2C87               	goto	l4024
  4699     1C7C                     l4020:
  4700     1C7C  3001               	movlw	1
  4701     1C7D                     u6135:
  4702     1C7D  1003               	clrc
  4703     1C7E  0DF3               	rlf	___awmod@divisor,f
  4704     1C7F  0DF4               	rlf	___awmod@divisor+1,f
  4705     1C80  3EFF               	addlw	-1
  4706     1C81  1D03               	skipz
  4707     1C82  2C7D               	goto	u6135
  4708     1C83                     l4022:
  4709     1C83  3001               	movlw	1
  4710     1C84  00FF               	movwf	btemp+1
  4711     1C85  087F               	movf	btemp+1,w
  4712     1C86  07A0               	addwf	___awmod@counter,f
  4713     1C87                     l4024:
  4714     1C87  1FF4               	btfss	___awmod@divisor+1,7
  4715     1C88  2C8A               	goto	u6141
  4716     1C89  2C8B               	goto	u6140
  4717     1C8A                     u6141:
  4718     1C8A  2C7C               	goto	l4020
  4719     1C8B                     u6140:
  4720     1C8B                     l4026:
  4721     1C8B  0874               	movf	___awmod@divisor+1,w
  4722     1C8C  0276               	subwf	___awmod@dividend+1,w
  4723     1C8D  1D03               	skipz
  4724     1C8E  2C91               	goto	u6155
  4725     1C8F  0873               	movf	___awmod@divisor,w
  4726     1C90  0275               	subwf	___awmod@dividend,w
  4727     1C91                     u6155:
  4728     1C91  1C03               	skipc
  4729     1C92  2C94               	goto	u6151
  4730     1C93  2C95               	goto	u6150
  4731     1C94                     u6151:
  4732     1C94  2C9B               	goto	l4030
  4733     1C95                     u6150:
  4734     1C95                     l4028:
  4735     1C95  0873               	movf	___awmod@divisor,w
  4736     1C96  02F5               	subwf	___awmod@dividend,f
  4737     1C97  0874               	movf	___awmod@divisor+1,w
  4738     1C98  1C03               	skipc
  4739     1C99  03F6               	decf	___awmod@dividend+1,f
  4740     1C9A  02F6               	subwf	___awmod@dividend+1,f
  4741     1C9B                     l4030:
  4742     1C9B  3001               	movlw	1
  4743     1C9C                     u6165:
  4744     1C9C  1003               	clrc
  4745     1C9D  0CF4               	rrf	___awmod@divisor+1,f
  4746     1C9E  0CF3               	rrf	___awmod@divisor,f
  4747     1C9F  3EFF               	addlw	-1
  4748     1CA0  1D03               	skipz
  4749     1CA1  2C9C               	goto	u6165
  4750     1CA2                     l4032:
  4751     1CA2  3001               	movlw	1
  4752     1CA3  02A0               	subwf	___awmod@counter,f
  4753     1CA4  1D03               	btfss	3,2
  4754     1CA5  2CA7               	goto	u6171
  4755     1CA6  2CA8               	goto	u6170
  4756     1CA7                     u6171:
  4757     1CA7  2C8B               	goto	l4026
  4758     1CA8                     u6170:
  4759     1CA8                     l4034:
  4760     1CA8  0821               	movf	___awmod@sign,w
  4761     1CA9  1903               	btfsc	3,2
  4762     1CAA  2CAC               	goto	u6181
  4763     1CAB  2CAD               	goto	u6180
  4764     1CAC                     u6181:
  4765     1CAC  2CB2               	goto	l4038
  4766     1CAD                     u6180:
  4767     1CAD                     l4036:
  4768     1CAD  09F5               	comf	___awmod@dividend,f
  4769     1CAE  09F6               	comf	___awmod@dividend+1,f
  4770     1CAF  0AF5               	incf	___awmod@dividend,f
  4771     1CB0  1903               	skipnz
  4772     1CB1  0AF6               	incf	___awmod@dividend+1,f
  4773     1CB2                     l4038:
  4774     1CB2  0876               	movf	___awmod@dividend+1,w
  4775     1CB3  00F4               	movwf	?___awmod+1
  4776     1CB4  0875               	movf	___awmod@dividend,w
  4777     1CB5  00F3               	movwf	?___awmod
  4778     1CB6                     l609:
  4779     1CB6  0008               	return
  4780     1CB7                     __end_of___awmod:
  4781                           
  4782                           	psect	text4
  4783     1D84                     __ptext4:	
  4784 ;; *************** function ___awdiv *****************
  4785 ;; Defined at:
  4786 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  4787 ;; Parameters:    Size  Location     Type
  4788 ;;  divisor         2    2[BANK0 ] int 
  4789 ;;  dividend        2    4[BANK0 ] int 
  4790 ;; Auto vars:     Size  Location     Type
  4791 ;;  quotient        2    8[BANK0 ] int 
  4792 ;;  sign            1    7[BANK0 ] unsigned char 
  4793 ;;  counter         1    6[BANK0 ] unsigned char 
  4794 ;; Return value:  Size  Location     Type
  4795 ;;                  2    2[BANK0 ] int 
  4796 ;; Registers used:
  4797 ;;		wreg, status,2, status,0, btemp+1
  4798 ;; Tracked objects:
  4799 ;;		On entry : 0/0
  4800 ;;		On exit  : 0/0
  4801 ;;		Unchanged: 0/0
  4802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4803 ;;      Params:         0       4       0       0       0
  4804 ;;      Locals:         0       4       0       0       0
  4805 ;;      Temps:          0       0       0       0       0
  4806 ;;      Totals:         0       8       0       0       0
  4807 ;;Total ram usage:        8 bytes
  4808 ;; Hardware stack levels used: 1
  4809 ;; Hardware stack levels required when called: 1
  4810 ;; This function calls:
  4811 ;;		Nothing
  4812 ;; This function is called by:
  4813 ;;		_scale
  4814 ;;		_sprintf
  4815 ;; This function uses a non-reentrant model
  4816 ;;
  4817                           
  4818     1D84                     ___awdiv:	
  4819                           ;psect for function ___awdiv
  4820                           
  4821     1D84                     l2592:	
  4822                           ;incstack = 0
  4823                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  4824                           
  4825     1D84  1283               	bcf	3,5	;RP0=0, select bank0
  4826     1D85  1303               	bcf	3,6	;RP1=0, select bank0
  4827     1D86  01A7               	clrf	___awdiv@sign
  4828     1D87                     l2594:
  4829     1D87  1FA3               	btfss	___awdiv@divisor+1,7
  4830     1D88  2D8A               	goto	u3171
  4831     1D89  2D8B               	goto	u3170
  4832     1D8A                     u3171:
  4833     1D8A  2D92               	goto	l2600
  4834     1D8B                     u3170:
  4835     1D8B                     l2596:
  4836     1D8B  09A2               	comf	___awdiv@divisor,f
  4837     1D8C  09A3               	comf	___awdiv@divisor+1,f
  4838     1D8D  0AA2               	incf	___awdiv@divisor,f
  4839     1D8E  1903               	skipnz
  4840     1D8F  0AA3               	incf	___awdiv@divisor+1,f
  4841     1D90                     l2598:
  4842     1D90  01A7               	clrf	___awdiv@sign
  4843     1D91  0AA7               	incf	___awdiv@sign,f
  4844     1D92                     l2600:
  4845     1D92  1FA5               	btfss	___awdiv@dividend+1,7
  4846     1D93  2D95               	goto	u3181
  4847     1D94  2D96               	goto	u3180
  4848     1D95                     u3181:
  4849     1D95  2D9F               	goto	l2606
  4850     1D96                     u3180:
  4851     1D96                     l2602:
  4852     1D96  09A4               	comf	___awdiv@dividend,f
  4853     1D97  09A5               	comf	___awdiv@dividend+1,f
  4854     1D98  0AA4               	incf	___awdiv@dividend,f
  4855     1D99  1903               	skipnz
  4856     1D9A  0AA5               	incf	___awdiv@dividend+1,f
  4857     1D9B                     l2604:
  4858     1D9B  3001               	movlw	1
  4859     1D9C  00FF               	movwf	btemp+1
  4860     1D9D  087F               	movf	btemp+1,w
  4861     1D9E  06A7               	xorwf	___awdiv@sign,f
  4862     1D9F                     l2606:
  4863     1D9F  01A8               	clrf	___awdiv@quotient
  4864     1DA0  01A9               	clrf	___awdiv@quotient+1
  4865     1DA1                     l2608:
  4866     1DA1  0822               	movf	___awdiv@divisor,w
  4867     1DA2  0423               	iorwf	___awdiv@divisor+1,w
  4868     1DA3  1903               	btfsc	3,2
  4869     1DA4  2DA6               	goto	u3191
  4870     1DA5  2DA7               	goto	u3190
  4871     1DA6                     u3191:
  4872     1DA6  2DDE               	goto	l2628
  4873     1DA7                     u3190:
  4874     1DA7                     l2610:
  4875     1DA7  01A6               	clrf	___awdiv@counter
  4876     1DA8  0AA6               	incf	___awdiv@counter,f
  4877     1DA9  2DB5               	goto	l2616
  4878     1DAA                     l2612:
  4879     1DAA  3001               	movlw	1
  4880     1DAB                     u3205:
  4881     1DAB  1003               	clrc
  4882     1DAC  0DA2               	rlf	___awdiv@divisor,f
  4883     1DAD  0DA3               	rlf	___awdiv@divisor+1,f
  4884     1DAE  3EFF               	addlw	-1
  4885     1DAF  1D03               	skipz
  4886     1DB0  2DAB               	goto	u3205
  4887     1DB1                     l2614:
  4888     1DB1  3001               	movlw	1
  4889     1DB2  00FF               	movwf	btemp+1
  4890     1DB3  087F               	movf	btemp+1,w
  4891     1DB4  07A6               	addwf	___awdiv@counter,f
  4892     1DB5                     l2616:
  4893     1DB5  1FA3               	btfss	___awdiv@divisor+1,7
  4894     1DB6  2DB8               	goto	u3211
  4895     1DB7  2DB9               	goto	u3210
  4896     1DB8                     u3211:
  4897     1DB8  2DAA               	goto	l2612
  4898     1DB9                     u3210:
  4899     1DB9                     l2618:
  4900     1DB9  3001               	movlw	1
  4901     1DBA                     u3225:
  4902     1DBA  1003               	clrc
  4903     1DBB  0DA8               	rlf	___awdiv@quotient,f
  4904     1DBC  0DA9               	rlf	___awdiv@quotient+1,f
  4905     1DBD  3EFF               	addlw	-1
  4906     1DBE  1D03               	skipz
  4907     1DBF  2DBA               	goto	u3225
  4908     1DC0  0823               	movf	___awdiv@divisor+1,w
  4909     1DC1  0225               	subwf	___awdiv@dividend+1,w
  4910     1DC2  1D03               	skipz
  4911     1DC3  2DC6               	goto	u3235
  4912     1DC4  0822               	movf	___awdiv@divisor,w
  4913     1DC5  0224               	subwf	___awdiv@dividend,w
  4914     1DC6                     u3235:
  4915     1DC6  1C03               	skipc
  4916     1DC7  2DC9               	goto	u3231
  4917     1DC8  2DCA               	goto	u3230
  4918     1DC9                     u3231:
  4919     1DC9  2DD1               	goto	l2624
  4920     1DCA                     u3230:
  4921     1DCA                     l2620:
  4922     1DCA  0822               	movf	___awdiv@divisor,w
  4923     1DCB  02A4               	subwf	___awdiv@dividend,f
  4924     1DCC  0823               	movf	___awdiv@divisor+1,w
  4925     1DCD  1C03               	skipc
  4926     1DCE  03A5               	decf	___awdiv@dividend+1,f
  4927     1DCF  02A5               	subwf	___awdiv@dividend+1,f
  4928     1DD0                     l2622:
  4929     1DD0  1428               	bsf	___awdiv@quotient,0
  4930     1DD1                     l2624:
  4931     1DD1  3001               	movlw	1
  4932     1DD2                     u3245:
  4933     1DD2  1003               	clrc
  4934     1DD3  0CA3               	rrf	___awdiv@divisor+1,f
  4935     1DD4  0CA2               	rrf	___awdiv@divisor,f
  4936     1DD5  3EFF               	addlw	-1
  4937     1DD6  1D03               	skipz
  4938     1DD7  2DD2               	goto	u3245
  4939     1DD8                     l2626:
  4940     1DD8  3001               	movlw	1
  4941     1DD9  02A6               	subwf	___awdiv@counter,f
  4942     1DDA  1D03               	btfss	3,2
  4943     1DDB  2DDD               	goto	u3251
  4944     1DDC  2DDE               	goto	u3250
  4945     1DDD                     u3251:
  4946     1DDD  2DB9               	goto	l2618
  4947     1DDE                     u3250:
  4948     1DDE                     l2628:
  4949     1DDE  0827               	movf	___awdiv@sign,w
  4950     1DDF  1903               	btfsc	3,2
  4951     1DE0  2DE2               	goto	u3261
  4952     1DE1  2DE3               	goto	u3260
  4953     1DE2                     u3261:
  4954     1DE2  2DE8               	goto	l2632
  4955     1DE3                     u3260:
  4956     1DE3                     l2630:
  4957     1DE3  09A8               	comf	___awdiv@quotient,f
  4958     1DE4  09A9               	comf	___awdiv@quotient+1,f
  4959     1DE5  0AA8               	incf	___awdiv@quotient,f
  4960     1DE6  1903               	skipnz
  4961     1DE7  0AA9               	incf	___awdiv@quotient+1,f
  4962     1DE8                     l2632:
  4963     1DE8  0829               	movf	___awdiv@quotient+1,w
  4964     1DE9  00A3               	movwf	?___awdiv+1
  4965     1DEA  0828               	movf	___awdiv@quotient,w
  4966     1DEB  00A2               	movwf	?___awdiv
  4967     1DEC                     l596:
  4968     1DEC  0008               	return
  4969     1DED                     __end_of___awdiv:
  4970                           
  4971                           	psect	text5
  4972     1A10                     __ptext5:	
  4973 ;; *************** function _isdigit *****************
  4974 ;; Defined at:
  4975 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  4976 ;; Parameters:    Size  Location     Type
  4977 ;;  c               1    wreg     unsigned char 
  4978 ;; Auto vars:     Size  Location     Type
  4979 ;;  c               1    4[COMMON] unsigned char 
  4980 ;; Return value:  Size  Location     Type
  4981 ;;		None               void
  4982 ;; Registers used:
  4983 ;;		wreg, status,2, status,0
  4984 ;; Tracked objects:
  4985 ;;		On entry : 0/0
  4986 ;;		On exit  : 0/0
  4987 ;;		Unchanged: 0/0
  4988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4989 ;;      Params:         0       0       0       0       0
  4990 ;;      Locals:         2       0       0       0       0
  4991 ;;      Temps:          0       0       0       0       0
  4992 ;;      Totals:         2       0       0       0       0
  4993 ;;Total ram usage:        2 bytes
  4994 ;; Hardware stack levels used: 1
  4995 ;; Hardware stack levels required when called: 1
  4996 ;; This function calls:
  4997 ;;		Nothing
  4998 ;; This function is called by:
  4999 ;;		_sprintf
  5000 ;; This function uses a non-reentrant model
  5001 ;;
  5002                           
  5003     1A10                     _isdigit:	
  5004                           ;psect for function _isdigit
  5005                           
  5006                           
  5007                           ;incstack = 0
  5008                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5009                           ;isdigit@c stored from wreg
  5010     1A10  00F4               	movwf	isdigit@c
  5011     1A11                     l3142:
  5012     1A11  01F3               	clrf	_isdigit$1123
  5013     1A12                     l3144:
  5014     1A12  303A               	movlw	58
  5015     1A13  0274               	subwf	isdigit@c,w
  5016     1A14  1803               	skipnc
  5017     1A15  2A17               	goto	u4571
  5018     1A16  2A18               	goto	u4570
  5019     1A17                     u4571:
  5020     1A17  2A20               	goto	l3150
  5021     1A18                     u4570:
  5022     1A18                     l3146:
  5023     1A18  3030               	movlw	48
  5024     1A19  0274               	subwf	isdigit@c,w
  5025     1A1A  1C03               	skipc
  5026     1A1B  2A1D               	goto	u4581
  5027     1A1C  2A1E               	goto	u4580
  5028     1A1D                     u4581:
  5029     1A1D  2A20               	goto	l3150
  5030     1A1E                     u4580:
  5031     1A1E                     l3148:
  5032     1A1E  01F3               	clrf	_isdigit$1123
  5033     1A1F  0AF3               	incf	_isdigit$1123,f
  5034     1A20                     l3150:
  5035     1A20  0C73               	rrf	_isdigit$1123,w
  5036     1A21                     l930:
  5037     1A21  0008               	return
  5038     1A22                     __end_of_isdigit:
  5039                           
  5040                           	psect	text6
  5041     139B                     __ptext6:	
  5042 ;; *************** function _fround *****************
  5043 ;; Defined at:
  5044 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  5045 ;; Parameters:    Size  Location     Type
  5046 ;;  prec            1    wreg     unsigned char 
  5047 ;; Auto vars:     Size  Location     Type
  5048 ;;  prec            1   55[BANK0 ] unsigned char 
  5049 ;; Return value:  Size  Location     Type
  5050 ;;                  4   36[BANK0 ] unsigned char 
  5051 ;; Registers used:
  5052 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5053 ;; Tracked objects:
  5054 ;;		On entry : 0/0
  5055 ;;		On exit  : 0/0
  5056 ;;		Unchanged: 0/0
  5057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5058 ;;      Params:         0       4       0       0       0
  5059 ;;      Locals:         0       9       0       0       0
  5060 ;;      Temps:          0       7       0       0       0
  5061 ;;      Totals:         0      20       0       0       0
  5062 ;;Total ram usage:       20 bytes
  5063 ;; Hardware stack levels used: 1
  5064 ;; Hardware stack levels required when called: 3
  5065 ;; This function calls:
  5066 ;;		___flmul
  5067 ;;		___lwdiv
  5068 ;;		___lwmod
  5069 ;; This function is called by:
  5070 ;;		_sprintf
  5071 ;; This function uses a non-reentrant model
  5072 ;;
  5073                           
  5074     139B                     _fround:	
  5075                           ;psect for function _fround
  5076                           
  5077                           
  5078                           ;incstack = 0
  5079                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5080                           ;fround@prec stored from wreg
  5081     139B  1283               	bcf	3,5	;RP0=0, select bank0
  5082     139C  1303               	bcf	3,6	;RP1=0, select bank0
  5083     139D  00D7               	movwf	fround@prec
  5084     139E                     l4088:
  5085                           
  5086                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5087     139E  306E               	movlw	110
  5088     139F  0257               	subwf	fround@prec,w
  5089     13A0  1C03               	skipc
  5090     13A1  2BA3               	goto	u6261
  5091     13A2  2BA4               	goto	u6260
  5092     13A3                     u6261:
  5093     13A3  2CB3               	goto	l4096
  5094     13A4                     u6260:
  5095     13A4                     l4090:
  5096                           
  5097                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5098     13A4  303F               	movlw	63
  5099     13A5  00AD               	movwf	___flmul@b+3
  5100     13A6  3000               	movlw	0
  5101     13A7  00AC               	movwf	___flmul@b+2
  5102     13A8  3000               	movlw	0
  5103     13A9  00AB               	movwf	___flmul@b+1
  5104     13AA  3000               	movlw	0
  5105     13AB  00AA               	movwf	___flmul@b
  5106     13AC  3064               	movlw	100
  5107     13AD  00A0               	movwf	___lwdiv@divisor
  5108     13AE  3000               	movlw	0
  5109     13AF  00A1               	movwf	___lwdiv@divisor+1
  5110     13B0  0857               	movf	fround@prec,w
  5111     13B1  00C8               	movwf	??_fround
  5112     13B2  01C9               	clrf	??_fround+1
  5113     13B3  0848               	movf	??_fround,w
  5114     13B4  00A2               	movwf	___lwdiv@dividend
  5115     13B5  0849               	movf	??_fround+1,w
  5116     13B6  00A3               	movwf	___lwdiv@dividend+1
  5117     13B7  160A  158A  2320  160A  118A  	fcall	___lwdiv
  5118     13BC  1283               	bcf	3,5	;RP0=0, select bank0
  5119     13BD  1303               	bcf	3,6	;RP1=0, select bank0
  5120     13BE  0820               	movf	?___lwdiv,w
  5121     13BF  00CA               	movwf	??_fround+2
  5122     13C0  3001               	movlw	1
  5123     13C1                     u6275:
  5124     13C1  1003               	clrc
  5125     13C2  0DCA               	rlf	??_fround+2,f
  5126     13C3  3EFF               	addlw	-1
  5127     13C4  1D03               	skipz
  5128     13C5  2BC1               	goto	u6275
  5129     13C6  1003               	clrc
  5130     13C7  0D4A               	rlf	??_fround+2,w
  5131     13C8  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5132     13C9  0084               	movwf	4
  5133     13CA  160A  158A  200A  160A  118A  	fcall	stringdir
  5134     13CF  00CB               	movwf	??_fround+3
  5135     13D0  160A  158A  200A  160A  118A  	fcall	stringdir
  5136     13D5  00CC               	movwf	??_fround+4
  5137     13D6  160A  158A  200A  160A  118A  	fcall	stringdir
  5138     13DB  00CD               	movwf	??_fround+5
  5139     13DC  160A  158A  200A  160A  118A  	fcall	stringdir
  5140     13E1  00CE               	movwf	??_fround+6
  5141     13E2  084E               	movf	??_fround+6,w
  5142     13E3  00B1               	movwf	___flmul@a+3
  5143     13E4  084D               	movf	??_fround+5,w
  5144     13E5  00B0               	movwf	___flmul@a+2
  5145     13E6  084C               	movf	??_fround+4,w
  5146     13E7  00AF               	movwf	___flmul@a+1
  5147     13E8  084B               	movf	??_fround+3,w
  5148     13E9  00AE               	movwf	___flmul@a
  5149     13EA  120A  158A  2158  160A  118A  	fcall	___flmul
  5150     13EF  1283               	bcf	3,5	;RP0=0, select bank0
  5151     13F0  1303               	bcf	3,6	;RP1=0, select bank0
  5152     13F1  082D               	movf	?___flmul+3,w
  5153     13F2  00D6               	movwf	_fround$1363+3
  5154     13F3  082C               	movf	?___flmul+2,w
  5155     13F4  00D5               	movwf	_fround$1363+2
  5156     13F5  082B               	movf	?___flmul+1,w
  5157     13F6  00D4               	movwf	_fround$1363+1
  5158     13F7  082A               	movf	?___flmul,w
  5159     13F8  00D3               	movwf	_fround$1363
  5160                           
  5161                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5162     13F9  300A               	movlw	10
  5163     13FA  00A0               	movwf	___lwdiv@divisor
  5164     13FB  3000               	movlw	0
  5165     13FC  00A1               	movwf	___lwdiv@divisor+1
  5166     13FD  0857               	movf	fround@prec,w
  5167     13FE  00C8               	movwf	??_fround
  5168     13FF  01C9               	clrf	??_fround+1
  5169     1400  0848               	movf	??_fround,w
  5170     1401  00F5               	movwf	___lwmod@dividend
  5171     1402  0849               	movf	??_fround+1,w
  5172     1403  00F6               	movwf	___lwmod@dividend+1
  5173     1404  3064               	movlw	100
  5174     1405  00F3               	movwf	___lwmod@divisor
  5175     1406  3000               	movlw	0
  5176     1407  00F4               	movwf	___lwmod@divisor+1
  5177     1408  120A  158A  2003  160A  118A  	fcall	___lwmod
  5178     140D  0874               	movf	?___lwmod+1,w
  5179     140E  1283               	bcf	3,5	;RP0=0, select bank0
  5180     140F  1303               	bcf	3,6	;RP1=0, select bank0
  5181     1410  00A3               	movwf	___lwdiv@dividend+1
  5182     1411  0873               	movf	?___lwmod,w
  5183     1412  00A2               	movwf	___lwdiv@dividend
  5184     1413  160A  158A  2320  160A  118A  	fcall	___lwdiv
  5185     1418  1283               	bcf	3,5	;RP0=0, select bank0
  5186     1419  1303               	bcf	3,6	;RP1=0, select bank0
  5187     141A  0820               	movf	?___lwdiv,w
  5188     141B  00CA               	movwf	??_fround+2
  5189     141C  3001               	movlw	1
  5190     141D                     u6285:
  5191     141D  1003               	clrc
  5192     141E  0DCA               	rlf	??_fround+2,f
  5193     141F  3EFF               	addlw	-1
  5194     1420  1D03               	skipz
  5195     1421  2C1D               	goto	u6285
  5196     1422  1003               	clrc
  5197     1423  0D4A               	rlf	??_fround+2,w
  5198     1424  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5199     1425  0084               	movwf	4
  5200     1426  160A  158A  200A  160A  118A  	fcall	stringdir
  5201     142B  00CB               	movwf	??_fround+3
  5202     142C  160A  158A  200A  160A  118A  	fcall	stringdir
  5203     1431  00CC               	movwf	??_fround+4
  5204     1432  160A  158A  200A  160A  118A  	fcall	stringdir
  5205     1437  00CD               	movwf	??_fround+5
  5206     1438  160A  158A  200A  160A  118A  	fcall	stringdir
  5207     143D  00CE               	movwf	??_fround+6
  5208     143E  084E               	movf	??_fround+6,w
  5209     143F  00AD               	movwf	___flmul@b+3
  5210     1440  084D               	movf	??_fround+5,w
  5211     1441  00AC               	movwf	___flmul@b+2
  5212     1442  084C               	movf	??_fround+4,w
  5213     1443  00AB               	movwf	___flmul@b+1
  5214     1444  084B               	movf	??_fround+3,w
  5215     1445  00AA               	movwf	___flmul@b
  5216     1446  0856               	movf	_fround$1363+3,w
  5217     1447  00B1               	movwf	___flmul@a+3
  5218     1448  0855               	movf	_fround$1363+2,w
  5219     1449  00B0               	movwf	___flmul@a+2
  5220     144A  0854               	movf	_fround$1363+1,w
  5221     144B  00AF               	movwf	___flmul@a+1
  5222     144C  0853               	movf	_fround$1363,w
  5223     144D  00AE               	movwf	___flmul@a
  5224     144E  120A  158A  2158  160A  118A  	fcall	___flmul
  5225     1453  1283               	bcf	3,5	;RP0=0, select bank0
  5226     1454  1303               	bcf	3,6	;RP1=0, select bank0
  5227     1455  082D               	movf	?___flmul+3,w
  5228     1456  00D2               	movwf	_fround$1364+3
  5229     1457  082C               	movf	?___flmul+2,w
  5230     1458  00D1               	movwf	_fround$1364+2
  5231     1459  082B               	movf	?___flmul+1,w
  5232     145A  00D0               	movwf	_fround$1364+1
  5233     145B  082A               	movf	?___flmul,w
  5234     145C  00CF               	movwf	_fround$1364
  5235                           
  5236                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5237     145D  300A               	movlw	10
  5238     145E  00F3               	movwf	___lwmod@divisor
  5239     145F  3000               	movlw	0
  5240     1460  00F4               	movwf	___lwmod@divisor+1
  5241     1461  0857               	movf	fround@prec,w
  5242     1462  00C8               	movwf	??_fround
  5243     1463  01C9               	clrf	??_fround+1
  5244     1464  0848               	movf	??_fround,w
  5245     1465  00F5               	movwf	___lwmod@dividend
  5246     1466  0849               	movf	??_fround+1,w
  5247     1467  00F6               	movwf	___lwmod@dividend+1
  5248     1468  120A  158A  2003  160A  118A  	fcall	___lwmod
  5249     146D  0873               	movf	?___lwmod,w
  5250     146E  1283               	bcf	3,5	;RP0=0, select bank0
  5251     146F  1303               	bcf	3,6	;RP1=0, select bank0
  5252     1470  00CA               	movwf	??_fround+2
  5253     1471  3001               	movlw	1
  5254     1472                     u6295:
  5255     1472  1003               	clrc
  5256     1473  0DCA               	rlf	??_fround+2,f
  5257     1474  3EFF               	addlw	-1
  5258     1475  1D03               	skipz
  5259     1476  2C72               	goto	u6295
  5260     1477  1003               	clrc
  5261     1478  0D4A               	rlf	??_fround+2,w
  5262     1479  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5263     147A  0084               	movwf	4
  5264     147B  160A  158A  200A  160A  118A  	fcall	stringdir
  5265     1480  00CB               	movwf	??_fround+3
  5266     1481  160A  158A  200A  160A  118A  	fcall	stringdir
  5267     1486  00CC               	movwf	??_fround+4
  5268     1487  160A  158A  200A  160A  118A  	fcall	stringdir
  5269     148C  00CD               	movwf	??_fround+5
  5270     148D  160A  158A  200A  160A  118A  	fcall	stringdir
  5271     1492  00CE               	movwf	??_fround+6
  5272     1493  084E               	movf	??_fround+6,w
  5273     1494  00AD               	movwf	___flmul@b+3
  5274     1495  084D               	movf	??_fround+5,w
  5275     1496  00AC               	movwf	___flmul@b+2
  5276     1497  084C               	movf	??_fround+4,w
  5277     1498  00AB               	movwf	___flmul@b+1
  5278     1499  084B               	movf	??_fround+3,w
  5279     149A  00AA               	movwf	___flmul@b
  5280     149B  0852               	movf	_fround$1364+3,w
  5281     149C  00B1               	movwf	___flmul@a+3
  5282     149D  0851               	movf	_fround$1364+2,w
  5283     149E  00B0               	movwf	___flmul@a+2
  5284     149F  0850               	movf	_fround$1364+1,w
  5285     14A0  00AF               	movwf	___flmul@a+1
  5286     14A1  084F               	movf	_fround$1364,w
  5287     14A2  00AE               	movwf	___flmul@a
  5288     14A3  120A  158A  2158  160A  118A  	fcall	___flmul
  5289     14A8  1283               	bcf	3,5	;RP0=0, select bank0
  5290     14A9  1303               	bcf	3,6	;RP1=0, select bank0
  5291     14AA  082D               	movf	?___flmul+3,w
  5292     14AB  00C7               	movwf	?_fround+3
  5293     14AC  082C               	movf	?___flmul+2,w
  5294     14AD  00C6               	movwf	?_fround+2
  5295     14AE  082B               	movf	?___flmul+1,w
  5296     14AF  00C5               	movwf	?_fround+1
  5297     14B0  082A               	movf	?___flmul,w
  5298     14B1  00C4               	movwf	?_fround
  5299     14B2  2DA7               	goto	l366
  5300     14B3                     l4096:
  5301     14B3  300B               	movlw	11
  5302     14B4  0257               	subwf	fround@prec,w
  5303     14B5  1C03               	skipc
  5304     14B6  2CB8               	goto	u6301
  5305     14B7  2CB9               	goto	u6300
  5306     14B8                     u6301:
  5307     14B8  2D64               	goto	l4102
  5308     14B9                     u6300:
  5309     14B9                     l4098:
  5310                           
  5311                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5312     14B9  303F               	movlw	63
  5313     14BA  00AD               	movwf	___flmul@b+3
  5314     14BB  3000               	movlw	0
  5315     14BC  00AC               	movwf	___flmul@b+2
  5316     14BD  3000               	movlw	0
  5317     14BE  00AB               	movwf	___flmul@b+1
  5318     14BF  3000               	movlw	0
  5319     14C0  00AA               	movwf	___flmul@b
  5320     14C1  300A               	movlw	10
  5321     14C2  00A0               	movwf	___lwdiv@divisor
  5322     14C3  3000               	movlw	0
  5323     14C4  00A1               	movwf	___lwdiv@divisor+1
  5324     14C5  0857               	movf	fround@prec,w
  5325     14C6  00C8               	movwf	??_fround
  5326     14C7  01C9               	clrf	??_fround+1
  5327     14C8  0848               	movf	??_fround,w
  5328     14C9  00A2               	movwf	___lwdiv@dividend
  5329     14CA  0849               	movf	??_fround+1,w
  5330     14CB  00A3               	movwf	___lwdiv@dividend+1
  5331     14CC  160A  158A  2320  160A  118A  	fcall	___lwdiv
  5332     14D1  1283               	bcf	3,5	;RP0=0, select bank0
  5333     14D2  1303               	bcf	3,6	;RP1=0, select bank0
  5334     14D3  0820               	movf	?___lwdiv,w
  5335     14D4  00CA               	movwf	??_fround+2
  5336     14D5  3001               	movlw	1
  5337     14D6                     u6315:
  5338     14D6  1003               	clrc
  5339     14D7  0DCA               	rlf	??_fround+2,f
  5340     14D8  3EFF               	addlw	-1
  5341     14D9  1D03               	skipz
  5342     14DA  2CD6               	goto	u6315
  5343     14DB  1003               	clrc
  5344     14DC  0D4A               	rlf	??_fround+2,w
  5345     14DD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5346     14DE  0084               	movwf	4
  5347     14DF  160A  158A  200A  160A  118A  	fcall	stringdir
  5348     14E4  00CB               	movwf	??_fround+3
  5349     14E5  160A  158A  200A  160A  118A  	fcall	stringdir
  5350     14EA  00CC               	movwf	??_fround+4
  5351     14EB  160A  158A  200A  160A  118A  	fcall	stringdir
  5352     14F0  00CD               	movwf	??_fround+5
  5353     14F1  160A  158A  200A  160A  118A  	fcall	stringdir
  5354     14F6  00CE               	movwf	??_fround+6
  5355     14F7  084E               	movf	??_fround+6,w
  5356     14F8  00B1               	movwf	___flmul@a+3
  5357     14F9  084D               	movf	??_fround+5,w
  5358     14FA  00B0               	movwf	___flmul@a+2
  5359     14FB  084C               	movf	??_fround+4,w
  5360     14FC  00AF               	movwf	___flmul@a+1
  5361     14FD  084B               	movf	??_fround+3,w
  5362     14FE  00AE               	movwf	___flmul@a
  5363     14FF  120A  158A  2158  160A  118A  	fcall	___flmul
  5364     1504  1283               	bcf	3,5	;RP0=0, select bank0
  5365     1505  1303               	bcf	3,6	;RP1=0, select bank0
  5366     1506  082D               	movf	?___flmul+3,w
  5367     1507  00D6               	movwf	_fround$1363+3
  5368     1508  082C               	movf	?___flmul+2,w
  5369     1509  00D5               	movwf	_fround$1363+2
  5370     150A  082B               	movf	?___flmul+1,w
  5371     150B  00D4               	movwf	_fround$1363+1
  5372     150C  082A               	movf	?___flmul,w
  5373     150D  00D3               	movwf	_fround$1363
  5374                           
  5375                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5376     150E  300A               	movlw	10
  5377     150F  00F3               	movwf	___lwmod@divisor
  5378     1510  3000               	movlw	0
  5379     1511  00F4               	movwf	___lwmod@divisor+1
  5380     1512  0857               	movf	fround@prec,w
  5381     1513  00C8               	movwf	??_fround
  5382     1514  01C9               	clrf	??_fround+1
  5383     1515  0848               	movf	??_fround,w
  5384     1516  00F5               	movwf	___lwmod@dividend
  5385     1517  0849               	movf	??_fround+1,w
  5386     1518  00F6               	movwf	___lwmod@dividend+1
  5387     1519  120A  158A  2003  160A  118A  	fcall	___lwmod
  5388     151E  0873               	movf	?___lwmod,w
  5389     151F  1283               	bcf	3,5	;RP0=0, select bank0
  5390     1520  1303               	bcf	3,6	;RP1=0, select bank0
  5391     1521  00CA               	movwf	??_fround+2
  5392     1522  3001               	movlw	1
  5393     1523                     u6325:
  5394     1523  1003               	clrc
  5395     1524  0DCA               	rlf	??_fround+2,f
  5396     1525  3EFF               	addlw	-1
  5397     1526  1D03               	skipz
  5398     1527  2D23               	goto	u6325
  5399     1528  1003               	clrc
  5400     1529  0D4A               	rlf	??_fround+2,w
  5401     152A  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5402     152B  0084               	movwf	4
  5403     152C  160A  158A  200A  160A  118A  	fcall	stringdir
  5404     1531  00CB               	movwf	??_fround+3
  5405     1532  160A  158A  200A  160A  118A  	fcall	stringdir
  5406     1537  00CC               	movwf	??_fround+4
  5407     1538  160A  158A  200A  160A  118A  	fcall	stringdir
  5408     153D  00CD               	movwf	??_fround+5
  5409     153E  160A  158A  200A  160A  118A  	fcall	stringdir
  5410     1543  00CE               	movwf	??_fround+6
  5411     1544  084E               	movf	??_fround+6,w
  5412     1545  00AD               	movwf	___flmul@b+3
  5413     1546  084D               	movf	??_fround+5,w
  5414     1547  00AC               	movwf	___flmul@b+2
  5415     1548  084C               	movf	??_fround+4,w
  5416     1549  00AB               	movwf	___flmul@b+1
  5417     154A  084B               	movf	??_fround+3,w
  5418     154B  00AA               	movwf	___flmul@b
  5419     154C  0856               	movf	_fround$1363+3,w
  5420     154D  00B1               	movwf	___flmul@a+3
  5421     154E  0855               	movf	_fround$1363+2,w
  5422     154F  00B0               	movwf	___flmul@a+2
  5423     1550  0854               	movf	_fround$1363+1,w
  5424     1551  00AF               	movwf	___flmul@a+1
  5425     1552  0853               	movf	_fround$1363,w
  5426     1553  00AE               	movwf	___flmul@a
  5427     1554  120A  158A  2158  160A  118A  	fcall	___flmul
  5428     1559  1283               	bcf	3,5	;RP0=0, select bank0
  5429     155A  1303               	bcf	3,6	;RP1=0, select bank0
  5430     155B  082D               	movf	?___flmul+3,w
  5431     155C  00C7               	movwf	?_fround+3
  5432     155D  082C               	movf	?___flmul+2,w
  5433     155E  00C6               	movwf	?_fround+2
  5434     155F  082B               	movf	?___flmul+1,w
  5435     1560  00C5               	movwf	?_fround+1
  5436     1561  082A               	movf	?___flmul,w
  5437     1562  00C4               	movwf	?_fround
  5438     1563  2DA7               	goto	l366
  5439     1564                     l4102:
  5440                           
  5441                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5442     1564  303F               	movlw	63
  5443     1565  00AD               	movwf	___flmul@b+3
  5444     1566  3000               	movlw	0
  5445     1567  00AC               	movwf	___flmul@b+2
  5446     1568  3000               	movlw	0
  5447     1569  00AB               	movwf	___flmul@b+1
  5448     156A  3000               	movlw	0
  5449     156B  00AA               	movwf	___flmul@b
  5450     156C  0857               	movf	fround@prec,w
  5451     156D  00C8               	movwf	??_fround
  5452     156E  3001               	movlw	1
  5453     156F                     u6335:
  5454     156F  1003               	clrc
  5455     1570  0DC8               	rlf	??_fround,f
  5456     1571  3EFF               	addlw	-1
  5457     1572  1D03               	skipz
  5458     1573  2D6F               	goto	u6335
  5459     1574  1003               	clrc
  5460     1575  0D48               	rlf	??_fround,w
  5461     1576  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5462     1577  0084               	movwf	4
  5463     1578  160A  158A  200A  160A  118A  	fcall	stringdir
  5464     157D  00C9               	movwf	??_fround+1
  5465     157E  160A  158A  200A  160A  118A  	fcall	stringdir
  5466     1583  00CA               	movwf	??_fround+2
  5467     1584  160A  158A  200A  160A  118A  	fcall	stringdir
  5468     1589  00CB               	movwf	??_fround+3
  5469     158A  160A  158A  200A  160A  118A  	fcall	stringdir
  5470     158F  00CC               	movwf	??_fround+4
  5471     1590  084C               	movf	??_fround+4,w
  5472     1591  00B1               	movwf	___flmul@a+3
  5473     1592  084B               	movf	??_fround+3,w
  5474     1593  00B0               	movwf	___flmul@a+2
  5475     1594  084A               	movf	??_fround+2,w
  5476     1595  00AF               	movwf	___flmul@a+1
  5477     1596  0849               	movf	??_fround+1,w
  5478     1597  00AE               	movwf	___flmul@a
  5479     1598  120A  158A  2158  160A  118A  	fcall	___flmul
  5480     159D  1283               	bcf	3,5	;RP0=0, select bank0
  5481     159E  1303               	bcf	3,6	;RP1=0, select bank0
  5482     159F  082D               	movf	?___flmul+3,w
  5483     15A0  00C7               	movwf	?_fround+3
  5484     15A1  082C               	movf	?___flmul+2,w
  5485     15A2  00C6               	movwf	?_fround+2
  5486     15A3  082B               	movf	?___flmul+1,w
  5487     15A4  00C5               	movwf	?_fround+1
  5488     15A5  082A               	movf	?___flmul,w
  5489     15A6  00C4               	movwf	?_fround
  5490     15A7                     l366:
  5491     15A7  0008               	return
  5492     15A8                     __end_of_fround:
  5493                           
  5494                           	psect	text7
  5495     0803                     __ptext7:	
  5496 ;; *************** function ___lwmod *****************
  5497 ;; Defined at:
  5498 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  5499 ;; Parameters:    Size  Location     Type
  5500 ;;  divisor         2    3[COMMON] unsigned int 
  5501 ;;  dividend        2    5[COMMON] unsigned int 
  5502 ;; Auto vars:     Size  Location     Type
  5503 ;;  counter         1    7[COMMON] unsigned char 
  5504 ;; Return value:  Size  Location     Type
  5505 ;;                  2    3[COMMON] unsigned int 
  5506 ;; Registers used:
  5507 ;;		wreg, status,2, status,0, btemp+1
  5508 ;; Tracked objects:
  5509 ;;		On entry : 0/0
  5510 ;;		On exit  : 0/0
  5511 ;;		Unchanged: 0/0
  5512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5513 ;;      Params:         4       0       0       0       0
  5514 ;;      Locals:         1       0       0       0       0
  5515 ;;      Temps:          0       0       0       0       0
  5516 ;;      Totals:         5       0       0       0       0
  5517 ;;Total ram usage:        5 bytes
  5518 ;; Hardware stack levels used: 1
  5519 ;; Hardware stack levels required when called: 1
  5520 ;; This function calls:
  5521 ;;		Nothing
  5522 ;; This function is called by:
  5523 ;;		_fround
  5524 ;; This function uses a non-reentrant model
  5525 ;;
  5526                           
  5527     0803                     ___lwmod:	
  5528                           ;psect for function ___lwmod
  5529                           
  5530     0803                     l2700:	
  5531                           ;incstack = 0
  5532                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  5533                           
  5534     0803  0873               	movf	___lwmod@divisor,w
  5535     0804  0474               	iorwf	___lwmod@divisor+1,w
  5536     0805  1903               	btfsc	3,2
  5537     0806  2808               	goto	u3431
  5538     0807  2809               	goto	u3430
  5539     0808                     u3431:
  5540     0808  2838               	goto	l2718
  5541     0809                     u3430:
  5542     0809                     l2702:
  5543     0809  01F7               	clrf	___lwmod@counter
  5544     080A  0AF7               	incf	___lwmod@counter,f
  5545     080B  2817               	goto	l2708
  5546     080C                     l2704:
  5547     080C  3001               	movlw	1
  5548     080D                     u3445:
  5549     080D  1003               	clrc
  5550     080E  0DF3               	rlf	___lwmod@divisor,f
  5551     080F  0DF4               	rlf	___lwmod@divisor+1,f
  5552     0810  3EFF               	addlw	-1
  5553     0811  1D03               	skipz
  5554     0812  280D               	goto	u3445
  5555     0813                     l2706:
  5556     0813  3001               	movlw	1
  5557     0814  00FF               	movwf	btemp+1
  5558     0815  087F               	movf	btemp+1,w
  5559     0816  07F7               	addwf	___lwmod@counter,f
  5560     0817                     l2708:
  5561     0817  1FF4               	btfss	___lwmod@divisor+1,7
  5562     0818  281A               	goto	u3451
  5563     0819  281B               	goto	u3450
  5564     081A                     u3451:
  5565     081A  280C               	goto	l2704
  5566     081B                     u3450:
  5567     081B                     l2710:
  5568     081B  0874               	movf	___lwmod@divisor+1,w
  5569     081C  0276               	subwf	___lwmod@dividend+1,w
  5570     081D  1D03               	skipz
  5571     081E  2821               	goto	u3465
  5572     081F  0873               	movf	___lwmod@divisor,w
  5573     0820  0275               	subwf	___lwmod@dividend,w
  5574     0821                     u3465:
  5575     0821  1C03               	skipc
  5576     0822  2824               	goto	u3461
  5577     0823  2825               	goto	u3460
  5578     0824                     u3461:
  5579     0824  282B               	goto	l2714
  5580     0825                     u3460:
  5581     0825                     l2712:
  5582     0825  0873               	movf	___lwmod@divisor,w
  5583     0826  02F5               	subwf	___lwmod@dividend,f
  5584     0827  0874               	movf	___lwmod@divisor+1,w
  5585     0828  1C03               	skipc
  5586     0829  03F6               	decf	___lwmod@dividend+1,f
  5587     082A  02F6               	subwf	___lwmod@dividend+1,f
  5588     082B                     l2714:
  5589     082B  3001               	movlw	1
  5590     082C                     u3475:
  5591     082C  1003               	clrc
  5592     082D  0CF4               	rrf	___lwmod@divisor+1,f
  5593     082E  0CF3               	rrf	___lwmod@divisor,f
  5594     082F  3EFF               	addlw	-1
  5595     0830  1D03               	skipz
  5596     0831  282C               	goto	u3475
  5597     0832                     l2716:
  5598     0832  3001               	movlw	1
  5599     0833  02F7               	subwf	___lwmod@counter,f
  5600     0834  1D03               	btfss	3,2
  5601     0835  2837               	goto	u3481
  5602     0836  2838               	goto	u3480
  5603     0837                     u3481:
  5604     0837  281B               	goto	l2710
  5605     0838                     u3480:
  5606     0838                     l2718:
  5607     0838  0876               	movf	___lwmod@dividend+1,w
  5608     0839  00F4               	movwf	?___lwmod+1
  5609     083A  0875               	movf	___lwmod@dividend,w
  5610     083B  00F3               	movwf	?___lwmod
  5611     083C                     l759:
  5612     083C  0008               	return
  5613     083D                     __end_of___lwmod:
  5614                           
  5615                           	psect	text8
  5616     1B20                     __ptext8:	
  5617 ;; *************** function ___lwdiv *****************
  5618 ;; Defined at:
  5619 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  5620 ;; Parameters:    Size  Location     Type
  5621 ;;  divisor         2    0[BANK0 ] unsigned int 
  5622 ;;  dividend        2    2[BANK0 ] unsigned int 
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;  quotient        2    5[BANK0 ] unsigned int 
  5625 ;;  counter         1    4[BANK0 ] unsigned char 
  5626 ;; Return value:  Size  Location     Type
  5627 ;;                  2    0[BANK0 ] unsigned int 
  5628 ;; Registers used:
  5629 ;;		wreg, status,2, status,0, btemp+1
  5630 ;; Tracked objects:
  5631 ;;		On entry : 0/0
  5632 ;;		On exit  : 0/0
  5633 ;;		Unchanged: 0/0
  5634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5635 ;;      Params:         0       4       0       0       0
  5636 ;;      Locals:         0       3       0       0       0
  5637 ;;      Temps:          0       0       0       0       0
  5638 ;;      Totals:         0       7       0       0       0
  5639 ;;Total ram usage:        7 bytes
  5640 ;; Hardware stack levels used: 1
  5641 ;; Hardware stack levels required when called: 1
  5642 ;; This function calls:
  5643 ;;		Nothing
  5644 ;; This function is called by:
  5645 ;;		_fround
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649     1B20                     ___lwdiv:	
  5650                           ;psect for function ___lwdiv
  5651                           
  5652     1B20                     l4042:	
  5653                           ;incstack = 0
  5654                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  5655                           
  5656     1B20  1283               	bcf	3,5	;RP0=0, select bank0
  5657     1B21  1303               	bcf	3,6	;RP1=0, select bank0
  5658     1B22  01A5               	clrf	___lwdiv@quotient
  5659     1B23  01A6               	clrf	___lwdiv@quotient+1
  5660     1B24                     l4044:
  5661     1B24  0820               	movf	___lwdiv@divisor,w
  5662     1B25  0421               	iorwf	___lwdiv@divisor+1,w
  5663     1B26  1903               	btfsc	3,2
  5664     1B27  2B29               	goto	u6191
  5665     1B28  2B2A               	goto	u6190
  5666     1B29                     u6191:
  5667     1B29  2B61               	goto	l4064
  5668     1B2A                     u6190:
  5669     1B2A                     l4046:
  5670     1B2A  01A4               	clrf	___lwdiv@counter
  5671     1B2B  0AA4               	incf	___lwdiv@counter,f
  5672     1B2C  2B38               	goto	l4052
  5673     1B2D                     l4048:
  5674     1B2D  3001               	movlw	1
  5675     1B2E                     u6205:
  5676     1B2E  1003               	clrc
  5677     1B2F  0DA0               	rlf	___lwdiv@divisor,f
  5678     1B30  0DA1               	rlf	___lwdiv@divisor+1,f
  5679     1B31  3EFF               	addlw	-1
  5680     1B32  1D03               	skipz
  5681     1B33  2B2E               	goto	u6205
  5682     1B34                     l4050:
  5683     1B34  3001               	movlw	1
  5684     1B35  00FF               	movwf	btemp+1
  5685     1B36  087F               	movf	btemp+1,w
  5686     1B37  07A4               	addwf	___lwdiv@counter,f
  5687     1B38                     l4052:
  5688     1B38  1FA1               	btfss	___lwdiv@divisor+1,7
  5689     1B39  2B3B               	goto	u6211
  5690     1B3A  2B3C               	goto	u6210
  5691     1B3B                     u6211:
  5692     1B3B  2B2D               	goto	l4048
  5693     1B3C                     u6210:
  5694     1B3C                     l4054:
  5695     1B3C  3001               	movlw	1
  5696     1B3D                     u6225:
  5697     1B3D  1003               	clrc
  5698     1B3E  0DA5               	rlf	___lwdiv@quotient,f
  5699     1B3F  0DA6               	rlf	___lwdiv@quotient+1,f
  5700     1B40  3EFF               	addlw	-1
  5701     1B41  1D03               	skipz
  5702     1B42  2B3D               	goto	u6225
  5703     1B43  0821               	movf	___lwdiv@divisor+1,w
  5704     1B44  0223               	subwf	___lwdiv@dividend+1,w
  5705     1B45  1D03               	skipz
  5706     1B46  2B49               	goto	u6235
  5707     1B47  0820               	movf	___lwdiv@divisor,w
  5708     1B48  0222               	subwf	___lwdiv@dividend,w
  5709     1B49                     u6235:
  5710     1B49  1C03               	skipc
  5711     1B4A  2B4C               	goto	u6231
  5712     1B4B  2B4D               	goto	u6230
  5713     1B4C                     u6231:
  5714     1B4C  2B54               	goto	l4060
  5715     1B4D                     u6230:
  5716     1B4D                     l4056:
  5717     1B4D  0820               	movf	___lwdiv@divisor,w
  5718     1B4E  02A2               	subwf	___lwdiv@dividend,f
  5719     1B4F  0821               	movf	___lwdiv@divisor+1,w
  5720     1B50  1C03               	skipc
  5721     1B51  03A3               	decf	___lwdiv@dividend+1,f
  5722     1B52  02A3               	subwf	___lwdiv@dividend+1,f
  5723     1B53                     l4058:
  5724     1B53  1425               	bsf	___lwdiv@quotient,0
  5725     1B54                     l4060:
  5726     1B54  3001               	movlw	1
  5727     1B55                     u6245:
  5728     1B55  1003               	clrc
  5729     1B56  0CA1               	rrf	___lwdiv@divisor+1,f
  5730     1B57  0CA0               	rrf	___lwdiv@divisor,f
  5731     1B58  3EFF               	addlw	-1
  5732     1B59  1D03               	skipz
  5733     1B5A  2B55               	goto	u6245
  5734     1B5B                     l4062:
  5735     1B5B  3001               	movlw	1
  5736     1B5C  02A4               	subwf	___lwdiv@counter,f
  5737     1B5D  1D03               	btfss	3,2
  5738     1B5E  2B60               	goto	u6251
  5739     1B5F  2B61               	goto	u6250
  5740     1B60                     u6251:
  5741     1B60  2B3C               	goto	l4054
  5742     1B61                     u6250:
  5743     1B61                     l4064:
  5744     1B61  0826               	movf	___lwdiv@quotient+1,w
  5745     1B62  00A1               	movwf	?___lwdiv+1
  5746     1B63  0825               	movf	___lwdiv@quotient,w
  5747     1B64  00A0               	movwf	?___lwdiv
  5748     1B65                     l749:
  5749     1B65  0008               	return
  5750     1B66                     __end_of___lwdiv:
  5751                           
  5752                           	psect	text9
  5753     1E91                     __ptext9:	
  5754 ;; *************** function __tdiv_to_l_ *****************
  5755 ;; Defined at:
  5756 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftdivl.c"
  5757 ;; Parameters:    Size  Location     Type
  5758 ;;  f1              4    0[BANK0 ] float 
  5759 ;;  f2              4    4[BANK0 ] float 
  5760 ;; Auto vars:     Size  Location     Type
  5761 ;;  quot            4    8[BANK0 ] unsigned long 
  5762 ;;  exp1            1   13[BANK0 ] unsigned char 
  5763 ;;  cntr            1   12[BANK0 ] unsigned char 
  5764 ;; Return value:  Size  Location     Type
  5765 ;;                  4    0[BANK0 ] unsigned long 
  5766 ;; Registers used:
  5767 ;;		wreg, status,2, status,0, btemp+1
  5768 ;; Tracked objects:
  5769 ;;		On entry : 0/0
  5770 ;;		On exit  : 0/0
  5771 ;;		Unchanged: 0/0
  5772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5773 ;;      Params:         0       8       0       0       0
  5774 ;;      Locals:         0       6       0       0       0
  5775 ;;      Temps:          3       0       0       0       0
  5776 ;;      Totals:         3      14       0       0       0
  5777 ;;Total ram usage:       17 bytes
  5778 ;; Hardware stack levels used: 1
  5779 ;; Hardware stack levels required when called: 1
  5780 ;; This function calls:
  5781 ;;		Nothing
  5782 ;; This function is called by:
  5783 ;;		_sprintf
  5784 ;; This function uses a non-reentrant model
  5785 ;;
  5786                           
  5787     1E91                     __tdiv_to_l_:	
  5788                           ;psect for function __tdiv_to_l_
  5789                           
  5790     1E91                     l4146:	
  5791                           ;incstack = 0
  5792                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0+btemp+1]
  5793                           
  5794     1E91  1283               	bcf	3,5	;RP0=0, select bank0
  5795     1E92  1303               	bcf	3,6	;RP1=0, select bank0
  5796     1E93  0820               	movf	__tdiv_to_l_@f1,w
  5797     1E94  00F3               	movwf	??__tdiv_to_l_
  5798     1E95  0821               	movf	__tdiv_to_l_@f1+1,w
  5799     1E96  00F4               	movwf	??__tdiv_to_l_+1
  5800     1E97  0822               	movf	__tdiv_to_l_@f1+2,w
  5801     1E98  00F5               	movwf	??__tdiv_to_l_+2
  5802     1E99  1003               	clrc
  5803     1E9A  0D74               	rlf	??__tdiv_to_l_+1,w
  5804     1E9B  0D75               	rlf	??__tdiv_to_l_+2,w
  5805     1E9C  00AD               	movwf	__tdiv_to_l_@exp1
  5806     1E9D  082D               	movf	__tdiv_to_l_@exp1,w
  5807     1E9E  1D03               	btfss	3,2
  5808     1E9F  2EA1               	goto	u6511
  5809     1EA0  2EA2               	goto	u6510
  5810     1EA1                     u6511:
  5811     1EA1  2EAB               	goto	l4152
  5812     1EA2                     u6510:
  5813     1EA2                     l4148:
  5814     1EA2  3000               	movlw	0
  5815     1EA3  00A3               	movwf	?__tdiv_to_l_+3
  5816     1EA4  3000               	movlw	0
  5817     1EA5  00A2               	movwf	?__tdiv_to_l_+2
  5818     1EA6  3000               	movlw	0
  5819     1EA7  00A1               	movwf	?__tdiv_to_l_+1
  5820     1EA8  3000               	movlw	0
  5821     1EA9  00A0               	movwf	?__tdiv_to_l_
  5822     1EAA  2F47               	goto	l660
  5823     1EAB                     l4152:
  5824     1EAB  0824               	movf	__tdiv_to_l_@f2,w
  5825     1EAC  00F3               	movwf	??__tdiv_to_l_
  5826     1EAD  0825               	movf	__tdiv_to_l_@f2+1,w
  5827     1EAE  00F4               	movwf	??__tdiv_to_l_+1
  5828     1EAF  0826               	movf	__tdiv_to_l_@f2+2,w
  5829     1EB0  00F5               	movwf	??__tdiv_to_l_+2
  5830     1EB1  1003               	clrc
  5831     1EB2  0D74               	rlf	??__tdiv_to_l_+1,w
  5832     1EB3  0D75               	rlf	??__tdiv_to_l_+2,w
  5833     1EB4  00AC               	movwf	__tdiv_to_l_@cntr
  5834     1EB5  082C               	movf	__tdiv_to_l_@cntr,w
  5835     1EB6  1D03               	btfss	3,2
  5836     1EB7  2EB9               	goto	u6521
  5837     1EB8  2EBA               	goto	u6520
  5838     1EB9                     u6521:
  5839     1EB9  2EBB               	goto	l661
  5840     1EBA                     u6520:
  5841     1EBA  2EA2               	goto	l4148
  5842     1EBB                     l661:
  5843     1EBB  17A1               	bsf	__tdiv_to_l_@f1+1,7
  5844     1EBC                     l4158:
  5845     1EBC  30FF               	movlw	255
  5846     1EBD  05A0               	andwf	__tdiv_to_l_@f1,f
  5847     1EBE  30FF               	movlw	255
  5848     1EBF  05A1               	andwf	__tdiv_to_l_@f1+1,f
  5849     1EC0  3000               	movlw	0
  5850     1EC1  05A2               	andwf	__tdiv_to_l_@f1+2,f
  5851     1EC2                     l4160:
  5852     1EC2  17A5               	bsf	__tdiv_to_l_@f2+1,7
  5853     1EC3  30FF               	movlw	255
  5854     1EC4  05A4               	andwf	__tdiv_to_l_@f2,f
  5855     1EC5  30FF               	movlw	255
  5856     1EC6  05A5               	andwf	__tdiv_to_l_@f2+1,f
  5857     1EC7  3000               	movlw	0
  5858     1EC8  05A6               	andwf	__tdiv_to_l_@f2+2,f
  5859     1EC9  3000               	movlw	0
  5860     1ECA  00AB               	movwf	__tdiv_to_l_@quot+3
  5861     1ECB  3000               	movlw	0
  5862     1ECC  00AA               	movwf	__tdiv_to_l_@quot+2
  5863     1ECD  3000               	movlw	0
  5864     1ECE  00A9               	movwf	__tdiv_to_l_@quot+1
  5865     1ECF  3000               	movlw	0
  5866     1ED0  00A8               	movwf	__tdiv_to_l_@quot
  5867     1ED1                     l4162:
  5868     1ED1  307F               	movlw	127
  5869     1ED2  02AD               	subwf	__tdiv_to_l_@exp1,f
  5870     1ED3                     l4164:
  5871     1ED3  3098               	movlw	152
  5872     1ED4  072C               	addwf	__tdiv_to_l_@cntr,w
  5873     1ED5  00F3               	movwf	??__tdiv_to_l_
  5874     1ED6  0873               	movf	??__tdiv_to_l_,w
  5875     1ED7  02AD               	subwf	__tdiv_to_l_@exp1,f
  5876     1ED8  3018               	movlw	24
  5877     1ED9  00AC               	movwf	__tdiv_to_l_@cntr
  5878     1EDA                     l4166:
  5879     1EDA  3001               	movlw	1
  5880     1EDB  00F3               	movwf	??__tdiv_to_l_
  5881     1EDC                     u6535:
  5882     1EDC  1003               	clrc
  5883     1EDD  0DA8               	rlf	__tdiv_to_l_@quot,f
  5884     1EDE  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  5885     1EDF  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  5886     1EE0  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  5887     1EE1  0BF3               	decfsz	??__tdiv_to_l_,f
  5888     1EE2  2EDC               	goto	u6535
  5889     1EE3                     l4168:
  5890     1EE3  0826               	movf	__tdiv_to_l_@f2+2,w
  5891     1EE4  0222               	subwf	__tdiv_to_l_@f1+2,w
  5892     1EE5  1D03               	skipz
  5893     1EE6  2EED               	goto	u6545
  5894     1EE7  0825               	movf	__tdiv_to_l_@f2+1,w
  5895     1EE8  0221               	subwf	__tdiv_to_l_@f1+1,w
  5896     1EE9  1D03               	skipz
  5897     1EEA  2EED               	goto	u6545
  5898     1EEB  0824               	movf	__tdiv_to_l_@f2,w
  5899     1EEC  0220               	subwf	__tdiv_to_l_@f1,w
  5900     1EED                     u6545:
  5901     1EED  1C03               	skipc
  5902     1EEE  2EF0               	goto	u6541
  5903     1EEF  2EF1               	goto	u6540
  5904     1EF0                     u6541:
  5905     1EF0  2EFC               	goto	l4174
  5906     1EF1                     u6540:
  5907     1EF1                     l4170:
  5908     1EF1  0824               	movf	__tdiv_to_l_@f2,w
  5909     1EF2  02A0               	subwf	__tdiv_to_l_@f1,f
  5910     1EF3  0825               	movf	__tdiv_to_l_@f2+1,w
  5911     1EF4  1C03               	skipc
  5912     1EF5  0F25               	incfsz	__tdiv_to_l_@f2+1,w
  5913     1EF6  02A1               	subwf	__tdiv_to_l_@f1+1,f
  5914     1EF7  0826               	movf	__tdiv_to_l_@f2+2,w
  5915     1EF8  1C03               	skipc
  5916     1EF9  0A26               	incf	__tdiv_to_l_@f2+2,w
  5917     1EFA  02A2               	subwf	__tdiv_to_l_@f1+2,f
  5918     1EFB                     l4172:
  5919     1EFB  1428               	bsf	__tdiv_to_l_@quot,0
  5920     1EFC                     l4174:
  5921     1EFC  3001               	movlw	1
  5922     1EFD                     u6555:
  5923     1EFD  1003               	clrc
  5924     1EFE  0DA0               	rlf	__tdiv_to_l_@f1,f
  5925     1EFF  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  5926     1F00  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  5927     1F01  3EFF               	addlw	-1
  5928     1F02  1D03               	skipz
  5929     1F03  2EFD               	goto	u6555
  5930     1F04                     l4176:
  5931     1F04  3001               	movlw	1
  5932     1F05  02AC               	subwf	__tdiv_to_l_@cntr,f
  5933     1F06  1D03               	btfss	3,2
  5934     1F07  2F09               	goto	u6561
  5935     1F08  2F0A               	goto	u6560
  5936     1F09                     u6561:
  5937     1F09  2EDA               	goto	l4166
  5938     1F0A                     u6560:
  5939     1F0A                     l664:
  5940     1F0A  1FAD               	btfss	__tdiv_to_l_@exp1,7
  5941     1F0B  2F0D               	goto	u6571
  5942     1F0C  2F0E               	goto	u6570
  5943     1F0D                     u6571:
  5944     1F0D  2F28               	goto	l4188
  5945     1F0E                     u6570:
  5946     1F0E                     l4178:
  5947     1F0E  082D               	movf	__tdiv_to_l_@exp1,w
  5948     1F0F  3A80               	xorlw	128
  5949     1F10  3E97               	addlw	151
  5950     1F11  1803               	skipnc
  5951     1F12  2F14               	goto	u6581
  5952     1F13  2F15               	goto	u6580
  5953     1F14                     u6581:
  5954     1F14  2F16               	goto	l4184
  5955     1F15                     u6580:
  5956     1F15  2EA2               	goto	l4148
  5957     1F16                     l4184:
  5958     1F16  3001               	movlw	1
  5959     1F17                     u6595:
  5960     1F17  1003               	clrc
  5961     1F18  0CAB               	rrf	__tdiv_to_l_@quot+3,f
  5962     1F19  0CAA               	rrf	__tdiv_to_l_@quot+2,f
  5963     1F1A  0CA9               	rrf	__tdiv_to_l_@quot+1,f
  5964     1F1B  0CA8               	rrf	__tdiv_to_l_@quot,f
  5965     1F1C  3EFF               	addlw	-1
  5966     1F1D  1D03               	skipz
  5967     1F1E  2F17               	goto	u6595
  5968     1F1F                     l4186:
  5969     1F1F  3001               	movlw	1
  5970     1F20  00FF               	movwf	btemp+1
  5971     1F21  087F               	movf	btemp+1,w
  5972     1F22  07AD               	addwf	__tdiv_to_l_@exp1,f
  5973     1F23  1D03               	btfss	3,2
  5974     1F24  2F26               	goto	u6601
  5975     1F25  2F27               	goto	u6600
  5976     1F26                     u6601:
  5977     1F26  2F16               	goto	l4184
  5978     1F27                     u6600:
  5979     1F27  2F3F               	goto	l4196
  5980     1F28                     l4188:
  5981     1F28  3018               	movlw	24
  5982     1F29  022D               	subwf	__tdiv_to_l_@exp1,w
  5983     1F2A  1C03               	skipc
  5984     1F2B  2F2D               	goto	u6611
  5985     1F2C  2F2E               	goto	u6610
  5986     1F2D                     u6611:
  5987     1F2D  2F3A               	goto	l671
  5988     1F2E                     u6610:
  5989     1F2E  2EA2               	goto	l4148
  5990     1F2F                     l4194:
  5991     1F2F  3001               	movlw	1
  5992     1F30  00F3               	movwf	??__tdiv_to_l_
  5993     1F31                     u6625:
  5994     1F31  1003               	clrc
  5995     1F32  0DA8               	rlf	__tdiv_to_l_@quot,f
  5996     1F33  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  5997     1F34  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  5998     1F35  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  5999     1F36  0BF3               	decfsz	??__tdiv_to_l_,f
  6000     1F37  2F31               	goto	u6625
  6001     1F38  3001               	movlw	1
  6002     1F39  02AD               	subwf	__tdiv_to_l_@exp1,f
  6003     1F3A                     l671:
  6004     1F3A  082D               	movf	__tdiv_to_l_@exp1,w
  6005     1F3B  1D03               	btfss	3,2
  6006     1F3C  2F3E               	goto	u6631
  6007     1F3D  2F3F               	goto	u6630
  6008     1F3E                     u6631:
  6009     1F3E  2F2F               	goto	l4194
  6010     1F3F                     u6630:
  6011     1F3F                     l4196:
  6012     1F3F  082B               	movf	__tdiv_to_l_@quot+3,w
  6013     1F40  00A3               	movwf	?__tdiv_to_l_+3
  6014     1F41  082A               	movf	__tdiv_to_l_@quot+2,w
  6015     1F42  00A2               	movwf	?__tdiv_to_l_+2
  6016     1F43  0829               	movf	__tdiv_to_l_@quot+1,w
  6017     1F44  00A1               	movwf	?__tdiv_to_l_+1
  6018     1F45  0828               	movf	__tdiv_to_l_@quot,w
  6019     1F46  00A0               	movwf	?__tdiv_to_l_
  6020     1F47                     l660:
  6021     1F47  0008               	return
  6022     1F48                     __end_of__tdiv_to_l_:
  6023                           
  6024                           	psect	text10
  6025     1F48                     __ptext10:	
  6026 ;; *************** function __div_to_l_ *****************
  6027 ;; Defined at:
  6028 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fldivl.c"
  6029 ;; Parameters:    Size  Location     Type
  6030 ;;  f1              4    0[BANK0 ] unsigned long 
  6031 ;;  f2              4    4[BANK0 ] unsigned long 
  6032 ;; Auto vars:     Size  Location     Type
  6033 ;;  quot            4    8[BANK0 ] unsigned long 
  6034 ;;  exp1            1   13[BANK0 ] unsigned char 
  6035 ;;  cntr            1   12[BANK0 ] unsigned char 
  6036 ;; Return value:  Size  Location     Type
  6037 ;;                  4    0[BANK0 ] unsigned long 
  6038 ;; Registers used:
  6039 ;;		wreg, status,2, status,0, btemp+1
  6040 ;; Tracked objects:
  6041 ;;		On entry : 0/0
  6042 ;;		On exit  : 0/0
  6043 ;;		Unchanged: 0/0
  6044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6045 ;;      Params:         0       8       0       0       0
  6046 ;;      Locals:         0       6       0       0       0
  6047 ;;      Temps:          1       0       0       0       0
  6048 ;;      Totals:         1      14       0       0       0
  6049 ;;Total ram usage:       15 bytes
  6050 ;; Hardware stack levels used: 1
  6051 ;; Hardware stack levels required when called: 1
  6052 ;; This function calls:
  6053 ;;		Nothing
  6054 ;; This function is called by:
  6055 ;;		_sprintf
  6056 ;; This function uses a non-reentrant model
  6057 ;;
  6058                           
  6059     1F48                     __div_to_l_:	
  6060                           ;psect for function __div_to_l_
  6061                           
  6062     1F48                     l4200:	
  6063                           ;incstack = 0
  6064                           ; Regs used in __div_to_l_: [wreg+status,2+status,0+btemp+1]
  6065                           
  6066     1F48  1003               	clrc
  6067     1F49  1283               	bcf	3,5	;RP0=0, select bank0
  6068     1F4A  1303               	bcf	3,6	;RP1=0, select bank0
  6069     1F4B  0D22               	rlf	__div_to_l_@f1+2,w
  6070     1F4C  0D23               	rlf	__div_to_l_@f1+3,w
  6071     1F4D  00AD               	movwf	__div_to_l_@exp1
  6072     1F4E  082D               	movf	__div_to_l_@exp1,w
  6073     1F4F  1D03               	btfss	3,2
  6074     1F50  2F52               	goto	u6641
  6075     1F51  2F53               	goto	u6640
  6076     1F52                     u6641:
  6077     1F52  2F5C               	goto	l4206
  6078     1F53                     u6640:
  6079     1F53                     l4202:
  6080     1F53  3000               	movlw	0
  6081     1F54  00A3               	movwf	?__div_to_l_+3
  6082     1F55  3000               	movlw	0
  6083     1F56  00A2               	movwf	?__div_to_l_+2
  6084     1F57  3000               	movlw	0
  6085     1F58  00A1               	movwf	?__div_to_l_+1
  6086     1F59  3000               	movlw	0
  6087     1F5A  00A0               	movwf	?__div_to_l_
  6088     1F5B  2FFF               	goto	l613
  6089     1F5C                     l4206:
  6090     1F5C  1003               	clrc
  6091     1F5D  0D26               	rlf	__div_to_l_@f2+2,w
  6092     1F5E  0D27               	rlf	__div_to_l_@f2+3,w
  6093     1F5F  00AC               	movwf	__div_to_l_@cntr
  6094     1F60  082C               	movf	__div_to_l_@cntr,w
  6095     1F61  1D03               	btfss	3,2
  6096     1F62  2F64               	goto	u6651
  6097     1F63  2F65               	goto	u6650
  6098     1F64                     u6651:
  6099     1F64  2F66               	goto	l614
  6100     1F65                     u6650:
  6101     1F65  2F53               	goto	l4202
  6102     1F66                     l614:
  6103     1F66  17A2               	bsf	__div_to_l_@f1+2,7
  6104     1F67                     l4212:
  6105     1F67  30FF               	movlw	255
  6106     1F68  05A0               	andwf	__div_to_l_@f1,f
  6107     1F69  30FF               	movlw	255
  6108     1F6A  05A1               	andwf	__div_to_l_@f1+1,f
  6109     1F6B  30FF               	movlw	255
  6110     1F6C  05A2               	andwf	__div_to_l_@f1+2,f
  6111     1F6D  3000               	movlw	0
  6112     1F6E  05A3               	andwf	__div_to_l_@f1+3,f
  6113     1F6F                     l4214:
  6114     1F6F  17A6               	bsf	__div_to_l_@f2+2,7
  6115     1F70  30FF               	movlw	255
  6116     1F71  05A4               	andwf	__div_to_l_@f2,f
  6117     1F72  30FF               	movlw	255
  6118     1F73  05A5               	andwf	__div_to_l_@f2+1,f
  6119     1F74  30FF               	movlw	255
  6120     1F75  05A6               	andwf	__div_to_l_@f2+2,f
  6121     1F76  3000               	movlw	0
  6122     1F77  05A7               	andwf	__div_to_l_@f2+3,f
  6123     1F78  3000               	movlw	0
  6124     1F79  00AB               	movwf	__div_to_l_@quot+3
  6125     1F7A  3000               	movlw	0
  6126     1F7B  00AA               	movwf	__div_to_l_@quot+2
  6127     1F7C  3000               	movlw	0
  6128     1F7D  00A9               	movwf	__div_to_l_@quot+1
  6129     1F7E  3000               	movlw	0
  6130     1F7F  00A8               	movwf	__div_to_l_@quot
  6131     1F80                     l4216:
  6132     1F80  307F               	movlw	127
  6133     1F81  02AD               	subwf	__div_to_l_@exp1,f
  6134     1F82                     l4218:
  6135     1F82  30A0               	movlw	160
  6136     1F83  072C               	addwf	__div_to_l_@cntr,w
  6137     1F84  00F3               	movwf	??__div_to_l_
  6138     1F85  0873               	movf	??__div_to_l_,w
  6139     1F86  02AD               	subwf	__div_to_l_@exp1,f
  6140     1F87  3020               	movlw	32
  6141     1F88  00AC               	movwf	__div_to_l_@cntr
  6142     1F89                     l4220:
  6143     1F89  3001               	movlw	1
  6144     1F8A  00F3               	movwf	??__div_to_l_
  6145     1F8B                     u6665:
  6146     1F8B  1003               	clrc
  6147     1F8C  0DA8               	rlf	__div_to_l_@quot,f
  6148     1F8D  0DA9               	rlf	__div_to_l_@quot+1,f
  6149     1F8E  0DAA               	rlf	__div_to_l_@quot+2,f
  6150     1F8F  0DAB               	rlf	__div_to_l_@quot+3,f
  6151     1F90  0BF3               	decfsz	??__div_to_l_,f
  6152     1F91  2F8B               	goto	u6665
  6153     1F92                     l4222:
  6154     1F92  0827               	movf	__div_to_l_@f2+3,w
  6155     1F93  0223               	subwf	__div_to_l_@f1+3,w
  6156     1F94  1D03               	skipz
  6157     1F95  2FA0               	goto	u6675
  6158     1F96  0826               	movf	__div_to_l_@f2+2,w
  6159     1F97  0222               	subwf	__div_to_l_@f1+2,w
  6160     1F98  1D03               	skipz
  6161     1F99  2FA0               	goto	u6675
  6162     1F9A  0825               	movf	__div_to_l_@f2+1,w
  6163     1F9B  0221               	subwf	__div_to_l_@f1+1,w
  6164     1F9C  1D03               	skipz
  6165     1F9D  2FA0               	goto	u6675
  6166     1F9E  0824               	movf	__div_to_l_@f2,w
  6167     1F9F  0220               	subwf	__div_to_l_@f1,w
  6168     1FA0                     u6675:
  6169     1FA0  1C03               	skipc
  6170     1FA1  2FA3               	goto	u6671
  6171     1FA2  2FA4               	goto	u6670
  6172     1FA3                     u6671:
  6173     1FA3  2FB3               	goto	l4228
  6174     1FA4                     u6670:
  6175     1FA4                     l4224:
  6176     1FA4  0824               	movf	__div_to_l_@f2,w
  6177     1FA5  02A0               	subwf	__div_to_l_@f1,f
  6178     1FA6  0825               	movf	__div_to_l_@f2+1,w
  6179     1FA7  1C03               	skipc
  6180     1FA8  0F25               	incfsz	__div_to_l_@f2+1,w
  6181     1FA9  02A1               	subwf	__div_to_l_@f1+1,f
  6182     1FAA  0826               	movf	__div_to_l_@f2+2,w
  6183     1FAB  1C03               	skipc
  6184     1FAC  0F26               	incfsz	__div_to_l_@f2+2,w
  6185     1FAD  02A2               	subwf	__div_to_l_@f1+2,f
  6186     1FAE  0827               	movf	__div_to_l_@f2+3,w
  6187     1FAF  1C03               	skipc
  6188     1FB0  0F27               	incfsz	__div_to_l_@f2+3,w
  6189     1FB1  02A3               	subwf	__div_to_l_@f1+3,f
  6190     1FB2                     l4226:
  6191     1FB2  1428               	bsf	__div_to_l_@quot,0
  6192     1FB3                     l4228:
  6193     1FB3  3001               	movlw	1
  6194     1FB4  00F3               	movwf	??__div_to_l_
  6195     1FB5                     u6685:
  6196     1FB5  1003               	clrc
  6197     1FB6  0DA0               	rlf	__div_to_l_@f1,f
  6198     1FB7  0DA1               	rlf	__div_to_l_@f1+1,f
  6199     1FB8  0DA2               	rlf	__div_to_l_@f1+2,f
  6200     1FB9  0DA3               	rlf	__div_to_l_@f1+3,f
  6201     1FBA  0BF3               	decfsz	??__div_to_l_,f
  6202     1FBB  2FB5               	goto	u6685
  6203     1FBC                     l4230:
  6204     1FBC  3001               	movlw	1
  6205     1FBD  02AC               	subwf	__div_to_l_@cntr,f
  6206     1FBE  1D03               	btfss	3,2
  6207     1FBF  2FC1               	goto	u6691
  6208     1FC0  2FC2               	goto	u6690
  6209     1FC1                     u6691:
  6210     1FC1  2F89               	goto	l4220
  6211     1FC2                     u6690:
  6212     1FC2                     l617:
  6213     1FC2  1FAD               	btfss	__div_to_l_@exp1,7
  6214     1FC3  2FC5               	goto	u6701
  6215     1FC4  2FC6               	goto	u6700
  6216     1FC5                     u6701:
  6217     1FC5  2FE0               	goto	l4242
  6218     1FC6                     u6700:
  6219     1FC6                     l4232:
  6220     1FC6  082D               	movf	__div_to_l_@exp1,w
  6221     1FC7  3A80               	xorlw	128
  6222     1FC8  3E9F               	addlw	159
  6223     1FC9  1803               	skipnc
  6224     1FCA  2FCC               	goto	u6711
  6225     1FCB  2FCD               	goto	u6710
  6226     1FCC                     u6711:
  6227     1FCC  2FCE               	goto	l4238
  6228     1FCD                     u6710:
  6229     1FCD  2F53               	goto	l4202
  6230     1FCE                     l4238:
  6231     1FCE  3001               	movlw	1
  6232     1FCF                     u6725:
  6233     1FCF  1003               	clrc
  6234     1FD0  0CAB               	rrf	__div_to_l_@quot+3,f
  6235     1FD1  0CAA               	rrf	__div_to_l_@quot+2,f
  6236     1FD2  0CA9               	rrf	__div_to_l_@quot+1,f
  6237     1FD3  0CA8               	rrf	__div_to_l_@quot,f
  6238     1FD4  3EFF               	addlw	-1
  6239     1FD5  1D03               	skipz
  6240     1FD6  2FCF               	goto	u6725
  6241     1FD7                     l4240:
  6242     1FD7  3001               	movlw	1
  6243     1FD8  00FF               	movwf	btemp+1
  6244     1FD9  087F               	movf	btemp+1,w
  6245     1FDA  07AD               	addwf	__div_to_l_@exp1,f
  6246     1FDB  1D03               	btfss	3,2
  6247     1FDC  2FDE               	goto	u6731
  6248     1FDD  2FDF               	goto	u6730
  6249     1FDE                     u6731:
  6250     1FDE  2FCE               	goto	l4238
  6251     1FDF                     u6730:
  6252     1FDF  2FF7               	goto	l4250
  6253     1FE0                     l4242:
  6254     1FE0  3020               	movlw	32
  6255     1FE1  022D               	subwf	__div_to_l_@exp1,w
  6256     1FE2  1C03               	skipc
  6257     1FE3  2FE5               	goto	u6741
  6258     1FE4  2FE6               	goto	u6740
  6259     1FE5                     u6741:
  6260     1FE5  2FF2               	goto	l624
  6261     1FE6                     u6740:
  6262     1FE6  2F53               	goto	l4202
  6263     1FE7                     l4248:
  6264     1FE7  3001               	movlw	1
  6265     1FE8  00F3               	movwf	??__div_to_l_
  6266     1FE9                     u6755:
  6267     1FE9  1003               	clrc
  6268     1FEA  0DA8               	rlf	__div_to_l_@quot,f
  6269     1FEB  0DA9               	rlf	__div_to_l_@quot+1,f
  6270     1FEC  0DAA               	rlf	__div_to_l_@quot+2,f
  6271     1FED  0DAB               	rlf	__div_to_l_@quot+3,f
  6272     1FEE  0BF3               	decfsz	??__div_to_l_,f
  6273     1FEF  2FE9               	goto	u6755
  6274     1FF0  3001               	movlw	1
  6275     1FF1  02AD               	subwf	__div_to_l_@exp1,f
  6276     1FF2                     l624:
  6277     1FF2  082D               	movf	__div_to_l_@exp1,w
  6278     1FF3  1D03               	btfss	3,2
  6279     1FF4  2FF6               	goto	u6761
  6280     1FF5  2FF7               	goto	u6760
  6281     1FF6                     u6761:
  6282     1FF6  2FE7               	goto	l4248
  6283     1FF7                     u6760:
  6284     1FF7                     l4250:
  6285     1FF7  082B               	movf	__div_to_l_@quot+3,w
  6286     1FF8  00A3               	movwf	?__div_to_l_+3
  6287     1FF9  082A               	movf	__div_to_l_@quot+2,w
  6288     1FFA  00A2               	movwf	?__div_to_l_+2
  6289     1FFB  0829               	movf	__div_to_l_@quot+1,w
  6290     1FFC  00A1               	movwf	?__div_to_l_+1
  6291     1FFD  0828               	movf	__div_to_l_@quot,w
  6292     1FFE  00A0               	movwf	?__div_to_l_
  6293     1FFF                     l613:
  6294     1FFF  0008               	return
  6295     2000                     __end_of__div_to_l_:
  6296                           
  6297                           	psect	text11
  6298     101D                     __ptext11:	
  6299 ;; *************** function ___xxtofl *****************
  6300 ;; Defined at:
  6301 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\xxtofl.c"
  6302 ;; Parameters:    Size  Location     Type
  6303 ;;  sign            1    wreg     unsigned char 
  6304 ;;  val             4    3[COMMON] long 
  6305 ;; Auto vars:     Size  Location     Type
  6306 ;;  sign            1    4[BANK0 ] unsigned char 
  6307 ;;  arg             4    6[BANK0 ] unsigned long 
  6308 ;;  exp             1    5[BANK0 ] unsigned char 
  6309 ;; Return value:  Size  Location     Type
  6310 ;;                  4    3[COMMON] unsigned char 
  6311 ;; Registers used:
  6312 ;;		wreg, status,2, status,0, btemp+1
  6313 ;; Tracked objects:
  6314 ;;		On entry : 0/0
  6315 ;;		On exit  : 0/0
  6316 ;;		Unchanged: 0/0
  6317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6318 ;;      Params:         4       0       0       0       0
  6319 ;;      Locals:         0       6       0       0       0
  6320 ;;      Temps:          0       4       0       0       0
  6321 ;;      Totals:         4      10       0       0       0
  6322 ;;Total ram usage:       14 bytes
  6323 ;; Hardware stack levels used: 1
  6324 ;; Hardware stack levels required when called: 1
  6325 ;; This function calls:
  6326 ;;		Nothing
  6327 ;; This function is called by:
  6328 ;;		_main
  6329 ;;		_sprintf
  6330 ;; This function uses a non-reentrant model
  6331 ;;
  6332                           
  6333     101D                     ___xxtofl:	
  6334                           ;psect for function ___xxtofl
  6335                           
  6336                           
  6337                           ;incstack = 0
  6338                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  6339                           ;___xxtofl@sign stored from wreg
  6340     101D  1283               	bcf	3,5	;RP0=0, select bank0
  6341     101E  1303               	bcf	3,6	;RP1=0, select bank0
  6342     101F  00A4               	movwf	___xxtofl@sign
  6343     1020                     l4494:
  6344     1020  0824               	movf	___xxtofl@sign,w
  6345     1021  1903               	btfsc	3,2
  6346     1022  2824               	goto	u7331
  6347     1023  2825               	goto	u7330
  6348     1024                     u7331:
  6349     1024  2839               	goto	l4500
  6350     1025                     u7330:
  6351     1025                     l4496:
  6352     1025  1FF6               	btfss	___xxtofl@val+3,7
  6353     1026  2828               	goto	u7341
  6354     1027  2829               	goto	u7340
  6355     1028                     u7341:
  6356     1028  2839               	goto	l4500
  6357     1029                     u7340:
  6358     1029                     l4498:
  6359     1029  0973               	comf	___xxtofl@val,w
  6360     102A  00A6               	movwf	___xxtofl@arg
  6361     102B  0974               	comf	___xxtofl@val+1,w
  6362     102C  00A7               	movwf	___xxtofl@arg+1
  6363     102D  0975               	comf	___xxtofl@val+2,w
  6364     102E  00A8               	movwf	___xxtofl@arg+2
  6365     102F  0976               	comf	___xxtofl@val+3,w
  6366     1030  00A9               	movwf	___xxtofl@arg+3
  6367     1031  0AA6               	incf	___xxtofl@arg,f
  6368     1032  1903               	skipnz
  6369     1033  0AA7               	incf	___xxtofl@arg+1,f
  6370     1034  1903               	skipnz
  6371     1035  0AA8               	incf	___xxtofl@arg+2,f
  6372     1036  1903               	skipnz
  6373     1037  0AA9               	incf	___xxtofl@arg+3,f
  6374     1038  2841               	goto	l910
  6375     1039                     l4500:
  6376     1039  0876               	movf	___xxtofl@val+3,w
  6377     103A  00A9               	movwf	___xxtofl@arg+3
  6378     103B  0875               	movf	___xxtofl@val+2,w
  6379     103C  00A8               	movwf	___xxtofl@arg+2
  6380     103D  0874               	movf	___xxtofl@val+1,w
  6381     103E  00A7               	movwf	___xxtofl@arg+1
  6382     103F  0873               	movf	___xxtofl@val,w
  6383     1040  00A6               	movwf	___xxtofl@arg
  6384     1041                     l910:
  6385     1041  0876               	movf	___xxtofl@val+3,w
  6386     1042  0475               	iorwf	___xxtofl@val+2,w
  6387     1043  0474               	iorwf	___xxtofl@val+1,w
  6388     1044  0473               	iorwf	___xxtofl@val,w
  6389     1045  1D03               	skipz
  6390     1046  2848               	goto	u7351
  6391     1047  2849               	goto	u7350
  6392     1048                     u7351:
  6393     1048  2852               	goto	l4506
  6394     1049                     u7350:
  6395     1049                     l4502:
  6396     1049  3000               	movlw	0
  6397     104A  00F6               	movwf	?___xxtofl+3
  6398     104B  3000               	movlw	0
  6399     104C  00F5               	movwf	?___xxtofl+2
  6400     104D  3000               	movlw	0
  6401     104E  00F4               	movwf	?___xxtofl+1
  6402     104F  3000               	movlw	0
  6403     1050  00F3               	movwf	?___xxtofl
  6404     1051  28D6               	goto	l912
  6405     1052                     l4506:
  6406     1052  3096               	movlw	150
  6407     1053  00A5               	movwf	___xxtofl@exp
  6408     1054  2862               	goto	l4512
  6409     1055                     l4508:
  6410     1055  3001               	movlw	1
  6411     1056  00FF               	movwf	btemp+1
  6412     1057  087F               	movf	btemp+1,w
  6413     1058  07A5               	addwf	___xxtofl@exp,f
  6414     1059                     l4510:
  6415     1059  3001               	movlw	1
  6416     105A                     u7365:
  6417     105A  1003               	clrc
  6418     105B  0CA9               	rrf	___xxtofl@arg+3,f
  6419     105C  0CA8               	rrf	___xxtofl@arg+2,f
  6420     105D  0CA7               	rrf	___xxtofl@arg+1,f
  6421     105E  0CA6               	rrf	___xxtofl@arg,f
  6422     105F  3EFF               	addlw	-1
  6423     1060  1D03               	skipz
  6424     1061  285A               	goto	u7365
  6425     1062                     l4512:
  6426     1062  30FE               	movlw	254
  6427     1063  0529               	andwf	___xxtofl@arg+3,w
  6428     1064  1D03               	btfss	3,2
  6429     1065  2867               	goto	u7371
  6430     1066  2868               	goto	u7370
  6431     1067                     u7371:
  6432     1067  2855               	goto	l4508
  6433     1068                     u7370:
  6434     1068  2884               	goto	l4520
  6435     1069                     l4514:
  6436     1069  3001               	movlw	1
  6437     106A  00FF               	movwf	btemp+1
  6438     106B  087F               	movf	btemp+1,w
  6439     106C  07A5               	addwf	___xxtofl@exp,f
  6440     106D                     l4516:
  6441     106D  3001               	movlw	1
  6442     106E  07A6               	addwf	___xxtofl@arg,f
  6443     106F  3000               	movlw	0
  6444     1070  1803               	skipnc
  6445     1071  3001               	movlw	1
  6446     1072  07A7               	addwf	___xxtofl@arg+1,f
  6447     1073  3000               	movlw	0
  6448     1074  1803               	skipnc
  6449     1075  3001               	movlw	1
  6450     1076  07A8               	addwf	___xxtofl@arg+2,f
  6451     1077  3000               	movlw	0
  6452     1078  1803               	skipnc
  6453     1079  3001               	movlw	1
  6454     107A  07A9               	addwf	___xxtofl@arg+3,f
  6455     107B                     l4518:
  6456     107B  3001               	movlw	1
  6457     107C                     u7385:
  6458     107C  1003               	clrc
  6459     107D  0CA9               	rrf	___xxtofl@arg+3,f
  6460     107E  0CA8               	rrf	___xxtofl@arg+2,f
  6461     107F  0CA7               	rrf	___xxtofl@arg+1,f
  6462     1080  0CA6               	rrf	___xxtofl@arg,f
  6463     1081  3EFF               	addlw	-1
  6464     1082  1D03               	skipz
  6465     1083  287C               	goto	u7385
  6466     1084                     l4520:
  6467     1084  30FF               	movlw	255
  6468     1085  0529               	andwf	___xxtofl@arg+3,w
  6469     1086  1D03               	btfss	3,2
  6470     1087  2889               	goto	u7391
  6471     1088  288A               	goto	u7390
  6472     1089                     u7391:
  6473     1089  2869               	goto	l4514
  6474     108A                     u7390:
  6475     108A  2896               	goto	l4524
  6476     108B                     l4522:
  6477     108B  3001               	movlw	1
  6478     108C  02A5               	subwf	___xxtofl@exp,f
  6479     108D  3001               	movlw	1
  6480     108E  00A0               	movwf	??___xxtofl
  6481     108F                     u7405:
  6482     108F  1003               	clrc
  6483     1090  0DA6               	rlf	___xxtofl@arg,f
  6484     1091  0DA7               	rlf	___xxtofl@arg+1,f
  6485     1092  0DA8               	rlf	___xxtofl@arg+2,f
  6486     1093  0DA9               	rlf	___xxtofl@arg+3,f
  6487     1094  0BA0               	decfsz	??___xxtofl,f
  6488     1095  288F               	goto	u7405
  6489     1096                     l4524:
  6490     1096  1BA8               	btfsc	___xxtofl@arg+2,7
  6491     1097  2899               	goto	u7411
  6492     1098  289A               	goto	u7410
  6493     1099                     u7411:
  6494     1099  28A0               	goto	l923
  6495     109A                     u7410:
  6496     109A                     l4526:
  6497     109A  3002               	movlw	2
  6498     109B  0225               	subwf	___xxtofl@exp,w
  6499     109C  1803               	skipnc
  6500     109D  289F               	goto	u7421
  6501     109E  28A0               	goto	u7420
  6502     109F                     u7421:
  6503     109F  288B               	goto	l4522
  6504     10A0                     u7420:
  6505     10A0                     l923:
  6506     10A0  1825               	btfsc	___xxtofl@exp,0
  6507     10A1  28A3               	goto	u7431
  6508     10A2  28A4               	goto	u7430
  6509     10A3                     u7431:
  6510     10A3  28AC               	goto	l924
  6511     10A4                     u7430:
  6512     10A4                     l4528:
  6513     10A4  30FF               	movlw	255
  6514     10A5  05A6               	andwf	___xxtofl@arg,f
  6515     10A6  30FF               	movlw	255
  6516     10A7  05A7               	andwf	___xxtofl@arg+1,f
  6517     10A8  307F               	movlw	127
  6518     10A9  05A8               	andwf	___xxtofl@arg+2,f
  6519     10AA  30FF               	movlw	255
  6520     10AB  05A9               	andwf	___xxtofl@arg+3,f
  6521     10AC                     l924:
  6522     10AC  1003               	clrc
  6523     10AD  0CA5               	rrf	___xxtofl@exp,f
  6524     10AE                     l4530:
  6525     10AE  0825               	movf	___xxtofl@exp,w
  6526     10AF  00A0               	movwf	??___xxtofl
  6527     10B0  01A1               	clrf	??___xxtofl+1
  6528     10B1  01A2               	clrf	??___xxtofl+2
  6529     10B2  01A3               	clrf	??___xxtofl+3
  6530     10B3  3018               	movlw	24
  6531     10B4                     u7445:
  6532     10B4  1003               	clrc
  6533     10B5  0DA0               	rlf	??___xxtofl,f
  6534     10B6  0DA1               	rlf	??___xxtofl+1,f
  6535     10B7  0DA2               	rlf	??___xxtofl+2,f
  6536     10B8  0DA3               	rlf	??___xxtofl+3,f
  6537     10B9                     u7440:
  6538     10B9  3EFF               	addlw	-1
  6539     10BA  1D03               	skipz
  6540     10BB  28B4               	goto	u7445
  6541     10BC  0820               	movf	??___xxtofl,w
  6542     10BD  04A6               	iorwf	___xxtofl@arg,f
  6543     10BE  0821               	movf	??___xxtofl+1,w
  6544     10BF  04A7               	iorwf	___xxtofl@arg+1,f
  6545     10C0  0822               	movf	??___xxtofl+2,w
  6546     10C1  04A8               	iorwf	___xxtofl@arg+2,f
  6547     10C2  0823               	movf	??___xxtofl+3,w
  6548     10C3  04A9               	iorwf	___xxtofl@arg+3,f
  6549     10C4                     l4532:
  6550     10C4  0824               	movf	___xxtofl@sign,w
  6551     10C5  1903               	btfsc	3,2
  6552     10C6  28C8               	goto	u7451
  6553     10C7  28C9               	goto	u7450
  6554     10C8                     u7451:
  6555     10C8  28CE               	goto	l4538
  6556     10C9                     u7450:
  6557     10C9                     l4534:
  6558     10C9  1FF6               	btfss	___xxtofl@val+3,7
  6559     10CA  28CC               	goto	u7461
  6560     10CB  28CD               	goto	u7460
  6561     10CC                     u7461:
  6562     10CC  28CE               	goto	l4538
  6563     10CD                     u7460:
  6564     10CD                     l4536:
  6565     10CD  17A9               	bsf	___xxtofl@arg+3,7
  6566     10CE                     l4538:
  6567     10CE  0829               	movf	___xxtofl@arg+3,w
  6568     10CF  00F6               	movwf	?___xxtofl+3
  6569     10D0  0828               	movf	___xxtofl@arg+2,w
  6570     10D1  00F5               	movwf	?___xxtofl+2
  6571     10D2  0827               	movf	___xxtofl@arg+1,w
  6572     10D3  00F4               	movwf	?___xxtofl+1
  6573     10D4  0826               	movf	___xxtofl@arg,w
  6574     10D5  00F3               	movwf	?___xxtofl
  6575     10D6                     l912:
  6576     10D6  0008               	return
  6577     10D7                     __end_of___xxtofl:
  6578                           
  6579                           	psect	text12
  6580     1AAF                     __ptext12:	
  6581 ;; *************** function ___wmul *****************
  6582 ;; Defined at:
  6583 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  6584 ;; Parameters:    Size  Location     Type
  6585 ;;  multiplier      2    3[COMMON] unsigned int 
  6586 ;;  multiplicand    2    5[COMMON] unsigned int 
  6587 ;; Auto vars:     Size  Location     Type
  6588 ;;  product         2    0[BANK0 ] unsigned int 
  6589 ;; Return value:  Size  Location     Type
  6590 ;;                  2    3[COMMON] unsigned int 
  6591 ;; Registers used:
  6592 ;;		wreg, status,2, status,0
  6593 ;; Tracked objects:
  6594 ;;		On entry : 0/0
  6595 ;;		On exit  : 0/0
  6596 ;;		Unchanged: 0/0
  6597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6598 ;;      Params:         4       0       0       0       0
  6599 ;;      Locals:         0       2       0       0       0
  6600 ;;      Temps:          0       0       0       0       0
  6601 ;;      Totals:         4       2       0       0       0
  6602 ;;Total ram usage:        6 bytes
  6603 ;; Hardware stack levels used: 1
  6604 ;; Hardware stack levels required when called: 1
  6605 ;; This function calls:
  6606 ;;		Nothing
  6607 ;; This function is called by:
  6608 ;;		_sprintf
  6609 ;; This function uses a non-reentrant model
  6610 ;;
  6611                           
  6612     1AAF                     ___wmul:	
  6613                           ;psect for function ___wmul
  6614                           
  6615     1AAF                     l4254:	
  6616                           ;incstack = 0
  6617                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6618                           
  6619     1AAF  1283               	bcf	3,5	;RP0=0, select bank0
  6620     1AB0  1303               	bcf	3,6	;RP1=0, select bank0
  6621     1AB1  01A0               	clrf	___wmul@product
  6622     1AB2  01A1               	clrf	___wmul@product+1
  6623     1AB3                     l4256:
  6624     1AB3  1C73               	btfss	___wmul@multiplier,0
  6625     1AB4  2AB6               	goto	u6771
  6626     1AB5  2AB7               	goto	u6770
  6627     1AB6                     u6771:
  6628     1AB6  2ABF               	goto	l443
  6629     1AB7                     u6770:
  6630     1AB7                     l4258:
  6631     1AB7  0875               	movf	___wmul@multiplicand,w
  6632     1AB8  1283               	bcf	3,5	;RP0=0, select bank0
  6633     1AB9  1303               	bcf	3,6	;RP1=0, select bank0
  6634     1ABA  07A0               	addwf	___wmul@product,f
  6635     1ABB  1803               	skipnc
  6636     1ABC  0AA1               	incf	___wmul@product+1,f
  6637     1ABD  0876               	movf	___wmul@multiplicand+1,w
  6638     1ABE  07A1               	addwf	___wmul@product+1,f
  6639     1ABF                     l443:
  6640     1ABF  3001               	movlw	1
  6641     1AC0                     u6785:
  6642     1AC0  1003               	clrc
  6643     1AC1  0DF5               	rlf	___wmul@multiplicand,f
  6644     1AC2  0DF6               	rlf	___wmul@multiplicand+1,f
  6645     1AC3  3EFF               	addlw	-1
  6646     1AC4  1D03               	skipz
  6647     1AC5  2AC0               	goto	u6785
  6648     1AC6                     l4260:
  6649     1AC6  3001               	movlw	1
  6650     1AC7                     u6795:
  6651     1AC7  1003               	clrc
  6652     1AC8  0CF4               	rrf	___wmul@multiplier+1,f
  6653     1AC9  0CF3               	rrf	___wmul@multiplier,f
  6654     1ACA  3EFF               	addlw	-1
  6655     1ACB  1D03               	skipz
  6656     1ACC  2AC7               	goto	u6795
  6657     1ACD                     l4262:
  6658     1ACD  0873               	movf	___wmul@multiplier,w
  6659     1ACE  0474               	iorwf	___wmul@multiplier+1,w
  6660     1ACF  1D03               	btfss	3,2
  6661     1AD0  2AD2               	goto	u6801
  6662     1AD1  2AD3               	goto	u6800
  6663     1AD2                     u6801:
  6664     1AD2  2AB3               	goto	l4256
  6665     1AD3                     u6800:
  6666     1AD3                     l4264:
  6667     1AD3  1283               	bcf	3,5	;RP0=0, select bank0
  6668     1AD4  1303               	bcf	3,6	;RP1=0, select bank0
  6669     1AD5  0821               	movf	___wmul@product+1,w
  6670     1AD6  00F4               	movwf	?___wmul+1
  6671     1AD7  0820               	movf	___wmul@product,w
  6672     1AD8  00F3               	movwf	?___wmul
  6673     1AD9                     l445:
  6674     1AD9  0008               	return
  6675     1ADA                     __end_of___wmul:
  6676                           
  6677                           	psect	text13
  6678     1C06                     __ptext13:	
  6679 ;; *************** function ___llmod *****************
  6680 ;; Defined at:
  6681 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\llmod.c"
  6682 ;; Parameters:    Size  Location     Type
  6683 ;;  divisor         4    0[BANK0 ] unsigned long 
  6684 ;;  dividend        4    4[BANK0 ] unsigned long 
  6685 ;; Auto vars:     Size  Location     Type
  6686 ;;  counter         1    4[COMMON] unsigned char 
  6687 ;; Return value:  Size  Location     Type
  6688 ;;                  4    0[BANK0 ] unsigned long 
  6689 ;; Registers used:
  6690 ;;		wreg, status,2, status,0, btemp+1
  6691 ;; Tracked objects:
  6692 ;;		On entry : 0/0
  6693 ;;		On exit  : 0/0
  6694 ;;		Unchanged: 0/0
  6695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6696 ;;      Params:         0       8       0       0       0
  6697 ;;      Locals:         1       0       0       0       0
  6698 ;;      Temps:          1       0       0       0       0
  6699 ;;      Totals:         2       8       0       0       0
  6700 ;;Total ram usage:       10 bytes
  6701 ;; Hardware stack levels used: 1
  6702 ;; Hardware stack levels required when called: 1
  6703 ;; This function calls:
  6704 ;;		Nothing
  6705 ;; This function is called by:
  6706 ;;		_sprintf
  6707 ;; This function uses a non-reentrant model
  6708 ;;
  6709                           
  6710     1C06                     ___llmod:	
  6711                           ;psect for function ___llmod
  6712                           
  6713     1C06                     l4326:	
  6714                           ;incstack = 0
  6715                           ; Regs used in ___llmod: [wreg+status,2+status,0+btemp+1]
  6716                           
  6717     1C06  1283               	bcf	3,5	;RP0=0, select bank0
  6718     1C07  1303               	bcf	3,6	;RP1=0, select bank0
  6719     1C08  0823               	movf	___llmod@divisor+3,w
  6720     1C09  0422               	iorwf	___llmod@divisor+2,w
  6721     1C0A  0421               	iorwf	___llmod@divisor+1,w
  6722     1C0B  0420               	iorwf	___llmod@divisor,w
  6723     1C0C  1903               	skipnz
  6724     1C0D  2C0F               	goto	u6981
  6725     1C0E  2C10               	goto	u6980
  6726     1C0F                     u6981:
  6727     1C0F  2C53               	goto	l4344
  6728     1C10                     u6980:
  6729     1C10                     l4328:
  6730     1C10  01F4               	clrf	___llmod@counter
  6731     1C11  0AF4               	incf	___llmod@counter,f
  6732     1C12  2C20               	goto	l4334
  6733     1C13                     l4330:
  6734     1C13  3001               	movlw	1
  6735     1C14  00F3               	movwf	??___llmod
  6736     1C15                     u6995:
  6737     1C15  1003               	clrc
  6738     1C16  0DA0               	rlf	___llmod@divisor,f
  6739     1C17  0DA1               	rlf	___llmod@divisor+1,f
  6740     1C18  0DA2               	rlf	___llmod@divisor+2,f
  6741     1C19  0DA3               	rlf	___llmod@divisor+3,f
  6742     1C1A  0BF3               	decfsz	??___llmod,f
  6743     1C1B  2C15               	goto	u6995
  6744     1C1C                     l4332:
  6745     1C1C  3001               	movlw	1
  6746     1C1D  00FF               	movwf	btemp+1
  6747     1C1E  087F               	movf	btemp+1,w
  6748     1C1F  07F4               	addwf	___llmod@counter,f
  6749     1C20                     l4334:
  6750     1C20  1FA3               	btfss	___llmod@divisor+3,7
  6751     1C21  2C23               	goto	u7001
  6752     1C22  2C24               	goto	u7000
  6753     1C23                     u7001:
  6754     1C23  2C13               	goto	l4330
  6755     1C24                     u7000:
  6756     1C24                     l4336:
  6757     1C24  0823               	movf	___llmod@divisor+3,w
  6758     1C25  0227               	subwf	___llmod@dividend+3,w
  6759     1C26  1D03               	skipz
  6760     1C27  2C32               	goto	u7015
  6761     1C28  0822               	movf	___llmod@divisor+2,w
  6762     1C29  0226               	subwf	___llmod@dividend+2,w
  6763     1C2A  1D03               	skipz
  6764     1C2B  2C32               	goto	u7015
  6765     1C2C  0821               	movf	___llmod@divisor+1,w
  6766     1C2D  0225               	subwf	___llmod@dividend+1,w
  6767     1C2E  1D03               	skipz
  6768     1C2F  2C32               	goto	u7015
  6769     1C30  0820               	movf	___llmod@divisor,w
  6770     1C31  0224               	subwf	___llmod@dividend,w
  6771     1C32                     u7015:
  6772     1C32  1C03               	skipc
  6773     1C33  2C35               	goto	u7011
  6774     1C34  2C36               	goto	u7010
  6775     1C35                     u7011:
  6776     1C35  2C44               	goto	l4340
  6777     1C36                     u7010:
  6778     1C36                     l4338:
  6779     1C36  0820               	movf	___llmod@divisor,w
  6780     1C37  02A4               	subwf	___llmod@dividend,f
  6781     1C38  0821               	movf	___llmod@divisor+1,w
  6782     1C39  1C03               	skipc
  6783     1C3A  0F21               	incfsz	___llmod@divisor+1,w
  6784     1C3B  02A5               	subwf	___llmod@dividend+1,f
  6785     1C3C  0822               	movf	___llmod@divisor+2,w
  6786     1C3D  1C03               	skipc
  6787     1C3E  0F22               	incfsz	___llmod@divisor+2,w
  6788     1C3F  02A6               	subwf	___llmod@dividend+2,f
  6789     1C40  0823               	movf	___llmod@divisor+3,w
  6790     1C41  1C03               	skipc
  6791     1C42  0F23               	incfsz	___llmod@divisor+3,w
  6792     1C43  02A7               	subwf	___llmod@dividend+3,f
  6793     1C44                     l4340:
  6794     1C44  3001               	movlw	1
  6795     1C45                     u7025:
  6796     1C45  1003               	clrc
  6797     1C46  0CA3               	rrf	___llmod@divisor+3,f
  6798     1C47  0CA2               	rrf	___llmod@divisor+2,f
  6799     1C48  0CA1               	rrf	___llmod@divisor+1,f
  6800     1C49  0CA0               	rrf	___llmod@divisor,f
  6801     1C4A  3EFF               	addlw	-1
  6802     1C4B  1D03               	skipz
  6803     1C4C  2C45               	goto	u7025
  6804     1C4D                     l4342:
  6805     1C4D  3001               	movlw	1
  6806     1C4E  02F4               	subwf	___llmod@counter,f
  6807     1C4F  1D03               	btfss	3,2
  6808     1C50  2C52               	goto	u7031
  6809     1C51  2C53               	goto	u7030
  6810     1C52                     u7031:
  6811     1C52  2C24               	goto	l4336
  6812     1C53                     u7030:
  6813     1C53                     l4344:
  6814     1C53  0827               	movf	___llmod@dividend+3,w
  6815     1C54  00A3               	movwf	?___llmod+3
  6816     1C55  0826               	movf	___llmod@dividend+2,w
  6817     1C56  00A2               	movwf	?___llmod+2
  6818     1C57  0825               	movf	___llmod@dividend+1,w
  6819     1C58  00A1               	movwf	?___llmod+1
  6820     1C59  0824               	movf	___llmod@dividend,w
  6821     1C5A  00A0               	movwf	?___llmod
  6822     1C5B                     l699:
  6823     1C5B  0008               	return
  6824     1C5C                     __end_of___llmod:
  6825                           
  6826                           	psect	text14
  6827     1D1C                     __ptext14:	
  6828 ;; *************** function ___lldiv *****************
  6829 ;; Defined at:
  6830 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  6831 ;; Parameters:    Size  Location     Type
  6832 ;;  divisor         4    0[BANK0 ] unsigned long 
  6833 ;;  dividend        4    4[BANK0 ] unsigned long 
  6834 ;; Auto vars:     Size  Location     Type
  6835 ;;  quotient        4    8[BANK0 ] unsigned long 
  6836 ;;  counter         1   12[BANK0 ] unsigned char 
  6837 ;; Return value:  Size  Location     Type
  6838 ;;                  4    0[BANK0 ] unsigned long 
  6839 ;; Registers used:
  6840 ;;		wreg, status,2, status,0, btemp+1
  6841 ;; Tracked objects:
  6842 ;;		On entry : 0/0
  6843 ;;		On exit  : 0/0
  6844 ;;		Unchanged: 0/0
  6845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6846 ;;      Params:         0       8       0       0       0
  6847 ;;      Locals:         0       5       0       0       0
  6848 ;;      Temps:          1       0       0       0       0
  6849 ;;      Totals:         1      13       0       0       0
  6850 ;;Total ram usage:       14 bytes
  6851 ;; Hardware stack levels used: 1
  6852 ;; Hardware stack levels required when called: 1
  6853 ;; This function calls:
  6854 ;;		Nothing
  6855 ;; This function is called by:
  6856 ;;		_sprintf
  6857 ;; This function uses a non-reentrant model
  6858 ;;
  6859                           
  6860     1D1C                     ___lldiv:	
  6861                           ;psect for function ___lldiv
  6862                           
  6863     1D1C                     l4268:	
  6864                           ;incstack = 0
  6865                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  6866                           
  6867     1D1C  3000               	movlw	0
  6868     1D1D  1283               	bcf	3,5	;RP0=0, select bank0
  6869     1D1E  1303               	bcf	3,6	;RP1=0, select bank0
  6870     1D1F  00AB               	movwf	___lldiv@quotient+3
  6871     1D20  3000               	movlw	0
  6872     1D21  00AA               	movwf	___lldiv@quotient+2
  6873     1D22  3000               	movlw	0
  6874     1D23  00A9               	movwf	___lldiv@quotient+1
  6875     1D24  3000               	movlw	0
  6876     1D25  00A8               	movwf	___lldiv@quotient
  6877     1D26  0823               	movf	___lldiv@divisor+3,w
  6878     1D27  0422               	iorwf	___lldiv@divisor+2,w
  6879     1D28  0421               	iorwf	___lldiv@divisor+1,w
  6880     1D29  0420               	iorwf	___lldiv@divisor,w
  6881     1D2A  1903               	skipnz
  6882     1D2B  2D2D               	goto	u6811
  6883     1D2C  2D2E               	goto	u6810
  6884     1D2D                     u6811:
  6885     1D2D  2D7B               	goto	l4290
  6886     1D2E                     u6810:
  6887     1D2E                     l4270:
  6888     1D2E  01AC               	clrf	___lldiv@counter
  6889     1D2F  0AAC               	incf	___lldiv@counter,f
  6890     1D30  2D3E               	goto	l4276
  6891     1D31                     l4272:
  6892     1D31  3001               	movlw	1
  6893     1D32  00F3               	movwf	??___lldiv
  6894     1D33                     u6825:
  6895     1D33  1003               	clrc
  6896     1D34  0DA0               	rlf	___lldiv@divisor,f
  6897     1D35  0DA1               	rlf	___lldiv@divisor+1,f
  6898     1D36  0DA2               	rlf	___lldiv@divisor+2,f
  6899     1D37  0DA3               	rlf	___lldiv@divisor+3,f
  6900     1D38  0BF3               	decfsz	??___lldiv,f
  6901     1D39  2D33               	goto	u6825
  6902     1D3A                     l4274:
  6903     1D3A  3001               	movlw	1
  6904     1D3B  00FF               	movwf	btemp+1
  6905     1D3C  087F               	movf	btemp+1,w
  6906     1D3D  07AC               	addwf	___lldiv@counter,f
  6907     1D3E                     l4276:
  6908     1D3E  1FA3               	btfss	___lldiv@divisor+3,7
  6909     1D3F  2D41               	goto	u6831
  6910     1D40  2D42               	goto	u6830
  6911     1D41                     u6831:
  6912     1D41  2D31               	goto	l4272
  6913     1D42                     u6830:
  6914     1D42                     l4278:
  6915     1D42  3001               	movlw	1
  6916     1D43  00F3               	movwf	??___lldiv
  6917     1D44                     u6845:
  6918     1D44  1003               	clrc
  6919     1D45  0DA8               	rlf	___lldiv@quotient,f
  6920     1D46  0DA9               	rlf	___lldiv@quotient+1,f
  6921     1D47  0DAA               	rlf	___lldiv@quotient+2,f
  6922     1D48  0DAB               	rlf	___lldiv@quotient+3,f
  6923     1D49  0BF3               	decfsz	??___lldiv,f
  6924     1D4A  2D44               	goto	u6845
  6925     1D4B                     l4280:
  6926     1D4B  0823               	movf	___lldiv@divisor+3,w
  6927     1D4C  0227               	subwf	___lldiv@dividend+3,w
  6928     1D4D  1D03               	skipz
  6929     1D4E  2D59               	goto	u6855
  6930     1D4F  0822               	movf	___lldiv@divisor+2,w
  6931     1D50  0226               	subwf	___lldiv@dividend+2,w
  6932     1D51  1D03               	skipz
  6933     1D52  2D59               	goto	u6855
  6934     1D53  0821               	movf	___lldiv@divisor+1,w
  6935     1D54  0225               	subwf	___lldiv@dividend+1,w
  6936     1D55  1D03               	skipz
  6937     1D56  2D59               	goto	u6855
  6938     1D57  0820               	movf	___lldiv@divisor,w
  6939     1D58  0224               	subwf	___lldiv@dividend,w
  6940     1D59                     u6855:
  6941     1D59  1C03               	skipc
  6942     1D5A  2D5C               	goto	u6851
  6943     1D5B  2D5D               	goto	u6850
  6944     1D5C                     u6851:
  6945     1D5C  2D6C               	goto	l4286
  6946     1D5D                     u6850:
  6947     1D5D                     l4282:
  6948     1D5D  0820               	movf	___lldiv@divisor,w
  6949     1D5E  02A4               	subwf	___lldiv@dividend,f
  6950     1D5F  0821               	movf	___lldiv@divisor+1,w
  6951     1D60  1C03               	skipc
  6952     1D61  0F21               	incfsz	___lldiv@divisor+1,w
  6953     1D62  02A5               	subwf	___lldiv@dividend+1,f
  6954     1D63  0822               	movf	___lldiv@divisor+2,w
  6955     1D64  1C03               	skipc
  6956     1D65  0F22               	incfsz	___lldiv@divisor+2,w
  6957     1D66  02A6               	subwf	___lldiv@dividend+2,f
  6958     1D67  0823               	movf	___lldiv@divisor+3,w
  6959     1D68  1C03               	skipc
  6960     1D69  0F23               	incfsz	___lldiv@divisor+3,w
  6961     1D6A  02A7               	subwf	___lldiv@dividend+3,f
  6962     1D6B                     l4284:
  6963     1D6B  1428               	bsf	___lldiv@quotient,0
  6964     1D6C                     l4286:
  6965     1D6C  3001               	movlw	1
  6966     1D6D                     u6865:
  6967     1D6D  1003               	clrc
  6968     1D6E  0CA3               	rrf	___lldiv@divisor+3,f
  6969     1D6F  0CA2               	rrf	___lldiv@divisor+2,f
  6970     1D70  0CA1               	rrf	___lldiv@divisor+1,f
  6971     1D71  0CA0               	rrf	___lldiv@divisor,f
  6972     1D72  3EFF               	addlw	-1
  6973     1D73  1D03               	skipz
  6974     1D74  2D6D               	goto	u6865
  6975     1D75                     l4288:
  6976     1D75  3001               	movlw	1
  6977     1D76  02AC               	subwf	___lldiv@counter,f
  6978     1D77  1D03               	btfss	3,2
  6979     1D78  2D7A               	goto	u6871
  6980     1D79  2D7B               	goto	u6870
  6981     1D7A                     u6871:
  6982     1D7A  2D42               	goto	l4278
  6983     1D7B                     u6870:
  6984     1D7B                     l4290:
  6985     1D7B  082B               	movf	___lldiv@quotient+3,w
  6986     1D7C  00A3               	movwf	?___lldiv+3
  6987     1D7D  082A               	movf	___lldiv@quotient+2,w
  6988     1D7E  00A2               	movwf	?___lldiv+2
  6989     1D7F  0829               	movf	___lldiv@quotient+1,w
  6990     1D80  00A1               	movwf	?___lldiv+1
  6991     1D81  0828               	movf	___lldiv@quotient,w
  6992     1D82  00A0               	movwf	?___lldiv
  6993     1D83                     l479:
  6994     1D83  0008               	return
  6995     1D84                     __end_of___lldiv:
  6996                           
  6997                           	psect	text15
  6998     077A                     __ptext15:	
  6999 ;; *************** function ___fltol *****************
  7000 ;; Defined at:
  7001 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fltol.c"
  7002 ;; Parameters:    Size  Location     Type
  7003 ;;  f1              4   55[BANK0 ] unsigned long 
  7004 ;; Auto vars:     Size  Location     Type
  7005 ;;  exp1            1   64[BANK0 ] unsigned char 
  7006 ;;  sign1           1   63[BANK0 ] unsigned char 
  7007 ;; Return value:  Size  Location     Type
  7008 ;;                  4   55[BANK0 ] long 
  7009 ;; Registers used:
  7010 ;;		wreg, status,2, status,0, btemp+1
  7011 ;; Tracked objects:
  7012 ;;		On entry : 0/0
  7013 ;;		On exit  : 0/0
  7014 ;;		Unchanged: 0/0
  7015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7016 ;;      Params:         0       4       0       0       0
  7017 ;;      Locals:         0       2       0       0       0
  7018 ;;      Temps:          0       4       0       0       0
  7019 ;;      Totals:         0      10       0       0       0
  7020 ;;Total ram usage:       10 bytes
  7021 ;; Hardware stack levels used: 1
  7022 ;; Hardware stack levels required when called: 1
  7023 ;; This function calls:
  7024 ;;		Nothing
  7025 ;; This function is called by:
  7026 ;;		_sprintf
  7027 ;; This function uses a non-reentrant model
  7028 ;;
  7029                           
  7030     077A                     ___fltol:	
  7031                           ;psect for function ___fltol
  7032                           
  7033     077A                     l3342:	
  7034                           ;incstack = 0
  7035                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  7036                           
  7037     077A  1003               	clrc
  7038     077B  1283               	bcf	3,5	;RP0=0, select bank0
  7039     077C  1303               	bcf	3,6	;RP1=0, select bank0
  7040     077D  0D59               	rlf	___fltol@f1+2,w
  7041     077E  0D5A               	rlf	___fltol@f1+3,w
  7042     077F  00E0               	movwf	___fltol@exp1
  7043     0780  0860               	movf	___fltol@exp1,w
  7044     0781  1D03               	btfss	3,2
  7045     0782  2F84               	goto	u5071
  7046     0783  2F85               	goto	u5070
  7047     0784                     u5071:
  7048     0784  2F8E               	goto	l3348
  7049     0785                     u5070:
  7050     0785                     l3344:
  7051     0785  3000               	movlw	0
  7052     0786  00DA               	movwf	?___fltol+3
  7053     0787  3000               	movlw	0
  7054     0788  00D9               	movwf	?___fltol+2
  7055     0789  3000               	movlw	0
  7056     078A  00D8               	movwf	?___fltol+1
  7057     078B  3000               	movlw	0
  7058     078C  00D7               	movwf	?___fltol
  7059     078D  2FF1               	goto	l646
  7060     078E                     l3348:
  7061     078E  0857               	movf	___fltol@f1,w
  7062     078F  00DB               	movwf	??___fltol
  7063     0790  0858               	movf	___fltol@f1+1,w
  7064     0791  00DC               	movwf	??___fltol+1
  7065     0792  0859               	movf	___fltol@f1+2,w
  7066     0793  00DD               	movwf	??___fltol+2
  7067     0794  085A               	movf	___fltol@f1+3,w
  7068     0795  00DE               	movwf	??___fltol+3
  7069     0796  301F               	movlw	31
  7070     0797                     u5085:
  7071     0797  1003               	clrc
  7072     0798  0CDE               	rrf	??___fltol+3,f
  7073     0799  0CDD               	rrf	??___fltol+2,f
  7074     079A  0CDC               	rrf	??___fltol+1,f
  7075     079B  0CDB               	rrf	??___fltol,f
  7076     079C                     u5080:
  7077     079C  3EFF               	addlw	-1
  7078     079D  1D03               	skipz
  7079     079E  2F97               	goto	u5085
  7080     079F  085B               	movf	??___fltol,w
  7081     07A0  00DF               	movwf	___fltol@sign1
  7082     07A1                     l3350:
  7083     07A1  17D9               	bsf	___fltol@f1+2,7
  7084     07A2                     l3352:
  7085     07A2  30FF               	movlw	255
  7086     07A3  05D7               	andwf	___fltol@f1,f
  7087     07A4  30FF               	movlw	255
  7088     07A5  05D8               	andwf	___fltol@f1+1,f
  7089     07A6  30FF               	movlw	255
  7090     07A7  05D9               	andwf	___fltol@f1+2,f
  7091     07A8  3000               	movlw	0
  7092     07A9  05DA               	andwf	___fltol@f1+3,f
  7093     07AA                     l3354:
  7094     07AA  3096               	movlw	150
  7095     07AB  02E0               	subwf	___fltol@exp1,f
  7096     07AC                     l3356:
  7097     07AC  1FE0               	btfss	___fltol@exp1,7
  7098     07AD  2FAF               	goto	u5091
  7099     07AE  2FB0               	goto	u5090
  7100     07AF                     u5091:
  7101     07AF  2FCA               	goto	l3368
  7102     07B0                     u5090:
  7103     07B0                     l3358:
  7104     07B0  0860               	movf	___fltol@exp1,w
  7105     07B1  3A80               	xorlw	128
  7106     07B2  3E97               	addlw	151
  7107     07B3  1803               	skipnc
  7108     07B4  2FB6               	goto	u5101
  7109     07B5  2FB7               	goto	u5100
  7110     07B6                     u5101:
  7111     07B6  2FB8               	goto	l3364
  7112     07B7                     u5100:
  7113     07B7  2F85               	goto	l3344
  7114     07B8                     l3364:
  7115     07B8  3001               	movlw	1
  7116     07B9                     u5115:
  7117     07B9  1003               	clrc
  7118     07BA  0CDA               	rrf	___fltol@f1+3,f
  7119     07BB  0CD9               	rrf	___fltol@f1+2,f
  7120     07BC  0CD8               	rrf	___fltol@f1+1,f
  7121     07BD  0CD7               	rrf	___fltol@f1,f
  7122     07BE  3EFF               	addlw	-1
  7123     07BF  1D03               	skipz
  7124     07C0  2FB9               	goto	u5115
  7125     07C1                     l3366:
  7126     07C1  3001               	movlw	1
  7127     07C2  00FF               	movwf	btemp+1
  7128     07C3  087F               	movf	btemp+1,w
  7129     07C4  07E0               	addwf	___fltol@exp1,f
  7130     07C5  1D03               	btfss	3,2
  7131     07C6  2FC8               	goto	u5121
  7132     07C7  2FC9               	goto	u5120
  7133     07C8                     u5121:
  7134     07C8  2FB8               	goto	l3364
  7135     07C9                     u5120:
  7136     07C9  2FE1               	goto	l3376
  7137     07CA                     l3368:
  7138     07CA  3020               	movlw	32
  7139     07CB  0260               	subwf	___fltol@exp1,w
  7140     07CC  1C03               	skipc
  7141     07CD  2FCF               	goto	u5131
  7142     07CE  2FD0               	goto	u5130
  7143     07CF                     u5131:
  7144     07CF  2FDC               	goto	l653
  7145     07D0                     u5130:
  7146     07D0  2F85               	goto	l3344
  7147     07D1                     l3374:
  7148     07D1  3001               	movlw	1
  7149     07D2  00DB               	movwf	??___fltol
  7150     07D3                     u5145:
  7151     07D3  1003               	clrc
  7152     07D4  0DD7               	rlf	___fltol@f1,f
  7153     07D5  0DD8               	rlf	___fltol@f1+1,f
  7154     07D6  0DD9               	rlf	___fltol@f1+2,f
  7155     07D7  0DDA               	rlf	___fltol@f1+3,f
  7156     07D8  0BDB               	decfsz	??___fltol,f
  7157     07D9  2FD3               	goto	u5145
  7158     07DA  3001               	movlw	1
  7159     07DB  02E0               	subwf	___fltol@exp1,f
  7160     07DC                     l653:
  7161     07DC  0860               	movf	___fltol@exp1,w
  7162     07DD  1D03               	btfss	3,2
  7163     07DE  2FE0               	goto	u5151
  7164     07DF  2FE1               	goto	u5150
  7165     07E0                     u5151:
  7166     07E0  2FD1               	goto	l3374
  7167     07E1                     u5150:
  7168     07E1                     l3376:
  7169     07E1  085F               	movf	___fltol@sign1,w
  7170     07E2  1903               	btfsc	3,2
  7171     07E3  2FE5               	goto	u5161
  7172     07E4  2FE6               	goto	u5160
  7173     07E5                     u5161:
  7174     07E5  2FF1               	goto	l656
  7175     07E6                     u5160:
  7176     07E6                     l3378:
  7177     07E6  09D7               	comf	___fltol@f1,f
  7178     07E7  09D8               	comf	___fltol@f1+1,f
  7179     07E8  09D9               	comf	___fltol@f1+2,f
  7180     07E9  09DA               	comf	___fltol@f1+3,f
  7181     07EA  0AD7               	incf	___fltol@f1,f
  7182     07EB  1903               	skipnz
  7183     07EC  0AD8               	incf	___fltol@f1+1,f
  7184     07ED  1903               	skipnz
  7185     07EE  0AD9               	incf	___fltol@f1+2,f
  7186     07EF  1903               	skipnz
  7187     07F0  0ADA               	incf	___fltol@f1+3,f
  7188     07F1                     l656:
  7189     07F1                     l646:
  7190     07F1  0008               	return
  7191     07F2                     __end_of___fltol:
  7192                           
  7193                           	psect	text16
  7194     07F2                     __ptext16:	
  7195 ;; *************** function ___flneg *****************
  7196 ;; Defined at:
  7197 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\flneg.c"
  7198 ;; Parameters:    Size  Location     Type
  7199 ;;  f1              4    3[COMMON] long 
  7200 ;; Auto vars:     Size  Location     Type
  7201 ;;		None
  7202 ;; Return value:  Size  Location     Type
  7203 ;;                  4    3[COMMON] long 
  7204 ;; Registers used:
  7205 ;;		wreg
  7206 ;; Tracked objects:
  7207 ;;		On entry : 0/0
  7208 ;;		On exit  : 0/0
  7209 ;;		Unchanged: 0/0
  7210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7211 ;;      Params:         4       0       0       0       0
  7212 ;;      Locals:         0       0       0       0       0
  7213 ;;      Temps:          0       0       0       0       0
  7214 ;;      Totals:         4       0       0       0       0
  7215 ;;Total ram usage:        4 bytes
  7216 ;; Hardware stack levels used: 1
  7217 ;; Hardware stack levels required when called: 1
  7218 ;; This function calls:
  7219 ;;		Nothing
  7220 ;; This function is called by:
  7221 ;;		_sprintf
  7222 ;; This function uses a non-reentrant model
  7223 ;;
  7224                           
  7225     07F2                     ___flneg:	
  7226                           ;psect for function ___flneg
  7227                           
  7228     07F2                     l3334:	
  7229                           ;incstack = 0
  7230                           ; Regs used in ___flneg: [wreg]
  7231                           
  7232     07F2  0876               	movf	___flneg@f1+3,w
  7233     07F3  0475               	iorwf	___flneg@f1+2,w
  7234     07F4  0474               	iorwf	___flneg@f1+1,w
  7235     07F5  0473               	iorwf	___flneg@f1,w
  7236     07F6  1903               	skipnz
  7237     07F7  2FF9               	goto	u5061
  7238     07F8  2FFA               	goto	u5060
  7239     07F9                     u5061:
  7240     07F9  2FFC               	goto	l3338
  7241     07FA                     u5060:
  7242     07FA                     l3336:
  7243     07FA  3080               	movlw	128
  7244     07FB  06F6               	xorwf	___flneg@f1+3,f
  7245     07FC                     l3338:
  7246     07FC                     l642:
  7247     07FC  0008               	return
  7248     07FD                     __end_of___flneg:
  7249                           
  7250                           	psect	text17
  7251     1DED                     __ptext17:	
  7252 ;; *************** function ___flge *****************
  7253 ;; Defined at:
  7254 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\flge.c"
  7255 ;; Parameters:    Size  Location     Type
  7256 ;;  ff1             4    0[BANK0 ] long 
  7257 ;;  ff2             4    4[BANK0 ] long 
  7258 ;; Auto vars:     Size  Location     Type
  7259 ;;		None
  7260 ;; Return value:  Size  Location     Type
  7261 ;;		None               void
  7262 ;; Registers used:
  7263 ;;		wreg, status,2, status,0
  7264 ;; Tracked objects:
  7265 ;;		On entry : 0/0
  7266 ;;		On exit  : 0/0
  7267 ;;		Unchanged: 0/0
  7268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7269 ;;      Params:         0       8       0       0       0
  7270 ;;      Locals:         0       0       0       0       0
  7271 ;;      Temps:          4       0       0       0       0
  7272 ;;      Totals:         4       8       0       0       0
  7273 ;;Total ram usage:       12 bytes
  7274 ;; Hardware stack levels used: 1
  7275 ;; Hardware stack levels required when called: 1
  7276 ;; This function calls:
  7277 ;;		Nothing
  7278 ;; This function is called by:
  7279 ;;		_sprintf
  7280 ;; This function uses a non-reentrant model
  7281 ;;
  7282                           
  7283     1DED                     ___flge:	
  7284                           ;psect for function ___flge
  7285                           
  7286     1DED                     l4306:	
  7287                           ;incstack = 0
  7288                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7289                           
  7290     1DED  3000               	movlw	0
  7291     1DEE  1283               	bcf	3,5	;RP0=0, select bank0
  7292     1DEF  1303               	bcf	3,6	;RP1=0, select bank0
  7293     1DF0  0520               	andwf	___flge@ff1,w
  7294     1DF1  00F3               	movwf	??___flge
  7295     1DF2  3000               	movlw	0
  7296     1DF3  0521               	andwf	___flge@ff1+1,w
  7297     1DF4  00F4               	movwf	??___flge+1
  7298     1DF5  3080               	movlw	128
  7299     1DF6  0522               	andwf	___flge@ff1+2,w
  7300     1DF7  00F5               	movwf	??___flge+2
  7301     1DF8  307F               	movlw	127
  7302     1DF9  0523               	andwf	___flge@ff1+3,w
  7303     1DFA  00F6               	movwf	??___flge+3
  7304     1DFB  0876               	movf	??___flge+3,w
  7305     1DFC  0475               	iorwf	??___flge+2,w
  7306     1DFD  0474               	iorwf	??___flge+1,w
  7307     1DFE  0473               	iorwf	??___flge,w
  7308     1DFF  1D03               	skipz
  7309     1E00  2E02               	goto	u6911
  7310     1E01  2E03               	goto	u6910
  7311     1E02                     u6911:
  7312     1E02  2E0B               	goto	l634
  7313     1E03                     u6910:
  7314     1E03                     l4308:
  7315     1E03  3000               	movlw	0
  7316     1E04  00A3               	movwf	___flge@ff1+3
  7317     1E05  3000               	movlw	0
  7318     1E06  00A2               	movwf	___flge@ff1+2
  7319     1E07  3000               	movlw	0
  7320     1E08  00A1               	movwf	___flge@ff1+1
  7321     1E09  3000               	movlw	0
  7322     1E0A  00A0               	movwf	___flge@ff1
  7323     1E0B                     l634:
  7324     1E0B  3000               	movlw	0
  7325     1E0C  0524               	andwf	___flge@ff2,w
  7326     1E0D  00F3               	movwf	??___flge
  7327     1E0E  3000               	movlw	0
  7328     1E0F  0525               	andwf	___flge@ff2+1,w
  7329     1E10  00F4               	movwf	??___flge+1
  7330     1E11  3080               	movlw	128
  7331     1E12  0526               	andwf	___flge@ff2+2,w
  7332     1E13  00F5               	movwf	??___flge+2
  7333     1E14  307F               	movlw	127
  7334     1E15  0527               	andwf	___flge@ff2+3,w
  7335     1E16  00F6               	movwf	??___flge+3
  7336     1E17  0876               	movf	??___flge+3,w
  7337     1E18  0475               	iorwf	??___flge+2,w
  7338     1E19  0474               	iorwf	??___flge+1,w
  7339     1E1A  0473               	iorwf	??___flge,w
  7340     1E1B  1D03               	skipz
  7341     1E1C  2E1E               	goto	u6921
  7342     1E1D  2E1F               	goto	u6920
  7343     1E1E                     u6921:
  7344     1E1E  2E27               	goto	l4312
  7345     1E1F                     u6920:
  7346     1E1F                     l4310:
  7347     1E1F  3000               	movlw	0
  7348     1E20  00A7               	movwf	___flge@ff2+3
  7349     1E21  3000               	movlw	0
  7350     1E22  00A6               	movwf	___flge@ff2+2
  7351     1E23  3000               	movlw	0
  7352     1E24  00A5               	movwf	___flge@ff2+1
  7353     1E25  3000               	movlw	0
  7354     1E26  00A4               	movwf	___flge@ff2
  7355     1E27                     l4312:
  7356     1E27  1FA3               	btfss	___flge@ff1+3,7
  7357     1E28  2E2A               	goto	u6931
  7358     1E29  2E2B               	goto	u6930
  7359     1E2A                     u6931:
  7360     1E2A  2E4F               	goto	l4316
  7361     1E2B                     u6930:
  7362     1E2B                     l4314:
  7363     1E2B  3000               	movlw	0
  7364     1E2C  00F3               	movwf	??___flge
  7365     1E2D  3000               	movlw	0
  7366     1E2E  00F4               	movwf	??___flge+1
  7367     1E2F  3000               	movlw	0
  7368     1E30  00F5               	movwf	??___flge+2
  7369     1E31  3080               	movlw	128
  7370     1E32  00F6               	movwf	??___flge+3
  7371     1E33  0820               	movf	___flge@ff1,w
  7372     1E34  02F3               	subwf	??___flge,f
  7373     1E35  0821               	movf	___flge@ff1+1,w
  7374     1E36  1C03               	skipc
  7375     1E37  0F21               	incfsz	___flge@ff1+1,w
  7376     1E38  2E3A               	goto	u6941
  7377     1E39  2E3B               	goto	u6942
  7378     1E3A                     u6941:
  7379     1E3A  02F4               	subwf	??___flge+1,f
  7380     1E3B                     u6942:
  7381     1E3B  0822               	movf	___flge@ff1+2,w
  7382     1E3C  1C03               	skipc
  7383     1E3D  0F22               	incfsz	___flge@ff1+2,w
  7384     1E3E  2E40               	goto	u6943
  7385     1E3F  2E41               	goto	u6944
  7386     1E40                     u6943:
  7387     1E40  02F5               	subwf	??___flge+2,f
  7388     1E41                     u6944:
  7389     1E41  0823               	movf	___flge@ff1+3,w
  7390     1E42  1C03               	skipc
  7391     1E43  0F23               	incfsz	___flge@ff1+3,w
  7392     1E44  2E46               	goto	u6945
  7393     1E45  2E47               	goto	u6946
  7394     1E46                     u6945:
  7395     1E46  02F6               	subwf	??___flge+3,f
  7396     1E47                     u6946:
  7397     1E47  0876               	movf	??___flge+3,w
  7398     1E48  00A3               	movwf	___flge@ff1+3
  7399     1E49  0875               	movf	??___flge+2,w
  7400     1E4A  00A2               	movwf	___flge@ff1+2
  7401     1E4B  0874               	movf	??___flge+1,w
  7402     1E4C  00A1               	movwf	___flge@ff1+1
  7403     1E4D  0873               	movf	??___flge,w
  7404     1E4E  00A0               	movwf	___flge@ff1
  7405     1E4F                     l4316:
  7406     1E4F  1FA7               	btfss	___flge@ff2+3,7
  7407     1E50  2E52               	goto	u6951
  7408     1E51  2E53               	goto	u6950
  7409     1E52                     u6951:
  7410     1E52  2E77               	goto	l637
  7411     1E53                     u6950:
  7412     1E53                     l4318:
  7413     1E53  3000               	movlw	0
  7414     1E54  00F3               	movwf	??___flge
  7415     1E55  3000               	movlw	0
  7416     1E56  00F4               	movwf	??___flge+1
  7417     1E57  3000               	movlw	0
  7418     1E58  00F5               	movwf	??___flge+2
  7419     1E59  3080               	movlw	128
  7420     1E5A  00F6               	movwf	??___flge+3
  7421     1E5B  0824               	movf	___flge@ff2,w
  7422     1E5C  02F3               	subwf	??___flge,f
  7423     1E5D  0825               	movf	___flge@ff2+1,w
  7424     1E5E  1C03               	skipc
  7425     1E5F  0F25               	incfsz	___flge@ff2+1,w
  7426     1E60  2E62               	goto	u6961
  7427     1E61  2E63               	goto	u6962
  7428     1E62                     u6961:
  7429     1E62  02F4               	subwf	??___flge+1,f
  7430     1E63                     u6962:
  7431     1E63  0826               	movf	___flge@ff2+2,w
  7432     1E64  1C03               	skipc
  7433     1E65  0F26               	incfsz	___flge@ff2+2,w
  7434     1E66  2E68               	goto	u6963
  7435     1E67  2E69               	goto	u6964
  7436     1E68                     u6963:
  7437     1E68  02F5               	subwf	??___flge+2,f
  7438     1E69                     u6964:
  7439     1E69  0827               	movf	___flge@ff2+3,w
  7440     1E6A  1C03               	skipc
  7441     1E6B  0F27               	incfsz	___flge@ff2+3,w
  7442     1E6C  2E6E               	goto	u6965
  7443     1E6D  2E6F               	goto	u6966
  7444     1E6E                     u6965:
  7445     1E6E  02F6               	subwf	??___flge+3,f
  7446     1E6F                     u6966:
  7447     1E6F  0876               	movf	??___flge+3,w
  7448     1E70  00A7               	movwf	___flge@ff2+3
  7449     1E71  0875               	movf	??___flge+2,w
  7450     1E72  00A6               	movwf	___flge@ff2+2
  7451     1E73  0874               	movf	??___flge+1,w
  7452     1E74  00A5               	movwf	___flge@ff2+1
  7453     1E75  0873               	movf	??___flge,w
  7454     1E76  00A4               	movwf	___flge@ff2
  7455     1E77                     l637:
  7456     1E77  3080               	movlw	128
  7457     1E78  06A3               	xorwf	___flge@ff1+3,f
  7458     1E79  3080               	movlw	128
  7459     1E7A  06A7               	xorwf	___flge@ff2+3,f
  7460     1E7B  0827               	movf	___flge@ff2+3,w
  7461     1E7C  0223               	subwf	___flge@ff1+3,w
  7462     1E7D  1D03               	skipz
  7463     1E7E  2E89               	goto	u6975
  7464     1E7F  0826               	movf	___flge@ff2+2,w
  7465     1E80  0222               	subwf	___flge@ff1+2,w
  7466     1E81  1D03               	skipz
  7467     1E82  2E89               	goto	u6975
  7468     1E83  0825               	movf	___flge@ff2+1,w
  7469     1E84  0221               	subwf	___flge@ff1+1,w
  7470     1E85  1D03               	skipz
  7471     1E86  2E89               	goto	u6975
  7472     1E87  0824               	movf	___flge@ff2,w
  7473     1E88  0220               	subwf	___flge@ff1,w
  7474     1E89                     u6975:
  7475     1E89  1803               	skipnc
  7476     1E8A  2E8C               	goto	u6971
  7477     1E8B  2E8D               	goto	u6970
  7478     1E8C                     u6971:
  7479     1E8C  2E8F               	goto	l4322
  7480     1E8D                     u6970:
  7481     1E8D                     l4320:
  7482     1E8D  1003               	clrc
  7483     1E8E  2E90               	goto	l638
  7484     1E8F                     l4322:
  7485     1E8F  1403               	setc
  7486     1E90                     l638:
  7487     1E90  0008               	return
  7488     1E91                     __end_of___flge:
  7489                           
  7490                           	psect	text18
  7491     1BB6                     __ptext18:	
  7492 ;; *************** function ___fleq *****************
  7493 ;; Defined at:
  7494 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fleq.c"
  7495 ;; Parameters:    Size  Location     Type
  7496 ;;  ff1             4    0[BANK0 ] long 
  7497 ;;  ff2             4    4[BANK0 ] long 
  7498 ;; Auto vars:     Size  Location     Type
  7499 ;;		None
  7500 ;; Return value:  Size  Location     Type
  7501 ;;		None               void
  7502 ;; Registers used:
  7503 ;;		wreg, status,2, status,0
  7504 ;; Tracked objects:
  7505 ;;		On entry : 0/0
  7506 ;;		On exit  : 0/0
  7507 ;;		Unchanged: 0/0
  7508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7509 ;;      Params:         0       8       0       0       0
  7510 ;;      Locals:         0       0       0       0       0
  7511 ;;      Temps:          4       0       0       0       0
  7512 ;;      Totals:         4       8       0       0       0
  7513 ;;Total ram usage:       12 bytes
  7514 ;; Hardware stack levels used: 1
  7515 ;; Hardware stack levels required when called: 1
  7516 ;; This function calls:
  7517 ;;		Nothing
  7518 ;; This function is called by:
  7519 ;;		_sprintf
  7520 ;; This function uses a non-reentrant model
  7521 ;;
  7522                           
  7523     1BB6                     ___fleq:	
  7524                           ;psect for function ___fleq
  7525                           
  7526     1BB6                     l4294:	
  7527                           ;incstack = 0
  7528                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7529                           
  7530     1BB6  3000               	movlw	0
  7531     1BB7  1283               	bcf	3,5	;RP0=0, select bank0
  7532     1BB8  1303               	bcf	3,6	;RP1=0, select bank0
  7533     1BB9  0520               	andwf	___fleq@ff1,w
  7534     1BBA  00F3               	movwf	??___fleq
  7535     1BBB  3000               	movlw	0
  7536     1BBC  0521               	andwf	___fleq@ff1+1,w
  7537     1BBD  00F4               	movwf	??___fleq+1
  7538     1BBE  3080               	movlw	128
  7539     1BBF  0522               	andwf	___fleq@ff1+2,w
  7540     1BC0  00F5               	movwf	??___fleq+2
  7541     1BC1  307F               	movlw	127
  7542     1BC2  0523               	andwf	___fleq@ff1+3,w
  7543     1BC3  00F6               	movwf	??___fleq+3
  7544     1BC4  0876               	movf	??___fleq+3,w
  7545     1BC5  0475               	iorwf	??___fleq+2,w
  7546     1BC6  0474               	iorwf	??___fleq+1,w
  7547     1BC7  0473               	iorwf	??___fleq,w
  7548     1BC8  1D03               	skipz
  7549     1BC9  2BCB               	goto	u6881
  7550     1BCA  2BCC               	goto	u6880
  7551     1BCB                     u6881:
  7552     1BCB  2BD4               	goto	l629
  7553     1BCC                     u6880:
  7554     1BCC                     l4296:
  7555     1BCC  3000               	movlw	0
  7556     1BCD  00A3               	movwf	___fleq@ff1+3
  7557     1BCE  3000               	movlw	0
  7558     1BCF  00A2               	movwf	___fleq@ff1+2
  7559     1BD0  3000               	movlw	0
  7560     1BD1  00A1               	movwf	___fleq@ff1+1
  7561     1BD2  3000               	movlw	0
  7562     1BD3  00A0               	movwf	___fleq@ff1
  7563     1BD4                     l629:
  7564     1BD4  3000               	movlw	0
  7565     1BD5  0524               	andwf	___fleq@ff2,w
  7566     1BD6  00F3               	movwf	??___fleq
  7567     1BD7  3000               	movlw	0
  7568     1BD8  0525               	andwf	___fleq@ff2+1,w
  7569     1BD9  00F4               	movwf	??___fleq+1
  7570     1BDA  3080               	movlw	128
  7571     1BDB  0526               	andwf	___fleq@ff2+2,w
  7572     1BDC  00F5               	movwf	??___fleq+2
  7573     1BDD  307F               	movlw	127
  7574     1BDE  0527               	andwf	___fleq@ff2+3,w
  7575     1BDF  00F6               	movwf	??___fleq+3
  7576     1BE0  0876               	movf	??___fleq+3,w
  7577     1BE1  0475               	iorwf	??___fleq+2,w
  7578     1BE2  0474               	iorwf	??___fleq+1,w
  7579     1BE3  0473               	iorwf	??___fleq,w
  7580     1BE4  1D03               	skipz
  7581     1BE5  2BE7               	goto	u6891
  7582     1BE6  2BE8               	goto	u6890
  7583     1BE7                     u6891:
  7584     1BE7  2BF0               	goto	l630
  7585     1BE8                     u6890:
  7586     1BE8                     l4298:
  7587     1BE8  3000               	movlw	0
  7588     1BE9  00A7               	movwf	___fleq@ff2+3
  7589     1BEA  3000               	movlw	0
  7590     1BEB  00A6               	movwf	___fleq@ff2+2
  7591     1BEC  3000               	movlw	0
  7592     1BED  00A5               	movwf	___fleq@ff2+1
  7593     1BEE  3000               	movlw	0
  7594     1BEF  00A4               	movwf	___fleq@ff2
  7595     1BF0                     l630:
  7596     1BF0  0827               	movf	___fleq@ff2+3,w
  7597     1BF1  0623               	xorwf	___fleq@ff1+3,w
  7598     1BF2  1D03               	skipz
  7599     1BF3  2BFE               	goto	u6905
  7600     1BF4  0826               	movf	___fleq@ff2+2,w
  7601     1BF5  0622               	xorwf	___fleq@ff1+2,w
  7602     1BF6  1D03               	skipz
  7603     1BF7  2BFE               	goto	u6905
  7604     1BF8  0825               	movf	___fleq@ff2+1,w
  7605     1BF9  0621               	xorwf	___fleq@ff1+1,w
  7606     1BFA  1D03               	skipz
  7607     1BFB  2BFE               	goto	u6905
  7608     1BFC  0824               	movf	___fleq@ff2,w
  7609     1BFD  0620               	xorwf	___fleq@ff1,w
  7610     1BFE                     u6905:
  7611     1BFE  1903               	skipnz
  7612     1BFF  2C01               	goto	u6901
  7613     1C00  2C02               	goto	u6900
  7614     1C01                     u6901:
  7615     1C01  2C04               	goto	l4302
  7616     1C02                     u6900:
  7617     1C02                     l4300:
  7618     1C02  1003               	clrc
  7619     1C03  2C05               	goto	l631
  7620     1C04                     l4302:
  7621     1C04  1403               	setc
  7622     1C05                     l631:
  7623     1C05  0008               	return
  7624     1C06                     __end_of___fleq:
  7625                           
  7626                           	psect	text19
  7627     10D7                     __ptext19:	
  7628 ;; *************** function _map *****************
  7629 ;; Defined at:
  7630 ;;		line 39 in file "adc.c"
  7631 ;; Parameters:    Size  Location     Type
  7632 ;;  x               4   34[BANK1 ] float 
  7633 ;;  in_min          4   38[BANK1 ] float 
  7634 ;;  in_max          4   42[BANK1 ] float 
  7635 ;;  out_min         4   46[BANK1 ] float 
  7636 ;;  out_max         4   50[BANK1 ] float 
  7637 ;; Auto vars:     Size  Location     Type
  7638 ;;		None
  7639 ;; Return value:  Size  Location     Type
  7640 ;;                  4   34[BANK1 ] float 
  7641 ;; Registers used:
  7642 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7643 ;; Tracked objects:
  7644 ;;		On entry : 0/0
  7645 ;;		On exit  : 0/0
  7646 ;;		Unchanged: 0/0
  7647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7648 ;;      Params:         0       0      20       0       0
  7649 ;;      Locals:         0       0       4       0       0
  7650 ;;      Temps:          0       0       0       0       0
  7651 ;;      Totals:         0       0      24       0       0
  7652 ;;Total ram usage:       24 bytes
  7653 ;; Hardware stack levels used: 1
  7654 ;; Hardware stack levels required when called: 3
  7655 ;; This function calls:
  7656 ;;		___fladd
  7657 ;;		___fldiv
  7658 ;;		___flmul
  7659 ;;		___flsub
  7660 ;; This function is called by:
  7661 ;;		_main
  7662 ;; This function uses a non-reentrant model
  7663 ;;
  7664                           
  7665     10D7                     _map:	
  7666                           ;psect for function _map
  7667                           
  7668     10D7                     l4542:	
  7669                           ;incstack = 0
  7670                           ; Regs used in _map: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7671                           
  7672                           
  7673                           ;adc.c: 39: float map(float x, float in_min, float in_max, float out_min, float out_max)
      +                          ;adc.c: 40: {;adc.c: 41:   return (x - in_min) * (out_max - out_min) / (in_max - in_min)
      +                           + out_min;
  7674     10D7  1683               	bsf	3,5	;RP0=1, select bank1
  7675     10D8  1303               	bcf	3,6	;RP1=0, select bank1
  7676     10D9  0849               	movf	(map@in_min+3)^(0+128),w
  7677     10DA  00A3               	movwf	(___flsub@a+3)^(0+128)
  7678     10DB  0848               	movf	(map@in_min+2)^(0+128),w
  7679     10DC  00A2               	movwf	(___flsub@a+2)^(0+128)
  7680     10DD  0847               	movf	(map@in_min+1)^(0+128),w
  7681     10DE  00A1               	movwf	(___flsub@a+1)^(0+128)
  7682     10DF  0846               	movf	map@in_min^(0+128),w
  7683     10E0  00A0               	movwf	___flsub@a^(0+128)
  7684     10E1  084D               	movf	(map@in_max+3)^(0+128),w
  7685     10E2  00A7               	movwf	(___flsub@b+3)^(0+128)
  7686     10E3  084C               	movf	(map@in_max+2)^(0+128),w
  7687     10E4  00A6               	movwf	(___flsub@b+2)^(0+128)
  7688     10E5  084B               	movf	(map@in_max+1)^(0+128),w
  7689     10E6  00A5               	movwf	(___flsub@b+1)^(0+128)
  7690     10E7  084A               	movf	map@in_max^(0+128),w
  7691     10E8  00A4               	movwf	___flsub@b^(0+128)
  7692     10E9  160A  158A  2366  160A  118A  	fcall	___flsub
  7693     10EE  1683               	bsf	3,5	;RP0=1, select bank1
  7694     10EF  1303               	bcf	3,6	;RP1=0, select bank1
  7695     10F0  0823               	movf	(?___flsub+3)^(0+128),w
  7696     10F1  00AB               	movwf	(___fldiv@a+3)^(0+128)
  7697     10F2  0822               	movf	(?___flsub+2)^(0+128),w
  7698     10F3  00AA               	movwf	(___fldiv@a+2)^(0+128)
  7699     10F4  0821               	movf	(?___flsub+1)^(0+128),w
  7700     10F5  00A9               	movwf	(___fldiv@a+1)^(0+128)
  7701     10F6  0820               	movf	?___flsub^(0+128),w
  7702     10F7  00A8               	movwf	___fldiv@a^(0+128)
  7703     10F8  0851               	movf	(map@out_min+3)^(0+128),w
  7704     10F9  00A3               	movwf	(___flsub@a+3)^(0+128)
  7705     10FA  0850               	movf	(map@out_min+2)^(0+128),w
  7706     10FB  00A2               	movwf	(___flsub@a+2)^(0+128)
  7707     10FC  084F               	movf	(map@out_min+1)^(0+128),w
  7708     10FD  00A1               	movwf	(___flsub@a+1)^(0+128)
  7709     10FE  084E               	movf	map@out_min^(0+128),w
  7710     10FF  00A0               	movwf	___flsub@a^(0+128)
  7711     1100  0855               	movf	(map@out_max+3)^(0+128),w
  7712     1101  00A7               	movwf	(___flsub@b+3)^(0+128)
  7713     1102  0854               	movf	(map@out_max+2)^(0+128),w
  7714     1103  00A6               	movwf	(___flsub@b+2)^(0+128)
  7715     1104  0853               	movf	(map@out_max+1)^(0+128),w
  7716     1105  00A5               	movwf	(___flsub@b+1)^(0+128)
  7717     1106  0852               	movf	map@out_max^(0+128),w
  7718     1107  00A4               	movwf	___flsub@b^(0+128)
  7719     1108  160A  158A  2366  160A  118A  	fcall	___flsub
  7720     110D  1683               	bsf	3,5	;RP0=1, select bank1
  7721     110E  1303               	bcf	3,6	;RP1=0, select bank1
  7722     110F  0823               	movf	(?___flsub+3)^(0+128),w
  7723     1110  1283               	bcf	3,5	;RP0=0, select bank0
  7724     1111  1303               	bcf	3,6	;RP1=0, select bank0
  7725     1112  00AD               	movwf	___flmul@b+3
  7726     1113  1683               	bsf	3,5	;RP0=1, select bank1
  7727     1114  1303               	bcf	3,6	;RP1=0, select bank1
  7728     1115  0822               	movf	(?___flsub+2)^(0+128),w
  7729     1116  1283               	bcf	3,5	;RP0=0, select bank0
  7730     1117  1303               	bcf	3,6	;RP1=0, select bank0
  7731     1118  00AC               	movwf	___flmul@b+2
  7732     1119  1683               	bsf	3,5	;RP0=1, select bank1
  7733     111A  1303               	bcf	3,6	;RP1=0, select bank1
  7734     111B  0821               	movf	(?___flsub+1)^(0+128),w
  7735     111C  1283               	bcf	3,5	;RP0=0, select bank0
  7736     111D  1303               	bcf	3,6	;RP1=0, select bank0
  7737     111E  00AB               	movwf	___flmul@b+1
  7738     111F  1683               	bsf	3,5	;RP0=1, select bank1
  7739     1120  1303               	bcf	3,6	;RP1=0, select bank1
  7740     1121  0820               	movf	?___flsub^(0+128),w
  7741     1122  1283               	bcf	3,5	;RP0=0, select bank0
  7742     1123  1303               	bcf	3,6	;RP1=0, select bank0
  7743     1124  00AA               	movwf	___flmul@b
  7744     1125  1683               	bsf	3,5	;RP0=1, select bank1
  7745     1126  1303               	bcf	3,6	;RP1=0, select bank1
  7746     1127  0849               	movf	(map@in_min+3)^(0+128),w
  7747     1128  00A3               	movwf	(___flsub@a+3)^(0+128)
  7748     1129  0848               	movf	(map@in_min+2)^(0+128),w
  7749     112A  00A2               	movwf	(___flsub@a+2)^(0+128)
  7750     112B  0847               	movf	(map@in_min+1)^(0+128),w
  7751     112C  00A1               	movwf	(___flsub@a+1)^(0+128)
  7752     112D  0846               	movf	map@in_min^(0+128),w
  7753     112E  00A0               	movwf	___flsub@a^(0+128)
  7754     112F  0845               	movf	(map@x+3)^(0+128),w
  7755     1130  00A7               	movwf	(___flsub@b+3)^(0+128)
  7756     1131  0844               	movf	(map@x+2)^(0+128),w
  7757     1132  00A6               	movwf	(___flsub@b+2)^(0+128)
  7758     1133  0843               	movf	(map@x+1)^(0+128),w
  7759     1134  00A5               	movwf	(___flsub@b+1)^(0+128)
  7760     1135  0842               	movf	map@x^(0+128),w
  7761     1136  00A4               	movwf	___flsub@b^(0+128)
  7762     1137  160A  158A  2366  160A  118A  	fcall	___flsub
  7763     113C  1683               	bsf	3,5	;RP0=1, select bank1
  7764     113D  1303               	bcf	3,6	;RP1=0, select bank1
  7765     113E  0823               	movf	(?___flsub+3)^(0+128),w
  7766     113F  1283               	bcf	3,5	;RP0=0, select bank0
  7767     1140  1303               	bcf	3,6	;RP1=0, select bank0
  7768     1141  00B1               	movwf	___flmul@a+3
  7769     1142  1683               	bsf	3,5	;RP0=1, select bank1
  7770     1143  1303               	bcf	3,6	;RP1=0, select bank1
  7771     1144  0822               	movf	(?___flsub+2)^(0+128),w
  7772     1145  1283               	bcf	3,5	;RP0=0, select bank0
  7773     1146  1303               	bcf	3,6	;RP1=0, select bank0
  7774     1147  00B0               	movwf	___flmul@a+2
  7775     1148  1683               	bsf	3,5	;RP0=1, select bank1
  7776     1149  1303               	bcf	3,6	;RP1=0, select bank1
  7777     114A  0821               	movf	(?___flsub+1)^(0+128),w
  7778     114B  1283               	bcf	3,5	;RP0=0, select bank0
  7779     114C  1303               	bcf	3,6	;RP1=0, select bank0
  7780     114D  00AF               	movwf	___flmul@a+1
  7781     114E  1683               	bsf	3,5	;RP0=1, select bank1
  7782     114F  1303               	bcf	3,6	;RP1=0, select bank1
  7783     1150  0820               	movf	?___flsub^(0+128),w
  7784     1151  1283               	bcf	3,5	;RP0=0, select bank0
  7785     1152  1303               	bcf	3,6	;RP1=0, select bank0
  7786     1153  00AE               	movwf	___flmul@a
  7787     1154  120A  158A  2158  160A  118A  	fcall	___flmul
  7788     1159  1283               	bcf	3,5	;RP0=0, select bank0
  7789     115A  1303               	bcf	3,6	;RP1=0, select bank0
  7790     115B  082D               	movf	?___flmul+3,w
  7791     115C  1683               	bsf	3,5	;RP0=1, select bank1
  7792     115D  1303               	bcf	3,6	;RP1=0, select bank1
  7793     115E  00AF               	movwf	(___fldiv@b+3)^(0+128)
  7794     115F  1283               	bcf	3,5	;RP0=0, select bank0
  7795     1160  1303               	bcf	3,6	;RP1=0, select bank0
  7796     1161  082C               	movf	?___flmul+2,w
  7797     1162  1683               	bsf	3,5	;RP0=1, select bank1
  7798     1163  1303               	bcf	3,6	;RP1=0, select bank1
  7799     1164  00AE               	movwf	(___fldiv@b+2)^(0+128)
  7800     1165  1283               	bcf	3,5	;RP0=0, select bank0
  7801     1166  1303               	bcf	3,6	;RP1=0, select bank0
  7802     1167  082B               	movf	?___flmul+1,w
  7803     1168  1683               	bsf	3,5	;RP0=1, select bank1
  7804     1169  1303               	bcf	3,6	;RP1=0, select bank1
  7805     116A  00AD               	movwf	(___fldiv@b+1)^(0+128)
  7806     116B  1283               	bcf	3,5	;RP0=0, select bank0
  7807     116C  1303               	bcf	3,6	;RP1=0, select bank0
  7808     116D  082A               	movf	?___flmul,w
  7809     116E  1683               	bsf	3,5	;RP0=1, select bank1
  7810     116F  1303               	bcf	3,6	;RP1=0, select bank1
  7811     1170  00AC               	movwf	___fldiv@b^(0+128)
  7812     1171  160A  118A  21CC  160A  118A  	fcall	___fldiv
  7813     1176  1683               	bsf	3,5	;RP0=1, select bank1
  7814     1177  1303               	bcf	3,6	;RP1=0, select bank1
  7815     1178  082B               	movf	(?___fldiv+3)^(0+128),w
  7816     1179  00D9               	movwf	(_map$1362+3)^(0+128)
  7817     117A  082A               	movf	(?___fldiv+2)^(0+128),w
  7818     117B  00D8               	movwf	(_map$1362+2)^(0+128)
  7819     117C  0829               	movf	(?___fldiv+1)^(0+128),w
  7820     117D  00D7               	movwf	(_map$1362+1)^(0+128)
  7821     117E  0828               	movf	?___fldiv^(0+128),w
  7822     117F  00D6               	movwf	_map$1362^(0+128)
  7823                           
  7824                           ;adc.c: 39: float map(float x, float in_min, float in_max, float out_min, float out_max)
      +                          ;adc.c: 40: {;adc.c: 41:   return (x - in_min) * (out_max - out_min) / (in_max - in_min)
      +                           + out_min;
  7825     1180  0851               	movf	(map@out_min+3)^(0+128),w
  7826     1181  1283               	bcf	3,5	;RP0=0, select bank0
  7827     1182  1303               	bcf	3,6	;RP1=0, select bank0
  7828     1183  00DB               	movwf	___fladd@b+3
  7829     1184  1683               	bsf	3,5	;RP0=1, select bank1
  7830     1185  1303               	bcf	3,6	;RP1=0, select bank1
  7831     1186  0850               	movf	(map@out_min+2)^(0+128),w
  7832     1187  1283               	bcf	3,5	;RP0=0, select bank0
  7833     1188  1303               	bcf	3,6	;RP1=0, select bank0
  7834     1189  00DA               	movwf	___fladd@b+2
  7835     118A  1683               	bsf	3,5	;RP0=1, select bank1
  7836     118B  1303               	bcf	3,6	;RP1=0, select bank1
  7837     118C  084F               	movf	(map@out_min+1)^(0+128),w
  7838     118D  1283               	bcf	3,5	;RP0=0, select bank0
  7839     118E  1303               	bcf	3,6	;RP1=0, select bank0
  7840     118F  00D9               	movwf	___fladd@b+1
  7841     1190  1683               	bsf	3,5	;RP0=1, select bank1
  7842     1191  1303               	bcf	3,6	;RP1=0, select bank1
  7843     1192  084E               	movf	map@out_min^(0+128),w
  7844     1193  1283               	bcf	3,5	;RP0=0, select bank0
  7845     1194  1303               	bcf	3,6	;RP1=0, select bank0
  7846     1195  00D8               	movwf	___fladd@b
  7847     1196  1683               	bsf	3,5	;RP0=1, select bank1
  7848     1197  1303               	bcf	3,6	;RP1=0, select bank1
  7849     1198  0859               	movf	(_map$1362+3)^(0+128),w
  7850     1199  1283               	bcf	3,5	;RP0=0, select bank0
  7851     119A  1303               	bcf	3,6	;RP1=0, select bank0
  7852     119B  00DF               	movwf	___fladd@a+3
  7853     119C  1683               	bsf	3,5	;RP0=1, select bank1
  7854     119D  1303               	bcf	3,6	;RP1=0, select bank1
  7855     119E  0858               	movf	(_map$1362+2)^(0+128),w
  7856     119F  1283               	bcf	3,5	;RP0=0, select bank0
  7857     11A0  1303               	bcf	3,6	;RP1=0, select bank0
  7858     11A1  00DE               	movwf	___fladd@a+2
  7859     11A2  1683               	bsf	3,5	;RP0=1, select bank1
  7860     11A3  1303               	bcf	3,6	;RP1=0, select bank1
  7861     11A4  0857               	movf	(_map$1362+1)^(0+128),w
  7862     11A5  1283               	bcf	3,5	;RP0=0, select bank0
  7863     11A6  1303               	bcf	3,6	;RP1=0, select bank0
  7864     11A7  00DD               	movwf	___fladd@a+1
  7865     11A8  1683               	bsf	3,5	;RP0=1, select bank1
  7866     11A9  1303               	bcf	3,6	;RP1=0, select bank1
  7867     11AA  0856               	movf	_map$1362^(0+128),w
  7868     11AB  1283               	bcf	3,5	;RP0=0, select bank0
  7869     11AC  1303               	bcf	3,6	;RP1=0, select bank0
  7870     11AD  00DC               	movwf	___fladd@a
  7871     11AE  160A  118A  25A8  160A  118A  	fcall	___fladd
  7872     11B3  1283               	bcf	3,5	;RP0=0, select bank0
  7873     11B4  1303               	bcf	3,6	;RP1=0, select bank0
  7874     11B5  085B               	movf	?___fladd+3,w
  7875     11B6  1683               	bsf	3,5	;RP0=1, select bank1
  7876     11B7  1303               	bcf	3,6	;RP1=0, select bank1
  7877     11B8  00C5               	movwf	(?_map+3)^(0+128)
  7878     11B9  1283               	bcf	3,5	;RP0=0, select bank0
  7879     11BA  1303               	bcf	3,6	;RP1=0, select bank0
  7880     11BB  085A               	movf	?___fladd+2,w
  7881     11BC  1683               	bsf	3,5	;RP0=1, select bank1
  7882     11BD  1303               	bcf	3,6	;RP1=0, select bank1
  7883     11BE  00C4               	movwf	(?_map+2)^(0+128)
  7884     11BF  1283               	bcf	3,5	;RP0=0, select bank0
  7885     11C0  1303               	bcf	3,6	;RP1=0, select bank0
  7886     11C1  0859               	movf	?___fladd+1,w
  7887     11C2  1683               	bsf	3,5	;RP0=1, select bank1
  7888     11C3  1303               	bcf	3,6	;RP1=0, select bank1
  7889     11C4  00C3               	movwf	(?_map+1)^(0+128)
  7890     11C5  1283               	bcf	3,5	;RP0=0, select bank0
  7891     11C6  1303               	bcf	3,6	;RP1=0, select bank0
  7892     11C7  0858               	movf	?___fladd,w
  7893     11C8  1683               	bsf	3,5	;RP0=1, select bank1
  7894     11C9  1303               	bcf	3,6	;RP1=0, select bank1
  7895     11CA  00C2               	movwf	?_map^(0+128)
  7896     11CB                     l32:
  7897     11CB  0008               	return
  7898     11CC                     __end_of_map:
  7899                           
  7900                           	psect	text20
  7901     1B66                     __ptext20:	
  7902 ;; *************** function ___flsub *****************
  7903 ;; Defined at:
  7904 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcadd.c"
  7905 ;; Parameters:    Size  Location     Type
  7906 ;;  a               4    0[BANK1 ] float 
  7907 ;;  b               4    4[BANK1 ] float 
  7908 ;; Auto vars:     Size  Location     Type
  7909 ;;		None
  7910 ;; Return value:  Size  Location     Type
  7911 ;;                  4    0[BANK1 ] float 
  7912 ;; Registers used:
  7913 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7914 ;; Tracked objects:
  7915 ;;		On entry : 0/0
  7916 ;;		On exit  : 0/0
  7917 ;;		Unchanged: 0/0
  7918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7919 ;;      Params:         0       0       8       0       0
  7920 ;;      Locals:         0       0       0       0       0
  7921 ;;      Temps:          0       0       0       0       0
  7922 ;;      Totals:         0       0       8       0       0
  7923 ;;Total ram usage:        8 bytes
  7924 ;; Hardware stack levels used: 1
  7925 ;; Hardware stack levels required when called: 2
  7926 ;; This function calls:
  7927 ;;		___fladd
  7928 ;; This function is called by:
  7929 ;;		_map
  7930 ;;		_sprintf
  7931 ;; This function uses a non-reentrant model
  7932 ;;
  7933                           
  7934     1B66                     ___flsub:	
  7935                           ;psect for function ___flsub
  7936                           
  7937     1B66                     l3402:	
  7938                           ;incstack = 0
  7939                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7940                           
  7941     1B66  3080               	movlw	128
  7942     1B67  1683               	bsf	3,5	;RP0=1, select bank1
  7943     1B68  1303               	bcf	3,6	;RP1=0, select bank1
  7944     1B69  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  7945     1B6A                     l3404:
  7946     1B6A  0827               	movf	(___flsub@b+3)^(0+128),w
  7947     1B6B  1283               	bcf	3,5	;RP0=0, select bank0
  7948     1B6C  1303               	bcf	3,6	;RP1=0, select bank0
  7949     1B6D  00DB               	movwf	___fladd@b+3
  7950     1B6E  1683               	bsf	3,5	;RP0=1, select bank1
  7951     1B6F  1303               	bcf	3,6	;RP1=0, select bank1
  7952     1B70  0826               	movf	(___flsub@b+2)^(0+128),w
  7953     1B71  1283               	bcf	3,5	;RP0=0, select bank0
  7954     1B72  1303               	bcf	3,6	;RP1=0, select bank0
  7955     1B73  00DA               	movwf	___fladd@b+2
  7956     1B74  1683               	bsf	3,5	;RP0=1, select bank1
  7957     1B75  1303               	bcf	3,6	;RP1=0, select bank1
  7958     1B76  0825               	movf	(___flsub@b+1)^(0+128),w
  7959     1B77  1283               	bcf	3,5	;RP0=0, select bank0
  7960     1B78  1303               	bcf	3,6	;RP1=0, select bank0
  7961     1B79  00D9               	movwf	___fladd@b+1
  7962     1B7A  1683               	bsf	3,5	;RP0=1, select bank1
  7963     1B7B  1303               	bcf	3,6	;RP1=0, select bank1
  7964     1B7C  0824               	movf	___flsub@b^(0+128),w
  7965     1B7D  1283               	bcf	3,5	;RP0=0, select bank0
  7966     1B7E  1303               	bcf	3,6	;RP1=0, select bank0
  7967     1B7F  00D8               	movwf	___fladd@b
  7968     1B80  1683               	bsf	3,5	;RP0=1, select bank1
  7969     1B81  1303               	bcf	3,6	;RP1=0, select bank1
  7970     1B82  0823               	movf	(___flsub@a+3)^(0+128),w
  7971     1B83  1283               	bcf	3,5	;RP0=0, select bank0
  7972     1B84  1303               	bcf	3,6	;RP1=0, select bank0
  7973     1B85  00DF               	movwf	___fladd@a+3
  7974     1B86  1683               	bsf	3,5	;RP0=1, select bank1
  7975     1B87  1303               	bcf	3,6	;RP1=0, select bank1
  7976     1B88  0822               	movf	(___flsub@a+2)^(0+128),w
  7977     1B89  1283               	bcf	3,5	;RP0=0, select bank0
  7978     1B8A  1303               	bcf	3,6	;RP1=0, select bank0
  7979     1B8B  00DE               	movwf	___fladd@a+2
  7980     1B8C  1683               	bsf	3,5	;RP0=1, select bank1
  7981     1B8D  1303               	bcf	3,6	;RP1=0, select bank1
  7982     1B8E  0821               	movf	(___flsub@a+1)^(0+128),w
  7983     1B8F  1283               	bcf	3,5	;RP0=0, select bank0
  7984     1B90  1303               	bcf	3,6	;RP1=0, select bank0
  7985     1B91  00DD               	movwf	___fladd@a+1
  7986     1B92  1683               	bsf	3,5	;RP0=1, select bank1
  7987     1B93  1303               	bcf	3,6	;RP1=0, select bank1
  7988     1B94  0820               	movf	___flsub@a^(0+128),w
  7989     1B95  1283               	bcf	3,5	;RP0=0, select bank0
  7990     1B96  1303               	bcf	3,6	;RP1=0, select bank0
  7991     1B97  00DC               	movwf	___fladd@a
  7992     1B98  160A  118A  25A8  160A  158A  	fcall	___fladd
  7993     1B9D  1283               	bcf	3,5	;RP0=0, select bank0
  7994     1B9E  1303               	bcf	3,6	;RP1=0, select bank0
  7995     1B9F  085B               	movf	?___fladd+3,w
  7996     1BA0  1683               	bsf	3,5	;RP0=1, select bank1
  7997     1BA1  1303               	bcf	3,6	;RP1=0, select bank1
  7998     1BA2  00A3               	movwf	(?___flsub+3)^(0+128)
  7999     1BA3  1283               	bcf	3,5	;RP0=0, select bank0
  8000     1BA4  1303               	bcf	3,6	;RP1=0, select bank0
  8001     1BA5  085A               	movf	?___fladd+2,w
  8002     1BA6  1683               	bsf	3,5	;RP0=1, select bank1
  8003     1BA7  1303               	bcf	3,6	;RP1=0, select bank1
  8004     1BA8  00A2               	movwf	(?___flsub+2)^(0+128)
  8005     1BA9  1283               	bcf	3,5	;RP0=0, select bank0
  8006     1BAA  1303               	bcf	3,6	;RP1=0, select bank0
  8007     1BAB  0859               	movf	?___fladd+1,w
  8008     1BAC  1683               	bsf	3,5	;RP0=1, select bank1
  8009     1BAD  1303               	bcf	3,6	;RP1=0, select bank1
  8010     1BAE  00A1               	movwf	(?___flsub+1)^(0+128)
  8011     1BAF  1283               	bcf	3,5	;RP0=0, select bank0
  8012     1BB0  1303               	bcf	3,6	;RP1=0, select bank0
  8013     1BB1  0858               	movf	?___fladd,w
  8014     1BB2  1683               	bsf	3,5	;RP0=1, select bank1
  8015     1BB3  1303               	bcf	3,6	;RP1=0, select bank1
  8016     1BB4  00A0               	movwf	?___flsub^(0+128)
  8017     1BB5                     l816:
  8018     1BB5  0008               	return
  8019     1BB6                     __end_of___flsub:
  8020                           
  8021                           	psect	text21
  8022     15A8                     __ptext21:	
  8023 ;; *************** function ___fladd *****************
  8024 ;; Defined at:
  8025 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcadd.c"
  8026 ;; Parameters:    Size  Location     Type
  8027 ;;  b               4   56[BANK0 ] float 
  8028 ;;  a               4   60[BANK0 ] float 
  8029 ;; Auto vars:     Size  Location     Type
  8030 ;;  grs             1   75[BANK0 ] unsigned char 
  8031 ;;  bexp            1   74[BANK0 ] unsigned char 
  8032 ;;  aexp            1   73[BANK0 ] unsigned char 
  8033 ;;  signs           1   72[BANK0 ] unsigned char 
  8034 ;; Return value:  Size  Location     Type
  8035 ;;                  4   56[BANK0 ] unsigned char 
  8036 ;; Registers used:
  8037 ;;		wreg, status,2, status,0, btemp+1
  8038 ;; Tracked objects:
  8039 ;;		On entry : 0/0
  8040 ;;		On exit  : 0/0
  8041 ;;		Unchanged: 0/0
  8042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8043 ;;      Params:         0       8       0       0       0
  8044 ;;      Locals:         0       4       0       0       0
  8045 ;;      Temps:          0       8       0       0       0
  8046 ;;      Totals:         0      20       0       0       0
  8047 ;;Total ram usage:       20 bytes
  8048 ;; Hardware stack levels used: 1
  8049 ;; Hardware stack levels required when called: 1
  8050 ;; This function calls:
  8051 ;;		Nothing
  8052 ;; This function is called by:
  8053 ;;		_map
  8054 ;;		_sprintf
  8055 ;;		___flsub
  8056 ;; This function uses a non-reentrant model
  8057 ;;
  8058                           
  8059     15A8                     ___fladd:	
  8060                           ;psect for function ___fladd
  8061                           
  8062     15A8                     l2722:	
  8063                           ;incstack = 0
  8064                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8065                           
  8066     15A8  1283               	bcf	3,5	;RP0=0, select bank0
  8067     15A9  1303               	bcf	3,6	;RP1=0, select bank0
  8068     15AA  085B               	movf	___fladd@b+3,w
  8069     15AB  3980               	andlw	128
  8070     15AC  00E8               	movwf	___fladd@signs
  8071     15AD                     l2724:
  8072     15AD  085B               	movf	___fladd@b+3,w
  8073     15AE  00E0               	movwf	??___fladd
  8074     15AF  0760               	addwf	??___fladd,w
  8075     15B0  00EA               	movwf	___fladd@bexp
  8076     15B1                     l2726:
  8077     15B1  1FDA               	btfss	___fladd@b+2,7
  8078     15B2  2DB4               	goto	u3491
  8079     15B3  2DB5               	goto	u3490
  8080     15B4                     u3491:
  8081     15B4  2DB6               	goto	l2730
  8082     15B5                     u3490:
  8083     15B5                     l2728:
  8084     15B5  146A               	bsf	___fladd@bexp,0
  8085     15B6                     l2730:
  8086     15B6  086A               	movf	___fladd@bexp,w
  8087     15B7  1903               	btfsc	3,2
  8088     15B8  2DBA               	goto	u3501
  8089     15B9  2DBB               	goto	u3500
  8090     15BA                     u3501:
  8091     15BA  2DCB               	goto	l2740
  8092     15BB                     u3500:
  8093     15BB                     l2732:
  8094     15BB  0A6A               	incf	___fladd@bexp,w
  8095     15BC  1D03               	btfss	3,2
  8096     15BD  2DBF               	goto	u3511
  8097     15BE  2DC0               	goto	u3510
  8098     15BF                     u3511:
  8099     15BF  2DC8               	goto	l2736
  8100     15C0                     u3510:
  8101     15C0                     l2734:
  8102     15C0  3000               	movlw	0
  8103     15C1  00DB               	movwf	___fladd@b+3
  8104     15C2  3000               	movlw	0
  8105     15C3  00DA               	movwf	___fladd@b+2
  8106     15C4  3000               	movlw	0
  8107     15C5  00D9               	movwf	___fladd@b+1
  8108     15C6  3000               	movlw	0
  8109     15C7  00D8               	movwf	___fladd@b
  8110     15C8                     l2736:
  8111     15C8  17DA               	bsf	___fladd@b+2,7
  8112     15C9                     l2738:
  8113     15C9  01DB               	clrf	___fladd@b+3
  8114     15CA  2DD3               	goto	l2742
  8115     15CB                     l2740:
  8116     15CB  3000               	movlw	0
  8117     15CC  00DB               	movwf	___fladd@b+3
  8118     15CD  3000               	movlw	0
  8119     15CE  00DA               	movwf	___fladd@b+2
  8120     15CF  3000               	movlw	0
  8121     15D0  00D9               	movwf	___fladd@b+1
  8122     15D1  3000               	movlw	0
  8123     15D2  00D8               	movwf	___fladd@b
  8124     15D3                     l2742:
  8125     15D3  085F               	movf	___fladd@a+3,w
  8126     15D4  3980               	andlw	128
  8127     15D5  00E9               	movwf	___fladd@aexp
  8128     15D6                     l2744:
  8129     15D6  0869               	movf	___fladd@aexp,w
  8130     15D7  0668               	xorwf	___fladd@signs,w
  8131     15D8  1903               	skipnz
  8132     15D9  2DDB               	goto	u3521
  8133     15DA  2DDC               	goto	u3520
  8134     15DB                     u3521:
  8135     15DB  2DDD               	goto	l2748
  8136     15DC                     u3520:
  8137     15DC                     l2746:
  8138     15DC  1768               	bsf	___fladd@signs,6
  8139     15DD                     l2748:
  8140     15DD  085F               	movf	___fladd@a+3,w
  8141     15DE  00E0               	movwf	??___fladd
  8142     15DF  0760               	addwf	??___fladd,w
  8143     15E0  00E9               	movwf	___fladd@aexp
  8144     15E1                     l2750:
  8145     15E1  1FDE               	btfss	___fladd@a+2,7
  8146     15E2  2DE4               	goto	u3531
  8147     15E3  2DE5               	goto	u3530
  8148     15E4                     u3531:
  8149     15E4  2DE6               	goto	l2754
  8150     15E5                     u3530:
  8151     15E5                     l2752:
  8152     15E5  1469               	bsf	___fladd@aexp,0
  8153     15E6                     l2754:
  8154     15E6  0869               	movf	___fladd@aexp,w
  8155     15E7  1903               	btfsc	3,2
  8156     15E8  2DEA               	goto	u3541
  8157     15E9  2DEB               	goto	u3540
  8158     15EA                     u3541:
  8159     15EA  2DFB               	goto	l2764
  8160     15EB                     u3540:
  8161     15EB                     l2756:
  8162     15EB  0A69               	incf	___fladd@aexp,w
  8163     15EC  1D03               	btfss	3,2
  8164     15ED  2DEF               	goto	u3551
  8165     15EE  2DF0               	goto	u3550
  8166     15EF                     u3551:
  8167     15EF  2DF8               	goto	l2760
  8168     15F0                     u3550:
  8169     15F0                     l2758:
  8170     15F0  3000               	movlw	0
  8171     15F1  00DF               	movwf	___fladd@a+3
  8172     15F2  3000               	movlw	0
  8173     15F3  00DE               	movwf	___fladd@a+2
  8174     15F4  3000               	movlw	0
  8175     15F5  00DD               	movwf	___fladd@a+1
  8176     15F6  3000               	movlw	0
  8177     15F7  00DC               	movwf	___fladd@a
  8178     15F8                     l2760:
  8179     15F8  17DE               	bsf	___fladd@a+2,7
  8180     15F9                     l2762:
  8181     15F9  01DF               	clrf	___fladd@a+3
  8182     15FA  2E03               	goto	l770
  8183     15FB                     l2764:
  8184     15FB  3000               	movlw	0
  8185     15FC  00DF               	movwf	___fladd@a+3
  8186     15FD  3000               	movlw	0
  8187     15FE  00DE               	movwf	___fladd@a+2
  8188     15FF  3000               	movlw	0
  8189     1600  00DD               	movwf	___fladd@a+1
  8190     1601  3000               	movlw	0
  8191     1602  00DC               	movwf	___fladd@a
  8192     1603                     l770:
  8193     1603  086A               	movf	___fladd@bexp,w
  8194     1604  0269               	subwf	___fladd@aexp,w
  8195     1605  1803               	skipnc
  8196     1606  2E08               	goto	u3561
  8197     1607  2E09               	goto	u3560
  8198     1608                     u3561:
  8199     1608  2E2F               	goto	l2800
  8200     1609                     u3560:
  8201     1609                     l2766:
  8202     1609  1F68               	btfss	___fladd@signs,6
  8203     160A  2E0C               	goto	u3571
  8204     160B  2E0D               	goto	u3570
  8205     160C                     u3571:
  8206     160C  2E11               	goto	l2770
  8207     160D                     u3570:
  8208     160D                     l2768:
  8209     160D  3080               	movlw	128
  8210     160E  00FF               	movwf	btemp+1
  8211     160F  087F               	movf	btemp+1,w
  8212     1610  06E8               	xorwf	___fladd@signs,f
  8213     1611                     l2770:
  8214     1611  086A               	movf	___fladd@bexp,w
  8215     1612  00EB               	movwf	___fladd@grs
  8216     1613                     l2772:
  8217     1613  0869               	movf	___fladd@aexp,w
  8218     1614  00EA               	movwf	___fladd@bexp
  8219     1615                     l2774:
  8220     1615  086B               	movf	___fladd@grs,w
  8221     1616  00E9               	movwf	___fladd@aexp
  8222     1617                     l2776:
  8223     1617  0858               	movf	___fladd@b,w
  8224     1618  00EB               	movwf	___fladd@grs
  8225     1619                     l2778:
  8226     1619  085C               	movf	___fladd@a,w
  8227     161A  00D8               	movwf	___fladd@b
  8228     161B                     l2780:
  8229     161B  086B               	movf	___fladd@grs,w
  8230     161C  00DC               	movwf	___fladd@a
  8231     161D                     l2782:
  8232     161D  0859               	movf	___fladd@b+1,w
  8233     161E  00EB               	movwf	___fladd@grs
  8234     161F                     l2784:
  8235     161F  085D               	movf	___fladd@a+1,w
  8236     1620  00D9               	movwf	___fladd@b+1
  8237     1621                     l2786:
  8238     1621  086B               	movf	___fladd@grs,w
  8239     1622  00DD               	movwf	___fladd@a+1
  8240     1623                     l2788:
  8241     1623  085A               	movf	___fladd@b+2,w
  8242     1624  00EB               	movwf	___fladd@grs
  8243     1625                     l2790:
  8244     1625  085E               	movf	___fladd@a+2,w
  8245     1626  00DA               	movwf	___fladd@b+2
  8246     1627                     l2792:
  8247     1627  086B               	movf	___fladd@grs,w
  8248     1628  00DE               	movwf	___fladd@a+2
  8249     1629                     l2794:
  8250     1629  085B               	movf	___fladd@b+3,w
  8251     162A  00EB               	movwf	___fladd@grs
  8252     162B                     l2796:
  8253     162B  085F               	movf	___fladd@a+3,w
  8254     162C  00DB               	movwf	___fladd@b+3
  8255     162D                     l2798:
  8256     162D  086B               	movf	___fladd@grs,w
  8257     162E  00DF               	movwf	___fladd@a+3
  8258     162F                     l2800:
  8259     162F  01EB               	clrf	___fladd@grs
  8260     1630                     l2802:
  8261     1630  0869               	movf	___fladd@aexp,w
  8262     1631  00E0               	movwf	??___fladd
  8263     1632  01E1               	clrf	??___fladd+1
  8264     1633  0861               	movf	??___fladd+1,w
  8265     1634  00E3               	movwf	??___fladd+3
  8266     1635  086A               	movf	___fladd@bexp,w
  8267     1636  0260               	subwf	??___fladd,w
  8268     1637  00E2               	movwf	??___fladd+2
  8269     1638  1C03               	skipc
  8270     1639  03E3               	decf	??___fladd+3,f
  8271     163A  0863               	movf	??___fladd+3,w
  8272     163B  3A80               	xorlw	128
  8273     163C  00FF               	movwf	btemp+1
  8274     163D  3080               	movlw	128
  8275     163E  027F               	subwf	btemp+1,w
  8276     163F  1D03               	skipz
  8277     1640  2E43               	goto	u3585
  8278     1641  301A               	movlw	26
  8279     1642  0262               	subwf	??___fladd+2,w
  8280     1643                     u3585:
  8281     1643  1C03               	skipc
  8282     1644  2E46               	goto	u3581
  8283     1645  2E47               	goto	u3580
  8284     1646                     u3581:
  8285     1646  2E7E               	goto	l2818
  8286     1647                     u3580:
  8287     1647                     l2804:
  8288     1647  1283               	bcf	3,5	;RP0=0, select bank0
  8289     1648  1303               	bcf	3,6	;RP1=0, select bank0
  8290     1649  085B               	movf	___fladd@b+3,w
  8291     164A  045A               	iorwf	___fladd@b+2,w
  8292     164B  0459               	iorwf	___fladd@b+1,w
  8293     164C  0458               	iorwf	___fladd@b,w
  8294     164D  1D03               	skipz
  8295     164E  2E50               	goto	u3591
  8296     164F  2E52               	goto	u3590
  8297     1650                     u3591:
  8298     1650  3001               	movlw	1
  8299     1651  2E53               	goto	u3600
  8300     1652                     u3590:
  8301     1652  3000               	movlw	0
  8302     1653                     u3600:
  8303     1653  00EB               	movwf	___fladd@grs
  8304     1654  3000               	movlw	0
  8305     1655  00DB               	movwf	___fladd@b+3
  8306     1656  3000               	movlw	0
  8307     1657  00DA               	movwf	___fladd@b+2
  8308     1658  3000               	movlw	0
  8309     1659  00D9               	movwf	___fladd@b+1
  8310     165A  3000               	movlw	0
  8311     165B  00D8               	movwf	___fladd@b
  8312     165C  0869               	movf	___fladd@aexp,w
  8313     165D  00EA               	movwf	___fladd@bexp
  8314     165E  2E86               	goto	l774
  8315     165F                     l776:
  8316     165F  1C6B               	btfss	___fladd@grs,0
  8317     1660  2E62               	goto	u3611
  8318     1661  2E63               	goto	u3610
  8319     1662                     u3611:
  8320     1662  2E6A               	goto	l2808
  8321     1663                     u3610:
  8322     1663                     l2806:
  8323     1663  086B               	movf	___fladd@grs,w
  8324     1664  00E0               	movwf	??___fladd
  8325     1665  1003               	clrc
  8326     1666  0C60               	rrf	??___fladd,w
  8327     1667  3801               	iorlw	1
  8328     1668  00EB               	movwf	___fladd@grs
  8329     1669  2E6C               	goto	l2810
  8330     166A                     l2808:
  8331     166A  1003               	clrc
  8332     166B  0CEB               	rrf	___fladd@grs,f
  8333     166C                     l2810:
  8334     166C  1C58               	btfss	___fladd@b,0
  8335     166D  2E6F               	goto	u3621
  8336     166E  2E70               	goto	u3620
  8337     166F                     u3621:
  8338     166F  2E71               	goto	l2814
  8339     1670                     u3620:
  8340     1670                     l2812:
  8341     1670  17EB               	bsf	___fladd@grs,7
  8342     1671                     l2814:
  8343     1671  3001               	movlw	1
  8344     1672  00E0               	movwf	??___fladd
  8345     1673                     u3635:
  8346     1673  0D5B               	rlf	___fladd@b+3,w
  8347     1674  0CDB               	rrf	___fladd@b+3,f
  8348     1675  0CDA               	rrf	___fladd@b+2,f
  8349     1676  0CD9               	rrf	___fladd@b+1,f
  8350     1677  0CD8               	rrf	___fladd@b,f
  8351     1678  0BE0               	decfsz	??___fladd& (0+127),f
  8352     1679  2E73               	goto	u3635
  8353     167A                     l2816:
  8354     167A  3001               	movlw	1
  8355     167B  00FF               	movwf	btemp+1
  8356     167C  087F               	movf	btemp+1,w
  8357     167D  07EA               	addwf	___fladd@bexp,f
  8358     167E                     l2818:
  8359     167E  1283               	bcf	3,5	;RP0=0, select bank0
  8360     167F  1303               	bcf	3,6	;RP1=0, select bank0
  8361     1680  0869               	movf	___fladd@aexp,w
  8362     1681  026A               	subwf	___fladd@bexp,w
  8363     1682  1C03               	skipc
  8364     1683  2E85               	goto	u3641
  8365     1684  2E86               	goto	u3640
  8366     1685                     u3641:
  8367     1685  2E5F               	goto	l776
  8368     1686                     u3640:
  8369     1686                     l774:
  8370     1686  1B68               	btfsc	___fladd@signs,6
  8371     1687  2E89               	goto	u3651
  8372     1688  2E8A               	goto	u3650
  8373     1689                     u3651:
  8374     1689  2ED3               	goto	l2844
  8375     168A                     u3650:
  8376     168A                     l2820:
  8377     168A  086A               	movf	___fladd@bexp,w
  8378     168B  1D03               	btfss	3,2
  8379     168C  2E8E               	goto	u3661
  8380     168D  2E8F               	goto	u3660
  8381     168E                     u3661:
  8382     168E  2E98               	goto	l2826
  8383     168F                     u3660:
  8384     168F                     l2822:
  8385     168F  3000               	movlw	0
  8386     1690  00DB               	movwf	?___fladd+3
  8387     1691  3000               	movlw	0
  8388     1692  00DA               	movwf	?___fladd+2
  8389     1693  3000               	movlw	0
  8390     1694  00D9               	movwf	?___fladd+1
  8391     1695  3000               	movlw	0
  8392     1696  00D8               	movwf	?___fladd
  8393     1697  2FFF               	goto	l783
  8394     1698                     l2826:
  8395     1698  085C               	movf	___fladd@a,w
  8396     1699  07D8               	addwf	___fladd@b,f
  8397     169A  085D               	movf	___fladd@a+1,w
  8398     169B  1103               	clrz
  8399     169C  1803               	skipnc
  8400     169D  3E01               	addlw	1
  8401     169E  1903               	skipnz
  8402     169F  2EA1               	goto	u3671
  8403     16A0  07D9               	addwf	___fladd@b+1,f
  8404     16A1                     u3671:
  8405     16A1  085E               	movf	___fladd@a+2,w
  8406     16A2  1103               	clrz
  8407     16A3  1803               	skipnc
  8408     16A4  3E01               	addlw	1
  8409     16A5  1903               	skipnz
  8410     16A6  2EA8               	goto	u3672
  8411     16A7  07DA               	addwf	___fladd@b+2,f
  8412     16A8                     u3672:
  8413     16A8  085F               	movf	___fladd@a+3,w
  8414     16A9  1103               	clrz
  8415     16AA  1803               	skipnc
  8416     16AB  3E01               	addlw	1
  8417     16AC  1903               	skipnz
  8418     16AD  2EAF               	goto	u3673
  8419     16AE  07DB               	addwf	___fladd@b+3,f
  8420     16AF                     u3673:
  8421     16AF                     l2828:
  8422     16AF  1C5B               	btfss	___fladd@b+3,0
  8423     16B0  2EB2               	goto	u3681
  8424     16B1  2EB3               	goto	u3680
  8425     16B2                     u3681:
  8426     16B2  2F87               	goto	l2880
  8427     16B3                     u3680:
  8428     16B3                     l2830:
  8429     16B3  1C6B               	btfss	___fladd@grs,0
  8430     16B4  2EB6               	goto	u3691
  8431     16B5  2EB7               	goto	u3690
  8432     16B6                     u3691:
  8433     16B6  2EBE               	goto	l2834
  8434     16B7                     u3690:
  8435     16B7                     l2832:
  8436     16B7  086B               	movf	___fladd@grs,w
  8437     16B8  00E0               	movwf	??___fladd
  8438     16B9  1003               	clrc
  8439     16BA  0C60               	rrf	??___fladd,w
  8440     16BB  3801               	iorlw	1
  8441     16BC  00EB               	movwf	___fladd@grs
  8442     16BD  2EC0               	goto	l2836
  8443     16BE                     l2834:
  8444     16BE  1003               	clrc
  8445     16BF  0CEB               	rrf	___fladd@grs,f
  8446     16C0                     l2836:
  8447     16C0  1C58               	btfss	___fladd@b,0
  8448     16C1  2EC3               	goto	u3701
  8449     16C2  2EC4               	goto	u3700
  8450     16C3                     u3701:
  8451     16C3  2EC5               	goto	l2840
  8452     16C4                     u3700:
  8453     16C4                     l2838:
  8454     16C4  17EB               	bsf	___fladd@grs,7
  8455     16C5                     l2840:
  8456     16C5  3001               	movlw	1
  8457     16C6  00E0               	movwf	??___fladd
  8458     16C7                     u3715:
  8459     16C7  0D5B               	rlf	___fladd@b+3,w
  8460     16C8  0CDB               	rrf	___fladd@b+3,f
  8461     16C9  0CDA               	rrf	___fladd@b+2,f
  8462     16CA  0CD9               	rrf	___fladd@b+1,f
  8463     16CB  0CD8               	rrf	___fladd@b,f
  8464     16CC  0BE0               	decfsz	??___fladd& (0+127),f
  8465     16CD  2EC7               	goto	u3715
  8466     16CE                     l2842:
  8467     16CE  3001               	movlw	1
  8468     16CF  00FF               	movwf	btemp+1
  8469     16D0  087F               	movf	btemp+1,w
  8470     16D1  07EA               	addwf	___fladd@bexp,f
  8471     16D2  2F87               	goto	l2880
  8472     16D3                     l2844:
  8473     16D3  085B               	movf	___fladd@b+3,w
  8474     16D4  3A80               	xorlw	128
  8475     16D5  00FF               	movwf	btemp+1
  8476     16D6  085F               	movf	___fladd@a+3,w
  8477     16D7  3A80               	xorlw	128
  8478     16D8  027F               	subwf	btemp+1,w
  8479     16D9  1D03               	skipz
  8480     16DA  2EE5               	goto	u3723
  8481     16DB  085E               	movf	___fladd@a+2,w
  8482     16DC  025A               	subwf	___fladd@b+2,w
  8483     16DD  1D03               	skipz
  8484     16DE  2EE5               	goto	u3723
  8485     16DF  085D               	movf	___fladd@a+1,w
  8486     16E0  0259               	subwf	___fladd@b+1,w
  8487     16E1  1D03               	skipz
  8488     16E2  2EE5               	goto	u3723
  8489     16E3  085C               	movf	___fladd@a,w
  8490     16E4  0258               	subwf	___fladd@b,w
  8491     16E5                     u3723:
  8492     16E5  1803               	skipnc
  8493     16E6  2EE8               	goto	u3721
  8494     16E7  2EE9               	goto	u3720
  8495     16E8                     u3721:
  8496     16E8  2F41               	goto	l2856
  8497     16E9                     u3720:
  8498     16E9                     l2846:
  8499     16E9  30FF               	movlw	255
  8500     16EA  00E0               	movwf	??___fladd
  8501     16EB  30FF               	movlw	255
  8502     16EC  00E1               	movwf	??___fladd+1
  8503     16ED  30FF               	movlw	255
  8504     16EE  00E2               	movwf	??___fladd+2
  8505     16EF  30FF               	movlw	255
  8506     16F0  00E3               	movwf	??___fladd+3
  8507     16F1  085C               	movf	___fladd@a,w
  8508     16F2  00E4               	movwf	??___fladd+4
  8509     16F3  085D               	movf	___fladd@a+1,w
  8510     16F4  00E5               	movwf	??___fladd+5
  8511     16F5  085E               	movf	___fladd@a+2,w
  8512     16F6  00E6               	movwf	??___fladd+6
  8513     16F7  085F               	movf	___fladd@a+3,w
  8514     16F8  00E7               	movwf	??___fladd+7
  8515     16F9  0858               	movf	___fladd@b,w
  8516     16FA  02E4               	subwf	??___fladd+4,f
  8517     16FB  0859               	movf	___fladd@b+1,w
  8518     16FC  1C03               	skipc
  8519     16FD  0F59               	incfsz	___fladd@b+1,w
  8520     16FE  2F00               	goto	u3731
  8521     16FF  2F01               	goto	u3732
  8522     1700                     u3731:
  8523     1700  02E5               	subwf	??___fladd+5,f
  8524     1701                     u3732:
  8525     1701  085A               	movf	___fladd@b+2,w
  8526     1702  1C03               	skipc
  8527     1703  0F5A               	incfsz	___fladd@b+2,w
  8528     1704  2F06               	goto	u3733
  8529     1705  2F07               	goto	u3734
  8530     1706                     u3733:
  8531     1706  02E6               	subwf	??___fladd+6,f
  8532     1707                     u3734:
  8533     1707  085B               	movf	___fladd@b+3,w
  8534     1708  1C03               	skipc
  8535     1709  0F5B               	incfsz	___fladd@b+3,w
  8536     170A  2F0C               	goto	u3735
  8537     170B  2F0D               	goto	u3736
  8538     170C                     u3735:
  8539     170C  02E7               	subwf	??___fladd+7,f
  8540     170D                     u3736:
  8541     170D  0864               	movf	??___fladd+4,w
  8542     170E  07E0               	addwf	??___fladd,f
  8543     170F  0865               	movf	??___fladd+5,w
  8544     1710  1803               	skipnc
  8545     1711  0F65               	incfsz	??___fladd+5,w
  8546     1712  2F14               	goto	u3740
  8547     1713  2F15               	goto	u3741
  8548     1714                     u3740:
  8549     1714  07E1               	addwf	??___fladd+1,f
  8550     1715                     u3741:
  8551     1715  0866               	movf	??___fladd+6,w
  8552     1716  1803               	skipnc
  8553     1717  0F66               	incfsz	??___fladd+6,w
  8554     1718  2F1A               	goto	u3742
  8555     1719  2F1B               	goto	u3743
  8556     171A                     u3742:
  8557     171A  07E2               	addwf	??___fladd+2,f
  8558     171B                     u3743:
  8559     171B  0867               	movf	??___fladd+7,w
  8560     171C  1803               	skipnc
  8561     171D  0A67               	incf	??___fladd+7,w
  8562     171E  07E3               	addwf	??___fladd+3,f
  8563     171F  0863               	movf	??___fladd+3,w
  8564     1720  00DB               	movwf	___fladd@b+3
  8565     1721  0862               	movf	??___fladd+2,w
  8566     1722  00DA               	movwf	___fladd@b+2
  8567     1723  0861               	movf	??___fladd+1,w
  8568     1724  00D9               	movwf	___fladd@b+1
  8569     1725  0860               	movf	??___fladd,w
  8570     1726  00D8               	movwf	___fladd@b
  8571     1727                     l2848:
  8572     1727  3080               	movlw	128
  8573     1728  00FF               	movwf	btemp+1
  8574     1729  087F               	movf	btemp+1,w
  8575     172A  06E8               	xorwf	___fladd@signs,f
  8576     172B                     l2850:
  8577     172B  09EB               	comf	___fladd@grs,f
  8578     172C  0AEB               	incf	___fladd@grs,f
  8579     172D                     l2852:
  8580     172D  086B               	movf	___fladd@grs,w
  8581     172E  1D03               	btfss	3,2
  8582     172F  2F31               	goto	u3751
  8583     1730  2F32               	goto	u3750
  8584     1731                     u3751:
  8585     1731  2F4F               	goto	l791
  8586     1732                     u3750:
  8587     1732                     l2854:
  8588     1732  3001               	movlw	1
  8589     1733  07D8               	addwf	___fladd@b,f
  8590     1734  3000               	movlw	0
  8591     1735  1803               	skipnc
  8592     1736  3001               	movlw	1
  8593     1737  07D9               	addwf	___fladd@b+1,f
  8594     1738  3000               	movlw	0
  8595     1739  1803               	skipnc
  8596     173A  3001               	movlw	1
  8597     173B  07DA               	addwf	___fladd@b+2,f
  8598     173C  3000               	movlw	0
  8599     173D  1803               	skipnc
  8600     173E  3001               	movlw	1
  8601     173F  07DB               	addwf	___fladd@b+3,f
  8602     1740  2F4F               	goto	l791
  8603     1741                     l2856:
  8604     1741  085C               	movf	___fladd@a,w
  8605     1742  02D8               	subwf	___fladd@b,f
  8606     1743  085D               	movf	___fladd@a+1,w
  8607     1744  1C03               	skipc
  8608     1745  0F5D               	incfsz	___fladd@a+1,w
  8609     1746  02D9               	subwf	___fladd@b+1,f
  8610     1747  085E               	movf	___fladd@a+2,w
  8611     1748  1C03               	skipc
  8612     1749  0F5E               	incfsz	___fladd@a+2,w
  8613     174A  02DA               	subwf	___fladd@b+2,f
  8614     174B  085F               	movf	___fladd@a+3,w
  8615     174C  1C03               	skipc
  8616     174D  0F5F               	incfsz	___fladd@a+3,w
  8617     174E  02DB               	subwf	___fladd@b+3,f
  8618     174F                     l791:
  8619     174F  085B               	movf	___fladd@b+3,w
  8620     1750  045A               	iorwf	___fladd@b+2,w
  8621     1751  0459               	iorwf	___fladd@b+1,w
  8622     1752  0458               	iorwf	___fladd@b,w
  8623     1753  1D03               	skipz
  8624     1754  2F56               	goto	u3761
  8625     1755  2F57               	goto	u3760
  8626     1756                     u3761:
  8627     1756  2F83               	goto	l2878
  8628     1757                     u3760:
  8629     1757                     l2858:
  8630     1757  086B               	movf	___fladd@grs,w
  8631     1758  1D03               	btfss	3,2
  8632     1759  2F5B               	goto	u3771
  8633     175A  2F5C               	goto	u3770
  8634     175B                     u3771:
  8635     175B  2F83               	goto	l2878
  8636     175C                     u3770:
  8637     175C                     l2860:
  8638     175C  3000               	movlw	0
  8639     175D  00DB               	movwf	?___fladd+3
  8640     175E  3000               	movlw	0
  8641     175F  00DA               	movwf	?___fladd+2
  8642     1760  3000               	movlw	0
  8643     1761  00D9               	movwf	?___fladd+1
  8644     1762  3000               	movlw	0
  8645     1763  00D8               	movwf	?___fladd
  8646     1764  2FFF               	goto	l783
  8647     1765                     l2864:
  8648     1765  3001               	movlw	1
  8649     1766  00E0               	movwf	??___fladd
  8650     1767                     u3785:
  8651     1767  1003               	clrc
  8652     1768  0DD8               	rlf	___fladd@b,f
  8653     1769  0DD9               	rlf	___fladd@b+1,f
  8654     176A  0DDA               	rlf	___fladd@b+2,f
  8655     176B  0DDB               	rlf	___fladd@b+3,f
  8656     176C  0BE0               	decfsz	??___fladd,f
  8657     176D  2F67               	goto	u3785
  8658     176E                     l2866:
  8659     176E  1FEB               	btfss	___fladd@grs,7
  8660     176F  2F71               	goto	u3791
  8661     1770  2F72               	goto	u3790
  8662     1771                     u3791:
  8663     1771  2F73               	goto	l795
  8664     1772                     u3790:
  8665     1772                     l2868:
  8666     1772  1458               	bsf	___fladd@b,0
  8667     1773                     l795:
  8668     1773  1C6B               	btfss	___fladd@grs,0
  8669     1774  2F76               	goto	u3801
  8670     1775  2F77               	goto	u3800
  8671     1776                     u3801:
  8672     1776  2F7A               	goto	l2872
  8673     1777                     u3800:
  8674     1777                     l2870:
  8675     1777  1403               	setc
  8676     1778  0DEB               	rlf	___fladd@grs,f
  8677     1779  2F7C               	goto	l2874
  8678     177A                     l2872:
  8679     177A  1003               	clrc
  8680     177B  0DEB               	rlf	___fladd@grs,f
  8681     177C                     l2874:
  8682     177C  086A               	movf	___fladd@bexp,w
  8683     177D  1903               	btfsc	3,2
  8684     177E  2F80               	goto	u3811
  8685     177F  2F81               	goto	u3810
  8686     1780                     u3811:
  8687     1780  2F83               	goto	l2878
  8688     1781                     u3810:
  8689     1781                     l2876:
  8690     1781  3001               	movlw	1
  8691     1782  02EA               	subwf	___fladd@bexp,f
  8692     1783                     l2878:
  8693     1783  1FDA               	btfss	___fladd@b+2,7
  8694     1784  2F86               	goto	u3821
  8695     1785  2F87               	goto	u3820
  8696     1786                     u3821:
  8697     1786  2F65               	goto	l2864
  8698     1787                     u3820:
  8699     1787                     l2880:
  8700     1787  01E9               	clrf	___fladd@aexp
  8701     1788                     l2882:
  8702     1788  1FEB               	btfss	___fladd@grs,7
  8703     1789  2F8B               	goto	u3831
  8704     178A  2F8C               	goto	u3830
  8705     178B                     u3831:
  8706     178B  2F9A               	goto	l2890
  8707     178C                     u3830:
  8708     178C                     l2884:
  8709     178C  086B               	movf	___fladd@grs,w
  8710     178D  397F               	andlw	127
  8711     178E  1903               	btfsc	3,2
  8712     178F  2F91               	goto	u3841
  8713     1790  2F92               	goto	u3840
  8714     1791                     u3841:
  8715     1791  2F95               	goto	l801
  8716     1792                     u3840:
  8717     1792                     l2886:
  8718     1792  01E9               	clrf	___fladd@aexp
  8719     1793  0AE9               	incf	___fladd@aexp,f
  8720     1794  2F9A               	goto	l2890
  8721     1795                     l801:
  8722     1795  1C58               	btfss	___fladd@b,0
  8723     1796  2F98               	goto	u3851
  8724     1797  2F99               	goto	u3850
  8725     1798                     u3851:
  8726     1798  2F9A               	goto	l2890
  8727     1799                     u3850:
  8728     1799  2F92               	goto	l2886
  8729     179A                     l2890:
  8730     179A  0869               	movf	___fladd@aexp,w
  8731     179B  1903               	btfsc	3,2
  8732     179C  2F9E               	goto	u3861
  8733     179D  2F9F               	goto	u3860
  8734     179E                     u3861:
  8735     179E  2FD3               	goto	l2900
  8736     179F                     u3860:
  8737     179F                     l2892:
  8738     179F  3001               	movlw	1
  8739     17A0  07D8               	addwf	___fladd@b,f
  8740     17A1  3000               	movlw	0
  8741     17A2  1803               	skipnc
  8742     17A3  3001               	movlw	1
  8743     17A4  07D9               	addwf	___fladd@b+1,f
  8744     17A5  3000               	movlw	0
  8745     17A6  1803               	skipnc
  8746     17A7  3001               	movlw	1
  8747     17A8  07DA               	addwf	___fladd@b+2,f
  8748     17A9  3000               	movlw	0
  8749     17AA  1803               	skipnc
  8750     17AB  3001               	movlw	1
  8751     17AC  07DB               	addwf	___fladd@b+3,f
  8752     17AD                     l2894:
  8753     17AD  1C5B               	btfss	___fladd@b+3,0
  8754     17AE  2FB0               	goto	u3871
  8755     17AF  2FB1               	goto	u3870
  8756     17B0                     u3871:
  8757     17B0  2FD3               	goto	l2900
  8758     17B1                     u3870:
  8759     17B1                     l2896:
  8760     17B1  0858               	movf	___fladd@b,w
  8761     17B2  00E0               	movwf	??___fladd
  8762     17B3  0859               	movf	___fladd@b+1,w
  8763     17B4  00E1               	movwf	??___fladd+1
  8764     17B5  085A               	movf	___fladd@b+2,w
  8765     17B6  00E2               	movwf	??___fladd+2
  8766     17B7  085B               	movf	___fladd@b+3,w
  8767     17B8  00E3               	movwf	??___fladd+3
  8768     17B9  3001               	movlw	1
  8769     17BA  00E4               	movwf	??___fladd+4
  8770     17BB                     u3885:
  8771     17BB  0D63               	rlf	??___fladd+3,w
  8772     17BC  0CE3               	rrf	??___fladd+3,f
  8773     17BD  0CE2               	rrf	??___fladd+2,f
  8774     17BE  0CE1               	rrf	??___fladd+1,f
  8775     17BF  0CE0               	rrf	??___fladd,f
  8776     17C0                     u3880:
  8777     17C0  0BE4               	decfsz	??___fladd+4,f
  8778     17C1  2FBB               	goto	u3885
  8779     17C2  0863               	movf	??___fladd+3,w
  8780     17C3  00DB               	movwf	___fladd@b+3
  8781     17C4  0862               	movf	??___fladd+2,w
  8782     17C5  00DA               	movwf	___fladd@b+2
  8783     17C6  0861               	movf	??___fladd+1,w
  8784     17C7  00D9               	movwf	___fladd@b+1
  8785     17C8  0860               	movf	??___fladd,w
  8786     17C9  00D8               	movwf	___fladd@b
  8787     17CA  0A6A               	incf	___fladd@bexp,w
  8788     17CB  1903               	btfsc	3,2
  8789     17CC  2FCE               	goto	u3891
  8790     17CD  2FCF               	goto	u3890
  8791     17CE                     u3891:
  8792     17CE  2FD3               	goto	l2900
  8793     17CF                     u3890:
  8794     17CF                     l2898:
  8795     17CF  3001               	movlw	1
  8796     17D0  00FF               	movwf	btemp+1
  8797     17D1  087F               	movf	btemp+1,w
  8798     17D2  07EA               	addwf	___fladd@bexp,f
  8799     17D3                     l2900:
  8800     17D3  0A6A               	incf	___fladd@bexp,w
  8801     17D4  1903               	btfsc	3,2
  8802     17D5  2FD7               	goto	u3901
  8803     17D6  2FD8               	goto	u3900
  8804     17D7                     u3901:
  8805     17D7  2FDD               	goto	l2904
  8806     17D8                     u3900:
  8807     17D8                     l2902:
  8808     17D8  086A               	movf	___fladd@bexp,w
  8809     17D9  1D03               	btfss	3,2
  8810     17DA  2FDC               	goto	u3911
  8811     17DB  2FDD               	goto	u3910
  8812     17DC                     u3911:
  8813     17DC  2FEB               	goto	l2910
  8814     17DD                     u3910:
  8815     17DD                     l2904:
  8816     17DD  3000               	movlw	0
  8817     17DE  00DB               	movwf	___fladd@b+3
  8818     17DF  3000               	movlw	0
  8819     17E0  00DA               	movwf	___fladd@b+2
  8820     17E1  3000               	movlw	0
  8821     17E2  00D9               	movwf	___fladd@b+1
  8822     17E3  3000               	movlw	0
  8823     17E4  00D8               	movwf	___fladd@b
  8824     17E5                     l2906:
  8825     17E5  086A               	movf	___fladd@bexp,w
  8826     17E6  1D03               	btfss	3,2
  8827     17E7  2FE9               	goto	u3921
  8828     17E8  2FEA               	goto	u3920
  8829     17E9                     u3921:
  8830     17E9  2FEB               	goto	l2910
  8831     17EA                     u3920:
  8832     17EA                     l2908:
  8833     17EA  01E8               	clrf	___fladd@signs
  8834     17EB                     l2910:
  8835     17EB  1C6A               	btfss	___fladd@bexp,0
  8836     17EC  2FEE               	goto	u3931
  8837     17ED  2FEF               	goto	u3930
  8838     17EE                     u3931:
  8839     17EE  2FF1               	goto	l2914
  8840     17EF                     u3930:
  8841     17EF                     l2912:
  8842     17EF  17DA               	bsf	___fladd@b+2,7
  8843     17F0  2FF5               	goto	l2916
  8844     17F1                     l2914:
  8845     17F1  307F               	movlw	127
  8846     17F2  00FF               	movwf	btemp+1
  8847     17F3  087F               	movf	btemp+1,w
  8848     17F4  05DA               	andwf	___fladd@b+2,f
  8849     17F5                     l2916:
  8850     17F5  086A               	movf	___fladd@bexp,w
  8851     17F6  00E0               	movwf	??___fladd
  8852     17F7  1003               	clrc
  8853     17F8  0C60               	rrf	??___fladd,w
  8854     17F9  00DB               	movwf	___fladd@b+3
  8855     17FA                     l2918:
  8856     17FA  1FE8               	btfss	___fladd@signs,7
  8857     17FB  2FFD               	goto	u3941
  8858     17FC  2FFE               	goto	u3940
  8859     17FD                     u3941:
  8860     17FD  2FFF               	goto	l813
  8861     17FE                     u3940:
  8862     17FE                     l2920:
  8863     17FE  17DB               	bsf	___fladd@b+3,7
  8864     17FF                     l813:
  8865     17FF                     l783:
  8866     17FF  0008               	return
  8867     1800                     __end_of___fladd:
  8868                           
  8869                           	psect	text22
  8870     0958                     __ptext22:	
  8871 ;; *************** function ___flmul *****************
  8872 ;; Defined at:
  8873 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcmul.c"
  8874 ;; Parameters:    Size  Location     Type
  8875 ;;  b               4   10[BANK0 ] unsigned char 
  8876 ;;  a               4   14[BANK0 ] unsigned char 
  8877 ;; Auto vars:     Size  Location     Type
  8878 ;;  prod            4   30[BANK0 ] struct .
  8879 ;;  grs             4   24[BANK0 ] unsigned long 
  8880 ;;  temp            2   34[BANK0 ] struct .
  8881 ;;  bexp            1   29[BANK0 ] unsigned char 
  8882 ;;  aexp            1   28[BANK0 ] unsigned char 
  8883 ;;  sign            1   23[BANK0 ] unsigned char 
  8884 ;; Return value:  Size  Location     Type
  8885 ;;                  4   10[BANK0 ] unsigned char 
  8886 ;; Registers used:
  8887 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8888 ;; Tracked objects:
  8889 ;;		On entry : 0/0
  8890 ;;		On exit  : 0/0
  8891 ;;		Unchanged: 0/0
  8892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8893 ;;      Params:         0       8       0       0       0
  8894 ;;      Locals:         0      13       0       0       0
  8895 ;;      Temps:          0       5       0       0       0
  8896 ;;      Totals:         0      26       0       0       0
  8897 ;;Total ram usage:       26 bytes
  8898 ;; Hardware stack levels used: 1
  8899 ;; Hardware stack levels required when called: 2
  8900 ;; This function calls:
  8901 ;;		__Umul8_16
  8902 ;; This function is called by:
  8903 ;;		_map
  8904 ;;		_fround
  8905 ;;		_scale
  8906 ;;		_sprintf
  8907 ;; This function uses a non-reentrant model
  8908 ;;
  8909                           
  8910     0958                     ___flmul:	
  8911                           ;psect for function ___flmul
  8912                           
  8913     0958                     l2922:	
  8914                           ;incstack = 0
  8915                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8916                           
  8917     0958  1283               	bcf	3,5	;RP0=0, select bank0
  8918     0959  1303               	bcf	3,6	;RP1=0, select bank0
  8919     095A  082D               	movf	___flmul@b+3,w
  8920     095B  3980               	andlw	128
  8921     095C  00B7               	movwf	___flmul@sign
  8922     095D                     l2924:
  8923     095D  082D               	movf	___flmul@b+3,w
  8924     095E  00B2               	movwf	??___flmul
  8925     095F  0732               	addwf	??___flmul,w
  8926     0960  00BD               	movwf	___flmul@bexp
  8927     0961                     l2926:
  8928     0961  1FAC               	btfss	___flmul@b+2,7
  8929     0962  2964               	goto	u3951
  8930     0963  2965               	goto	u3950
  8931     0964                     u3951:
  8932     0964  2966               	goto	l2930
  8933     0965                     u3950:
  8934     0965                     l2928:
  8935     0965  143D               	bsf	___flmul@bexp,0
  8936     0966                     l2930:
  8937     0966  083D               	movf	___flmul@bexp,w
  8938     0967  1903               	btfsc	3,2
  8939     0968  296A               	goto	u3961
  8940     0969  296B               	goto	u3960
  8941     096A                     u3961:
  8942     096A  297A               	goto	l2938
  8943     096B                     u3960:
  8944     096B                     l2932:
  8945     096B  0A3D               	incf	___flmul@bexp,w
  8946     096C  1D03               	btfss	3,2
  8947     096D  296F               	goto	u3971
  8948     096E  2970               	goto	u3970
  8949     096F                     u3971:
  8950     096F  2978               	goto	l2936
  8951     0970                     u3970:
  8952     0970                     l2934:
  8953     0970  3000               	movlw	0
  8954     0971  00AD               	movwf	___flmul@b+3
  8955     0972  3000               	movlw	0
  8956     0973  00AC               	movwf	___flmul@b+2
  8957     0974  3000               	movlw	0
  8958     0975  00AB               	movwf	___flmul@b+1
  8959     0976  3000               	movlw	0
  8960     0977  00AA               	movwf	___flmul@b
  8961     0978                     l2936:
  8962     0978  17AC               	bsf	___flmul@b+2,7
  8963     0979  2982               	goto	l2940
  8964     097A                     l2938:
  8965     097A  3000               	movlw	0
  8966     097B  00AD               	movwf	___flmul@b+3
  8967     097C  3000               	movlw	0
  8968     097D  00AC               	movwf	___flmul@b+2
  8969     097E  3000               	movlw	0
  8970     097F  00AB               	movwf	___flmul@b+1
  8971     0980  3000               	movlw	0
  8972     0981  00AA               	movwf	___flmul@b
  8973     0982                     l2940:
  8974     0982  0831               	movf	___flmul@a+3,w
  8975     0983  3980               	andlw	128
  8976     0984  00FF               	movwf	btemp+1
  8977     0985  087F               	movf	btemp+1,w
  8978     0986  06B7               	xorwf	___flmul@sign,f
  8979     0987                     l2942:
  8980     0987  0831               	movf	___flmul@a+3,w
  8981     0988  00B2               	movwf	??___flmul
  8982     0989  0732               	addwf	??___flmul,w
  8983     098A  00BC               	movwf	___flmul@aexp
  8984     098B                     l2944:
  8985     098B  1FB0               	btfss	___flmul@a+2,7
  8986     098C  298E               	goto	u3981
  8987     098D  298F               	goto	u3980
  8988     098E                     u3981:
  8989     098E  2990               	goto	l2948
  8990     098F                     u3980:
  8991     098F                     l2946:
  8992     098F  143C               	bsf	___flmul@aexp,0
  8993     0990                     l2948:
  8994     0990  083C               	movf	___flmul@aexp,w
  8995     0991  1903               	btfsc	3,2
  8996     0992  2994               	goto	u3991
  8997     0993  2995               	goto	u3990
  8998     0994                     u3991:
  8999     0994  29A4               	goto	l2956
  9000     0995                     u3990:
  9001     0995                     l2950:
  9002     0995  0A3C               	incf	___flmul@aexp,w
  9003     0996  1D03               	btfss	3,2
  9004     0997  2999               	goto	u4001
  9005     0998  299A               	goto	u4000
  9006     0999                     u4001:
  9007     0999  29A2               	goto	l2954
  9008     099A                     u4000:
  9009     099A                     l2952:
  9010     099A  3000               	movlw	0
  9011     099B  00B1               	movwf	___flmul@a+3
  9012     099C  3000               	movlw	0
  9013     099D  00B0               	movwf	___flmul@a+2
  9014     099E  3000               	movlw	0
  9015     099F  00AF               	movwf	___flmul@a+1
  9016     09A0  3000               	movlw	0
  9017     09A1  00AE               	movwf	___flmul@a
  9018     09A2                     l2954:
  9019     09A2  17B0               	bsf	___flmul@a+2,7
  9020     09A3  29AC               	goto	l2958
  9021     09A4                     l2956:
  9022     09A4  3000               	movlw	0
  9023     09A5  00B1               	movwf	___flmul@a+3
  9024     09A6  3000               	movlw	0
  9025     09A7  00B0               	movwf	___flmul@a+2
  9026     09A8  3000               	movlw	0
  9027     09A9  00AF               	movwf	___flmul@a+1
  9028     09AA  3000               	movlw	0
  9029     09AB  00AE               	movwf	___flmul@a
  9030     09AC                     l2958:
  9031     09AC  083C               	movf	___flmul@aexp,w
  9032     09AD  1903               	btfsc	3,2
  9033     09AE  29B0               	goto	u4011
  9034     09AF  29B1               	goto	u4010
  9035     09B0                     u4011:
  9036     09B0  29B6               	goto	l2962
  9037     09B1                     u4010:
  9038     09B1                     l2960:
  9039     09B1  083D               	movf	___flmul@bexp,w
  9040     09B2  1D03               	btfss	3,2
  9041     09B3  29B5               	goto	u4021
  9042     09B4  29B6               	goto	u4020
  9043     09B5                     u4021:
  9044     09B5  29BF               	goto	l2966
  9045     09B6                     u4020:
  9046     09B6                     l2962:
  9047     09B6  3000               	movlw	0
  9048     09B7  00AD               	movwf	?___flmul+3
  9049     09B8  3000               	movlw	0
  9050     09B9  00AC               	movwf	?___flmul+2
  9051     09BA  3000               	movlw	0
  9052     09BB  00AB               	movwf	?___flmul+1
  9053     09BC  3000               	movlw	0
  9054     09BD  00AA               	movwf	?___flmul
  9055     09BE  2C9C               	goto	l866
  9056     09BF                     l2966:
  9057     09BF  082A               	movf	___flmul@b,w
  9058     09C0  00F3               	movwf	__Umul8_16@multiplicand
  9059     09C1  0830               	movf	___flmul@a+2,w
  9060     09C2  160A  158A  2286  120A  158A  	fcall	__Umul8_16
  9061     09C7  0874               	movf	?__Umul8_16+1,w
  9062     09C8  1283               	bcf	3,5	;RP0=0, select bank0
  9063     09C9  1303               	bcf	3,6	;RP1=0, select bank0
  9064     09CA  00C3               	movwf	___flmul@temp+1
  9065     09CB  0873               	movf	?__Umul8_16,w
  9066     09CC  00C2               	movwf	___flmul@temp
  9067     09CD                     l2968:
  9068     09CD  0842               	movf	___flmul@temp,w
  9069     09CE  00B2               	movwf	??___flmul
  9070     09CF  01B3               	clrf	??___flmul+1
  9071     09D0  01B4               	clrf	??___flmul+2
  9072     09D1  01B5               	clrf	??___flmul+3
  9073     09D2  0835               	movf	??___flmul+3,w
  9074     09D3  00BB               	movwf	___flmul@grs+3
  9075     09D4  0834               	movf	??___flmul+2,w
  9076     09D5  00BA               	movwf	___flmul@grs+2
  9077     09D6  0833               	movf	??___flmul+1,w
  9078     09D7  00B9               	movwf	___flmul@grs+1
  9079     09D8  0832               	movf	??___flmul,w
  9080     09D9  00B8               	movwf	___flmul@grs
  9081     09DA                     l2970:
  9082     09DA  0843               	movf	___flmul@temp+1,w
  9083     09DB  00B2               	movwf	??___flmul
  9084     09DC  01B3               	clrf	??___flmul+1
  9085     09DD  01B4               	clrf	??___flmul+2
  9086     09DE  01B5               	clrf	??___flmul+3
  9087     09DF  0835               	movf	??___flmul+3,w
  9088     09E0  00C1               	movwf	___flmul@prod+3
  9089     09E1  0834               	movf	??___flmul+2,w
  9090     09E2  00C0               	movwf	___flmul@prod+2
  9091     09E3  0833               	movf	??___flmul+1,w
  9092     09E4  00BF               	movwf	___flmul@prod+1
  9093     09E5  0832               	movf	??___flmul,w
  9094     09E6  00BE               	movwf	___flmul@prod
  9095     09E7  082B               	movf	___flmul@b+1,w
  9096     09E8  00F3               	movwf	__Umul8_16@multiplicand
  9097     09E9  082F               	movf	___flmul@a+1,w
  9098     09EA  160A  158A  2286  120A  158A  	fcall	__Umul8_16
  9099     09EF  0874               	movf	?__Umul8_16+1,w
  9100     09F0  1283               	bcf	3,5	;RP0=0, select bank0
  9101     09F1  1303               	bcf	3,6	;RP1=0, select bank0
  9102     09F2  00C3               	movwf	___flmul@temp+1
  9103     09F3  0873               	movf	?__Umul8_16,w
  9104     09F4  00C2               	movwf	___flmul@temp
  9105     09F5                     l2972:
  9106     09F5  0842               	movf	___flmul@temp,w
  9107     09F6  00B2               	movwf	??___flmul
  9108     09F7  01B3               	clrf	??___flmul+1
  9109     09F8  01B4               	clrf	??___flmul+2
  9110     09F9  01B5               	clrf	??___flmul+3
  9111     09FA  0832               	movf	??___flmul,w
  9112     09FB  07B8               	addwf	___flmul@grs,f
  9113     09FC  0833               	movf	??___flmul+1,w
  9114     09FD  1103               	clrz
  9115     09FE  1803               	skipnc
  9116     09FF  3E01               	addlw	1
  9117     0A00  1903               	skipnz
  9118     0A01  2A03               	goto	u4031
  9119     0A02  07B9               	addwf	___flmul@grs+1,f
  9120     0A03                     u4031:
  9121     0A03  0834               	movf	??___flmul+2,w
  9122     0A04  1103               	clrz
  9123     0A05  1803               	skipnc
  9124     0A06  3E01               	addlw	1
  9125     0A07  1903               	skipnz
  9126     0A08  2A0A               	goto	u4032
  9127     0A09  07BA               	addwf	___flmul@grs+2,f
  9128     0A0A                     u4032:
  9129     0A0A  0835               	movf	??___flmul+3,w
  9130     0A0B  1103               	clrz
  9131     0A0C  1803               	skipnc
  9132     0A0D  3E01               	addlw	1
  9133     0A0E  1903               	skipnz
  9134     0A0F  2A11               	goto	u4033
  9135     0A10  07BB               	addwf	___flmul@grs+3,f
  9136     0A11                     u4033:
  9137     0A11                     l2974:
  9138     0A11  0843               	movf	___flmul@temp+1,w
  9139     0A12  00B2               	movwf	??___flmul
  9140     0A13  01B3               	clrf	??___flmul+1
  9141     0A14  01B4               	clrf	??___flmul+2
  9142     0A15  01B5               	clrf	??___flmul+3
  9143     0A16  0832               	movf	??___flmul,w
  9144     0A17  07BE               	addwf	___flmul@prod,f
  9145     0A18  0833               	movf	??___flmul+1,w
  9146     0A19  1103               	clrz
  9147     0A1A  1803               	skipnc
  9148     0A1B  3E01               	addlw	1
  9149     0A1C  1903               	skipnz
  9150     0A1D  2A1F               	goto	u4041
  9151     0A1E  07BF               	addwf	___flmul@prod+1,f
  9152     0A1F                     u4041:
  9153     0A1F  0834               	movf	??___flmul+2,w
  9154     0A20  1103               	clrz
  9155     0A21  1803               	skipnc
  9156     0A22  3E01               	addlw	1
  9157     0A23  1903               	skipnz
  9158     0A24  2A26               	goto	u4042
  9159     0A25  07C0               	addwf	___flmul@prod+2,f
  9160     0A26                     u4042:
  9161     0A26  0835               	movf	??___flmul+3,w
  9162     0A27  1103               	clrz
  9163     0A28  1803               	skipnc
  9164     0A29  3E01               	addlw	1
  9165     0A2A  1903               	skipnz
  9166     0A2B  2A2D               	goto	u4043
  9167     0A2C  07C1               	addwf	___flmul@prod+3,f
  9168     0A2D                     u4043:
  9169     0A2D  082C               	movf	___flmul@b+2,w
  9170     0A2E  00F3               	movwf	__Umul8_16@multiplicand
  9171     0A2F  082E               	movf	___flmul@a,w
  9172     0A30  160A  158A  2286  120A  158A  	fcall	__Umul8_16
  9173     0A35  0874               	movf	?__Umul8_16+1,w
  9174     0A36  1283               	bcf	3,5	;RP0=0, select bank0
  9175     0A37  1303               	bcf	3,6	;RP1=0, select bank0
  9176     0A38  00C3               	movwf	___flmul@temp+1
  9177     0A39  0873               	movf	?__Umul8_16,w
  9178     0A3A  00C2               	movwf	___flmul@temp
  9179     0A3B                     l2976:
  9180     0A3B  0842               	movf	___flmul@temp,w
  9181     0A3C  00B2               	movwf	??___flmul
  9182     0A3D  01B3               	clrf	??___flmul+1
  9183     0A3E  01B4               	clrf	??___flmul+2
  9184     0A3F  01B5               	clrf	??___flmul+3
  9185     0A40  0832               	movf	??___flmul,w
  9186     0A41  07B8               	addwf	___flmul@grs,f
  9187     0A42  0833               	movf	??___flmul+1,w
  9188     0A43  1103               	clrz
  9189     0A44  1803               	skipnc
  9190     0A45  3E01               	addlw	1
  9191     0A46  1903               	skipnz
  9192     0A47  2A49               	goto	u4051
  9193     0A48  07B9               	addwf	___flmul@grs+1,f
  9194     0A49                     u4051:
  9195     0A49  0834               	movf	??___flmul+2,w
  9196     0A4A  1103               	clrz
  9197     0A4B  1803               	skipnc
  9198     0A4C  3E01               	addlw	1
  9199     0A4D  1903               	skipnz
  9200     0A4E  2A50               	goto	u4052
  9201     0A4F  07BA               	addwf	___flmul@grs+2,f
  9202     0A50                     u4052:
  9203     0A50  0835               	movf	??___flmul+3,w
  9204     0A51  1103               	clrz
  9205     0A52  1803               	skipnc
  9206     0A53  3E01               	addlw	1
  9207     0A54  1903               	skipnz
  9208     0A55  2A57               	goto	u4053
  9209     0A56  07BB               	addwf	___flmul@grs+3,f
  9210     0A57                     u4053:
  9211     0A57                     l2978:
  9212     0A57  0843               	movf	___flmul@temp+1,w
  9213     0A58  00B2               	movwf	??___flmul
  9214     0A59  01B3               	clrf	??___flmul+1
  9215     0A5A  01B4               	clrf	??___flmul+2
  9216     0A5B  01B5               	clrf	??___flmul+3
  9217     0A5C  0832               	movf	??___flmul,w
  9218     0A5D  07BE               	addwf	___flmul@prod,f
  9219     0A5E  0833               	movf	??___flmul+1,w
  9220     0A5F  1103               	clrz
  9221     0A60  1803               	skipnc
  9222     0A61  3E01               	addlw	1
  9223     0A62  1903               	skipnz
  9224     0A63  2A65               	goto	u4061
  9225     0A64  07BF               	addwf	___flmul@prod+1,f
  9226     0A65                     u4061:
  9227     0A65  0834               	movf	??___flmul+2,w
  9228     0A66  1103               	clrz
  9229     0A67  1803               	skipnc
  9230     0A68  3E01               	addlw	1
  9231     0A69  1903               	skipnz
  9232     0A6A  2A6C               	goto	u4062
  9233     0A6B  07C0               	addwf	___flmul@prod+2,f
  9234     0A6C                     u4062:
  9235     0A6C  0835               	movf	??___flmul+3,w
  9236     0A6D  1103               	clrz
  9237     0A6E  1803               	skipnc
  9238     0A6F  3E01               	addlw	1
  9239     0A70  1903               	skipnz
  9240     0A71  2A73               	goto	u4063
  9241     0A72  07C1               	addwf	___flmul@prod+3,f
  9242     0A73                     u4063:
  9243     0A73                     l2980:
  9244     0A73  3008               	movlw	8
  9245     0A74  00B2               	movwf	??___flmul
  9246     0A75                     u4075:
  9247     0A75  1003               	clrc
  9248     0A76  0DB8               	rlf	___flmul@grs,f
  9249     0A77  0DB9               	rlf	___flmul@grs+1,f
  9250     0A78  0DBA               	rlf	___flmul@grs+2,f
  9251     0A79  0DBB               	rlf	___flmul@grs+3,f
  9252     0A7A  0BB2               	decfsz	??___flmul,f
  9253     0A7B  2A75               	goto	u4075
  9254     0A7C                     l2982:
  9255     0A7C  082B               	movf	___flmul@b+1,w
  9256     0A7D  00F3               	movwf	__Umul8_16@multiplicand
  9257     0A7E  082E               	movf	___flmul@a,w
  9258     0A7F  160A  158A  2286  120A  158A  	fcall	__Umul8_16
  9259     0A84  0874               	movf	?__Umul8_16+1,w
  9260     0A85  1283               	bcf	3,5	;RP0=0, select bank0
  9261     0A86  1303               	bcf	3,6	;RP1=0, select bank0
  9262     0A87  00C3               	movwf	___flmul@temp+1
  9263     0A88  0873               	movf	?__Umul8_16,w
  9264     0A89  00C2               	movwf	___flmul@temp
  9265     0A8A                     l2984:
  9266     0A8A  0842               	movf	___flmul@temp,w
  9267     0A8B  00B2               	movwf	??___flmul
  9268     0A8C  0843               	movf	___flmul@temp+1,w
  9269     0A8D  00B3               	movwf	??___flmul+1
  9270     0A8E  01B4               	clrf	??___flmul+2
  9271     0A8F  01B5               	clrf	??___flmul+3
  9272     0A90  0832               	movf	??___flmul,w
  9273     0A91  07B8               	addwf	___flmul@grs,f
  9274     0A92  0833               	movf	??___flmul+1,w
  9275     0A93  1103               	clrz
  9276     0A94  1803               	skipnc
  9277     0A95  3E01               	addlw	1
  9278     0A96  1903               	skipnz
  9279     0A97  2A99               	goto	u4081
  9280     0A98  07B9               	addwf	___flmul@grs+1,f
  9281     0A99                     u4081:
  9282     0A99  0834               	movf	??___flmul+2,w
  9283     0A9A  1103               	clrz
  9284     0A9B  1803               	skipnc
  9285     0A9C  3E01               	addlw	1
  9286     0A9D  1903               	skipnz
  9287     0A9E  2AA0               	goto	u4082
  9288     0A9F  07BA               	addwf	___flmul@grs+2,f
  9289     0AA0                     u4082:
  9290     0AA0  0835               	movf	??___flmul+3,w
  9291     0AA1  1103               	clrz
  9292     0AA2  1803               	skipnc
  9293     0AA3  3E01               	addlw	1
  9294     0AA4  1903               	skipnz
  9295     0AA5  2AA7               	goto	u4083
  9296     0AA6  07BB               	addwf	___flmul@grs+3,f
  9297     0AA7                     u4083:
  9298     0AA7                     l2986:
  9299     0AA7  082A               	movf	___flmul@b,w
  9300     0AA8  00F3               	movwf	__Umul8_16@multiplicand
  9301     0AA9  082F               	movf	___flmul@a+1,w
  9302     0AAA  160A  158A  2286  120A  158A  	fcall	__Umul8_16
  9303     0AAF  0874               	movf	?__Umul8_16+1,w
  9304     0AB0  1283               	bcf	3,5	;RP0=0, select bank0
  9305     0AB1  1303               	bcf	3,6	;RP1=0, select bank0
  9306     0AB2  00C3               	movwf	___flmul@temp+1
  9307     0AB3  0873               	movf	?__Umul8_16,w
  9308     0AB4  00C2               	movwf	___flmul@temp
  9309     0AB5                     l2988:
  9310     0AB5  0842               	movf	___flmul@temp,w
  9311     0AB6  00B2               	movwf	??___flmul
  9312     0AB7  0843               	movf	___flmul@temp+1,w
  9313     0AB8  00B3               	movwf	??___flmul+1
  9314     0AB9  01B4               	clrf	??___flmul+2
  9315     0ABA  01B5               	clrf	??___flmul+3
  9316     0ABB  0832               	movf	??___flmul,w
  9317     0ABC  07B8               	addwf	___flmul@grs,f
  9318     0ABD  0833               	movf	??___flmul+1,w
  9319     0ABE  1103               	clrz
  9320     0ABF  1803               	skipnc
  9321     0AC0  3E01               	addlw	1
  9322     0AC1  1903               	skipnz
  9323     0AC2  2AC4               	goto	u4091
  9324     0AC3  07B9               	addwf	___flmul@grs+1,f
  9325     0AC4                     u4091:
  9326     0AC4  0834               	movf	??___flmul+2,w
  9327     0AC5  1103               	clrz
  9328     0AC6  1803               	skipnc
  9329     0AC7  3E01               	addlw	1
  9330     0AC8  1903               	skipnz
  9331     0AC9  2ACB               	goto	u4092
  9332     0ACA  07BA               	addwf	___flmul@grs+2,f
  9333     0ACB                     u4092:
  9334     0ACB  0835               	movf	??___flmul+3,w
  9335     0ACC  1103               	clrz
  9336     0ACD  1803               	skipnc
  9337     0ACE  3E01               	addlw	1
  9338     0ACF  1903               	skipnz
  9339     0AD0  2AD2               	goto	u4093
  9340     0AD1  07BB               	addwf	___flmul@grs+3,f
  9341     0AD2                     u4093:
  9342     0AD2                     l2990:
  9343     0AD2  3008               	movlw	8
  9344     0AD3  00B2               	movwf	??___flmul
  9345     0AD4                     u4105:
  9346     0AD4  1003               	clrc
  9347     0AD5  0DB8               	rlf	___flmul@grs,f
  9348     0AD6  0DB9               	rlf	___flmul@grs+1,f
  9349     0AD7  0DBA               	rlf	___flmul@grs+2,f
  9350     0AD8  0DBB               	rlf	___flmul@grs+3,f
  9351     0AD9  0BB2               	decfsz	??___flmul,f
  9352     0ADA  2AD4               	goto	u4105
  9353     0ADB  082A               	movf	___flmul@b,w
  9354     0ADC  00F3               	movwf	__Umul8_16@multiplicand
  9355     0ADD  082E               	movf	___flmul@a,w
  9356     0ADE  160A  158A  2286  120A  158A  	fcall	__Umul8_16
  9357     0AE3  0874               	movf	?__Umul8_16+1,w
  9358     0AE4  1283               	bcf	3,5	;RP0=0, select bank0
  9359     0AE5  1303               	bcf	3,6	;RP1=0, select bank0
  9360     0AE6  00C3               	movwf	___flmul@temp+1
  9361     0AE7  0873               	movf	?__Umul8_16,w
  9362     0AE8  00C2               	movwf	___flmul@temp
  9363     0AE9                     l2992:
  9364     0AE9  0842               	movf	___flmul@temp,w
  9365     0AEA  00B2               	movwf	??___flmul
  9366     0AEB  0843               	movf	___flmul@temp+1,w
  9367     0AEC  00B3               	movwf	??___flmul+1
  9368     0AED  01B4               	clrf	??___flmul+2
  9369     0AEE  01B5               	clrf	??___flmul+3
  9370     0AEF  0832               	movf	??___flmul,w
  9371     0AF0  07B8               	addwf	___flmul@grs,f
  9372     0AF1  0833               	movf	??___flmul+1,w
  9373     0AF2  1103               	clrz
  9374     0AF3  1803               	skipnc
  9375     0AF4  3E01               	addlw	1
  9376     0AF5  1903               	skipnz
  9377     0AF6  2AF8               	goto	u4111
  9378     0AF7  07B9               	addwf	___flmul@grs+1,f
  9379     0AF8                     u4111:
  9380     0AF8  0834               	movf	??___flmul+2,w
  9381     0AF9  1103               	clrz
  9382     0AFA  1803               	skipnc
  9383     0AFB  3E01               	addlw	1
  9384     0AFC  1903               	skipnz
  9385     0AFD  2AFF               	goto	u4112
  9386     0AFE  07BA               	addwf	___flmul@grs+2,f
  9387     0AFF                     u4112:
  9388     0AFF  0835               	movf	??___flmul+3,w
  9389     0B00  1103               	clrz
  9390     0B01  1803               	skipnc
  9391     0B02  3E01               	addlw	1
  9392     0B03  1903               	skipnz
  9393     0B04  2B06               	goto	u4113
  9394     0B05  07BB               	addwf	___flmul@grs+3,f
  9395     0B06                     u4113:
  9396     0B06                     l2994:
  9397     0B06  082B               	movf	___flmul@b+1,w
  9398     0B07  00F3               	movwf	__Umul8_16@multiplicand
  9399     0B08  0830               	movf	___flmul@a+2,w
  9400     0B09  160A  158A  2286  120A  158A  	fcall	__Umul8_16
  9401     0B0E  0874               	movf	?__Umul8_16+1,w
  9402     0B0F  1283               	bcf	3,5	;RP0=0, select bank0
  9403     0B10  1303               	bcf	3,6	;RP1=0, select bank0
  9404     0B11  00C3               	movwf	___flmul@temp+1
  9405     0B12  0873               	movf	?__Umul8_16,w
  9406     0B13  00C2               	movwf	___flmul@temp
  9407     0B14  0842               	movf	___flmul@temp,w
  9408     0B15  00B2               	movwf	??___flmul
  9409     0B16  0843               	movf	___flmul@temp+1,w
  9410     0B17  00B3               	movwf	??___flmul+1
  9411     0B18  01B4               	clrf	??___flmul+2
  9412     0B19  01B5               	clrf	??___flmul+3
  9413     0B1A  0832               	movf	??___flmul,w
  9414     0B1B  07BE               	addwf	___flmul@prod,f
  9415     0B1C  0833               	movf	??___flmul+1,w
  9416     0B1D  1103               	clrz
  9417     0B1E  1803               	skipnc
  9418     0B1F  3E01               	addlw	1
  9419     0B20  1903               	skipnz
  9420     0B21  2B23               	goto	u4121
  9421     0B22  07BF               	addwf	___flmul@prod+1,f
  9422     0B23                     u4121:
  9423     0B23  0834               	movf	??___flmul+2,w
  9424     0B24  1103               	clrz
  9425     0B25  1803               	skipnc
  9426     0B26  3E01               	addlw	1
  9427     0B27  1903               	skipnz
  9428     0B28  2B2A               	goto	u4122
  9429     0B29  07C0               	addwf	___flmul@prod+2,f
  9430     0B2A                     u4122:
  9431     0B2A  0835               	movf	??___flmul+3,w
  9432     0B2B  1103               	clrz
  9433     0B2C  1803               	skipnc
  9434     0B2D  3E01               	addlw	1
  9435     0B2E  1903               	skipnz
  9436     0B2F  2B31               	goto	u4123
  9437     0B30  07C1               	addwf	___flmul@prod+3,f
  9438     0B31                     u4123:
  9439     0B31                     l2996:
  9440     0B31  082C               	movf	___flmul@b+2,w
  9441     0B32  00F3               	movwf	__Umul8_16@multiplicand
  9442     0B33  082F               	movf	___flmul@a+1,w
  9443     0B34  160A  158A  2286  120A  158A  	fcall	__Umul8_16
  9444     0B39  0874               	movf	?__Umul8_16+1,w
  9445     0B3A  1283               	bcf	3,5	;RP0=0, select bank0
  9446     0B3B  1303               	bcf	3,6	;RP1=0, select bank0
  9447     0B3C  00C3               	movwf	___flmul@temp+1
  9448     0B3D  0873               	movf	?__Umul8_16,w
  9449     0B3E  00C2               	movwf	___flmul@temp
  9450     0B3F                     l2998:
  9451     0B3F  0842               	movf	___flmul@temp,w
  9452     0B40  00B2               	movwf	??___flmul
  9453     0B41  0843               	movf	___flmul@temp+1,w
  9454     0B42  00B3               	movwf	??___flmul+1
  9455     0B43  01B4               	clrf	??___flmul+2
  9456     0B44  01B5               	clrf	??___flmul+3
  9457     0B45  0832               	movf	??___flmul,w
  9458     0B46  07BE               	addwf	___flmul@prod,f
  9459     0B47  0833               	movf	??___flmul+1,w
  9460     0B48  1103               	clrz
  9461     0B49  1803               	skipnc
  9462     0B4A  3E01               	addlw	1
  9463     0B4B  1903               	skipnz
  9464     0B4C  2B4E               	goto	u4131
  9465     0B4D  07BF               	addwf	___flmul@prod+1,f
  9466     0B4E                     u4131:
  9467     0B4E  0834               	movf	??___flmul+2,w
  9468     0B4F  1103               	clrz
  9469     0B50  1803               	skipnc
  9470     0B51  3E01               	addlw	1
  9471     0B52  1903               	skipnz
  9472     0B53  2B55               	goto	u4132
  9473     0B54  07C0               	addwf	___flmul@prod+2,f
  9474     0B55                     u4132:
  9475     0B55  0835               	movf	??___flmul+3,w
  9476     0B56  1103               	clrz
  9477     0B57  1803               	skipnc
  9478     0B58  3E01               	addlw	1
  9479     0B59  1903               	skipnz
  9480     0B5A  2B5C               	goto	u4133
  9481     0B5B  07C1               	addwf	___flmul@prod+3,f
  9482     0B5C                     u4133:
  9483     0B5C  082C               	movf	___flmul@b+2,w
  9484     0B5D  00F3               	movwf	__Umul8_16@multiplicand
  9485     0B5E  0830               	movf	___flmul@a+2,w
  9486     0B5F  160A  158A  2286  120A  158A  	fcall	__Umul8_16
  9487     0B64  0874               	movf	?__Umul8_16+1,w
  9488     0B65  1283               	bcf	3,5	;RP0=0, select bank0
  9489     0B66  1303               	bcf	3,6	;RP1=0, select bank0
  9490     0B67  00C3               	movwf	___flmul@temp+1
  9491     0B68  0873               	movf	?__Umul8_16,w
  9492     0B69  00C2               	movwf	___flmul@temp
  9493     0B6A                     l3000:
  9494     0B6A  0842               	movf	___flmul@temp,w
  9495     0B6B  00B2               	movwf	??___flmul
  9496     0B6C  0843               	movf	___flmul@temp+1,w
  9497     0B6D  00B3               	movwf	??___flmul+1
  9498     0B6E  01B4               	clrf	??___flmul+2
  9499     0B6F  01B5               	clrf	??___flmul+3
  9500     0B70  3008               	movlw	8
  9501     0B71                     u4145:
  9502     0B71  1003               	clrc
  9503     0B72  0DB2               	rlf	??___flmul,f
  9504     0B73  0DB3               	rlf	??___flmul+1,f
  9505     0B74  0DB4               	rlf	??___flmul+2,f
  9506     0B75  0DB5               	rlf	??___flmul+3,f
  9507     0B76                     u4140:
  9508     0B76  3EFF               	addlw	-1
  9509     0B77  1D03               	skipz
  9510     0B78  2B71               	goto	u4145
  9511     0B79  0832               	movf	??___flmul,w
  9512     0B7A  07BE               	addwf	___flmul@prod,f
  9513     0B7B  0833               	movf	??___flmul+1,w
  9514     0B7C  1103               	clrz
  9515     0B7D  1803               	skipnc
  9516     0B7E  3E01               	addlw	1
  9517     0B7F  1903               	skipnz
  9518     0B80  2B82               	goto	u4151
  9519     0B81  07BF               	addwf	___flmul@prod+1,f
  9520     0B82                     u4151:
  9521     0B82  0834               	movf	??___flmul+2,w
  9522     0B83  1103               	clrz
  9523     0B84  1803               	skipnc
  9524     0B85  3E01               	addlw	1
  9525     0B86  1903               	skipnz
  9526     0B87  2B89               	goto	u4152
  9527     0B88  07C0               	addwf	___flmul@prod+2,f
  9528     0B89                     u4152:
  9529     0B89  0835               	movf	??___flmul+3,w
  9530     0B8A  1103               	clrz
  9531     0B8B  1803               	skipnc
  9532     0B8C  3E01               	addlw	1
  9533     0B8D  1903               	skipnz
  9534     0B8E  2B90               	goto	u4153
  9535     0B8F  07C1               	addwf	___flmul@prod+3,f
  9536     0B90                     u4153:
  9537     0B90                     l3002:
  9538     0B90  0838               	movf	___flmul@grs,w
  9539     0B91  00B2               	movwf	??___flmul
  9540     0B92  0839               	movf	___flmul@grs+1,w
  9541     0B93  00B3               	movwf	??___flmul+1
  9542     0B94  083A               	movf	___flmul@grs+2,w
  9543     0B95  00B4               	movwf	??___flmul+2
  9544     0B96  083B               	movf	___flmul@grs+3,w
  9545     0B97  00B5               	movwf	??___flmul+3
  9546     0B98  3018               	movlw	24
  9547     0B99                     u4165:
  9548     0B99  1003               	clrc
  9549     0B9A  0CB5               	rrf	??___flmul+3,f
  9550     0B9B  0CB4               	rrf	??___flmul+2,f
  9551     0B9C  0CB3               	rrf	??___flmul+1,f
  9552     0B9D  0CB2               	rrf	??___flmul,f
  9553     0B9E                     u4160:
  9554     0B9E  3EFF               	addlw	-1
  9555     0B9F  1D03               	skipz
  9556     0BA0  2B99               	goto	u4165
  9557     0BA1  0832               	movf	??___flmul,w
  9558     0BA2  07BE               	addwf	___flmul@prod,f
  9559     0BA3  0833               	movf	??___flmul+1,w
  9560     0BA4  1103               	clrz
  9561     0BA5  1803               	skipnc
  9562     0BA6  3E01               	addlw	1
  9563     0BA7  1903               	skipnz
  9564     0BA8  2BAA               	goto	u4171
  9565     0BA9  07BF               	addwf	___flmul@prod+1,f
  9566     0BAA                     u4171:
  9567     0BAA  0834               	movf	??___flmul+2,w
  9568     0BAB  1103               	clrz
  9569     0BAC  1803               	skipnc
  9570     0BAD  3E01               	addlw	1
  9571     0BAE  1903               	skipnz
  9572     0BAF  2BB1               	goto	u4172
  9573     0BB0  07C0               	addwf	___flmul@prod+2,f
  9574     0BB1                     u4172:
  9575     0BB1  0835               	movf	??___flmul+3,w
  9576     0BB2  1103               	clrz
  9577     0BB3  1803               	skipnc
  9578     0BB4  3E01               	addlw	1
  9579     0BB5  1903               	skipnz
  9580     0BB6  2BB8               	goto	u4173
  9581     0BB7  07C1               	addwf	___flmul@prod+3,f
  9582     0BB8                     u4173:
  9583     0BB8                     l3004:
  9584     0BB8  3008               	movlw	8
  9585     0BB9  00B2               	movwf	??___flmul
  9586     0BBA                     u4185:
  9587     0BBA  1003               	clrc
  9588     0BBB  0DB8               	rlf	___flmul@grs,f
  9589     0BBC  0DB9               	rlf	___flmul@grs+1,f
  9590     0BBD  0DBA               	rlf	___flmul@grs+2,f
  9591     0BBE  0DBB               	rlf	___flmul@grs+3,f
  9592     0BBF  0BB2               	decfsz	??___flmul,f
  9593     0BC0  2BBA               	goto	u4185
  9594     0BC1                     l3006:
  9595     0BC1  083D               	movf	___flmul@bexp,w
  9596     0BC2  073C               	addwf	___flmul@aexp,w
  9597     0BC3  00B2               	movwf	??___flmul
  9598     0BC4  01B3               	clrf	??___flmul+1
  9599     0BC5  0DB3               	rlf	??___flmul+1,f
  9600     0BC6  0832               	movf	??___flmul,w
  9601     0BC7  3E82               	addlw	130
  9602     0BC8  00C2               	movwf	___flmul@temp
  9603     0BC9  0833               	movf	??___flmul+1,w
  9604     0BCA  1803               	skipnc
  9605     0BCB  3E01               	addlw	1
  9606     0BCC  3EFF               	addlw	255
  9607     0BCD  00C3               	movwf	___flmul@temp+1
  9608     0BCE  2BEC               	goto	l3018
  9609     0BCF                     l3008:
  9610     0BCF  3001               	movlw	1
  9611     0BD0  00B2               	movwf	??___flmul
  9612     0BD1                     u4195:
  9613     0BD1  1003               	clrc
  9614     0BD2  0DBE               	rlf	___flmul@prod,f
  9615     0BD3  0DBF               	rlf	___flmul@prod+1,f
  9616     0BD4  0DC0               	rlf	___flmul@prod+2,f
  9617     0BD5  0DC1               	rlf	___flmul@prod+3,f
  9618     0BD6  0BB2               	decfsz	??___flmul,f
  9619     0BD7  2BD1               	goto	u4195
  9620     0BD8                     l3010:
  9621     0BD8  1FBB               	btfss	___flmul@grs+3,7
  9622     0BD9  2BDB               	goto	u4201
  9623     0BDA  2BDC               	goto	u4200
  9624     0BDB                     u4201:
  9625     0BDB  2BDD               	goto	l3014
  9626     0BDC                     u4200:
  9627     0BDC                     l3012:
  9628     0BDC  143E               	bsf	___flmul@prod,0
  9629     0BDD                     l3014:
  9630     0BDD  3001               	movlw	1
  9631     0BDE  00B2               	movwf	??___flmul
  9632     0BDF                     u4215:
  9633     0BDF  1003               	clrc
  9634     0BE0  0DB8               	rlf	___flmul@grs,f
  9635     0BE1  0DB9               	rlf	___flmul@grs+1,f
  9636     0BE2  0DBA               	rlf	___flmul@grs+2,f
  9637     0BE3  0DBB               	rlf	___flmul@grs+3,f
  9638     0BE4  0BB2               	decfsz	??___flmul,f
  9639     0BE5  2BDF               	goto	u4215
  9640     0BE6                     l3016:
  9641     0BE6  30FF               	movlw	255
  9642     0BE7  07C2               	addwf	___flmul@temp,f
  9643     0BE8  1803               	skipnc
  9644     0BE9  0AC3               	incf	___flmul@temp+1,f
  9645     0BEA  30FF               	movlw	255
  9646     0BEB  07C3               	addwf	___flmul@temp+1,f
  9647     0BEC                     l3018:
  9648     0BEC  1FC0               	btfss	___flmul@prod+2,7
  9649     0BED  2BEF               	goto	u4221
  9650     0BEE  2BF0               	goto	u4220
  9651     0BEF                     u4221:
  9652     0BEF  2BCF               	goto	l3008
  9653     0BF0                     u4220:
  9654     0BF0                     l3020:
  9655     0BF0  01BC               	clrf	___flmul@aexp
  9656     0BF1                     l3022:
  9657     0BF1  1FBB               	btfss	___flmul@grs+3,7
  9658     0BF2  2BF4               	goto	u4231
  9659     0BF3  2BF5               	goto	u4230
  9660     0BF4                     u4231:
  9661     0BF4  2C11               	goto	l3030
  9662     0BF5                     u4230:
  9663     0BF5                     l3024:
  9664     0BF5  30FF               	movlw	255
  9665     0BF6  0538               	andwf	___flmul@grs,w
  9666     0BF7  00B2               	movwf	??___flmul
  9667     0BF8  30FF               	movlw	255
  9668     0BF9  0539               	andwf	___flmul@grs+1,w
  9669     0BFA  00B3               	movwf	??___flmul+1
  9670     0BFB  30FF               	movlw	255
  9671     0BFC  053A               	andwf	___flmul@grs+2,w
  9672     0BFD  00B4               	movwf	??___flmul+2
  9673     0BFE  307F               	movlw	127
  9674     0BFF  053B               	andwf	___flmul@grs+3,w
  9675     0C00  00B5               	movwf	??___flmul+3
  9676     0C01  0835               	movf	??___flmul+3,w
  9677     0C02  0434               	iorwf	??___flmul+2,w
  9678     0C03  0433               	iorwf	??___flmul+1,w
  9679     0C04  0432               	iorwf	??___flmul,w
  9680     0C05  1903               	skipnz
  9681     0C06  2C08               	goto	u4241
  9682     0C07  2C09               	goto	u4240
  9683     0C08                     u4241:
  9684     0C08  2C0C               	goto	l872
  9685     0C09                     u4240:
  9686     0C09                     l3026:
  9687     0C09  01BC               	clrf	___flmul@aexp
  9688     0C0A  0ABC               	incf	___flmul@aexp,f
  9689     0C0B  2C11               	goto	l3030
  9690     0C0C                     l872:
  9691     0C0C  1C3E               	btfss	___flmul@prod,0
  9692     0C0D  2C0F               	goto	u4251
  9693     0C0E  2C10               	goto	u4250
  9694     0C0F                     u4251:
  9695     0C0F  2C11               	goto	l3030
  9696     0C10                     u4250:
  9697     0C10  2C09               	goto	l3026
  9698     0C11                     l3030:
  9699     0C11  083C               	movf	___flmul@aexp,w
  9700     0C12  1903               	btfsc	3,2
  9701     0C13  2C15               	goto	u4261
  9702     0C14  2C16               	goto	u4260
  9703     0C15                     u4261:
  9704     0C15  2C47               	goto	l3040
  9705     0C16                     u4260:
  9706     0C16                     l3032:
  9707     0C16  3001               	movlw	1
  9708     0C17  07BE               	addwf	___flmul@prod,f
  9709     0C18  3000               	movlw	0
  9710     0C19  1803               	skipnc
  9711     0C1A  3001               	movlw	1
  9712     0C1B  07BF               	addwf	___flmul@prod+1,f
  9713     0C1C  3000               	movlw	0
  9714     0C1D  1803               	skipnc
  9715     0C1E  3001               	movlw	1
  9716     0C1F  07C0               	addwf	___flmul@prod+2,f
  9717     0C20  3000               	movlw	0
  9718     0C21  1803               	skipnc
  9719     0C22  3001               	movlw	1
  9720     0C23  07C1               	addwf	___flmul@prod+3,f
  9721     0C24                     l3034:
  9722     0C24  1C41               	btfss	___flmul@prod+3,0
  9723     0C25  2C27               	goto	u4271
  9724     0C26  2C28               	goto	u4270
  9725     0C27                     u4271:
  9726     0C27  2C47               	goto	l3040
  9727     0C28                     u4270:
  9728     0C28                     l3036:
  9729     0C28  083E               	movf	___flmul@prod,w
  9730     0C29  00B2               	movwf	??___flmul
  9731     0C2A  083F               	movf	___flmul@prod+1,w
  9732     0C2B  00B3               	movwf	??___flmul+1
  9733     0C2C  0840               	movf	___flmul@prod+2,w
  9734     0C2D  00B4               	movwf	??___flmul+2
  9735     0C2E  0841               	movf	___flmul@prod+3,w
  9736     0C2F  00B5               	movwf	??___flmul+3
  9737     0C30  3001               	movlw	1
  9738     0C31  00B6               	movwf	??___flmul+4
  9739     0C32                     u4285:
  9740     0C32  0D35               	rlf	??___flmul+3,w
  9741     0C33  0CB5               	rrf	??___flmul+3,f
  9742     0C34  0CB4               	rrf	??___flmul+2,f
  9743     0C35  0CB3               	rrf	??___flmul+1,f
  9744     0C36  0CB2               	rrf	??___flmul,f
  9745     0C37                     u4280:
  9746     0C37  0BB6               	decfsz	??___flmul+4,f
  9747     0C38  2C32               	goto	u4285
  9748     0C39  0835               	movf	??___flmul+3,w
  9749     0C3A  00C1               	movwf	___flmul@prod+3
  9750     0C3B  0834               	movf	??___flmul+2,w
  9751     0C3C  00C0               	movwf	___flmul@prod+2
  9752     0C3D  0833               	movf	??___flmul+1,w
  9753     0C3E  00BF               	movwf	___flmul@prod+1
  9754     0C3F  0832               	movf	??___flmul,w
  9755     0C40  00BE               	movwf	___flmul@prod
  9756     0C41                     l3038:
  9757     0C41  3001               	movlw	1
  9758     0C42  07C2               	addwf	___flmul@temp,f
  9759     0C43  1803               	skipnc
  9760     0C44  0AC3               	incf	___flmul@temp+1,f
  9761     0C45  3000               	movlw	0
  9762     0C46  07C3               	addwf	___flmul@temp+1,f
  9763     0C47                     l3040:
  9764     0C47  0843               	movf	___flmul@temp+1,w
  9765     0C48  3A80               	xorlw	128
  9766     0C49  00FF               	movwf	btemp+1
  9767     0C4A  3080               	movlw	128
  9768     0C4B  027F               	subwf	btemp+1,w
  9769     0C4C  1D03               	skipz
  9770     0C4D  2C50               	goto	u4295
  9771     0C4E  30FF               	movlw	255
  9772     0C4F  0242               	subwf	___flmul@temp,w
  9773     0C50                     u4295:
  9774     0C50  1C03               	skipc
  9775     0C51  2C53               	goto	u4291
  9776     0C52  2C54               	goto	u4290
  9777     0C53                     u4291:
  9778     0C53  2C5F               	goto	l3044
  9779     0C54                     u4290:
  9780     0C54                     l3042:
  9781     0C54  307F               	movlw	127
  9782     0C55  1283               	bcf	3,5	;RP0=0, select bank0
  9783     0C56  1303               	bcf	3,6	;RP1=0, select bank0
  9784     0C57  00C1               	movwf	___flmul@prod+3
  9785     0C58  3080               	movlw	128
  9786     0C59  00C0               	movwf	___flmul@prod+2
  9787     0C5A  3000               	movlw	0
  9788     0C5B  00BF               	movwf	___flmul@prod+1
  9789     0C5C  3000               	movlw	0
  9790     0C5D  00BE               	movwf	___flmul@prod
  9791     0C5E  2C90               	goto	l3058
  9792     0C5F                     l3044:
  9793     0C5F  1283               	bcf	3,5	;RP0=0, select bank0
  9794     0C60  1303               	bcf	3,6	;RP1=0, select bank0
  9795     0C61  0843               	movf	___flmul@temp+1,w
  9796     0C62  3A80               	xorlw	128
  9797     0C63  00FF               	movwf	btemp+1
  9798     0C64  3080               	movlw	128
  9799     0C65  027F               	subwf	btemp+1,w
  9800     0C66  1D03               	skipz
  9801     0C67  2C6A               	goto	u4305
  9802     0C68  3001               	movlw	1
  9803     0C69  0242               	subwf	___flmul@temp,w
  9804     0C6A                     u4305:
  9805     0C6A  1803               	skipnc
  9806     0C6B  2C6D               	goto	u4301
  9807     0C6C  2C6E               	goto	u4300
  9808     0C6D                     u4301:
  9809     0C6D  2C7A               	goto	l3050
  9810     0C6E                     u4300:
  9811     0C6E                     l3046:
  9812     0C6E  3000               	movlw	0
  9813     0C6F  1283               	bcf	3,5	;RP0=0, select bank0
  9814     0C70  1303               	bcf	3,6	;RP1=0, select bank0
  9815     0C71  00C1               	movwf	___flmul@prod+3
  9816     0C72  3000               	movlw	0
  9817     0C73  00C0               	movwf	___flmul@prod+2
  9818     0C74  3000               	movlw	0
  9819     0C75  00BF               	movwf	___flmul@prod+1
  9820     0C76  3000               	movlw	0
  9821     0C77  00BE               	movwf	___flmul@prod
  9822     0C78                     l3048:
  9823     0C78  01B7               	clrf	___flmul@sign
  9824     0C79  2C90               	goto	l3058
  9825     0C7A                     l3050:
  9826     0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  9827     0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  9828     0C7C  0842               	movf	___flmul@temp,w
  9829     0C7D  00BD               	movwf	___flmul@bexp
  9830     0C7E  30FF               	movlw	255
  9831     0C7F  05BE               	andwf	___flmul@prod,f
  9832     0C80  30FF               	movlw	255
  9833     0C81  05BF               	andwf	___flmul@prod+1,f
  9834     0C82  307F               	movlw	127
  9835     0C83  05C0               	andwf	___flmul@prod+2,f
  9836     0C84  3000               	movlw	0
  9837     0C85  05C1               	andwf	___flmul@prod+3,f
  9838     0C86                     l3052:
  9839     0C86  1C3D               	btfss	___flmul@bexp,0
  9840     0C87  2C89               	goto	u4311
  9841     0C88  2C8A               	goto	u4310
  9842     0C89                     u4311:
  9843     0C89  2C8B               	goto	l3056
  9844     0C8A                     u4310:
  9845     0C8A                     l3054:
  9846     0C8A  17C0               	bsf	___flmul@prod+2,7
  9847     0C8B                     l3056:
  9848     0C8B  083D               	movf	___flmul@bexp,w
  9849     0C8C  00B2               	movwf	??___flmul
  9850     0C8D  1003               	clrc
  9851     0C8E  0C32               	rrf	??___flmul,w
  9852     0C8F  00C1               	movwf	___flmul@prod+3
  9853     0C90                     l3058:
  9854     0C90  0837               	movf	___flmul@sign,w
  9855     0C91  00FF               	movwf	btemp+1
  9856     0C92  087F               	movf	btemp+1,w
  9857     0C93  04C1               	iorwf	___flmul@prod+3,f
  9858     0C94                     l3060:
  9859     0C94  0841               	movf	___flmul@prod+3,w
  9860     0C95  00AD               	movwf	?___flmul+3
  9861     0C96  0840               	movf	___flmul@prod+2,w
  9862     0C97  00AC               	movwf	?___flmul+2
  9863     0C98  083F               	movf	___flmul@prod+1,w
  9864     0C99  00AB               	movwf	?___flmul+1
  9865     0C9A  083E               	movf	___flmul@prod,w
  9866     0C9B  00AA               	movwf	?___flmul
  9867     0C9C                     l866:
  9868     0C9C  0008               	return
  9869     0C9D                     __end_of___flmul:
  9870                           
  9871                           	psect	text23
  9872     1A86                     __ptext23:	
  9873 ;; *************** function __Umul8_16 *****************
  9874 ;; Defined at:
  9875 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul8_16.c"
  9876 ;; Parameters:    Size  Location     Type
  9877 ;;  multiplier      1    wreg     unsigned char 
  9878 ;;  multiplicand    1    3[COMMON] unsigned char 
  9879 ;; Auto vars:     Size  Location     Type
  9880 ;;  multiplier      1    4[BANK0 ] unsigned char 
  9881 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  9882 ;;  product         2    0[BANK0 ] unsigned int 
  9883 ;; Return value:  Size  Location     Type
  9884 ;;                  2    3[COMMON] unsigned int 
  9885 ;; Registers used:
  9886 ;;		wreg, status,2, status,0
  9887 ;; Tracked objects:
  9888 ;;		On entry : 0/0
  9889 ;;		On exit  : 0/0
  9890 ;;		Unchanged: 0/0
  9891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9892 ;;      Params:         2       0       0       0       0
  9893 ;;      Locals:         0       5       0       0       0
  9894 ;;      Temps:          2       0       0       0       0
  9895 ;;      Totals:         4       5       0       0       0
  9896 ;;Total ram usage:        9 bytes
  9897 ;; Hardware stack levels used: 1
  9898 ;; Hardware stack levels required when called: 1
  9899 ;; This function calls:
  9900 ;;		Nothing
  9901 ;; This function is called by:
  9902 ;;		___flmul
  9903 ;; This function uses a non-reentrant model
  9904 ;;
  9905                           
  9906     1A86                     __Umul8_16:	
  9907                           ;psect for function __Umul8_16
  9908                           
  9909                           
  9910                           ;incstack = 0
  9911                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9912                           ;__Umul8_16@multiplier stored from wreg
  9913     1A86  1283               	bcf	3,5	;RP0=0, select bank0
  9914     1A87  1303               	bcf	3,6	;RP1=0, select bank0
  9915     1A88  00A4               	movwf	__Umul8_16@multiplier
  9916     1A89                     l2576:
  9917     1A89  01A0               	clrf	__Umul8_16@product
  9918     1A8A  01A1               	clrf	__Umul8_16@product+1
  9919     1A8B                     l2578:
  9920     1A8B  0873               	movf	__Umul8_16@multiplicand,w
  9921     1A8C  00F5               	movwf	??__Umul8_16
  9922     1A8D  01F6               	clrf	??__Umul8_16+1
  9923     1A8E  0875               	movf	??__Umul8_16,w
  9924     1A8F  00A2               	movwf	__Umul8_16@word_mpld
  9925     1A90  0876               	movf	??__Umul8_16+1,w
  9926     1A91  00A3               	movwf	__Umul8_16@word_mpld+1
  9927     1A92                     l2580:
  9928     1A92  1C24               	btfss	__Umul8_16@multiplier,0
  9929     1A93  2A95               	goto	u3141
  9930     1A94  2A96               	goto	u3140
  9931     1A95                     u3141:
  9932     1A95  2A9C               	goto	l885
  9933     1A96                     u3140:
  9934     1A96                     l2582:
  9935     1A96  0822               	movf	__Umul8_16@word_mpld,w
  9936     1A97  07A0               	addwf	__Umul8_16@product,f
  9937     1A98  1803               	skipnc
  9938     1A99  0AA1               	incf	__Umul8_16@product+1,f
  9939     1A9A  0823               	movf	__Umul8_16@word_mpld+1,w
  9940     1A9B  07A1               	addwf	__Umul8_16@product+1,f
  9941     1A9C                     l885:
  9942     1A9C  3001               	movlw	1
  9943     1A9D                     u3155:
  9944     1A9D  1003               	clrc
  9945     1A9E  0DA2               	rlf	__Umul8_16@word_mpld,f
  9946     1A9F  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  9947     1AA0  3EFF               	addlw	-1
  9948     1AA1  1D03               	skipz
  9949     1AA2  2A9D               	goto	u3155
  9950     1AA3  1003               	clrc
  9951     1AA4  0CA4               	rrf	__Umul8_16@multiplier,f
  9952     1AA5                     l2584:
  9953     1AA5  0824               	movf	__Umul8_16@multiplier,w
  9954     1AA6  1D03               	btfss	3,2
  9955     1AA7  2AA9               	goto	u3161
  9956     1AA8  2AAA               	goto	u3160
  9957     1AA9                     u3161:
  9958     1AA9  2A92               	goto	l2580
  9959     1AAA                     u3160:
  9960     1AAA                     l2586:
  9961     1AAA  0821               	movf	__Umul8_16@product+1,w
  9962     1AAB  00F4               	movwf	?__Umul8_16+1
  9963     1AAC  0820               	movf	__Umul8_16@product,w
  9964     1AAD  00F3               	movwf	?__Umul8_16
  9965     1AAE                     l887:
  9966     1AAE  0008               	return
  9967     1AAF                     __end_of__Umul8_16:
  9968                           
  9969                           	psect	text24
  9970     11CC                     __ptext24:	
  9971 ;; *************** function ___fldiv *****************
  9972 ;; Defined at:
  9973 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcdiv.c"
  9974 ;; Parameters:    Size  Location     Type
  9975 ;;  a               4    8[BANK1 ] unsigned int 
  9976 ;;  b               4   12[BANK1 ] unsigned int 
  9977 ;; Auto vars:     Size  Location     Type
  9978 ;;  grs             4   28[BANK1 ] unsigned long 
  9979 ;;  rem             4   21[BANK1 ] unsigned long 
  9980 ;;  new_exp         2   26[BANK1 ] int 
  9981 ;;  aexp            1   33[BANK1 ] unsigned char 
  9982 ;;  bexp            1   32[BANK1 ] unsigned char 
  9983 ;;  sign            1   25[BANK1 ] unsigned char 
  9984 ;; Return value:  Size  Location     Type
  9985 ;;                  4    8[BANK1 ] unsigned char 
  9986 ;; Registers used:
  9987 ;;		wreg, status,2, status,0, btemp+1
  9988 ;; Tracked objects:
  9989 ;;		On entry : 0/0
  9990 ;;		On exit  : 0/0
  9991 ;;		Unchanged: 0/0
  9992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9993 ;;      Params:         0       0       8       0       0
  9994 ;;      Locals:         0       0      13       0       0
  9995 ;;      Temps:          0       0       5       0       0
  9996 ;;      Totals:         0       0      26       0       0
  9997 ;;Total ram usage:       26 bytes
  9998 ;; Hardware stack levels used: 1
  9999 ;; Hardware stack levels required when called: 1
 10000 ;; This function calls:
 10001 ;;		Nothing
 10002 ;; This function is called by:
 10003 ;;		_map
 10004 ;; This function uses a non-reentrant model
 10005 ;;
 10006                           
 10007     11CC                     ___fldiv:	
 10008                           ;psect for function ___fldiv
 10009                           
 10010     11CC                     l4348:	
 10011                           ;incstack = 0
 10012                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
 10013                           
 10014     11CC  1683               	bsf	3,5	;RP0=1, select bank1
 10015     11CD  1303               	bcf	3,6	;RP1=0, select bank1
 10016     11CE  082F               	movf	(___fldiv@b^(0+128)+3),w
 10017     11CF  3980               	andlw	128
 10018     11D0  00B9               	movwf	___fldiv@sign^(0+128)
 10019     11D1                     l4350:
 10020     11D1  082F               	movf	(___fldiv@b^(0+128)+3),w
 10021     11D2  00B0               	movwf	??___fldiv^(0+128)
 10022     11D3  0730               	addwf	??___fldiv^(0+128),w
 10023     11D4  00C0               	movwf	___fldiv@bexp^(0+128)
 10024     11D5                     l4352:
 10025     11D5  1FAE               	btfss	(___fldiv@b^(0+128)+2),7
 10026     11D6  29D8               	goto	u7041
 10027     11D7  29D9               	goto	u7040
 10028     11D8                     u7041:
 10029     11D8  29DA               	goto	l4356
 10030     11D9                     u7040:
 10031     11D9                     l4354:
 10032     11D9  1440               	bsf	___fldiv@bexp^(0+128),0
 10033     11DA                     l4356:
 10034     11DA  0840               	movf	___fldiv@bexp^(0+128),w
 10035     11DB  1903               	btfsc	3,2
 10036     11DC  29DE               	goto	u7051
 10037     11DD  29DF               	goto	u7050
 10038     11DE                     u7051:
 10039     11DE  29EF               	goto	l4366
 10040     11DF                     u7050:
 10041     11DF                     l4358:
 10042     11DF  0A40               	incf	___fldiv@bexp^(0+128),w
 10043     11E0  1D03               	btfss	3,2
 10044     11E1  29E3               	goto	u7061
 10045     11E2  29E4               	goto	u7060
 10046     11E3                     u7061:
 10047     11E3  29EC               	goto	l4362
 10048     11E4                     u7060:
 10049     11E4                     l4360:
 10050     11E4  3000               	movlw	0
 10051     11E5  00AF               	movwf	(___fldiv@b+3)^(0+128)
 10052     11E6  3000               	movlw	0
 10053     11E7  00AE               	movwf	(___fldiv@b+2)^(0+128)
 10054     11E8  3000               	movlw	0
 10055     11E9  00AD               	movwf	(___fldiv@b+1)^(0+128)
 10056     11EA  3000               	movlw	0
 10057     11EB  00AC               	movwf	___fldiv@b^(0+128)
 10058     11EC                     l4362:
 10059     11EC  17AE               	bsf	(___fldiv@b^(0+128)+2),7
 10060     11ED                     l4364:
 10061     11ED  01AF               	clrf	(___fldiv@b^(0+128)+3)
 10062     11EE  29F7               	goto	l4368
 10063     11EF                     l4366:
 10064     11EF  3000               	movlw	0
 10065     11F0  00AF               	movwf	(___fldiv@b+3)^(0+128)
 10066     11F1  3000               	movlw	0
 10067     11F2  00AE               	movwf	(___fldiv@b+2)^(0+128)
 10068     11F3  3000               	movlw	0
 10069     11F4  00AD               	movwf	(___fldiv@b+1)^(0+128)
 10070     11F5  3000               	movlw	0
 10071     11F6  00AC               	movwf	___fldiv@b^(0+128)
 10072     11F7                     l4368:
 10073     11F7  082B               	movf	(___fldiv@a^(0+128)+3),w
 10074     11F8  3980               	andlw	128
 10075     11F9  00FF               	movwf	btemp+1
 10076     11FA  087F               	movf	btemp+1,w
 10077     11FB  06B9               	xorwf	___fldiv@sign^(0+128),f
 10078     11FC                     l4370:
 10079     11FC  082B               	movf	(___fldiv@a^(0+128)+3),w
 10080     11FD  00B0               	movwf	??___fldiv^(0+128)
 10081     11FE  0730               	addwf	??___fldiv^(0+128),w
 10082     11FF  00C1               	movwf	___fldiv@aexp^(0+128)
 10083     1200                     l4372:
 10084     1200  1FAA               	btfss	(___fldiv@a^(0+128)+2),7
 10085     1201  2A03               	goto	u7071
 10086     1202  2A04               	goto	u7070
 10087     1203                     u7071:
 10088     1203  2A05               	goto	l4376
 10089     1204                     u7070:
 10090     1204                     l4374:
 10091     1204  1441               	bsf	___fldiv@aexp^(0+128),0
 10092     1205                     l4376:
 10093     1205  0841               	movf	___fldiv@aexp^(0+128),w
 10094     1206  1903               	btfsc	3,2
 10095     1207  2A09               	goto	u7081
 10096     1208  2A0A               	goto	u7080
 10097     1209                     u7081:
 10098     1209  2A1A               	goto	l4386
 10099     120A                     u7080:
 10100     120A                     l4378:
 10101     120A  0A41               	incf	___fldiv@aexp^(0+128),w
 10102     120B  1D03               	btfss	3,2
 10103     120C  2A0E               	goto	u7091
 10104     120D  2A0F               	goto	u7090
 10105     120E                     u7091:
 10106     120E  2A17               	goto	l4382
 10107     120F                     u7090:
 10108     120F                     l4380:
 10109     120F  3000               	movlw	0
 10110     1210  00AB               	movwf	(___fldiv@a+3)^(0+128)
 10111     1211  3000               	movlw	0
 10112     1212  00AA               	movwf	(___fldiv@a+2)^(0+128)
 10113     1213  3000               	movlw	0
 10114     1214  00A9               	movwf	(___fldiv@a+1)^(0+128)
 10115     1215  3000               	movlw	0
 10116     1216  00A8               	movwf	___fldiv@a^(0+128)
 10117     1217                     l4382:
 10118     1217  17AA               	bsf	(___fldiv@a^(0+128)+2),7
 10119     1218                     l4384:
 10120     1218  01AB               	clrf	(___fldiv@a^(0+128)+3)
 10121     1219  2A22               	goto	l826
 10122     121A                     l4386:
 10123     121A  3000               	movlw	0
 10124     121B  00AB               	movwf	(___fldiv@a+3)^(0+128)
 10125     121C  3000               	movlw	0
 10126     121D  00AA               	movwf	(___fldiv@a+2)^(0+128)
 10127     121E  3000               	movlw	0
 10128     121F  00A9               	movwf	(___fldiv@a+1)^(0+128)
 10129     1220  3000               	movlw	0
 10130     1221  00A8               	movwf	___fldiv@a^(0+128)
 10131     1222                     l826:
 10132     1222  082B               	movf	(___fldiv@a+3)^(0+128),w
 10133     1223  042A               	iorwf	(___fldiv@a+2)^(0+128),w
 10134     1224  0429               	iorwf	(___fldiv@a+1)^(0+128),w
 10135     1225  0428               	iorwf	___fldiv@a^(0+128),w
 10136     1226  1D03               	skipz
 10137     1227  2A29               	goto	u7101
 10138     1228  2A2A               	goto	u7100
 10139     1229                     u7101:
 10140     1229  2A43               	goto	l4396
 10141     122A                     u7100:
 10142     122A                     l4388:
 10143     122A  3000               	movlw	0
 10144     122B  00AF               	movwf	(___fldiv@b+3)^(0+128)
 10145     122C  3000               	movlw	0
 10146     122D  00AE               	movwf	(___fldiv@b+2)^(0+128)
 10147     122E  3000               	movlw	0
 10148     122F  00AD               	movwf	(___fldiv@b+1)^(0+128)
 10149     1230  3000               	movlw	0
 10150     1231  00AC               	movwf	___fldiv@b^(0+128)
 10151     1232  3080               	movlw	128
 10152     1233  04AE               	iorwf	(___fldiv@b^(0+128)+2),f
 10153     1234  307F               	movlw	127
 10154     1235  04AF               	iorwf	((___fldiv@b+1)^(0+128)+2),f
 10155     1236                     l4390:
 10156     1236  0839               	movf	___fldiv@sign^(0+128),w
 10157     1237  00FF               	movwf	btemp+1
 10158     1238  087F               	movf	btemp+1,w
 10159     1239  04AF               	iorwf	(___fldiv@b^(0+128)+3),f
 10160     123A                     l4392:
 10161     123A  082F               	movf	(___fldiv@b+3)^(0+128),w
 10162     123B  00AB               	movwf	(?___fldiv+3)^(0+128)
 10163     123C  082E               	movf	(___fldiv@b+2)^(0+128),w
 10164     123D  00AA               	movwf	(?___fldiv+2)^(0+128)
 10165     123E  082D               	movf	(___fldiv@b+1)^(0+128),w
 10166     123F  00A9               	movwf	(?___fldiv+1)^(0+128)
 10167     1240  082C               	movf	___fldiv@b^(0+128),w
 10168     1241  00A8               	movwf	?___fldiv^(0+128)
 10169     1242  2B9A               	goto	l828
 10170     1243                     l4396:
 10171     1243  0840               	movf	___fldiv@bexp^(0+128),w
 10172     1244  1D03               	btfss	3,2
 10173     1245  2A47               	goto	u7111
 10174     1246  2A48               	goto	u7110
 10175     1247                     u7111:
 10176     1247  2A51               	goto	l4402
 10177     1248                     u7110:
 10178     1248                     l4398:
 10179     1248  3000               	movlw	0
 10180     1249  00AB               	movwf	(?___fldiv+3)^(0+128)
 10181     124A  3000               	movlw	0
 10182     124B  00AA               	movwf	(?___fldiv+2)^(0+128)
 10183     124C  3000               	movlw	0
 10184     124D  00A9               	movwf	(?___fldiv+1)^(0+128)
 10185     124E  3000               	movlw	0
 10186     124F  00A8               	movwf	?___fldiv^(0+128)
 10187     1250  2B9A               	goto	l828
 10188     1251                     l4402:
 10189     1251  0840               	movf	___fldiv@bexp^(0+128),w
 10190     1252  00B0               	movwf	??___fldiv^(0+128)
 10191     1253  01B1               	clrf	(??___fldiv^(0+128)+1)
 10192     1254  0831               	movf	(??___fldiv+1)^(0+128),w
 10193     1255  00B3               	movwf	((??___fldiv+2)^(0+128)+1)
 10194     1256  0841               	movf	___fldiv@aexp^(0+128),w
 10195     1257  0230               	subwf	??___fldiv^(0+128),w
 10196     1258  00B2               	movwf	(??___fldiv+2)^(0+128)
 10197     1259  1C03               	skipc
 10198     125A  03B3               	decf	((??___fldiv+2)^(0+128)+1),f
 10199     125B  0832               	movf	(??___fldiv+2)^(0+128),w
 10200     125C  3E7F               	addlw	127
 10201     125D  00BA               	movwf	___fldiv@new_exp^(0+128)
 10202     125E  0833               	movf	(??___fldiv+3)^(0+128),w
 10203     125F  1803               	skipnc
 10204     1260  3E01               	addlw	1
 10205     1261  3E00               	addlw	0
 10206     1262  00BB               	movwf	(___fldiv@new_exp+1)^(0+128)
 10207     1263                     l4404:
 10208     1263  082F               	movf	(___fldiv@b+3)^(0+128),w
 10209     1264  00B8               	movwf	(___fldiv@rem+3)^(0+128)
 10210     1265  082E               	movf	(___fldiv@b+2)^(0+128),w
 10211     1266  00B7               	movwf	(___fldiv@rem+2)^(0+128)
 10212     1267  082D               	movf	(___fldiv@b+1)^(0+128),w
 10213     1268  00B6               	movwf	(___fldiv@rem+1)^(0+128)
 10214     1269  082C               	movf	___fldiv@b^(0+128),w
 10215     126A  00B5               	movwf	___fldiv@rem^(0+128)
 10216     126B                     l4406:
 10217     126B  3000               	movlw	0
 10218     126C  00AF               	movwf	(___fldiv@b+3)^(0+128)
 10219     126D  3000               	movlw	0
 10220     126E  00AE               	movwf	(___fldiv@b+2)^(0+128)
 10221     126F  3000               	movlw	0
 10222     1270  00AD               	movwf	(___fldiv@b+1)^(0+128)
 10223     1271  3000               	movlw	0
 10224     1272  00AC               	movwf	___fldiv@b^(0+128)
 10225     1273                     l4408:
 10226     1273  3000               	movlw	0
 10227     1274  00BF               	movwf	(___fldiv@grs+3)^(0+128)
 10228     1275  3000               	movlw	0
 10229     1276  00BE               	movwf	(___fldiv@grs+2)^(0+128)
 10230     1277  3000               	movlw	0
 10231     1278  00BD               	movwf	(___fldiv@grs+1)^(0+128)
 10232     1279  3000               	movlw	0
 10233     127A  00BC               	movwf	___fldiv@grs^(0+128)
 10234     127B                     l4410:
 10235     127B  01C1               	clrf	___fldiv@aexp^(0+128)
 10236     127C  2AC7               	goto	l4430
 10237     127D                     l4412:
 10238     127D  0841               	movf	___fldiv@aexp^(0+128),w
 10239     127E  1903               	btfsc	3,2
 10240     127F  2A81               	goto	u7121
 10241     1280  2A82               	goto	u7120
 10242     1281                     u7121:
 10243     1281  2AA2               	goto	l4422
 10244     1282                     u7120:
 10245     1282                     l4414:
 10246     1282  3001               	movlw	1
 10247     1283  00B0               	movwf	??___fldiv^(0+128)
 10248     1284                     u7135:
 10249     1284  1003               	clrc
 10250     1285  0DB5               	rlf	___fldiv@rem^(0+128),f
 10251     1286  0DB6               	rlf	(___fldiv@rem+1)^(0+128),f
 10252     1287  0DB7               	rlf	(___fldiv@rem+2)^(0+128),f
 10253     1288  0DB8               	rlf	(___fldiv@rem+3)^(0+128),f
 10254     1289  0BB0               	decfsz	??___fldiv^(0+128),f
 10255     128A  2A84               	goto	u7135
 10256     128B  3001               	movlw	1
 10257     128C  00B0               	movwf	??___fldiv^(0+128)
 10258     128D                     u7145:
 10259     128D  1003               	clrc
 10260     128E  0DAC               	rlf	___fldiv@b^(0+128),f
 10261     128F  0DAD               	rlf	(___fldiv@b+1)^(0+128),f
 10262     1290  0DAE               	rlf	(___fldiv@b+2)^(0+128),f
 10263     1291  0DAF               	rlf	(___fldiv@b+3)^(0+128),f
 10264     1292  0BB0               	decfsz	??___fldiv^(0+128),f
 10265     1293  2A8D               	goto	u7145
 10266     1294                     l4416:
 10267     1294  1FBF               	btfss	(___fldiv@grs+3)^(0+128),7
 10268     1295  2A97               	goto	u7151
 10269     1296  2A98               	goto	u7150
 10270     1297                     u7151:
 10271     1297  2A99               	goto	l4420
 10272     1298                     u7150:
 10273     1298                     l4418:
 10274     1298  142C               	bsf	___fldiv@b^(0+128),0
 10275     1299                     l4420:
 10276     1299  3001               	movlw	1
 10277     129A  00B0               	movwf	??___fldiv^(0+128)
 10278     129B                     u7165:
 10279     129B  1003               	clrc
 10280     129C  0DBC               	rlf	___fldiv@grs^(0+128),f
 10281     129D  0DBD               	rlf	(___fldiv@grs+1)^(0+128),f
 10282     129E  0DBE               	rlf	(___fldiv@grs+2)^(0+128),f
 10283     129F  0DBF               	rlf	(___fldiv@grs+3)^(0+128),f
 10284     12A0  0BB0               	decfsz	??___fldiv^(0+128),f
 10285     12A1  2A9B               	goto	u7165
 10286     12A2                     l4422:
 10287     12A2  082B               	movf	(___fldiv@a+3)^(0+128),w
 10288     12A3  0238               	subwf	(___fldiv@rem+3)^(0+128),w
 10289     12A4  1D03               	skipz
 10290     12A5  2AB0               	goto	u7175
 10291     12A6  082A               	movf	(___fldiv@a+2)^(0+128),w
 10292     12A7  0237               	subwf	(___fldiv@rem+2)^(0+128),w
 10293     12A8  1D03               	skipz
 10294     12A9  2AB0               	goto	u7175
 10295     12AA  0829               	movf	(___fldiv@a+1)^(0+128),w
 10296     12AB  0236               	subwf	(___fldiv@rem+1)^(0+128),w
 10297     12AC  1D03               	skipz
 10298     12AD  2AB0               	goto	u7175
 10299     12AE  0828               	movf	___fldiv@a^(0+128),w
 10300     12AF  0235               	subwf	___fldiv@rem^(0+128),w
 10301     12B0                     u7175:
 10302     12B0  1C03               	skipc
 10303     12B1  2AB3               	goto	u7171
 10304     12B2  2AB4               	goto	u7170
 10305     12B3                     u7171:
 10306     12B3  2AC3               	goto	l4428
 10307     12B4                     u7170:
 10308     12B4                     l4424:
 10309     12B4  173F               	bsf	(___fldiv@grs^(0+128)+3),6
 10310     12B5                     l4426:
 10311     12B5  0828               	movf	___fldiv@a^(0+128),w
 10312     12B6  02B5               	subwf	___fldiv@rem^(0+128),f
 10313     12B7  0829               	movf	(___fldiv@a+1)^(0+128),w
 10314     12B8  1C03               	skipc
 10315     12B9  0F29               	incfsz	(___fldiv@a+1)^(0+128),w
 10316     12BA  02B6               	subwf	(___fldiv@rem+1)^(0+128),f
 10317     12BB  082A               	movf	(___fldiv@a+2)^(0+128),w
 10318     12BC  1C03               	skipc
 10319     12BD  0F2A               	incfsz	(___fldiv@a+2)^(0+128),w
 10320     12BE  02B7               	subwf	(___fldiv@rem+2)^(0+128),f
 10321     12BF  082B               	movf	(___fldiv@a+3)^(0+128),w
 10322     12C0  1C03               	skipc
 10323     12C1  0F2B               	incfsz	(___fldiv@a+3)^(0+128),w
 10324     12C2  02B8               	subwf	(___fldiv@rem+3)^(0+128),f
 10325     12C3                     l4428:
 10326     12C3  3001               	movlw	1
 10327     12C4  00FF               	movwf	btemp+1
 10328     12C5  087F               	movf	btemp+1,w
 10329     12C6  07C1               	addwf	___fldiv@aexp^(0+128),f
 10330     12C7                     l4430:
 10331     12C7  301A               	movlw	26
 10332     12C8  0241               	subwf	___fldiv@aexp^(0+128),w
 10333     12C9  1C03               	skipc
 10334     12CA  2ACC               	goto	u7181
 10335     12CB  2ACD               	goto	u7180
 10336     12CC                     u7181:
 10337     12CC  2A7D               	goto	l4412
 10338     12CD                     u7180:
 10339     12CD                     l4432:
 10340     12CD  0838               	movf	(___fldiv@rem+3)^(0+128),w
 10341     12CE  0437               	iorwf	(___fldiv@rem+2)^(0+128),w
 10342     12CF  0436               	iorwf	(___fldiv@rem+1)^(0+128),w
 10343     12D0  0435               	iorwf	___fldiv@rem^(0+128),w
 10344     12D1  1903               	skipnz
 10345     12D2  2AD4               	goto	u7191
 10346     12D3  2AD5               	goto	u7190
 10347     12D4                     u7191:
 10348     12D4  2AF4               	goto	l4446
 10349     12D5                     u7190:
 10350     12D5                     l4434:
 10351     12D5  143C               	bsf	___fldiv@grs^(0+128),0
 10352     12D6  2AF4               	goto	l4446
 10353     12D7                     l4436:
 10354     12D7  3001               	movlw	1
 10355     12D8  00B0               	movwf	??___fldiv^(0+128)
 10356     12D9                     u7205:
 10357     12D9  1003               	clrc
 10358     12DA  0DAC               	rlf	___fldiv@b^(0+128),f
 10359     12DB  0DAD               	rlf	(___fldiv@b+1)^(0+128),f
 10360     12DC  0DAE               	rlf	(___fldiv@b+2)^(0+128),f
 10361     12DD  0DAF               	rlf	(___fldiv@b+3)^(0+128),f
 10362     12DE  0BB0               	decfsz	??___fldiv^(0+128),f
 10363     12DF  2AD9               	goto	u7205
 10364     12E0                     l4438:
 10365     12E0  1FBF               	btfss	(___fldiv@grs+3)^(0+128),7
 10366     12E1  2AE3               	goto	u7211
 10367     12E2  2AE4               	goto	u7210
 10368     12E3                     u7211:
 10369     12E3  2AE5               	goto	l4442
 10370     12E4                     u7210:
 10371     12E4                     l4440:
 10372     12E4  142C               	bsf	___fldiv@b^(0+128),0
 10373     12E5                     l4442:
 10374     12E5  3001               	movlw	1
 10375     12E6  00B0               	movwf	??___fldiv^(0+128)
 10376     12E7                     u7225:
 10377     12E7  1003               	clrc
 10378     12E8  0DBC               	rlf	___fldiv@grs^(0+128),f
 10379     12E9  0DBD               	rlf	(___fldiv@grs+1)^(0+128),f
 10380     12EA  0DBE               	rlf	(___fldiv@grs+2)^(0+128),f
 10381     12EB  0DBF               	rlf	(___fldiv@grs+3)^(0+128),f
 10382     12EC  0BB0               	decfsz	??___fldiv^(0+128),f
 10383     12ED  2AE7               	goto	u7225
 10384     12EE                     l4444:
 10385     12EE  30FF               	movlw	255
 10386     12EF  07BA               	addwf	___fldiv@new_exp^(0+128),f
 10387     12F0  1803               	skipnc
 10388     12F1  0ABB               	incf	(___fldiv@new_exp+1)^(0+128),f
 10389     12F2  30FF               	movlw	255
 10390     12F3  07BB               	addwf	(___fldiv@new_exp+1)^(0+128),f
 10391     12F4                     l4446:
 10392     12F4  1FAE               	btfss	(___fldiv@b+2)^(0+128),7
 10393     12F5  2AF7               	goto	u7231
 10394     12F6  2AF8               	goto	u7230
 10395     12F7                     u7231:
 10396     12F7  2AD7               	goto	l4436
 10397     12F8                     u7230:
 10398     12F8                     l4448:
 10399     12F8  01C1               	clrf	___fldiv@aexp^(0+128)
 10400     12F9                     l4450:
 10401     12F9  1FBF               	btfss	(___fldiv@grs+3)^(0+128),7
 10402     12FA  2AFC               	goto	u7241
 10403     12FB  2AFD               	goto	u7240
 10404     12FC                     u7241:
 10405     12FC  2B19               	goto	l4458
 10406     12FD                     u7240:
 10407     12FD                     l4452:
 10408     12FD  30FF               	movlw	255
 10409     12FE  053C               	andwf	___fldiv@grs^(0+128),w
 10410     12FF  00B0               	movwf	??___fldiv^(0+128)
 10411     1300  30FF               	movlw	255
 10412     1301  053D               	andwf	(___fldiv@grs+1)^(0+128),w
 10413     1302  00B1               	movwf	(??___fldiv^(0+128)+1)
 10414     1303  30FF               	movlw	255
 10415     1304  053E               	andwf	(___fldiv@grs+2)^(0+128),w
 10416     1305  00B2               	movwf	(??___fldiv^(0+128)+2)
 10417     1306  307F               	movlw	127
 10418     1307  053F               	andwf	(___fldiv@grs+3)^(0+128),w
 10419     1308  00B3               	movwf	(??___fldiv^(0+128)+3)
 10420     1309  0833               	movf	(??___fldiv+3)^(0+128),w
 10421     130A  0432               	iorwf	(??___fldiv+2)^(0+128),w
 10422     130B  0431               	iorwf	(??___fldiv+1)^(0+128),w
 10423     130C  0430               	iorwf	??___fldiv^(0+128),w
 10424     130D  1903               	skipnz
 10425     130E  2B10               	goto	u7251
 10426     130F  2B11               	goto	u7250
 10427     1310                     u7251:
 10428     1310  2B14               	goto	l842
 10429     1311                     u7250:
 10430     1311                     l4454:
 10431     1311  01C1               	clrf	___fldiv@aexp^(0+128)
 10432     1312  0AC1               	incf	___fldiv@aexp^(0+128),f
 10433     1313  2B19               	goto	l4458
 10434     1314                     l842:
 10435     1314  1C2C               	btfss	___fldiv@b^(0+128),0
 10436     1315  2B17               	goto	u7261
 10437     1316  2B18               	goto	u7260
 10438     1317                     u7261:
 10439     1317  2B19               	goto	l4458
 10440     1318                     u7260:
 10441     1318  2B11               	goto	l4454
 10442     1319                     l4458:
 10443     1319  0841               	movf	___fldiv@aexp^(0+128),w
 10444     131A  1903               	btfsc	3,2
 10445     131B  2B1D               	goto	u7271
 10446     131C  2B1E               	goto	u7270
 10447     131D                     u7271:
 10448     131D  2B4F               	goto	l4468
 10449     131E                     u7270:
 10450     131E                     l4460:
 10451     131E  3001               	movlw	1
 10452     131F  07AC               	addwf	___fldiv@b^(0+128),f
 10453     1320  3000               	movlw	0
 10454     1321  1803               	skipnc
 10455     1322  3001               	movlw	1
 10456     1323  07AD               	addwf	(___fldiv@b+1)^(0+128),f
 10457     1324  3000               	movlw	0
 10458     1325  1803               	skipnc
 10459     1326  3001               	movlw	1
 10460     1327  07AE               	addwf	(___fldiv@b+2)^(0+128),f
 10461     1328  3000               	movlw	0
 10462     1329  1803               	skipnc
 10463     132A  3001               	movlw	1
 10464     132B  07AF               	addwf	(___fldiv@b+3)^(0+128),f
 10465     132C                     l4462:
 10466     132C  1C2F               	btfss	(___fldiv@b+3)^(0+128),0
 10467     132D  2B2F               	goto	u7281
 10468     132E  2B30               	goto	u7280
 10469     132F                     u7281:
 10470     132F  2B4F               	goto	l4468
 10471     1330                     u7280:
 10472     1330                     l4464:
 10473     1330  082C               	movf	___fldiv@b^(0+128),w
 10474     1331  00B0               	movwf	??___fldiv^(0+128)
 10475     1332  082D               	movf	(___fldiv@b+1)^(0+128),w
 10476     1333  00B1               	movwf	(??___fldiv^(0+128)+1)
 10477     1334  082E               	movf	(___fldiv@b+2)^(0+128),w
 10478     1335  00B2               	movwf	(??___fldiv^(0+128)+2)
 10479     1336  082F               	movf	(___fldiv@b+3)^(0+128),w
 10480     1337  00B3               	movwf	(??___fldiv^(0+128)+3)
 10481     1338  3001               	movlw	1
 10482     1339  00B4               	movwf	(??___fldiv+4)^(0+128)
 10483     133A                     u7295:
 10484     133A  0D33               	rlf	(??___fldiv^(0+128)+3),w
 10485     133B  0CB3               	rrf	(??___fldiv^(0+128)+3),f
 10486     133C  0CB2               	rrf	(??___fldiv^(0+128)+2),f
 10487     133D  0CB1               	rrf	(??___fldiv^(0+128)+1),f
 10488     133E  0CB0               	rrf	??___fldiv^(0+128),f
 10489     133F                     u7290:
 10490     133F  0BB4               	decfsz	(??___fldiv+4)^(0+128),f
 10491     1340  2B3A               	goto	u7295
 10492     1341  0833               	movf	(??___fldiv+3)^(0+128),w
 10493     1342  00AF               	movwf	(___fldiv@b+3)^(0+128)
 10494     1343  0832               	movf	(??___fldiv+2)^(0+128),w
 10495     1344  00AE               	movwf	(___fldiv@b+2)^(0+128)
 10496     1345  0831               	movf	(??___fldiv+1)^(0+128),w
 10497     1346  00AD               	movwf	(___fldiv@b+1)^(0+128)
 10498     1347  0830               	movf	??___fldiv^(0+128),w
 10499     1348  00AC               	movwf	___fldiv@b^(0+128)
 10500     1349                     l4466:
 10501     1349  3001               	movlw	1
 10502     134A  07BA               	addwf	___fldiv@new_exp^(0+128),f
 10503     134B  1803               	skipnc
 10504     134C  0ABB               	incf	(___fldiv@new_exp+1)^(0+128),f
 10505     134D  3000               	movlw	0
 10506     134E  07BB               	addwf	(___fldiv@new_exp+1)^(0+128),f
 10507     134F                     l4468:
 10508     134F  083B               	movf	(___fldiv@new_exp+1)^(0+128),w
 10509     1350  3A80               	xorlw	128
 10510     1351  00FF               	movwf	btemp+1
 10511     1352  3080               	movlw	128
 10512     1353  027F               	subwf	btemp+1,w
 10513     1354  1D03               	skipz
 10514     1355  2B58               	goto	u7305
 10515     1356  30FF               	movlw	255
 10516     1357  023A               	subwf	___fldiv@new_exp^(0+128),w
 10517     1358                     u7305:
 10518     1358  1C03               	skipc
 10519     1359  2B5B               	goto	u7301
 10520     135A  2B5C               	goto	u7300
 10521     135B                     u7301:
 10522     135B  2B6A               	goto	l4472
 10523     135C                     u7300:
 10524     135C                     l4470:
 10525     135C  30FF               	movlw	255
 10526     135D  1683               	bsf	3,5	;RP0=1, select bank1
 10527     135E  1303               	bcf	3,6	;RP1=0, select bank1
 10528     135F  00BA               	movwf	___fldiv@new_exp^(0+128)
 10529     1360  3000               	movlw	0
 10530     1361  00BB               	movwf	(___fldiv@new_exp^(0+128)+1)
 10531     1362  3000               	movlw	0
 10532     1363  00AF               	movwf	(___fldiv@b+3)^(0+128)
 10533     1364  3000               	movlw	0
 10534     1365  00AE               	movwf	(___fldiv@b+2)^(0+128)
 10535     1366  3000               	movlw	0
 10536     1367  00AD               	movwf	(___fldiv@b+1)^(0+128)
 10537     1368  3000               	movlw	0
 10538     1369  00AC               	movwf	___fldiv@b^(0+128)
 10539     136A                     l4472:
 10540     136A  1683               	bsf	3,5	;RP0=1, select bank1
 10541     136B  1303               	bcf	3,6	;RP1=0, select bank1
 10542     136C  083B               	movf	(___fldiv@new_exp+1)^(0+128),w
 10543     136D  3A80               	xorlw	128
 10544     136E  00FF               	movwf	btemp+1
 10545     136F  3080               	movlw	128
 10546     1370  027F               	subwf	btemp+1,w
 10547     1371  1D03               	skipz
 10548     1372  2B75               	goto	u7315
 10549     1373  3001               	movlw	1
 10550     1374  023A               	subwf	___fldiv@new_exp^(0+128),w
 10551     1375                     u7315:
 10552     1375  1803               	skipnc
 10553     1376  2B78               	goto	u7311
 10554     1377  2B79               	goto	u7310
 10555     1378                     u7311:
 10556     1378  2B86               	goto	l848
 10557     1379                     u7310:
 10558     1379                     l4474:
 10559     1379  1683               	bsf	3,5	;RP0=1, select bank1
 10560     137A  1303               	bcf	3,6	;RP1=0, select bank1
 10561     137B  01BA               	clrf	___fldiv@new_exp^(0+128)
 10562     137C  01BB               	clrf	(___fldiv@new_exp+1)^(0+128)
 10563     137D                     l4476:
 10564     137D  3000               	movlw	0
 10565     137E  00AF               	movwf	(___fldiv@b+3)^(0+128)
 10566     137F  3000               	movlw	0
 10567     1380  00AE               	movwf	(___fldiv@b+2)^(0+128)
 10568     1381  3000               	movlw	0
 10569     1382  00AD               	movwf	(___fldiv@b+1)^(0+128)
 10570     1383  3000               	movlw	0
 10571     1384  00AC               	movwf	___fldiv@b^(0+128)
 10572     1385                     l4478:
 10573     1385  01B9               	clrf	___fldiv@sign^(0+128)
 10574     1386                     l848:
 10575     1386  1683               	bsf	3,5	;RP0=1, select bank1
 10576     1387  1303               	bcf	3,6	;RP1=0, select bank1
 10577     1388  083A               	movf	___fldiv@new_exp^(0+128),w
 10578     1389  00C0               	movwf	___fldiv@bexp^(0+128)
 10579     138A                     l4480:
 10580     138A  1C40               	btfss	___fldiv@bexp^(0+128),0
 10581     138B  2B8D               	goto	u7321
 10582     138C  2B8E               	goto	u7320
 10583     138D                     u7321:
 10584     138D  2B90               	goto	l4484
 10585     138E                     u7320:
 10586     138E                     l4482:
 10587     138E  17AE               	bsf	(___fldiv@b^(0+128)+2),7
 10588     138F  2B94               	goto	l4486
 10589     1390                     l4484:
 10590     1390  307F               	movlw	127
 10591     1391  00FF               	movwf	btemp+1
 10592     1392  087F               	movf	btemp+1,w
 10593     1393  05AE               	andwf	(___fldiv@b^(0+128)+2),f
 10594     1394                     l4486:
 10595     1394  0840               	movf	___fldiv@bexp^(0+128),w
 10596     1395  00B0               	movwf	??___fldiv^(0+128)
 10597     1396  1003               	clrc
 10598     1397  0C30               	rrf	??___fldiv^(0+128),w
 10599     1398  00AF               	movwf	(___fldiv@b^(0+128)+3)
 10600     1399  2A36               	goto	l4390
 10601     139A                     l828:
 10602     139A  0008               	return
 10603     139B                     __end_of___fldiv:
 10604                           
 10605                           	psect	text25
 10606     1001                     __ptext25:	
 10607 ;; *************** function _adc_init *****************
 10608 ;; Defined at:
 10609 ;;		line 7 in file "adc.c"
 10610 ;; Parameters:    Size  Location     Type
 10611 ;;  channel         2    3[COMMON] int 
 10612 ;; Auto vars:     Size  Location     Type
 10613 ;;		None
 10614 ;; Return value:  Size  Location     Type
 10615 ;;                  1    wreg      void 
 10616 ;; Registers used:
 10617 ;;		wreg, status,2, status,0
 10618 ;; Tracked objects:
 10619 ;;		On entry : 0/0
 10620 ;;		On exit  : 0/0
 10621 ;;		Unchanged: 0/0
 10622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10623 ;;      Params:         2       0       0       0       0
 10624 ;;      Locals:         0       0       0       0       0
 10625 ;;      Temps:          1       0       0       0       0
 10626 ;;      Totals:         3       0       0       0       0
 10627 ;;Total ram usage:        3 bytes
 10628 ;; Hardware stack levels used: 1
 10629 ;; Hardware stack levels required when called: 1
 10630 ;; This function calls:
 10631 ;;		Nothing
 10632 ;; This function is called by:
 10633 ;;		_main
 10634 ;; This function uses a non-reentrant model
 10635 ;;
 10636                           
 10637     1001                     _adc_init:	
 10638                           ;psect for function _adc_init
 10639                           
 10640     1001                     l3602:	
 10641                           ;incstack = 0
 10642                           ; Regs used in _adc_init: [wreg+status,2+status,0]
 10643                           
 10644                           
 10645                           ;adc.c: 8:     ADCON1bits.ADFM = 0;
 10646     1001  1683               	bsf	3,5	;RP0=1, select bank1
 10647     1002  1303               	bcf	3,6	;RP1=0, select bank1
 10648     1003  139F               	bcf	31,7	;volatile
 10649                           
 10650                           ;adc.c: 9:     ADCON1bits.VCFG0 = 0;
 10651     1004  121F               	bcf	31,4	;volatile
 10652                           
 10653                           ;adc.c: 10:     ADCON1bits.VCFG1 = 0;
 10654     1005  129F               	bcf	31,5	;volatile
 10655                           
 10656                           ;adc.c: 12:     ADCON0bits.ADCS0 = 0;
 10657     1006  1283               	bcf	3,5	;RP0=0, select bank0
 10658     1007  1303               	bcf	3,6	;RP1=0, select bank0
 10659     1008  131F               	bcf	31,6	;volatile
 10660                           
 10661                           ;adc.c: 13:     ADCON0bits.ADCS1 = 1;
 10662     1009  179F               	bsf	31,7	;volatile
 10663     100A                     l3604:
 10664                           
 10665                           ;adc.c: 14:     ADCON0bits.CHS = channel;
 10666     100A  0873               	movf	adc_init@channel,w
 10667     100B  00F5               	movwf	??_adc_init
 10668     100C  0DF5               	rlf	??_adc_init,f
 10669     100D  0DF5               	rlf	??_adc_init,f
 10670     100E  081F               	movf	31,w	;volatile
 10671     100F  0675               	xorwf	??_adc_init,w
 10672     1010  39C3               	andlw	-61
 10673     1011  0675               	xorwf	??_adc_init,w
 10674     1012  009F               	movwf	31	;volatile
 10675     1013                     l3606:
 10676                           
 10677                           ;adc.c: 15:     _delay((unsigned long)((100)*(8000000/4000000.0)));
 10678     1013  3042               	movlw	66
 10679     1014  00F5               	movwf	??_adc_init
 10680     1015                     u7917:
 10681     1015  0BF5               	decfsz	??_adc_init,f
 10682     1016  2815               	goto	u7917
 10683     1017  0000               	nop
 10684     1018                     l3608:
 10685                           
 10686                           ;adc.c: 16:     ADCON0bits.ADON = 1;
 10687     1018  1283               	bcf	3,5	;RP0=0, select bank0
 10688     1019  1303               	bcf	3,6	;RP1=0, select bank0
 10689     101A  141F               	bsf	31,0	;volatile
 10690     101B                     l3610:
 10691                           
 10692                           ;adc.c: 18:     ADCON0bits.GO = 1;
 10693     101B  149F               	bsf	31,1	;volatile
 10694     101C                     l17:
 10695     101C  0008               	return
 10696     101D                     __end_of_adc_init:
 10697                           
 10698                           	psect	text26
 10699     1ADA                     __ptext26:	
 10700 ;; *************** function _Lcd8_Write_String *****************
 10701 ;; Defined at:
 10702 ;;		line 152 in file "lcd.c"
 10703 ;; Parameters:    Size  Location     Type
 10704 ;;  a               2    6[COMMON] PTR unsigned char 
 10705 ;;		 -> STR_5(5), STR_4(5), STR_3(2), STR_2(5), 
 10706 ;;		 -> valor(20), 
 10707 ;; Auto vars:     Size  Location     Type
 10708 ;;  i               2    3[BANK0 ] int 
 10709 ;; Return value:  Size  Location     Type
 10710 ;;                  1    wreg      void 
 10711 ;; Registers used:
 10712 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10713 ;; Tracked objects:
 10714 ;;		On entry : 0/0
 10715 ;;		On exit  : 0/0
 10716 ;;		Unchanged: 0/0
 10717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10718 ;;      Params:         2       0       0       0       0
 10719 ;;      Locals:         0       2       0       0       0
 10720 ;;      Temps:          0       3       0       0       0
 10721 ;;      Totals:         2       5       0       0       0
 10722 ;;Total ram usage:        7 bytes
 10723 ;; Hardware stack levels used: 1
 10724 ;; Hardware stack levels required when called: 3
 10725 ;; This function calls:
 10726 ;;		_Lcd8_Write_Char
 10727 ;; This function is called by:
 10728 ;;		_main
 10729 ;; This function uses a non-reentrant model
 10730 ;;
 10731                           
 10732     1ADA                     _Lcd8_Write_String:	
 10733                           ;psect for function _Lcd8_Write_String
 10734                           
 10735     1ADA                     l4576:	
 10736                           ;incstack = 0
 10737                           ; Regs used in _Lcd8_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10738                           
 10739                           
 10740                           ;lcd.c: 153:     int i;;lcd.c: 154:     for (i = 0; a[i] != '\0'; i++)
 10741     1ADA  1283               	bcf	3,5	;RP0=0, select bank0
 10742     1ADB  1303               	bcf	3,6	;RP1=0, select bank0
 10743     1ADC  01A3               	clrf	Lcd8_Write_String@i
 10744     1ADD  01A4               	clrf	Lcd8_Write_String@i+1
 10745     1ADE  2B03               	goto	l4582
 10746     1ADF                     l4578:
 10747                           
 10748                           ;lcd.c: 155:         Lcd8_Write_Char(a[i]);
 10749     1ADF  0823               	movf	Lcd8_Write_String@i,w
 10750     1AE0  0776               	addwf	Lcd8_Write_String@a,w
 10751     1AE1  00A1               	movwf	??_Lcd8_Write_String+1
 10752     1AE2  0877               	movf	Lcd8_Write_String@a+1,w
 10753     1AE3  00A0               	movwf	??_Lcd8_Write_String
 10754     1AE4  1803               	skipnc
 10755     1AE5  0AA0               	incf	??_Lcd8_Write_String,f
 10756     1AE6  1FA3               	btfss	Lcd8_Write_String@i,7
 10757     1AE7  2AE9               	goto	u7490
 10758     1AE8  03A0               	decf	??_Lcd8_Write_String,f
 10759     1AE9                     u7490:
 10760     1AE9  1283               	bcf	3,5	;RP0=0, select bank0
 10761     1AEA  1303               	bcf	3,6	;RP1=0, select bank0
 10762     1AEB  0820               	movf	??_Lcd8_Write_String,w
 10763     1AEC  00A2               	movwf	??_Lcd8_Write_String+2
 10764     1AED  0822               	movf	??_Lcd8_Write_String+2,w
 10765     1AEE  00FF               	movwf	btemp+1
 10766     1AEF  0821               	movf	??_Lcd8_Write_String+1,w
 10767     1AF0  0084               	movwf	4
 10768     1AF1  160A  158A  2000  160A  158A  	fcall	stringtab
 10769     1AF6  160A  158A  2238  160A  158A  	fcall	_Lcd8_Write_Char
 10770     1AFB                     l4580:
 10771     1AFB  3001               	movlw	1
 10772     1AFC  1283               	bcf	3,5	;RP0=0, select bank0
 10773     1AFD  1303               	bcf	3,6	;RP1=0, select bank0
 10774     1AFE  07A3               	addwf	Lcd8_Write_String@i,f
 10775     1AFF  1803               	skipnc
 10776     1B00  0AA4               	incf	Lcd8_Write_String@i+1,f
 10777     1B01  3000               	movlw	0
 10778     1B02  07A4               	addwf	Lcd8_Write_String@i+1,f
 10779     1B03                     l4582:
 10780     1B03  0823               	movf	Lcd8_Write_String@i,w
 10781     1B04  0776               	addwf	Lcd8_Write_String@a,w
 10782     1B05  00A1               	movwf	??_Lcd8_Write_String+1
 10783     1B06  0877               	movf	Lcd8_Write_String@a+1,w
 10784     1B07  00A0               	movwf	??_Lcd8_Write_String
 10785     1B08  1803               	skipnc
 10786     1B09  0AA0               	incf	??_Lcd8_Write_String,f
 10787     1B0A  1FA3               	btfss	Lcd8_Write_String@i,7
 10788     1B0B  2B0D               	goto	u7500
 10789     1B0C  03A0               	decf	??_Lcd8_Write_String,f
 10790     1B0D                     u7500:
 10791     1B0D  1283               	bcf	3,5	;RP0=0, select bank0
 10792     1B0E  1303               	bcf	3,6	;RP1=0, select bank0
 10793     1B0F  0820               	movf	??_Lcd8_Write_String,w
 10794     1B10  00A2               	movwf	??_Lcd8_Write_String+2
 10795     1B11  0822               	movf	??_Lcd8_Write_String+2,w
 10796     1B12  00FF               	movwf	btemp+1
 10797     1B13  0821               	movf	??_Lcd8_Write_String+1,w
 10798     1B14  0084               	movwf	4
 10799     1B15  160A  158A  2000  160A  158A  	fcall	stringtab
 10800     1B1A  3A00               	xorlw	0
 10801     1B1B  1D03               	skipz
 10802     1B1C  2B1E               	goto	u7511
 10803     1B1D  2B1F               	goto	u7510
 10804     1B1E                     u7511:
 10805     1B1E  2ADF               	goto	l4578
 10806     1B1F                     u7510:
 10807     1B1F                     l126:
 10808     1B1F  0008               	return
 10809     1B20                     __end_of_Lcd8_Write_String:
 10810                           
 10811                           	psect	text27
 10812     1A38                     __ptext27:	
 10813 ;; *************** function _Lcd8_Write_Char *****************
 10814 ;; Defined at:
 10815 ;;		line 144 in file "lcd.c"
 10816 ;; Parameters:    Size  Location     Type
 10817 ;;  a               1    wreg     unsigned char 
 10818 ;; Auto vars:     Size  Location     Type
 10819 ;;  a               1    5[COMMON] unsigned char 
 10820 ;; Return value:  Size  Location     Type
 10821 ;;                  1    wreg      void 
 10822 ;; Registers used:
 10823 ;;		wreg, status,2, status,0, pclath, cstack
 10824 ;; Tracked objects:
 10825 ;;		On entry : 0/0
 10826 ;;		On exit  : 0/0
 10827 ;;		Unchanged: 0/0
 10828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10829 ;;      Params:         0       0       0       0       0
 10830 ;;      Locals:         1       0       0       0       0
 10831 ;;      Temps:          1       0       0       0       0
 10832 ;;      Totals:         2       0       0       0       0
 10833 ;;Total ram usage:        2 bytes
 10834 ;; Hardware stack levels used: 1
 10835 ;; Hardware stack levels required when called: 2
 10836 ;; This function calls:
 10837 ;;		_Lcd8_Port
 10838 ;; This function is called by:
 10839 ;;		_Lcd8_Write_String
 10840 ;; This function uses a non-reentrant model
 10841 ;;
 10842                           
 10843     1A38                     _Lcd8_Write_Char:	
 10844                           ;psect for function _Lcd8_Write_Char
 10845                           
 10846                           
 10847                           ;incstack = 0
 10848                           ; Regs used in _Lcd8_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10849                           ;Lcd8_Write_Char@a stored from wreg
 10850     1A38  00F5               	movwf	Lcd8_Write_Char@a
 10851     1A39                     l4078:
 10852                           
 10853                           ;lcd.c: 145:     PORTCbits.RC0 = 1;
 10854     1A39  1283               	bcf	3,5	;RP0=0, select bank0
 10855     1A3A  1303               	bcf	3,6	;RP1=0, select bank0
 10856     1A3B  1407               	bsf	7,0	;volatile
 10857     1A3C                     l4080:
 10858                           
 10859                           ;lcd.c: 146:     Lcd8_Port(a);
 10860     1A3C  0875               	movf	Lcd8_Write_Char@a,w
 10861     1A3D  160A  158A  2202  160A  158A  	fcall	_Lcd8_Port
 10862     1A42                     l4082:
 10863                           
 10864                           ;lcd.c: 147:     PORTCbits.RC2 = 1;
 10865     1A42  1283               	bcf	3,5	;RP0=0, select bank0
 10866     1A43  1303               	bcf	3,6	;RP1=0, select bank0
 10867     1A44  1507               	bsf	7,2	;volatile
 10868     1A45                     l4084:
 10869                           
 10870                           ;lcd.c: 148:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 10871     1A45  301A               	movlw	26
 10872     1A46  00F4               	movwf	??_Lcd8_Write_Char
 10873     1A47                     u7927:
 10874     1A47  0BF4               	decfsz	??_Lcd8_Write_Char,f
 10875     1A48  2A47               	goto	u7927
 10876     1A49  0000               	nop
 10877     1A4A                     l4086:
 10878                           
 10879                           ;lcd.c: 149:     PORTCbits.RC2 = 0;
 10880     1A4A  1283               	bcf	3,5	;RP0=0, select bank0
 10881     1A4B  1303               	bcf	3,6	;RP1=0, select bank0
 10882     1A4C  1107               	bcf	7,2	;volatile
 10883     1A4D                     l120:
 10884     1A4D  0008               	return
 10885     1A4E                     __end_of_Lcd8_Write_Char:
 10886                           
 10887                           	psect	text28
 10888     1A68                     __ptext28:	
 10889 ;; *************** function _Lcd8_Set_Cursor *****************
 10890 ;; Defined at:
 10891 ;;		line 119 in file "lcd.c"
 10892 ;; Parameters:    Size  Location     Type
 10893 ;;  a               1    wreg     unsigned char 
 10894 ;;  b               1    7[COMMON] unsigned char 
 10895 ;; Auto vars:     Size  Location     Type
 10896 ;;  a               1    0[BANK0 ] unsigned char 
 10897 ;; Return value:  Size  Location     Type
 10898 ;;                  1    wreg      void 
 10899 ;; Registers used:
 10900 ;;		wreg, status,2, status,0, pclath, cstack
 10901 ;; Tracked objects:
 10902 ;;		On entry : 0/0
 10903 ;;		On exit  : 0/0
 10904 ;;		Unchanged: 0/0
 10905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10906 ;;      Params:         1       0       0       0       0
 10907 ;;      Locals:         0       1       0       0       0
 10908 ;;      Temps:          0       0       0       0       0
 10909 ;;      Totals:         1       1       0       0       0
 10910 ;;Total ram usage:        2 bytes
 10911 ;; Hardware stack levels used: 1
 10912 ;; Hardware stack levels required when called: 3
 10913 ;; This function calls:
 10914 ;;		_Lcd8_Cmd
 10915 ;; This function is called by:
 10916 ;;		_main
 10917 ;; This function uses a non-reentrant model
 10918 ;;
 10919                           
 10920     1A68                     _Lcd8_Set_Cursor:	
 10921                           ;psect for function _Lcd8_Set_Cursor
 10922                           
 10923                           
 10924                           ;incstack = 0
 10925                           ; Regs used in _Lcd8_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 10926                           ;Lcd8_Set_Cursor@a stored from wreg
 10927     1A68  1283               	bcf	3,5	;RP0=0, select bank0
 10928     1A69  1303               	bcf	3,6	;RP1=0, select bank0
 10929     1A6A  00A0               	movwf	Lcd8_Set_Cursor@a
 10930     1A6B                     l4546:
 10931                           
 10932                           ;lcd.c: 120:     if (a == 1) {
 10933     1A6B  0320               	decf	Lcd8_Set_Cursor@a,w
 10934     1A6C  1D03               	btfss	3,2
 10935     1A6D  2A6F               	goto	u7471
 10936     1A6E  2A70               	goto	u7470
 10937     1A6F                     u7471:
 10938     1A6F  2A78               	goto	l4550
 10939     1A70                     u7470:
 10940     1A70                     l4548:
 10941                           
 10942                           ;lcd.c: 121:         Lcd8_Cmd(0x80 + b - 1);
 10943     1A70  0877               	movf	Lcd8_Set_Cursor@b,w
 10944     1A71  3E7F               	addlw	127
 10945     1A72  160A  158A  224E  160A  158A  	fcall	_Lcd8_Cmd
 10946                           
 10947                           ;lcd.c: 122:     } else if (a == 2) {
 10948     1A77  2A85               	goto	l114
 10949     1A78                     l4550:
 10950     1A78  3002               	movlw	2
 10951     1A79  0620               	xorwf	Lcd8_Set_Cursor@a,w
 10952     1A7A  1D03               	btfss	3,2
 10953     1A7B  2A7D               	goto	u7481
 10954     1A7C  2A7E               	goto	u7480
 10955     1A7D                     u7481:
 10956     1A7D  2A85               	goto	l114
 10957     1A7E                     u7480:
 10958     1A7E                     l4552:
 10959                           
 10960                           ;lcd.c: 123:         Lcd8_Cmd(0xC0 + b - 1);
 10961     1A7E  0877               	movf	Lcd8_Set_Cursor@b,w
 10962     1A7F  3EBF               	addlw	191
 10963     1A80  160A  158A  224E  160A  158A  	fcall	_Lcd8_Cmd
 10964     1A85                     l114:
 10965     1A85  0008               	return
 10966     1A86                     __end_of_Lcd8_Set_Cursor:
 10967                           
 10968                           	psect	text29
 10969     1CB7                     __ptext29:	
 10970 ;; *************** function _Lcd8_Init *****************
 10971 ;; Defined at:
 10972 ;;		line 127 in file "lcd.c"
 10973 ;; Parameters:    Size  Location     Type
 10974 ;;		None
 10975 ;; Auto vars:     Size  Location     Type
 10976 ;;		None
 10977 ;; Return value:  Size  Location     Type
 10978 ;;                  1    wreg      void 
 10979 ;; Registers used:
 10980 ;;		wreg, status,2, status,0, pclath, cstack
 10981 ;; Tracked objects:
 10982 ;;		On entry : 0/0
 10983 ;;		On exit  : 0/0
 10984 ;;		Unchanged: 0/0
 10985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10986 ;;      Params:         0       0       0       0       0
 10987 ;;      Locals:         0       0       0       0       0
 10988 ;;      Temps:          0       3       0       0       0
 10989 ;;      Totals:         0       3       0       0       0
 10990 ;;Total ram usage:        3 bytes
 10991 ;; Hardware stack levels used: 1
 10992 ;; Hardware stack levels required when called: 3
 10993 ;; This function calls:
 10994 ;;		_Lcd8_Cmd
 10995 ;;		_Lcd8_Port
 10996 ;; This function is called by:
 10997 ;;		_main
 10998 ;; This function uses a non-reentrant model
 10999 ;;
 11000                           
 11001     1CB7                     _Lcd8_Init:	
 11002                           ;psect for function _Lcd8_Init
 11003                           
 11004     1CB7                     l4554:	
 11005                           ;incstack = 0
 11006                           ; Regs used in _Lcd8_Init: [wreg+status,2+status,0+pclath+cstack]
 11007                           
 11008                           
 11009                           ;lcd.c: 128:     _delay((unsigned long)((15)*(8000000/4000.0)));
 11010     1CB7  3027               	movlw	39
 11011     1CB8  1283               	bcf	3,5	;RP0=0, select bank0
 11012     1CB9  1303               	bcf	3,6	;RP1=0, select bank0
 11013     1CBA  00A1               	movwf	??_Lcd8_Init+1
 11014     1CBB  30F4               	movlw	244
 11015     1CBC  00A0               	movwf	??_Lcd8_Init
 11016     1CBD                     u7937:
 11017     1CBD  0BA0               	decfsz	??_Lcd8_Init,f
 11018     1CBE  2CBD               	goto	u7937
 11019     1CBF  0BA1               	decfsz	??_Lcd8_Init+1,f
 11020     1CC0  2CBD               	goto	u7937
 11021     1CC1  0000               	nop
 11022     1CC2                     l4556:
 11023                           
 11024                           ;lcd.c: 129:     Lcd8_Port(0x00);
 11025     1CC2  3000               	movlw	0
 11026     1CC3  160A  158A  2202  160A  158A  	fcall	_Lcd8_Port
 11027     1CC8                     l4558:
 11028                           
 11029                           ;lcd.c: 130:     _delay((unsigned long)((20)*(8000000/4000.0)));
 11030     1CC8  3034               	movlw	52
 11031     1CC9  1283               	bcf	3,5	;RP0=0, select bank0
 11032     1CCA  1303               	bcf	3,6	;RP1=0, select bank0
 11033     1CCB  00A1               	movwf	??_Lcd8_Init+1
 11034     1CCC  30F1               	movlw	241
 11035     1CCD  00A0               	movwf	??_Lcd8_Init
 11036     1CCE                     u7947:
 11037     1CCE  0BA0               	decfsz	??_Lcd8_Init,f
 11038     1CCF  2CCE               	goto	u7947
 11039     1CD0  0BA1               	decfsz	??_Lcd8_Init+1,f
 11040     1CD1  2CCE               	goto	u7947
 11041                           
 11042                           ;lcd.c: 131:     Lcd8_Cmd(0x30);
 11043     1CD2  3030               	movlw	48
 11044     1CD3  160A  158A  224E  160A  158A  	fcall	_Lcd8_Cmd
 11045     1CD8                     l4560:
 11046                           
 11047                           ;lcd.c: 132:     _delay((unsigned long)((5)*(8000000/4000.0)));
 11048     1CD8  300D               	movlw	13
 11049     1CD9  1283               	bcf	3,5	;RP0=0, select bank0
 11050     1CDA  1303               	bcf	3,6	;RP1=0, select bank0
 11051     1CDB  00A1               	movwf	??_Lcd8_Init+1
 11052     1CDC  30FB               	movlw	251
 11053     1CDD  00A0               	movwf	??_Lcd8_Init
 11054     1CDE                     u7957:
 11055     1CDE  0BA0               	decfsz	??_Lcd8_Init,f
 11056     1CDF  2CDE               	goto	u7957
 11057     1CE0  0BA1               	decfsz	??_Lcd8_Init+1,f
 11058     1CE1  2CDE               	goto	u7957
 11059     1CE2                     l4562:
 11060                           
 11061                           ;lcd.c: 133:     Lcd8_Cmd(0x30);
 11062     1CE2  3030               	movlw	48
 11063     1CE3  160A  158A  224E  160A  158A  	fcall	_Lcd8_Cmd
 11064                           
 11065                           ;lcd.c: 134:     _delay((unsigned long)((160)*(8000000/4000.0)));
 11066     1CE8  3002               	movlw	2
 11067     1CE9  1283               	bcf	3,5	;RP0=0, select bank0
 11068     1CEA  1303               	bcf	3,6	;RP1=0, select bank0
 11069     1CEB  00A2               	movwf	??_Lcd8_Init+2
 11070     1CEC  30A0               	movlw	160
 11071     1CED  00A1               	movwf	??_Lcd8_Init+1
 11072     1CEE  3091               	movlw	145
 11073     1CEF  00A0               	movwf	??_Lcd8_Init
 11074     1CF0                     u7967:
 11075     1CF0  0BA0               	decfsz	??_Lcd8_Init,f
 11076     1CF1  2CF0               	goto	u7967
 11077     1CF2  0BA1               	decfsz	??_Lcd8_Init+1,f
 11078     1CF3  2CF0               	goto	u7967
 11079     1CF4  0BA2               	decfsz	??_Lcd8_Init+2,f
 11080     1CF5  2CF0               	goto	u7967
 11081     1CF6  2CF7               	nop2
 11082     1CF7                     l4564:
 11083                           
 11084                           ;lcd.c: 135:     Lcd8_Cmd(0x30);
 11085     1CF7  3030               	movlw	48
 11086     1CF8  160A  158A  224E  160A  158A  	fcall	_Lcd8_Cmd
 11087     1CFD                     l4566:
 11088                           
 11089                           ;lcd.c: 137:     Lcd8_Cmd(0x38);
 11090     1CFD  3038               	movlw	56
 11091     1CFE  160A  158A  224E  160A  158A  	fcall	_Lcd8_Cmd
 11092     1D03                     l4568:
 11093                           
 11094                           ;lcd.c: 138:     Lcd8_Cmd(0x10);
 11095     1D03  3010               	movlw	16
 11096     1D04  160A  158A  224E  160A  158A  	fcall	_Lcd8_Cmd
 11097     1D09                     l4570:
 11098                           
 11099                           ;lcd.c: 139:     Lcd8_Cmd(0x01);
 11100     1D09  3001               	movlw	1
 11101     1D0A  160A  158A  224E  160A  158A  	fcall	_Lcd8_Cmd
 11102     1D0F                     l4572:
 11103                           
 11104                           ;lcd.c: 140:     Lcd8_Cmd(0x06);
 11105     1D0F  3006               	movlw	6
 11106     1D10  160A  158A  224E  160A  158A  	fcall	_Lcd8_Cmd
 11107     1D15                     l4574:
 11108                           
 11109                           ;lcd.c: 141:     Lcd8_Cmd(0x0C);
 11110     1D15  300C               	movlw	12
 11111     1D16  160A  158A  224E  160A  158A  	fcall	_Lcd8_Cmd
 11112     1D1B                     l117:
 11113     1D1B  0008               	return
 11114     1D1C                     __end_of_Lcd8_Init:
 11115                           
 11116                           	psect	text30
 11117     1A4E                     __ptext30:	
 11118 ;; *************** function _Lcd8_Cmd *****************
 11119 ;; Defined at:
 11120 ;;		line 106 in file "lcd.c"
 11121 ;; Parameters:    Size  Location     Type
 11122 ;;  a               1    wreg     unsigned char 
 11123 ;; Auto vars:     Size  Location     Type
 11124 ;;  a               1    6[COMMON] unsigned char 
 11125 ;; Return value:  Size  Location     Type
 11126 ;;                  1    wreg      void 
 11127 ;; Registers used:
 11128 ;;		wreg, status,2, status,0, pclath, cstack
 11129 ;; Tracked objects:
 11130 ;;		On entry : 0/0
 11131 ;;		On exit  : 0/0
 11132 ;;		Unchanged: 0/0
 11133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11134 ;;      Params:         0       0       0       0       0
 11135 ;;      Locals:         1       0       0       0       0
 11136 ;;      Temps:          2       0       0       0       0
 11137 ;;      Totals:         3       0       0       0       0
 11138 ;;Total ram usage:        3 bytes
 11139 ;; Hardware stack levels used: 1
 11140 ;; Hardware stack levels required when called: 2
 11141 ;; This function calls:
 11142 ;;		_Lcd8_Port
 11143 ;; This function is called by:
 11144 ;;		_Lcd8_Set_Cursor
 11145 ;;		_Lcd8_Init
 11146 ;;		_Lcd8_Clear
 11147 ;; This function uses a non-reentrant model
 11148 ;;
 11149                           
 11150     1A4E                     _Lcd8_Cmd:	
 11151                           ;psect for function _Lcd8_Cmd
 11152                           
 11153                           
 11154                           ;incstack = 0
 11155                           ; Regs used in _Lcd8_Cmd: [wreg+status,2+status,0+pclath+cstack]
 11156                           ;Lcd8_Cmd@a stored from wreg
 11157     1A4E  00F6               	movwf	Lcd8_Cmd@a
 11158     1A4F                     l4068:
 11159                           
 11160                           ;lcd.c: 107:     PORTCbits.RC0 = 0;
 11161     1A4F  1283               	bcf	3,5	;RP0=0, select bank0
 11162     1A50  1303               	bcf	3,6	;RP1=0, select bank0
 11163     1A51  1007               	bcf	7,0	;volatile
 11164     1A52                     l4070:
 11165                           
 11166                           ;lcd.c: 108:     Lcd8_Port(a);
 11167     1A52  0876               	movf	Lcd8_Cmd@a,w
 11168     1A53  160A  158A  2202  160A  158A  	fcall	_Lcd8_Port
 11169     1A58                     l4072:
 11170                           
 11171                           ;lcd.c: 109:     PORTCbits.RC2 = 1;
 11172     1A58  1283               	bcf	3,5	;RP0=0, select bank0
 11173     1A59  1303               	bcf	3,6	;RP1=0, select bank0
 11174     1A5A  1507               	bsf	7,2	;volatile
 11175     1A5B                     l4074:
 11176                           
 11177                           ;lcd.c: 110:     _delay((unsigned long)((40)*(8000000/4000.0)));
 11178     1A5B  3068               	movlw	104
 11179     1A5C  00F5               	movwf	??_Lcd8_Cmd+1
 11180     1A5D  30E4               	movlw	228
 11181     1A5E  00F4               	movwf	??_Lcd8_Cmd
 11182     1A5F                     u7977:
 11183     1A5F  0BF4               	decfsz	??_Lcd8_Cmd,f
 11184     1A60  2A5F               	goto	u7977
 11185     1A61  0BF5               	decfsz	??_Lcd8_Cmd+1,f
 11186     1A62  2A5F               	goto	u7977
 11187     1A63  0000               	nop
 11188     1A64                     l4076:
 11189                           
 11190                           ;lcd.c: 111:     PORTCbits.RC2 = 0;
 11191     1A64  1283               	bcf	3,5	;RP0=0, select bank0
 11192     1A65  1303               	bcf	3,6	;RP1=0, select bank0
 11193     1A66  1107               	bcf	7,2	;volatile
 11194     1A67                     l105:
 11195     1A67  0008               	return
 11196     1A68                     __end_of_Lcd8_Cmd:
 11197                           
 11198                           	psect	text31
 11199     1A02                     __ptext31:	
 11200 ;; *************** function _Lcd8_Port *****************
 11201 ;; Defined at:
 11202 ;;		line 102 in file "lcd.c"
 11203 ;; Parameters:    Size  Location     Type
 11204 ;;  a               1    wreg     unsigned char 
 11205 ;; Auto vars:     Size  Location     Type
 11206 ;;  a               1    3[COMMON] unsigned char 
 11207 ;; Return value:  Size  Location     Type
 11208 ;;                  1    wreg      void 
 11209 ;; Registers used:
 11210 ;;		wreg
 11211 ;; Tracked objects:
 11212 ;;		On entry : 0/0
 11213 ;;		On exit  : 0/0
 11214 ;;		Unchanged: 0/0
 11215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11216 ;;      Params:         0       0       0       0       0
 11217 ;;      Locals:         1       0       0       0       0
 11218 ;;      Temps:          0       0       0       0       0
 11219 ;;      Totals:         1       0       0       0       0
 11220 ;;Total ram usage:        1 bytes
 11221 ;; Hardware stack levels used: 1
 11222 ;; Hardware stack levels required when called: 1
 11223 ;; This function calls:
 11224 ;;		Nothing
 11225 ;; This function is called by:
 11226 ;;		_Lcd8_Cmd
 11227 ;;		_Lcd8_Init
 11228 ;;		_Lcd8_Write_Char
 11229 ;; This function uses a non-reentrant model
 11230 ;;
 11231                           
 11232     1A02                     _Lcd8_Port:	
 11233                           ;psect for function _Lcd8_Port
 11234                           
 11235                           
 11236                           ;incstack = 0
 11237                           ; Regs used in _Lcd8_Port: [wreg]
 11238                           ;Lcd8_Port@a stored from wreg
 11239     1A02  00F3               	movwf	Lcd8_Port@a
 11240     1A03                     l4002:
 11241                           
 11242                           ;lcd.c: 103:     PORTD = a;
 11243     1A03  0873               	movf	Lcd8_Port@a,w
 11244     1A04  1283               	bcf	3,5	;RP0=0, select bank0
 11245     1A05  1303               	bcf	3,6	;RP1=0, select bank0
 11246     1A06  0088               	movwf	8	;volatile
 11247     1A07                     l102:
 11248     1A07  0008               	return
 11249     1A08                     __end_of_Lcd8_Port:
 11250                           
 11251                           	psect	text32
 11252     1A22                     __ptext32:	
 11253 ;; *************** function _isr *****************
 11254 ;; Defined at:
 11255 ;;		line 44 in file "postlab.c"
 11256 ;; Parameters:    Size  Location     Type
 11257 ;;		None
 11258 ;; Auto vars:     Size  Location     Type
 11259 ;;		None
 11260 ;; Return value:  Size  Location     Type
 11261 ;;                  1    wreg      void 
 11262 ;; Registers used:
 11263 ;;		wreg
 11264 ;; Tracked objects:
 11265 ;;		On entry : 0/0
 11266 ;;		On exit  : 0/0
 11267 ;;		Unchanged: 0/0
 11268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11269 ;;      Params:         0       0       0       0       0
 11270 ;;      Locals:         0       0       0       0       0
 11271 ;;      Temps:          3       0       0       0       0
 11272 ;;      Totals:         3       0       0       0       0
 11273 ;;Total ram usage:        3 bytes
 11274 ;; Hardware stack levels used: 1
 11275 ;; This function calls:
 11276 ;;		Nothing
 11277 ;; This function is called by:
 11278 ;;		Interrupt level 1
 11279 ;; This function uses a non-reentrant model
 11280 ;;
 11281                           
 11282     1A22                     _isr:	
 11283                           ;psect for function _isr
 11284                           
 11285     1A22                     i1l3868:
 11286                           
 11287                           ;postlab.c: 45:     if (PIR1bits.RCIF) {
 11288     1A22  1283               	bcf	3,5	;RP0=0, select bank0
 11289     1A23  1303               	bcf	3,6	;RP1=0, select bank0
 11290     1A24  1E8C               	btfss	12,5	;volatile
 11291     1A25  2A27               	goto	u606_21
 11292     1A26  2A28               	goto	u606_20
 11293     1A27                     u606_21:
 11294     1A27  2A31               	goto	i1l237
 11295     1A28                     u606_20:
 11296     1A28                     i1l3870:
 11297                           
 11298                           ;postlab.c: 46:         dato = RCREG;
 11299     1A28  081A               	movf	26,w	;volatile
 11300     1A29  00EC               	movwf	_dato
 11301                           
 11302                           ;postlab.c: 47:         _delay((unsigned long)((5)*(8000000/4000000.0)));
 11303     1A2A  3003               	movlw	3
 11304     1A2B  00F0               	movwf	??_isr
 11305     1A2C                     u798_27:
 11306     1A2C  0BF0               	decfsz	??_isr,f
 11307     1A2D  2A2C               	goto	u798_27
 11308     1A2E                     i1l3872:
 11309                           
 11310                           ;postlab.c: 48:         PIR1bits.RCIF = 0;
 11311     1A2E  1283               	bcf	3,5	;RP0=0, select bank0
 11312     1A2F  1303               	bcf	3,6	;RP1=0, select bank0
 11313     1A30  128C               	bcf	12,5	;volatile
 11314     1A31                     i1l237:
 11315     1A31  0872               	movf	??_isr+2,w
 11316     1A32  008A               	movwf	10
 11317     1A33  0E71               	swapf	??_isr+1,w
 11318     1A34  0083               	movwf	3
 11319     1A35  0EFE               	swapf	btemp,f
 11320     1A36  0E7E               	swapf	btemp,w
 11321     1A37  0009               	retfie
 11322     1A38                     __end_of_isr:
 11323     007E                     btemp	set	126	;btemp
 11324     007E                     wtemp0	set	126
 11325                           
 11326                           	psect	intentry
 11327     0004                     __pintentry:	
 11328                           ;incstack = 0
 11329                           ; Regs used in _isr: [wreg]
 11330                           
 11331     0004                     interrupt_function:
 11332     007E                     saved_w	set	btemp
 11333     0004  00FE               	movwf	btemp
 11334     0005  0E03               	swapf	3,w
 11335     0006  00F1               	movwf	??_isr+1
 11336     0007  080A               	movf	10,w
 11337     0008  00F2               	movwf	??_isr+2
 11338     0009  160A  158A  2A22   	ljmp	_isr
 11339                           
 11340                           	psect	config
 11341                           
 11342                           ;Config register CONFIG1 @ 0x2007
 11343                           ;	Oscillator Selection bits
 11344                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 11345                           ;	Watchdog Timer Enable bit
 11346                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11347                           ;	Power-up Timer Enable bit
 11348                           ;	PWRTE = OFF, PWRT disabled
 11349                           ;	RE3/MCLR pin function select bit
 11350                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11351                           ;	Code Protection bit
 11352                           ;	CP = OFF, Program memory code protection is disabled
 11353                           ;	Data Code Protection bit
 11354                           ;	CPD = OFF, Data memory code protection is disabled
 11355                           ;	Brown Out Reset Selection bits
 11356                           ;	BOREN = OFF, BOR disabled
 11357                           ;	Internal External Switchover bit
 11358                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11359                           ;	Fail-Safe Clock Monitor Enabled bit
 11360                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11361                           ;	Low Voltage Programming Enable bit
 11362                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11363                           ;	In-Circuit Debugger Mode bit
 11364                           ;	DEBUG = 0x1, unprogrammed default
 11365     2007                     	org	8199
 11366     2007  20D4               	dw	8404
 11367                           
 11368                           ;Config register CONFIG2 @ 0x2008
 11369                           ;	Brown-out Reset Selection bit
 11370                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 11371                           ;	Flash Program Memory Self Write Enable bits
 11372                           ;	WRT = OFF, Write protection off
 11373     2008                     	org	8200
 11374     2008  3FFF               	dw	16383

Data Sizes:
    Strings     22
    Constant    144
    Data        0
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     76      77
    BANK1            80     62      74
    BANK3            96      0      20
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> valor(BANK3[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd8_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[2]), STR_2(CODE[5]), 
		 -> valor(BANK3[20]), 


Critical Paths under _main in COMMON

    _main->_Lcd8_Set_Cursor
    _main->_Lcd8_Write_String
    ___awdiv->___awmod
    _fround->___lwmod
    ___lwdiv->___lwmod
    ___flmul->___lwmod
    _Lcd8_Write_String->_Lcd8_Write_Char
    _Lcd8_Write_Char->_Lcd8_Port
    _Lcd8_Set_Cursor->_Lcd8_Cmd
    _Lcd8_Init->_Lcd8_Cmd
    _Lcd8_Cmd->_Lcd8_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->___fladd
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___fltol->_scale
    _map->___fladd
    ___flsub->___fladd
    ___fladd->_fround
    ___flmul->___awdiv
    ___fldiv->___fladd

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_map
    _sprintf->___flsub
    _map->___fldiv
    ___fldiv->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   49354
                                             58 BANK1      4     4      0
                          _Lcd8_Init
                    _Lcd8_Set_Cursor
                  _Lcd8_Write_String
                           ___xxtofl
                           _adc_init
                                _map
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   34587
                                              8 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    8051
                                             36 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1513
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1364
                                              2 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6291
                                             36 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     615
                                              3 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     781
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     634
                                              3 COMMON     3     3      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     634
                                              3 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     656
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     496
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     772
                                              3 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     601
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             55 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     986
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     490
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _map                                                 24     4     20   12642
                                             34 BANK1     24     4     20
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3093
                                              0 BANK1      8     0      8
                            ___fladd
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2440
                                             56 BANK0     20    12      8
                            ___flmul (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                             10 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1863
                                              8 BANK1     26    18      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             3     1      2      98
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Lcd8_Write_String                                    7     5      2     642
                                              6 COMMON     2     0      2
                                              0 BANK0      5     5      0
                    _Lcd8_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd8_Write_Char                                      2     2      0      62
                                              4 COMMON     2     2      0
                          _Lcd8_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd8_Set_Cursor                                      2     1      1     636
                                              7 COMMON     1     0      1
                                              0 BANK0      1     1      0
                           _Lcd8_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd8_Init                                            3     3      0      93
                                              0 BANK0      3     3      0
                           _Lcd8_Cmd
                          _Lcd8_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd8_Cmd                                             3     3      0      62
                                              4 COMMON     3     3      0
                          _Lcd8_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd8_Port                                            1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd8_Init
     _Lcd8_Cmd
       _Lcd8_Port
     _Lcd8_Port
   _Lcd8_Set_Cursor
     _Lcd8_Cmd
   _Lcd8_Write_String
     _Lcd8_Write_Char
       _Lcd8_Port
   ___xxtofl
   _adc_init
   _map
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _fround (ARG)
         ___flmul
         ___lwdiv
         ___lwmod
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
         ___xxtofl (ARG)
     ___flmul
     ___flsub
     ___xxtofl (ARG)
   _sprintf
     ___awdiv
     ___fladd
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      B6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      4D       5       96.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     3E      4A       7       92.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      14       9       20.8%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      B6      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Jul 25 18:29:26 2023

             ___fldiv@aexp 00C1               ___fldiv@bexp 00C0                          pc 0002  
             ___fldiv@sign 00B9                         l32 11CB                         l17 101C  
             ___awdiv@sign 0027                         fsr 0004        ___wmul@multiplicand 0075  
      __Umul8_16@word_mpld 0022                        l102 1A07                        l120 1A4D  
                      l105 1A67                        l114 1A85                        l117 1D1B  
                      l126 1B1F                        l433 0736                        l425 0575  
                      l443 1ABF                        l445 1AD9                        l613 1FFF  
                      l373 0FFF                        l630 1BF0                        l614 1F66  
                      l366 15A7                        l631 1C05                        l439 0779  
                      l624 1FF2                        l392 0098                        l801 1795  
                      l617 1FC2                        l609 1CB6                        l634 1E0B  
                      l642 07FC                        l660 1F47                        l813 17FF  
                      l629 1BD4                        l637 1E77                        l653 07DC  
                      l661 1EBB                        l638 1E90                        l646 07F1  
                      l910 1041                        l479 1D83                        l671 1F3A  
                      l816 1BB5                        l656 07F1                        l912 10D6  
                      l664 1F0A                        l842 1314                        l826 1222  
                      l770 1603                        l930 1A21                        l923 10A0  
                      l828 139A                        l924 10AC                        l596 1DEC  
                      l749 1B65                        l774 1686                        l791 174F  
                      l783 17FF                        l759 083C                        l848 1386  
                      l872 0C0C                        l776 165F                        l866 0C9C  
                      l795 1773                        l699 1C5B                        l885 1A9C  
                      l887 1AAE                        _RD3 0043                        _RD4 0044  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
                      _map 10D7                        _isr 1A22                        fsr0 0004  
                      indf 0000               ___awmod@sign 0021               ___flmul@aexp 003C  
             ___flmul@bexp 003D               ___flmul@sign 0037               ___flmul@temp 0042  
             ___flmul@prod 003E               ___fltol@exp1 0060                       l3000 0B6A  
                     l3010 0BD8                       l3002 0B90                       l3020 0BF0  
                     l3012 0BDC                       l3004 0BB8                       l3030 0C11  
                     l3022 0BF1                       l3014 0BDD                       l3006 0BC1  
                     l3032 0C16                       l3040 0C47                       l3024 0BF5  
                     l3016 0BE6                       l3008 0BCF                       l4002 1A03  
                     l3050 0C7A                       l3042 0C54                       l3034 0C24  
                     l3026 0C09                       l3018 0BEC                       l4010 1C68  
                     l3060 0C94                       l3052 0C86                       l3044 0C5F  
                     l3036 0C28                       l4020 1C7C                       l4012 1C6A  
                     l4004 1C5C                       l3054 0C8A                       l3046 0C6E  
                     l3038 0C41                       l4102 1564                       l3150 1A20  
                     l3142 1A11                       l4030 1C9B                       l4022 1C83  
                     l4014 1C6E                       l4006 1C5F                       l4110 0CA6  
                     l3056 0C8B                       l3048 0C78                       l4200 1F48  
                     l3144 1A12                       l2600 1D92                       l4032 1CA2  
                     l4024 1C87                       l4016 1C73                       l4008 1C63  
                     l4120 0D9E                       l4112 0CAD                       l3058 0C90  
                     l3402 1B66                       l4202 1F53                       l4050 1B34  
                     l4042 1B20                       l3146 1A18                       l2610 1DA7  
                     l2602 1D96                       l4026 1C8B                       l4018 1C79  
                     l4034 1CA8                       l4130 0E5A                       l4106 0CA0  
                     l3404 1B6A                       l4300 1C02                       l4220 1F89  
                     l4212 1F67                       l4060 1B54                       l4052 1B38  
                     l4044 1B24                       l2700 0803                       l3148 1A1E  
                     l2620 1DCA                       l2612 1DAA                       l2604 1D9B  
                     l4036 1CAD                       l4028 1C95                       l4124 0E26  
                     l4108 0CA4                       l4070 1A52                       l4302 1C04  
                     l4310 1E1F                       l3334 07F2                       l3350 07A1  
                     l3342 077A                       l4230 1FBC                       l4222 1F92  
                     l4214 1F6F                       l4206 1F5C                       l4062 1B5B  
                     l4054 1B3C                       l4046 1B2A                       l2710 081B  
                     l2702 0809                       l2630 1DE3                       l2622 1DD0  
                     l2614 1DB1                       l2606 1D9F                       l4038 1CB2  
                     l4142 0FD3                       l4118 0D97                       l4072 1A58  
                     l4080 1A3C                       l2800 162F                       l4320 1E8D  
                     l4312 1E27                       l3336 07FA                       l3352 07A2  
                     l3344 0785                       l4240 1FD7                       l4232 1FC6  
                     l4224 1FA4                       l4216 1F80                       l4160 1EC2  
                     l4152 1EAB                       l4056 1B4D                       l4048 1B2D  
                     l4064 1B61                       l2712 0825                       l2704 080C  
                     l2632 1DE8                       l2624 1DD1                       l2616 1DB5  
                     l2608 1DA1                       l4136 0F44                       l4128 0E53  
                     l4074 1A5B                       l4082 1A42                       l3610 101B  
                     l3602 1001                       l4410 127B                       l4402 1251  
                     l2810 166C                       l2802 1630                       l2730 15B6  
                     l2722 15A8                       l4322 1E8F                       l4314 1E2B  
                     l4306 1DED                       l3338 07FC                       l3354 07AA  
                     l4330 1C13                       l4250 1FF7                       l4242 1FE0  
                     l4226 1FB2                       l4218 1F82                       l4170 1EF1  
                     l4162 1ED1                       l4146 1E91                       l4058 1B53  
                     l2714 082B                       l2706 0813                       l4090 13A4  
                     l2626 1DD8                       l2618 1DB9                       l4138 0F4B  
                     l4076 1A64                       l4068 1A4F                       l4084 1A45  
                     l3604 100A                       l4420 1299                       l4412 127D  
                     l4404 1263                       l2580 1A92                       l2900 17D3  
                     l2820 168A                       l2812 1670                       l2804 1647  
                     l2732 15BB                       l2740 15CB                       l2724 15AD  
                     l4316 1E4F                       l4308 1E03                       l3364 07B8  
                     l3356 07AC                       l3348 078E                       l4340 1C44  
                     l4332 1C1C                       l4260 1AC6                       l4500 1039  
                     l4228 1FB3                       l4172 1EFB                       l4164 1ED3  
                     l4148 1EA2                       l2716 0832                       l2708 0817  
                     l2628 1DDE                       l4086 1A4A                       l4078 1A39  
                     l3606 1013                       l4414 1282                       l4422 12A2  
                     l4430 12C7                       l4406 126B                       l4350 11D1  
                     l2582 1A96                       l2910 17EB                       l2902 17D8  
                     l2830 16B3                       l2822 168F                       l2814 1671  
                     l2806 1663                       l2750 15E1                       l2742 15D3  
                     l2734 15C0                       l2726 15B1                       l4318 1E53  
                     l3374 07D1                       l3366 07C1                       l3358 07B0  
                     l4270 1D2E                       l4342 1C4D                       l4334 1C20  
                     l4326 1C06                       l4262 1ACD                       l4254 1AAF  
                     l4510 1059                       l4502 1049                       l4238 1FCE  
                     l4174 1EFC                       l4166 1EDA                       l4158 1EBC  
                     l2718 0838                       l3608 1018                       l4440 12E4  
                     l4432 12CD                       l4424 12B4                       l4416 1294  
                     l4408 1273                       l4360 11E4                       l4352 11D5  
                     l2584 1AA5                       l2576 1A89                       l2920 17FE  
                     l2912 17EF                       l2904 17DD                       l2840 16C5  
                     l2832 16B7                       l2816 167A                       l2808 166A  
                     l2760 15F8                       l2752 15E5                       l2744 15D6  
                     l2736 15C8                       l2728 15B5                       l3376 07E1  
                     l3368 07CA                       l4280 1D4B                       l4272 1D31  
                     l4336 1C24                       l4328 1C10                       l4344 1C53  
                     l4264 1AD3                       l4256 1AB3                       l4520 1084  
                     l4512 1062                       l4248 1FE7                       l4184 1F16  
                     l4176 1F04                       l4168 1EE3                       l4096 14B3  
                     l4088 139E                       l2592 1D84                       l4600 0054  
                     l4450 12F9                       l4442 12E5                       l4434 12D5  
                     l4426 12B5                       l4418 1298                       l4370 11FC  
                     l4362 11EC                       l4354 11D9                       l2586 1AAA  
                     l2578 1A8B                       l2930 0966                       l2922 0958  
                     l2914 17F1                       l2906 17E5                       l2850 172B  
                     l2842 16CE                       l2834 16BE                       l2826 1698  
                     l2818 167E                       l2770 1611                       l2762 15F9  
                     l2754 15E6                       l2746 15DC                       l2738 15C9  
                     l3378 07E6                       l4282 1D5D                       l4274 1D3A  
                     l4290 1D7B                       l4338 1C36                       l4258 1AB7  
                     l4530 10AE                       l4522 108B                       l4514 1069  
                     l4506 1052                       l4194 1F2F                       l4186 1F1F  
                     l4178 1F0E                       l4098 14B9                       l2594 1D87  
                     l4602 0057                       l4610 0094                       l4460 131E  
                     l4452 12FD                       l4444 12EE                       l4436 12D7  
                     l4428 12C3                       l4380 120F                       l4372 1200  
                     l4364 11ED                       l4356 11DA                       l4348 11CC  
                     l2940 0982                       l2932 096B                       l2924 095D  
                     l2916 17F5                       l2908 17EA                       l2860 175C  
                     l2852 172D                       l2836 16C0                       l2828 16AF  
                     l2844 16D3                       l2780 161B                       l2772 1613  
                     l2756 15EB                       l2764 15FB                       l2748 15DD  
                     l4284 1D6B                       l4276 1D3E                       l4268 1D1C  
                     l4532 10C4                       l4524 1096                       l4516 106D  
                     l4508 1055                       l4196 1F3F                       l4188 1F28  
                     l2596 1D8B                       l4620 00C2                       l4612 0096  
                     l4604 006C                       l4550 1A78                       l4470 135C  
                     l4462 132C                       l4454 1311                       l4438 12E0  
                     l4446 12F4                       l4390 1236                       l4382 1217  
                     l4374 1204                       l4358 11DF                       l4366 11EF  
                     l2950 0995                       l2942 0987                       l2934 0970  
                     l2926 0961                       l2918 17FA                       l2870 1777  
                     l2854 1732                       l2846 16E9                       l2838 16C4  
                     l2790 1625                       l2782 161D                       l2774 1615  
                     l2766 1609                       l2758 15F0                       l4542 10D7  
                     l4294 1BB6                       l4286 1D6C                       l4278 1D42  
                     l4534 10C9                       l4526 109A                       l4518 107B  
                     l2598 1D90                       l4710 0491                       l4702 0476  
                     l4630 0103                       l4622 00C6                       l4606 007F  
                     ?_map 00C2                       l4560 1CD8                       l4552 1A7E  
                     l4480 138A                       l4472 136A                       l4464 1330  
                     l4448 12F8                       l4392 123A                       l4384 1218  
                     l4376 1205                       l4368 11F7                       l2960 09B1  
                     l2952 099A                       l2944 098B                       l2936 0978  
                     l2928 0965                       l2872 177A                       l2864 1765  
                     l2848 1727                       l2856 1741                       l2880 1787  
                     l2792 1627                       l2784 161F                       l2776 1617  
                     l2768 160D                       l4296 1BCC                       l4288 1D75  
                     l4536 10CD                       l4528 10A4                       l4712 0496  
                     l4720 0537                       l4704 047A                       l4640 0156  
                     l4632 011C                       l4624 00CA                       l4616 009A  
                     l4608 0083                       l4800 0841                       l4570 1D09  
                     l4562 1CE2                       l4554 1CB7                       l4546 1A6B  
                     l4482 138E                       l4474 1379                       l4466 1349  
                     l4458 1319                       l4378 120A                       l4386 121A  
                     l2970 09DA                       l2962 09B6                       l2954 09A2  
                     l2946 098F                       l2938 097A                       l2890 179A  
                     l2882 1788                       l2874 177C                       l2866 176E  
                     l2858 1757                       l2794 1629                       l2786 1621  
                     l2778 1619                       l4298 1BE8                       l4538 10CE  
                     l4730 055D                       l4722 053F                       l4714 04F1  
                     l4706 0480                       l4650 019C                       l4642 015C  
                     l4634 0120                       l4626 00D8                       l4618 00B6  
                     l4810 084A                       l4802 0842                       l4572 1D0F  
                     l4564 1CF7                       l4556 1CC2                       l4548 1A70  
                     l4580 1AFB                       l4484 1390                       l4476 137D  
                     l4468 134F                       l4388 122A                       l4396 1243  
                     l2980 0A73                       l2972 09F5                       l2956 09A4  
                     l2948 0990                       l2892 179F                       l2884 178C  
                     l2876 1781                       l2868 1772                       l2796 162B  
                     l2788 1623                       l4740 0588                       l4732 056C  
                     l4724 0546                       l4716 0530                       l4708 048C  
                     l4660 025F                       l4652 01BB                       l4644 016F  
                     l4636 0124                       l4628 00DC                       l4820 0853  
                     l4812 084B                       l4804 0845                       l4574 1D15  
                     l4566 1CFD                       l4558 1CC8                       l4582 1B03  
                     l4486 1394                       l4478 1385                       l4398 1248  
                     l2990 0AD2                       l2982 0A7C                       l2974 0A11  
                     l2966 09BF                       l2958 09AC                       l2894 17AD  
                     l2886 1792                       l2878 1783                       l2798 162D  
                     l4494 1020                       l4750 069F                       l4742 058C  
                     l4734 0571                       l4726 054A                       l4670 02F5  
                     l4654 0206                       l4646 0192                       l4638 014B  
                     l4662 0267                       l4590 003C                       l4830 0862  
                     l4822 0858                       l4814 084C                       l4806 0846  
                     l4568 1D03                       l4576 1ADA                       l2992 0AE9  
                     l2984 0A8A                       l2976 0A3B                       l2968 09CD  
                     l2896 17B1                       l4496 1025                       l4760 0711  
                     l4752 06A5                       l4744 05AA                       l4736 057E  
                     l4728 0550                       l4680 0365                       l4672 031C  
                     l4664 0276                       l4656 022D                       l4648 0196  
                     l4592 0041                       l4584 002E                       l4840 0877  
                     l4832 0866                       l4824 085B                       l4816 084F  
                     l4808 0847                       l4578 1ADF                       l2994 0B06  
                     l2986 0AA7                       l2978 0A57                       l2898 17CF  
                     l4498 1029                       l4770 0730                       l4762 0715  
                     l4754 06A9                       l4746 0605                       l4738 0583  
                     l4690 043B                       l4682 0383                       l4674 032B  
                     l4666 02BD                       l4658 0236                       l4594 0043  
                     l4586 0031                       l4850 0888                       l4842 087A  
                     l4834 0867                       l4826 085C                       l4818 0850  
                     l2996 0B31                       l2988 0AB5                       l4780 075F  
                     l4772 0741                       l4764 071B                       l4748 0660  
                     l4756 0704                       l4692 043D                       l4676 0354  
                     l4668 02CC                       l4596 004F                       l4588 0037  
                     l4860 08FA                       l4852 088B                       l4844 087B  
                     l4836 086F                       l4828 085F                       l2998 0B3F  
                     l4774 0742                       l4758 070C                       l4686 03CE  
                     l4678 035D                       l4766 0722                       l4918 00AE  
                     l4598 0050                       l4870 0924                       l4862 0902  
                     l4854 08D9                       l4846 087C                       l4838 0874  
                     l4776 0751                       l4768 0728                       l4688 03D7  
                     l4784 0765                       l4880 094A                       l4872 092D  
                     l4864 090B                       l4856 08E9                       l4848 0881  
                     l4778 0751                       l4698 043F                       l4786 0775  
                     l4882 094C                       l4874 0935                       l4866 0913  
                     l4858 08F1                       l4884 0952                       l4876 093E  
                     l4868 091C                       ?_isr 0070                       l4878 0946  
                     l4798 083D                       STR_1 18AF                       STR_2 18A5  
                     STR_3 18B4                       STR_4 18A0                       STR_5 18AA  
                     u4000 099A                       u4001 0999                       u4010 09B1  
                     u3210 1DB9                       u4011 09B0                       u3211 1DB8  
                     u3140 1A96                       u4020 09B6                       u3141 1A95  
                     u4021 09B5                       u3205 1DAB                       u3230 1DCA  
                     u4111 0AF8                       u4031 0A03                       u3231 1DC9  
                     u3160 1AAA                       u4200 0BDC                       u4112 0AFF  
                     u4032 0A0A                       u3161 1AA9                       u4201 0BDB  
                     u4121 0B23                       u4113 0B06                       u4105 0AD4  
                     u4041 0A1F                       u4033 0A11                       u3225 1DBA  
                     u4122 0B2A                       u4042 0A26                       u3250 1DDE  
                     u3170 1D8B                       u3155 1A9D                       u4131 0B4E  
                     u4123 0B31                       u4051 0A49                       u4043 0A2D  
                     u3251 1DDD                       u3235 1DC6                       u3171 1D8A  
                     u4300 0C6E                       u4220 0BF0                       u4140 0B76  
                     u4132 0B55                       u4052 0A50                       u3500 15BB  
                     u5100 07B7                       u3260 1DE3                       u3180 1D96  
                     u4301 0C6D                       u4221 0BEF                       u4133 0B5C  
                     u4061 0A65                       u4053 0A57                       u3501 15BA  
                     u5101 07B6                       u3261 1DE2                       u3245 1DD2  
                     u3181 1D95                       u4310 0C8A                       u4230 0BF5  
                     u4062 0A6C                       u3510 15C0                       u3430 0809  
                     u3190 1DA7                       u4311 0C89                       u4231 0BF4  
                     u4215 0BDF                       u4151 0B82                       u4063 0A73  
                     u3511 15BF                       u3431 0808                       u3191 1DA6  
                     u4240 0C09                       u4160 0B9E                       u4152 0B89  
                     u3600 1653                       u3520 15DC                       u5120 07C9  
                     u4305 0C6A                       u4241 0C08                       u4153 0B90  
                     u4145 0B71                       u4081 0A99                       u3521 15DB  
                     u5121 07C8                       u4250 0C10                       u4082 0AA0  
                     u3610 1663                       u3530 15E5                       u5130 07D0  
                     u3450 081B                       u4251 0C0F                       u4171 0BAA  
                     u4091 0AC4                       u4083 0AA7                       u4075 0A75  
                     u3611 1662                       u3531 15E4                       u5131 07CF  
                     u5115 07B9                       u3451 081A                       u4260 0C16  
                     u4172 0BB1                       u4092 0ACB                       u3700 16C4  
                     u3620 1670                       u3540 15EB                       u5060 07FA  
                     u3460 0825                       u6100 1C63                       u4261 0C15  
                     u4173 0BB8                       u4165 0B99                       u4093 0AD2  
                     u3701 16C3                       u3621 166F                       u3541 15EA  
                     u5061 07F9                       u3461 0824                       u3445 080D  
                     u6101 1C62                       u4270 0C28                       u3550 15F0  
                     u5150 07E1                       u5070 0785                       u6110 1C6E  
                     u4271 0C27                       u3551 15EF                       u5151 07E0  
                     u5071 0784                       u6111 1C6D                       u4280 0C37  
                     u3800 1777                       u3720 16E9                       u3640 1686  
                     u3560 1609                       u5160 07E6                       u5080 079C  
                     u7000 1C24                       u3480 0838                       u6120 1C79  
                     u4185 0BBA                       u3801 1776                       u3721 16E8  
                     u3641 1685                       u3561 1608                       u5161 07E5  
                     u5145 07D3                       u7001 1C23                       u3481 0837  
                     u3465 0821                       u6121 1C78                       u4290 0C54  
                     u3810 1781                       u3650 168A                       u3570 160D  
                     u3490 15B5                       u5090 07B0                       u7010 1C36  
                     u6210 1B3C                       u4291 0C53                       u4195 0BD1  
                     u3811 1780                       u3731 1700                       u3723 16E5  
                     u3715 16C7                       u3651 1689                       u3635 1673  
                     u3571 160C                       u3491 15B4                       u5091 07AF  
                     u7011 1C35                       u6211 1B3B                       u3475 082C  
                     u7100 122A                       u3900 17D8                       u3820 1787  
                     u3740 1714                       u3732 1701                       u3660 168F  
                     u3580 1647                       u6300 14B9                       u6140 1C8B  
                     u7101 1229                       u4285 0C32                       u3901 17D7  
                     u3821 1786                       u3741 1715                       u3733 1706  
                     u3661 168E                       u3581 1646                       u5085 0797  
                     u6205 1B2E                       u6301 14B8                       u6141 1C8A  
                     u7110 1248                       u3910 17DD                       u3830 178C  
                     u3750 1732                       u3742 171A                       u3734 1707  
                     u3590 1652                       u7030 1C53                       u6230 1B4D  
                     u6150 1C95                       u7111 1247                       u4295 0C50  
                     u3911 17DC                       u3831 178B                       u3751 1731  
                     u3743 171B                       u3735 170C                       u3671 16A1  
                     u3591 1650                       u7031 1C52                       u7015 1C32  
                     u6231 1B4C                       u6151 1C94                       u6135 1C7D  
                     u7120 1282                       u7040 11D9                       u3920 17EA  
                     u3840 1792                       u3760 1757                       u3736 170D  
                     u3680 16B3                       u3672 16A8                       u7121 1281  
                     u7041 11D8                       u3921 17E9                       u3841 1791  
                     u3761 1756                       u3681 16B2                       u3673 16AF  
                     u3585 1643                       u7025 1C45                       u6225 1B3D  
                     u7210 12E4                       u7050 11DF                       u3930 17EF  
                     u3850 1799                       u3770 175C                       u3690 16B7  
                     u6250 1B61                       u4570 1A18                       u6170 1CA8  
                     u7211 12E3                       u7051 11DE                       u3931 17EE  
                     u3851 1798                       u3771 175B                       u3691 16B6  
                     u6251 1B60                       u6235 1B49                       u6315 14D6  
                     u4571 1A17                       u6171 1CA7                       u6155 1C91  
                     u7300 135C                       u7060 11E4                       u3940 17FE  
                     u3860 179F                       u6260 13A4                       u4580 1A1E  
                     u6180 1CAD                       u6340 0CA4                       u7301 135B  
                     u7205 12D9                       u7061 11E3                       u3941 17FD  
                     u3861 179E                       u6245 1B55                       u6325 1523  
                     u6261 13A3                       u4581 1A1D                       u6181 1CAC  
                     u6165 1C9C                       u6405 0DB1                       u6341 0CA3  
                     u7310 1379                       u7230 12F8                       u7150 1298  
                     u7070 1204                       u3950 0965                       u3870 17B1  
                     u3790 1772                       u6510 1EA2                       u6190 1B2A  
                     u6430 0E5A                       u6350 0CAD                       u7311 1378  
                     u7231 12F7                       u7151 1297                       u7135 1284  
                     u7071 1203                       u3951 0964                       u3871 17B0  
                     u3791 1771                       u6511 1EA1                       u6191 1B29  
                     u6335 156F                       u6431 0E59                       u6415 0DED  
                     u6351 0CAC                       u7320 138E                       u7240 12FD  
                     u7080 120A                       u3960 096B                       u3880 17C0  
                     u6600 1F27                       u6520 1EBA                       u7321 138D  
                     u7305 1358                       u7241 12FC                       u7225 12E7  
                     u7145 128D                       u7081 1209                       u3961 096A  
                     u3785 1767                       u6601 1F26                       u6521 1EB9  
                     u6505 0FD6                       u6425 0E29                       u7250 1311  
                     u7170 12B4                       u7090 120F                       u3970 0970  
                     u3890 17CF                       u7410 109A                       u7330 1025  
                     u6610 1F2E                       u7315 1375                       u7251 1310  
                     u7171 12B3                       u7091 120E                       u3971 096F  
                     u3891 17CE                       u7411 1099                       u7331 1024  
                     u6611 1F2D                       u6275 13C1                       u7500 1B0D  
                     u7260 1318                       u7180 12CD                       u3980 098F  
                     u7420 10A0                       u7340 1029                       u6700 1FC6  
                     u6540 1EF1                       u7261 1317                       u7181 12CC  
                     u7165 129B                       u3981 098E                       u3885 17BB  
                     u7421 109F                       u7405 108F                       u7341 1028  
                     u6701 1FC5                       u6541 1EF0                       u6285 141D  
                     u6445 0E7C                       u6365 0CCF                       u7510 1B1F  
                     u7270 131E                       u7190 12D5                       u3990 0995  
                     u7430 10A4                       u7350 1049                       u6710 1FCD  
                     u6630 1F3F                       u6470 0F4B                       u6390 0D9E  
                     u7511 1B1E                       u7271 131D                       u7191 12D4  
                     u7175 12B0                       u3991 0994                       u7431 10A3  
                     u7351 1048                       u6711 1FCC                       u6631 1F3E  
                     u6535 1EDC                       u6295 1472                       u6471 0F4A  
                     u6455 0EB8                       u6391 0D9D                       u6375 0D0B  
                     u7280 1330                       u6800 1AD3                       u7440 10B9  
                     u6640 1F53                       u6560 1F0A                       u7600 022D  
                     u7520 0037                       u7281 132F                       u6801 1AD2  
                     u6641 1F52                       u6625 1F31                       u6561 1F09  
                     u6545 1EED                       u6465 0F03                       u6385 0D56  
                     u7601 022C                       u7521 0036                       u7290 133F  
                     u6810 1D2E                       u7450 10C9                       u7370 1068  
                     u6730 1FDF                       u6650 1F65                       u6570 1F0E  
                     u7610 025F                       u7530 004F                       u6811 1D2D  
                     u7451 10C8                       u7371 1067                       u6731 1FDE  
                     u6651 1F64                       u6571 1F0D                       u6555 1EFD  
                     u7611 025E                       u7531 004E                       u6900 1C02  
                     u7460 10CD                       u6740 1FE6                       u6580 1F15  
                     u7700 0480                       u7620 0276                       u7540 0093  
                     u6901 1C01                       u7461 10CC                       u7445 10B4  
                     u7365 105A                       u6741 1FE5                       u6725 1FCF  
                     u6581 1F14                       u6485 0F5E                       u7701 047F  
                     u7621 0275                       u7541 0092                       u7470 1A70  
                     u6910 1E03                       u6830 1D42                       u7390 108A  
                     u6670 1FA4                       u7710 048C                       u7630 02CC  
                     u7550 00C2                       u7471 1A6F                       u7295 133A  
                     u6911 1E02                       u6831 1D41                       u7391 1089  
                     u6671 1FA3                       u6495 0F9A                       u7711 048B  
                     u7631 02CB                       u7551 00C1                       u7480 1A7E  
                     u6920 1E1F                       u6760 1FF7                       u7800 0721  
                     u7640 02F5                       u7560 00C6                       u7481 1A7D  
                     u6905 1BFE                       u6921 1E1E                       u6825 1D33  
                     u7385 107C                       u6761 1FF6                       u6665 1F8B  
                     u7801 0720                       u7641 02F4                       u7625 0272  
                     u7561 00C5                       u7490 1AE9                       u6930 1E2B  
                     u6850 1D5D                       u6770 1AB7                       u6690 1FC2  
                     u7810 0728                       u7730 053E                       u7650 031C  
                     u7570 0103                       u6931 1E2A                       u6851 1D5C  
                     u6771 1AB6                       u6755 1FE9                       u6691 1FC1  
                     u6675 1FA0                       u6595 1F17                       u7811 0727  
                     u7731 053D                       u7651 031B                       u7635 02C8  
                     u7571 0102                       u7820 0730                       u7740 055D  
                     u7660 032B                       u7580 014B                       u6941 1E3A  
                     u6845 1D44                       u6685 1FB5                       u7821 072F  
                     u7741 055C                       u7725 0499                       u7661 032A  
                     u7581 014A                       u6950 1E53                       u6942 1E3B  
                     u6870 1D7B                       u7830 0741                       u7750 056C  
                     u7670 0354                       u7590 0196                       u6951 1E52  
                     u6943 1E40                       u6871 1D7A                       u6855 1D59  
                     u7831 0740                       u7751 056B                       u7671 0353  
                     u7591 0195                       u6880 1BCC                       u6944 1E41  
                     u7840 0751                       u7760 0583                       u6881 1BCB  
                     u6961 1E62                       u6945 1E46                       u6865 1D6D  
                     u6785 1AC0                       u7841 0750                       u7761 0582  
                     u7745 0559                       u7665 0327                       u6890 1BE8  
                     u6970 1E8D                       u6962 1E63                       u6946 1E47  
                     u7850 075F                       u7690 0475                       u6891 1BE7  
                     u6971 1E8C                       u6963 1E68                       u6795 1AC7  
                     u7851 075E                       u7835 073D                       u7755 0568  
                     u7691 0474                       u7907 0885                       u6964 1E69  
                     u6980 1C10                       u7860 0775                       u7917 1015  
                     u6965 1E6E                       u6981 1C0F                       u7861 0774  
                     u7845 074D                       u7685 0442                       u6966 1E6F  
                     u7790 070B                       u7870 0881                       u7927 1A47  
                     u6975 1E89                       u7791 070A                       u7775 0608  
                     u7695 0471                       u7871 0880                       u7880 0946  
                     u7937 1CBD                       u7785 06AC                       u7881 0945  
                     u7890 0952                       u7947 1CCE                       u6995 1C15  
                     u7891 0951                       u7957 1CDE                       u7967 1CF0  
                     u7977 1A5F                       _TXIF 0064                       _dato 006C  
                     _flag 00E6                       _main 083D          ??_Lcd8_Set_Cursor 0078  
                     map@x 00C2                       btemp 007E                       start 000C  
          ___fldiv@new_exp 00BA               _sprintf$1366 00B2                      ??_map 0078  
                    ??_isr 0070              ___fltol@sign1 005F            __end_of___fladd 1800  
                    ?_main 0070            __end_of___fldiv 139B            __end_of___awdiv 1DED  
          __end_of___flneg 07FD            __end_of___awmod 1CB7            __end_of___flmul 0C9D  
          __end_of___flsub 1BB6            __end_of___fltol 07F2                      _ANSEL 0188  
          __end_of___lldiv 1D84            ___awdiv@divisor 0022            __end_of___llmod 1C5C  
          __end_of___lwdiv 1B66                      i1l237 1A31            __end_of___lwmod 083D  
          ___awdiv@counter 0026                      _RCREG 001A                      _SPBRG 0099  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TXREG 0019            __end_of_dpowers 18A0                      _scale 0C9D  
          __end_of_isdigit 1A22                      _valor 0190                      pclath 000A  
                    status 0003           __end_of_Lcd8_Cmd 1A68                      wtemp0 007E  
          __end_of_sprintf 077A            __initialization 000F               __end_of_main 0958  
        ??_Lcd8_Write_Char 0074                     ??_main 00DA           ___llmod@dividend 0024  
                   ?_scale 0044                     _ADRESH 001E           ___awdiv@dividend 0024  
                   _ANSELH 0189           __end_of_adc_init 101D                     i1l3870 1A28  
                   i1l3872 1A2E                     i1l3868 1A22                     u606_20 1A28  
                   u606_21 1A27                     _SPBRGH 009A                     u798_27 1A2C  
         __end_of___xxtofl 10D7           __end_of__powers_ 1844                     ___flge 1DED  
                   ___fleq 1BB6                  ??___fladd 0060                     ___wmul 1AAF  
                ??___fldiv 00B0                  ??___awdiv 0077                  ??___flneg 0077  
                ??___awmod 0077                  ??___flmul 0032                  ??___flsub 0078  
                ??___fltol 005B                  ??___lldiv 0073                  ??___llmod 0073  
                ??___lwdiv 0078                  ??___lwmod 0077                     _fround 139B  
         ___awdiv@quotient 0028            ___awmod@divisor 0073                     _opcion 007A  
          ___awmod@counter 0020                  ??_isdigit 0073                     saved_w 007E  
                ??_sprintf 00AD          __end_of_Lcd8_Init 1D1C          __end_of_Lcd8_Port 1A08  
               ___flge@ff1 0020                 ___flge@ff2 0024               ___xxtofl@arg 0026  
             ___xxtofl@exp 0025               ___xxtofl@val 0073                 ___fleq@ff1 0020  
               ___fleq@ff2 0024    __end_of__initialization 0027                 ___flneg@f1 0073  
               ___fltol@f1 0057             __pcstackCOMMON 0070              __end_of_scale 1000  
               _adc_result 0078                 __div_to_l_ 1F48                  ?_Lcd8_Cmd 0070  
          _Lcd8_Set_Cursor 1A68            __div_to_l_@exp1 002D            __div_to_l_@cntr 002C  
                  ??_scale 0048            __div_to_l_@quot 0028                 __pbssBANK0 006C  
               __pbssBANK1 00DE                 __pbssBANK3 0190              __div_to_l_@f1 0020  
            __div_to_l_@f2 0024          __end_of__Umul8_16 1AAF                 __pmaintext 083D  
                  ?___flge 0020                    ?___fleq 0020                    ?___wmul 0073  
               __pintentry 0004                    ?_fround 0044           Lcd8_Set_Cursor@a 0020  
         Lcd8_Set_Cursor@b 0077                  ?_adc_init 0073                 ??_Lcd8_Cmd 0074  
                ?___xxtofl 0073                 __stringtab 1800            _Lcd8_Write_Char 1A38  
        __end_of__npowers_ 1878                 _scale$1365 0052                    ___fladd 15A8  
                  ___fldiv 11CC                    ___awdiv 1D84                    ___flneg 07F2  
                  ___awmod 1C5C                    ___flmul 0958                    ___flsub 1B66  
                  ___fltol 077A                    ___lldiv 1D1C                    ___llmod 1C06  
                  ___lwdiv 1B20                    ___lwmod 0803    __end_of_Lcd8_Set_Cursor 1A86  
                  _channel 00E8                 ??_adc_init 0075                    __ptext1 002B  
                  __ptext2 0C9D                    __ptext3 1C5C                    __ptext4 1D84  
                  __ptext5 1A10                    __ptext6 139B                    __ptext7 0803  
                  __ptext8 1B20                    __ptext9 1E91                ?__div_to_l_ 0020  
                  _dpowers 1878                    _isdigit 1A10                  Lcd8_Cmd@a 0076  
               ??___xxtofl 0020           ___awmod@dividend 0075                    _sprintf 002B  
                  clrloop0 1A09                    _voltaje 00DE       end_of_initialization 0027  
          ___lldiv@divisor 0020            ___lldiv@counter 002C                  _RCSTAbits 0018  
           __tdiv_to_l_@f1 0020             __tdiv_to_l_@f2 0024              ??__tdiv_to_l_ 0073  
                _PORTCbits 0007                  _PORTDbits 0008                ___fladd@grs 006B  
            ___xxtofl@sign 0024                ___fldiv@grs 00BC                ___fldiv@rem 00B5  
  __end_of_Lcd8_Write_Char 1A4E                 map@out_max 00D2                 map@out_min 00CE  
              ___flmul@grs 0038                  _Lcd8_Init 1CB7                  _Lcd8_Port 1A02  
                _TXSTAbits 0098             __end_of___flge 1E91             __end_of___fleq 1C06  
           __end_of___wmul 1ADA           ?_Lcd8_Set_Cursor 0077                _BAUDCTLbits 0187  
           __end_of_fround 15A8        start_initialization 000F        __end_of__tdiv_to_l_ 1F48  
              __end_of_map 11CC                __end_of_isr 1A38          _Lcd8_Write_String 1ADA  
       ?_Lcd8_Write_String 0076                 ?_Lcd8_Init 0070                 ?_Lcd8_Port 0070  
          ___llmod@divisor 0020            ___llmod@counter 0074        ??_Lcd8_Write_String 0020  
                 ??___flge 0073                   ??___fleq 0073                   ??___wmul 0077  
                __Umul8_16 1A86            adc_init@channel 0073                   ??_fround 0048  
            sprintf@tmpval 00C0                  ___fladd@a 005C                  ___fladd@b 0058  
               fround@prec 0057                  ___fldiv@a 00A8                  ___fldiv@b 00AC  
                ___flmul@a 002E                  ___flmul@b 002A                __pbssCOMMON 0078  
                ___flsub@a 00A0                  ___flsub@b 00A4                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00A0  __end_of_Lcd8_Write_String 1B20  
             _isdigit$1123 0073           ?_Lcd8_Write_Char 0070                sprintf@flag 00B7  
              sprintf@eexp 00BD                sprintf@fval 00C6                sprintf@prec 00C4  
         ___lwdiv@dividend 0022                   ?___fladd 0058                   ?___fldiv 00A8  
                 ?___awdiv 0022                   ?___flneg 0073                   ?___awmod 0073  
                 ?___flmul 002A                   ?___flsub 00A0                   ?___fltol 0057  
                 ?___lldiv 0020                   ?___llmod 0020                  __npowers_ 1844  
               ?__Umul8_16 0073                   ?___lwdiv 0020                   ?___lwmod 0073  
                __pstrings 1800                __tdiv_to_l_ 1E91               ??__div_to_l_ 0073  
                 ?_isdigit 0070           ___lwdiv@quotient 0025                   ?_sprintf 00A8  
        interrupt_function 0004                ??_Lcd8_Init 0020             ___wmul@product 0020  
         Lcd8_Write_Char@a 0075                ??_Lcd8_Port 0073                  clear_ram0 1A08  
                 _PIE1bits 008C                   _PIR1bits 000C         __end_of__div_to_l_ 2000  
                map@in_max 00CA                  map@in_min 00C6                 _ADCON0bits 001F  
              __stringbase 180F                 _ADCON1bits 009F          ___wmul@multiplier 0073  
                 _Lcd8_Cmd 1A4E                _lectura_adc 00E2                ??__Umul8_16 0075  
              _fround$1363 0053                _fround$1364 004F                   _map$1362 00D6  
       __end_of__stringtab 1810                   _adc_init 1001                 sprintf@val 00B9  
                 ___xxtofl 101D            ___lwdiv@divisor 0020            ___lwdiv@counter 0024  
                 __ptext10 1F48                   __ptext11 101D                   __ptext20 1B66  
                 __ptext12 1AAF                   __ptext21 15A8                   __ptext13 1C06  
                 __ptext30 1A4E                   __ptext22 0958                   __ptext14 1D1C  
                 __ptext31 1A02                   __ptext23 1A86                   __ptext15 077A  
                 __ptext32 1A22                   __ptext24 11CC                   __ptext16 07F2  
                 __ptext25 1001                   __ptext17 1DED                   __ptext26 1ADA  
                 __ptext18 1BB6                   __ptext27 1A38                   __ptext19 10D7  
                 __ptext28 1A68                   __ptext29 1CB7                   __powers_ 1810  
               Lcd8_Port@a 0073                 _INTCONbits 000B                   isdigit@c 0074  
                 scale@scl 0056                   intlevel1 0000                  sprintf@ap 00B6  
         __tdiv_to_l_@exp1 002D           __tdiv_to_l_@cntr 002C                  sprintf@sp 00BF  
         __tdiv_to_l_@quot 0028           ___lwmod@dividend 0075           ___lldiv@dividend 0024  
                stringcode 180A                 _OSCCONbits 008F         Lcd8_Write_String@a 0076  
       Lcd8_Write_String@i 0023               ?__tdiv_to_l_ 0020     __Umul8_16@multiplicand 0073  
                 sprintf@c 00CA                   sprintf@f 00A8           ___lldiv@quotient 0028  
          ___lwmod@divisor 0073            ___lwmod@counter 0077                   stringdir 180A  
                 stringtab 1800              ___fladd@signs 0068               ___fladd@aexp 0069  
             ___fladd@bexp 006A       __Umul8_16@multiplier 0024          __Umul8_16@product 0020  
